In archive lib/libws28xx.a:

pixeltype.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <PixelType::GetType(pixel::Type)>:
   0:	e350000d 	cmp	r0, #13
   4:	d59f3008 	ldrle	r3, [pc, #8]	; 14 <PixelType::GetType(pixel::Type)+0x14>
   8:	d0830180 	addle	r0, r3, r0, lsl #3
   c:	c59f0004 	ldrgt	r0, [pc, #4]	; 18 <PixelType::GetType(pixel::Type)+0x18>
  10:	e12fff1e 	bx	lr
	...

0000001c <PixelType::GetType(char const*)>:
  1c:	e1a0c000 	mov	ip, r0
  20:	e3a00000 	mov	r0, #0
  24:	e92d4070 	push	{r4, r5, r6, lr}
  28:	e59f1050 	ldr	r1, [pc, #80]	; 80 <PixelType::GetType(char const*)+0x64>
  2c:	e24c4001 	sub	r4, ip, #1
  30:	e241e001 	sub	lr, r1, #1
  34:	e5f43001 	ldrb	r3, [r4, #1]!
  38:	e1a05003 	mov	r5, r3
  3c:	e2432041 	sub	r2, r3, #65	; 0x41
  40:	e3520019 	cmp	r2, #25
  44:	e5fe2001 	ldrb	r2, [lr, #1]!
  48:	92835020 	addls	r5, r3, #32
  4c:	e2426041 	sub	r6, r2, #65	; 0x41
  50:	e3560019 	cmp	r6, #25
  54:	92822020 	addls	r2, r2, #32
  58:	e1520005 	cmp	r2, r5
  5c:	1a000002 	bne	6c <PixelType::GetType(char const*)+0x50>
  60:	e3530000 	cmp	r3, #0
  64:	1afffff2 	bne	34 <PixelType::GetType(char const*)+0x18>
  68:	e8bd8070 	pop	{r4, r5, r6, pc}
  6c:	e2800001 	add	r0, r0, #1
  70:	e350000e 	cmp	r0, #14
  74:	e2811008 	add	r1, r1, #8
  78:	1affffeb 	bne	2c <PixelType::GetType(char const*)+0x10>
  7c:	e8bd8070 	pop	{r4, r5, r6, pc}
  80:	00000000 	andeq	r0, r0, r0

00000084 <PixelType::GetMap(char const*)>:
  84:	e1a0c000 	mov	ip, r0
  88:	e3a00000 	mov	r0, #0
  8c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  90:	e59f305c 	ldr	r3, [pc, #92]	; f4 <PixelType::GetMap(char const*)+0x70>
  94:	e243e001 	sub	lr, r3, #1
  98:	e24c4001 	sub	r4, ip, #1
  9c:	e2836002 	add	r6, r3, #2
  a0:	e5fe2001 	ldrb	r2, [lr, #1]!
  a4:	e1a05002 	mov	r5, r2
  a8:	e2421041 	sub	r1, r2, #65	; 0x41
  ac:	e3510019 	cmp	r1, #25
  b0:	e5f41001 	ldrb	r1, [r4, #1]!
  b4:	92825020 	addls	r5, r2, #32
  b8:	e2417041 	sub	r7, r1, #65	; 0x41
  bc:	e3570019 	cmp	r7, #25
  c0:	92811020 	addls	r1, r1, #32
  c4:	e1510005 	cmp	r1, r5
  c8:	0a000004 	beq	e0 <PixelType::GetMap(char const*)+0x5c>
  cc:	e2800001 	add	r0, r0, #1
  d0:	e3500006 	cmp	r0, #6
  d4:	e2833004 	add	r3, r3, #4
  d8:	1affffed 	bne	94 <PixelType::GetMap(char const*)+0x10>
  dc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
  e0:	e3520000 	cmp	r2, #0
  e4:	08bd80f0 	popeq	{r4, r5, r6, r7, pc}
  e8:	e15e0006 	cmp	lr, r6
  ec:	1affffeb 	bne	a0 <PixelType::GetMap(char const*)+0x1c>
  f0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
  f4:	00000070 	andeq	r0, r0, r0, ror r0

000000f8 <PixelType::GetMap(pixel::Map)>:
  f8:	e3500005 	cmp	r0, #5
  fc:	d59f3008 	ldrle	r3, [pc, #8]	; 10c <PixelType::GetMap(pixel::Map)+0x14>
 100:	d0830100 	addle	r0, r3, r0, lsl #2
 104:	c59f0004 	ldrgt	r0, [pc, #4]	; 110 <PixelType::GetMap(pixel::Map)+0x18>
 108:	e12fff1e 	bx	lr
 10c:	00000070 	andeq	r0, r0, r0, ror r0
 110:	00000008 	andeq	r0, r0, r8

00000114 <PixelType::ConvertTxH(unsigned char)>:
 114:	e35000f0 	cmp	r0, #240	; 0xf0
 118:	0a000011 	beq	164 <PixelType::ConvertTxH(unsigned char)+0x50>
 11c:	8a000007 	bhi	140 <PixelType::ConvertTxH(unsigned char)+0x2c>
 120:	e35000c0 	cmp	r0, #192	; 0xc0
 124:	0a000010 	beq	16c <PixelType::ConvertTxH(unsigned char)+0x58>
 128:	e35000e0 	cmp	r0, #224	; 0xe0
 12c:	0a000010 	beq	174 <PixelType::ConvertTxH(unsigned char)+0x60>
 130:	ed9f0a15 	vldr	s0, [pc, #84]	; 18c <PixelType::ConvertTxH(unsigned char)+0x78>
 134:	eddf7a15 	vldr	s15, [pc, #84]	; 190 <PixelType::ConvertTxH(unsigned char)+0x7c>
 138:	e3500080 	cmp	r0, #128	; 0x80
 13c:	ea000006 	b	15c <PixelType::ConvertTxH(unsigned char)+0x48>
 140:	e35000fc 	cmp	r0, #252	; 0xfc
 144:	0a00000c 	beq	17c <PixelType::ConvertTxH(unsigned char)+0x68>
 148:	e35000fe 	cmp	r0, #254	; 0xfe
 14c:	0a00000c 	beq	184 <PixelType::ConvertTxH(unsigned char)+0x70>
 150:	ed9f0a0d 	vldr	s0, [pc, #52]	; 18c <PixelType::ConvertTxH(unsigned char)+0x78>
 154:	eddf7a0e 	vldr	s15, [pc, #56]	; 194 <PixelType::ConvertTxH(unsigned char)+0x80>
 158:	e35000f8 	cmp	r0, #248	; 0xf8
 15c:	0eb00a67 	vmoveq.f32	s0, s15
 160:	e12fff1e 	bx	lr
 164:	ed9f0a0b 	vldr	s0, [pc, #44]	; 198 <PixelType::ConvertTxH(unsigned char)+0x84>
 168:	e12fff1e 	bx	lr
 16c:	ed9f0a0a 	vldr	s0, [pc, #40]	; 19c <PixelType::ConvertTxH(unsigned char)+0x88>
 170:	e12fff1e 	bx	lr
 174:	ed9f0a09 	vldr	s0, [pc, #36]	; 1a0 <PixelType::ConvertTxH(unsigned char)+0x8c>
 178:	e12fff1e 	bx	lr
 17c:	ed9f0a08 	vldr	s0, [pc, #32]	; 1a4 <PixelType::ConvertTxH(unsigned char)+0x90>
 180:	e12fff1e 	bx	lr
 184:	ed9f0a07 	vldr	s0, [pc, #28]	; 1a8 <PixelType::ConvertTxH(unsigned char)+0x94>
 188:	e12fff1e 	bx	lr
 18c:	00000000 	andeq	r0, r0, r0
 190:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
 194:	3f480000 	svccc	0x00480000
 198:	3f200000 	svccc	0x00200000
 19c:	3ea00000 	cdpcc	0, 10, cr0, cr0, cr0, {0}
 1a0:	3ef00000 	cdpcc	0, 15, cr0, cr0, cr0, {0}
 1a4:	3f700000 	svccc	0x00700000
 1a8:	3f8c0000 	svccc	0x008c0000

000001ac <PixelType::ConvertTxH(float)>:
 1ac:	eddf7a2e 	vldr	s15, [pc, #184]	; 26c <PixelType::ConvertTxH(float)+0xc0>
 1b0:	eeb40ae7 	vcmpe.f32	s0, s15
 1b4:	eef1fa10 	vmrs	APSR_nzcv, fpscr
 1b8:	4a00001d 	bmi	234 <PixelType::ConvertTxH(float)+0x88>
 1bc:	eddf7a2b 	vldr	s15, [pc, #172]	; 270 <PixelType::ConvertTxH(float)+0xc4>
 1c0:	eeb40ae7 	vcmpe.f32	s0, s15
 1c4:	eef1fa10 	vmrs	APSR_nzcv, fpscr
 1c8:	4a00001b 	bmi	23c <PixelType::ConvertTxH(float)+0x90>
 1cc:	eddf7a28 	vldr	s15, [pc, #160]	; 274 <PixelType::ConvertTxH(float)+0xc8>
 1d0:	eeb40ae7 	vcmpe.f32	s0, s15
 1d4:	eef1fa10 	vmrs	APSR_nzcv, fpscr
 1d8:	4a000019 	bmi	244 <PixelType::ConvertTxH(float)+0x98>
 1dc:	eddf7a25 	vldr	s15, [pc, #148]	; 278 <PixelType::ConvertTxH(float)+0xcc>
 1e0:	eeb40ae7 	vcmpe.f32	s0, s15
 1e4:	eef1fa10 	vmrs	APSR_nzcv, fpscr
 1e8:	4a000017 	bmi	24c <PixelType::ConvertTxH(float)+0xa0>
 1ec:	eddf7a22 	vldr	s15, [pc, #136]	; 27c <PixelType::ConvertTxH(float)+0xd0>
 1f0:	eeb40ae7 	vcmpe.f32	s0, s15
 1f4:	eef1fa10 	vmrs	APSR_nzcv, fpscr
 1f8:	4a000015 	bmi	254 <PixelType::ConvertTxH(float)+0xa8>
 1fc:	eddf7a1f 	vldr	s15, [pc, #124]	; 280 <PixelType::ConvertTxH(float)+0xd4>
 200:	eeb40ae7 	vcmpe.f32	s0, s15
 204:	eef1fa10 	vmrs	APSR_nzcv, fpscr
 208:	4a000013 	bmi	25c <PixelType::ConvertTxH(float)+0xb0>
 20c:	eddf7a1c 	vldr	s15, [pc, #112]	; 284 <PixelType::ConvertTxH(float)+0xd8>
 210:	eeb40ae7 	vcmpe.f32	s0, s15
 214:	eef1fa10 	vmrs	APSR_nzcv, fpscr
 218:	4a000011 	bmi	264 <PixelType::ConvertTxH(float)+0xb8>
 21c:	eddf7a19 	vldr	s15, [pc, #100]	; 288 <PixelType::ConvertTxH(float)+0xdc>
 220:	eeb40ae7 	vcmpe.f32	s0, s15
 224:	eef1fa10 	vmrs	APSR_nzcv, fpscr
 228:	43a000fe 	movmi	r0, #254	; 0xfe
 22c:	53a00000 	movpl	r0, #0
 230:	e12fff1e 	bx	lr
 234:	e3a00000 	mov	r0, #0
 238:	e12fff1e 	bx	lr
 23c:	e3a00080 	mov	r0, #128	; 0x80
 240:	e12fff1e 	bx	lr
 244:	e3a000c0 	mov	r0, #192	; 0xc0
 248:	e12fff1e 	bx	lr
 24c:	e3a000e0 	mov	r0, #224	; 0xe0
 250:	e12fff1e 	bx	lr
 254:	e3a000f0 	mov	r0, #240	; 0xf0
 258:	e12fff1e 	bx	lr
 25c:	e3a000f8 	mov	r0, #248	; 0xf8
 260:	e12fff1e 	bx	lr
 264:	e3a000fc 	mov	r0, #252	; 0xfc
 268:	e12fff1e 	bx	lr
 26c:	3da00000 	stccc	0, cr0, [r0]
 270:	3e700000 	cdpcc	0, 7, cr0, cr0, cr0, {0}
 274:	3ec80000 	cdpcc	0, 12, cr0, cr8, cr0, {0}
 278:	3f0c0000 	svccc	0x000c0000
 27c:	3f340000 	svccc	0x00340000
 280:	3f5c0000 	svccc	0x005c0000
 284:	3f820000 	svccc	0x00820000
 288:	3f960000 	svccc	0x00960000

Disassembly of section .rodata.str1.1:

00000000 <.rodata.str1.1>:
   0:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
   4:	006e776f 	rsbeq	r7, lr, pc, ror #14
   8:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
   c:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .rodata:

00000000 <PixelType::TYPES>:
   0:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
   4:	00003130 	andeq	r3, r0, r0, lsr r1
   8:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
   c:	00003131 	andeq	r3, r0, r1, lsr r1
  10:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
  14:	00003231 	andeq	r3, r0, r1, lsr r2
  18:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
  1c:	00423231 	subeq	r3, r2, r1, lsr r2
  20:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
  24:	00003331 	andeq	r3, r0, r1, lsr r3
  28:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
  2c:	00003531 	andeq	r3, r0, r1, lsr r5
  30:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
  34:	00003231 	andeq	r3, r0, r1, lsr r2
  38:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
  3c:	00573231 	subseq	r3, r7, r1, lsr r2
  40:	31534355 	cmpcc	r3, r5, asr r3
  44:	00333039 	eorseq	r3, r3, r9, lsr r0
  48:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
  4c:	00333039 	eorseq	r3, r3, r9, lsr r0
  50:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
  54:	00003231 	andeq	r3, r0, r1, lsr r2
  58:	31415041 	cmpcc	r1, r1, asr #32
  5c:	00003230 	andeq	r3, r0, r0, lsr r2
  60:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
  64:	00003232 	andeq	r3, r0, r2, lsr r2
  68:	31383950 	teqcc	r8, r0, asr r9
  6c:	00000033 	andeq	r0, r0, r3, lsr r0

00000070 <PixelType::MAPS>:
  70:	00424752 	subeq	r4, r2, r2, asr r7
  74:	00474252 	subeq	r4, r7, r2, asr r2
  78:	00425247 	subeq	r5, r2, r7, asr #4
  7c:	00524247 	subseq	r4, r2, r7, asr #4
  80:	00475242 	subeq	r5, r7, r2, asr #4
  84:	00524742 	subseq	r4, r2, r2, asr #14

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <PixelType::ConvertTxH(float)+0x168d680>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <PixelType::ConvertTxH(float)+0x42278>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


pixelpatterns.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <PixelPatterns::PixelPatterns(unsigned int)>:
   0:	e3510001 	cmp	r1, #1
   4:	e92d4070 	push	{r4, r5, r6, lr}
   8:	23a01001 	movcs	r1, #1
   c:	e3a05000 	mov	r5, #0
  10:	e59f3034 	ldr	r3, [pc, #52]	; 4c <PixelPatterns::PixelPatterns(unsigned int)+0x4c>
  14:	e580502c 	str	r5, [r0, #44]	; 0x2c
  18:	e5933000 	ldr	r3, [r3]
  1c:	e5801004 	str	r1, [r0, #4]
  20:	e5932004 	ldr	r2, [r3, #4]
  24:	e5803000 	str	r3, [r0]
  28:	e5802008 	str	r2, [r0, #8]
  2c:	e1a04000 	mov	r4, r0
  30:	ebfffffe 	bl	0 <millis>
  34:	e1a03000 	mov	r3, r0
  38:	e5845028 	str	r5, [r4, #40]	; 0x28
  3c:	e1a00004 	mov	r0, r4
  40:	e5845024 	str	r5, [r4, #36]	; 0x24
  44:	e584300c 	str	r3, [r4, #12]
  48:	e8bd8070 	pop	{r4, r5, r6, pc}
  4c:	00000000 	andeq	r0, r0, r0

00000050 <PixelPatterns::GetName(pixelpatterns::Pattern)>:
  50:	e3500005 	cmp	r0, #5
  54:	d59f300c 	ldrle	r3, [pc, #12]	; 68 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x18>
  58:	d0600180 	rsble	r0, r0, r0, lsl #3
  5c:	d0830080 	addle	r0, r3, r0, lsl #1
  60:	c59f0004 	ldrgt	r0, [pc, #4]	; 6c <PixelPatterns::GetName(pixelpatterns::Pattern)+0x1c>
  64:	e12fff1e 	bx	lr
	...

00000070 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
  70:	e92d4010 	push	{r4, lr}
  74:	e3a0c000 	mov	ip, #0
  78:	e3a04001 	mov	r4, #1
  7c:	e3a0e0ff 	mov	lr, #255	; 0xff
  80:	e0801281 	add	r1, r0, r1, lsl #5
  84:	e5812010 	str	r2, [r1, #16]
  88:	e5814028 	str	r4, [r1, #40]	; 0x28
  8c:	e581e01c 	str	lr, [r1, #28]
  90:	e581c020 	str	ip, [r1, #32]
  94:	e5813024 	str	r3, [r1, #36]	; 0x24
  98:	e8bd8010 	pop	{r4, pc}

0000009c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
  9c:	e92d4010 	push	{r4, lr}
  a0:	e3a04002 	mov	r4, #2
  a4:	e3a0e000 	mov	lr, #0
  a8:	e0801281 	add	r1, r0, r1, lsl #5
  ac:	e5814028 	str	r4, [r1, #40]	; 0x28
  b0:	e5900008 	ldr	r0, [r0, #8]
  b4:	e59dc00c 	ldr	ip, [sp, #12]
  b8:	e59d4008 	ldr	r4, [sp, #8]
  bc:	e5812014 	str	r2, [r1, #20]
  c0:	e5814010 	str	r4, [r1, #16]
  c4:	e581001c 	str	r0, [r1, #28]
  c8:	e5813018 	str	r3, [r1, #24]
  cc:	e581e020 	str	lr, [r1, #32]
  d0:	e581c024 	str	ip, [r1, #36]	; 0x24
  d4:	e8bd8010 	pop	{r4, pc}

000000d8 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
  d8:	e92d4010 	push	{r4, lr}
  dc:	e3a04003 	mov	r4, #3
  e0:	e3a0e000 	mov	lr, #0
  e4:	e0801281 	add	r1, r0, r1, lsl #5
  e8:	e5814028 	str	r4, [r1, #40]	; 0x28
  ec:	e59dc008 	ldr	ip, [sp, #8]
  f0:	e5813010 	str	r3, [r1, #16]
  f4:	e5903008 	ldr	r3, [r0, #8]
  f8:	e5812014 	str	r2, [r1, #20]
  fc:	e581301c 	str	r3, [r1, #28]
 100:	e581e020 	str	lr, [r1, #32]
 104:	e581c024 	str	ip, [r1, #36]	; 0x24
 108:	e8bd8010 	pop	{r4, pc}

0000010c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 10c:	e92d4010 	push	{r4, lr}
 110:	e1a04000 	mov	r4, r0
 114:	e3a0e004 	mov	lr, #4
 118:	e3a0c000 	mov	ip, #0
 11c:	e0800281 	add	r0, r0, r1, lsl #5
 120:	e1a01000 	mov	r1, r0
 124:	e5803010 	str	r3, [r0, #16]
 128:	e580e028 	str	lr, [r0, #40]	; 0x28
 12c:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
 130:	e5940008 	ldr	r0, [r4, #8]
 134:	e153000c 	cmp	r3, ip
 138:	e2403001 	sub	r3, r0, #1
 13c:	e1a03083 	lsl	r3, r3, #1
 140:	e6ff3073 	uxth	r3, r3
 144:	e5812014 	str	r2, [r1, #20]
 148:	e581c020 	str	ip, [r1, #32]
 14c:	e581301c 	str	r3, [r1, #28]
 150:	18bd8010 	popne	{r4, pc}
 154:	e370022e 	cmn	r0, #-536870910	; 0xe0000002
 158:	83e00000 	mvnhi	r0, #0
 15c:	91a00100 	lslls	r0, r0, #2
 160:	ebfffffe 	bl	0 <operator new[](unsigned int)>
 164:	e5941008 	ldr	r1, [r4, #8]
 168:	e584002c 	str	r0, [r4, #44]	; 0x2c
 16c:	e3510000 	cmp	r1, #0
 170:	08bd8010 	popeq	{r4, pc}
 174:	e3510008 	cmp	r1, #8
 178:	9a00001a 	bls	1e8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0xdc>
 17c:	e3a0e000 	mov	lr, #0
 180:	e1a0c00e 	mov	ip, lr
 184:	e2413009 	sub	r3, r1, #9
 188:	e3c33007 	bic	r3, r3, #7
 18c:	e2802088 	add	r2, r0, #136	; 0x88
 190:	e2833008 	add	r3, r3, #8
 194:	e28ee008 	add	lr, lr, #8
 198:	e15e0003 	cmp	lr, r3
 19c:	f5d2f000 	pld	[r2]
 1a0:	e502c088 	str	ip, [r2, #-136]	; 0xffffff78
 1a4:	e502c084 	str	ip, [r2, #-132]	; 0xffffff7c
 1a8:	e502c080 	str	ip, [r2, #-128]	; 0xffffff80
 1ac:	e502c07c 	str	ip, [r2, #-124]	; 0xffffff84
 1b0:	e502c078 	str	ip, [r2, #-120]	; 0xffffff88
 1b4:	e502c074 	str	ip, [r2, #-116]	; 0xffffff8c
 1b8:	e502c070 	str	ip, [r2, #-112]	; 0xffffff90
 1bc:	e502c06c 	str	ip, [r2, #-108]	; 0xffffff94
 1c0:	e2822020 	add	r2, r2, #32
 1c4:	1afffff2 	bne	194 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x88>
 1c8:	e3a0c000 	mov	ip, #0
 1cc:	e2432107 	sub	r2, r3, #-1073741823	; 0xc0000001
 1d0:	e0802102 	add	r2, r0, r2, lsl #2
 1d4:	e2833001 	add	r3, r3, #1
 1d8:	e1510003 	cmp	r1, r3
 1dc:	e5a2c004 	str	ip, [r2, #4]!
 1e0:	8afffffb 	bhi	1d4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0xc8>
 1e4:	e8bd8010 	pop	{r4, pc}
 1e8:	e3a03000 	mov	r3, #0
 1ec:	eafffff5 	b	1c8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0xbc>

000001f0 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 1f0:	e0801281 	add	r1, r0, r1, lsl #5
 1f4:	e3a0c005 	mov	ip, #5
 1f8:	e3a00000 	mov	r0, #0
 1fc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 200:	e59de004 	ldr	lr, [sp, #4]
 204:	e1c121f4 	strd	r2, [r1, #20]
 208:	e1cd20d8 	ldrd	r2, [sp, #8]
 20c:	e581e01c 	str	lr, [r1, #28]
 210:	e5812010 	str	r2, [r1, #16]
 214:	e5813024 	str	r3, [r1, #36]	; 0x24
 218:	e581c028 	str	ip, [r1, #40]	; 0x28
 21c:	e5810020 	str	r0, [r1, #32]
 220:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00000224 <PixelPatterns::Wheel(unsigned char)>:
 224:	e1e01001 	mvn	r1, r1
 228:	e6ef1071 	uxtb	r1, r1
 22c:	e3510054 	cmp	r1, #84	; 0x54
 230:	8a000006 	bhi	250 <PixelPatterns::Wheel(unsigned char)+0x2c>
 234:	e0410101 	sub	r0, r1, r1, lsl #2
 238:	e2400001 	sub	r0, r0, #1
 23c:	e0811081 	add	r1, r1, r1, lsl #1
 240:	e6ef3070 	uxtb	r3, r0
 244:	e6ef0071 	uxtb	r0, r1
 248:	e1800803 	orr	r0, r0, r3, lsl #16
 24c:	e12fff1e 	bx	lr
 250:	e35100a9 	cmp	r1, #169	; 0xa9
 254:	8a000008 	bhi	27c <PixelPatterns::Wheel(unsigned char)+0x58>
 258:	e2411055 	sub	r1, r1, #85	; 0x55
 25c:	e6ef1071 	uxtb	r1, r1
 260:	e0413101 	sub	r3, r1, r1, lsl #2
 264:	e2433001 	sub	r3, r3, #1
 268:	e0811081 	add	r1, r1, r1, lsl #1
 26c:	e6ef0071 	uxtb	r0, r1
 270:	e6ef1073 	uxtb	r1, r3
 274:	e1810400 	orr	r0, r1, r0, lsl #8
 278:	e12fff1e 	bx	lr
 27c:	e2811056 	add	r1, r1, #86	; 0x56
 280:	e6ef1071 	uxtb	r1, r1
 284:	e0413101 	sub	r3, r1, r1, lsl #2
 288:	e0811081 	add	r1, r1, r1, lsl #1
 28c:	e2433001 	sub	r3, r3, #1
 290:	e6ef0071 	uxtb	r0, r1
 294:	e1a00800 	lsl	r0, r0, #16
 298:	e6ef1073 	uxtb	r1, r3
 29c:	e1800401 	orr	r0, r0, r1, lsl #8
 2a0:	e12fff1e 	bx	lr

000002a4 <PixelPatterns::Increment(unsigned int)>:
 2a4:	e080c281 	add	ip, r0, r1, lsl #5
 2a8:	e59c2024 	ldr	r2, [ip, #36]	; 0x24
 2ac:	e59c3020 	ldr	r3, [ip, #32]
 2b0:	e3520000 	cmp	r2, #0
 2b4:	e1a01281 	lsl	r1, r1, #5
 2b8:	1a000005 	bne	2d4 <PixelPatterns::Increment(unsigned int)+0x30>
 2bc:	e59c101c 	ldr	r1, [ip, #28]
 2c0:	e2833001 	add	r3, r3, #1
 2c4:	e1530001 	cmp	r3, r1
 2c8:	11a02003 	movne	r2, r3
 2cc:	e58c2020 	str	r2, [ip, #32]
 2d0:	e12fff1e 	bx	lr
 2d4:	e3530000 	cmp	r3, #0
 2d8:	0a000003 	beq	2ec <PixelPatterns::Increment(unsigned int)+0x48>
 2dc:	e2433001 	sub	r3, r3, #1
 2e0:	e3530000 	cmp	r3, #0
 2e4:	e58c3020 	str	r3, [ip, #32]
 2e8:	112fff1e 	bxne	lr
 2ec:	e0801001 	add	r1, r0, r1
 2f0:	e591301c 	ldr	r3, [r1, #28]
 2f4:	e2433001 	sub	r3, r3, #1
 2f8:	e6ff3073 	uxth	r3, r3
 2fc:	e5813020 	str	r3, [r1, #32]
 300:	e12fff1e 	bx	lr

00000304 <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 304:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 308:	e1a07001 	mov	r7, r1
 30c:	e5901008 	ldr	r1, [r0, #8]
 310:	e0803287 	add	r3, r0, r7, lsl #5
 314:	e3510000 	cmp	r1, #0
 318:	13a04000 	movne	r4, #0
 31c:	e5936020 	ldr	r6, [r3, #32]
 320:	e1a05000 	mov	r5, r0
 324:	11a08004 	movne	r8, r4
 328:	e24dd008 	sub	sp, sp, #8
 32c:	16ef6076 	uxtbne	r6, r6
 330:	0a000016 	beq	390 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x8c>
 334:	e1a00408 	lsl	r0, r8, #8
 338:	ebfffffe 	bl	0 <__aeabi_uidiv>
 33c:	e1a03000 	mov	r3, r0
 340:	e0863003 	add	r3, r6, r3
 344:	e6ef1073 	uxtb	r1, r3
 348:	e1a00005 	mov	r0, r5
 34c:	ebfffffe 	bl	224 <PixelPatterns::Wheel(unsigned char)>
 350:	e1a0c000 	mov	ip, r0
 354:	e1a0342c 	lsr	r3, ip, #8
 358:	e1a0282c 	lsr	r2, ip, #16
 35c:	e6efc07c 	uxtb	ip, ip
 360:	e1a01008 	mov	r1, r8
 364:	e5950000 	ldr	r0, [r5]
 368:	e6ef3073 	uxtb	r3, r3
 36c:	e58dc000 	str	ip, [sp]
 370:	e6ef2072 	uxtb	r2, r2
 374:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 378:	e2844001 	add	r4, r4, #1
 37c:	e5951008 	ldr	r1, [r5, #8]
 380:	e6ff4074 	uxth	r4, r4
 384:	e1540001 	cmp	r4, r1
 388:	e1a08004 	mov	r8, r4
 38c:	3affffe8 	bcc	334 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x30>
 390:	e1a01007 	mov	r1, r7
 394:	e1a00005 	mov	r0, r5
 398:	e28dd008 	add	sp, sp, #8
 39c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
 3a0:	eafffffe 	b	2a4 <PixelPatterns::Increment(unsigned int)>

000003a4 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 3a4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 3a8:	e0803281 	add	r3, r0, r1, lsl #5
 3ac:	e24dd01c 	sub	sp, sp, #28
 3b0:	e5932014 	ldr	r2, [r3, #20]
 3b4:	e5936020 	ldr	r6, [r3, #32]
 3b8:	e58d1014 	str	r1, [sp, #20]
 3bc:	e5931018 	ldr	r1, [r3, #24]
 3c0:	e5903008 	ldr	r3, [r0, #8]
 3c4:	e1a05000 	mov	r5, r0
 3c8:	e3530000 	cmp	r3, #0
 3cc:	0a000024 	beq	464 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0xc0>
 3d0:	e3a04000 	mov	r4, #0
 3d4:	e6ef3071 	uxtb	r3, r1
 3d8:	e1a0b821 	lsr	fp, r1, #16
 3dc:	e1a0a421 	lsr	sl, r1, #8
 3e0:	e1a01004 	mov	r1, r4
 3e4:	e58d300c 	str	r3, [sp, #12]
 3e8:	e1a09822 	lsr	r9, r2, #16
 3ec:	e1a08422 	lsr	r8, r2, #8
 3f0:	e6ef3072 	uxtb	r3, r2
 3f4:	e59f707c 	ldr	r7, [pc, #124]	; 478 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0xd4>
 3f8:	e6efb07b 	uxtb	fp, fp
 3fc:	e6efa07a 	uxtb	sl, sl
 400:	e6ef9079 	uxtb	r9, r9
 404:	e6ef8078 	uxtb	r8, r8
 408:	e58d3010 	str	r3, [sp, #16]
 40c:	e0862001 	add	r2, r6, r1
 410:	e0823102 	add	r3, r2, r2, lsl #2
 414:	e0833203 	add	r3, r3, r3, lsl #4
 418:	e0833403 	add	r3, r3, r3, lsl #8
 41c:	e0833803 	add	r3, r3, r3, lsl #16
 420:	e0823083 	add	r3, r2, r3, lsl #1
 424:	e1530007 	cmp	r3, r7
 428:	959dc010 	ldrls	ip, [sp, #16]
 42c:	859dc00c 	ldrhi	ip, [sp, #12]
 430:	91a03008 	movls	r3, r8
 434:	81a0300a 	movhi	r3, sl
 438:	91a02009 	movls	r2, r9
 43c:	81a0200b 	movhi	r2, fp
 440:	e5950000 	ldr	r0, [r5]
 444:	e58dc000 	str	ip, [sp]
 448:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 44c:	e2844001 	add	r4, r4, #1
 450:	e5953008 	ldr	r3, [r5, #8]
 454:	e6ff4074 	uxth	r4, r4
 458:	e1540003 	cmp	r4, r3
 45c:	e1a01004 	mov	r1, r4
 460:	3affffe9 	bcc	40c <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x68>
 464:	e1a00005 	mov	r0, r5
 468:	e59d1014 	ldr	r1, [sp, #20]
 46c:	e28dd01c 	add	sp, sp, #28
 470:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 474:	eafffffe 	b	2a4 <PixelPatterns::Increment(unsigned int)>
 478:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

0000047c <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 47c:	e92d4030 	push	{r4, r5, lr}
 480:	e1a04000 	mov	r4, r0
 484:	e1a05001 	mov	r5, r1
 488:	e0803281 	add	r3, r0, r1, lsl #5
 48c:	e5930014 	ldr	r0, [r3, #20]
 490:	e24dd00c 	sub	sp, sp, #12
 494:	e5931020 	ldr	r1, [r3, #32]
 498:	e1a02820 	lsr	r2, r0, #16
 49c:	e1a03420 	lsr	r3, r0, #8
 4a0:	e6ef0070 	uxtb	r0, r0
 4a4:	e58d0000 	str	r0, [sp]
 4a8:	e5940000 	ldr	r0, [r4]
 4ac:	e6ef3073 	uxtb	r3, r3
 4b0:	e6ef2072 	uxtb	r2, r2
 4b4:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 4b8:	e1a01005 	mov	r1, r5
 4bc:	e1a00004 	mov	r0, r4
 4c0:	e28dd00c 	add	sp, sp, #12
 4c4:	e8bd4030 	pop	{r4, r5, lr}
 4c8:	eafffffe 	b	2a4 <PixelPatterns::Increment(unsigned int)>

000004cc <PixelPatterns::ScannerUpdate(unsigned int)>:
 4cc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 4d0:	e0803281 	add	r3, r0, r1, lsl #5
 4d4:	e5932014 	ldr	r2, [r3, #20]
 4d8:	e593901c 	ldr	r9, [r3, #28]
 4dc:	e5938020 	ldr	r8, [r3, #32]
 4e0:	e5903008 	ldr	r3, [r0, #8]
 4e4:	e24dd01c 	sub	sp, sp, #28
 4e8:	e3530000 	cmp	r3, #0
 4ec:	e1a06000 	mov	r6, r0
 4f0:	e58d1014 	str	r1, [sp, #20]
 4f4:	e58d200c 	str	r2, [sp, #12]
 4f8:	0a00003c 	beq	5f0 <PixelPatterns::ScannerUpdate(unsigned int)+0x124>
 4fc:	e3a04000 	mov	r4, #0
 500:	e59d300c 	ldr	r3, [sp, #12]
 504:	e1a05004 	mov	r5, r4
 508:	e1a0b823 	lsr	fp, r3, #16
 50c:	e1a0a423 	lsr	sl, r3, #8
 510:	e6ef3073 	uxtb	r3, r3
 514:	e0499008 	sub	r9, r9, r8
 518:	e6efb07b 	uxtb	fp, fp
 51c:	e6efa07a 	uxtb	sl, sl
 520:	e58d3010 	str	r3, [sp, #16]
 524:	ea000017 	b	588 <PixelPatterns::ScannerUpdate(unsigned int)+0xbc>
 528:	e596302c 	ldr	r3, [r6, #44]	; 0x2c
 52c:	e1a01005 	mov	r1, r5
 530:	e7933007 	ldr	r3, [r3, r7]
 534:	e1a0c0a3 	lsr	ip, r3, #1
 538:	e1a0200c 	mov	r2, ip
 53c:	e20cc87f 	and	ip, ip, #8323072	; 0x7f0000
 540:	e2022c7f 	and	r2, r2, #32512	; 0x7f00
 544:	e18c2002 	orr	r2, ip, r2
 548:	e6ef3073 	uxtb	r3, r3
 54c:	e18250a3 	orr	r5, r2, r3, lsr #1
 550:	e1a030a3 	lsr	r3, r3, #1
 554:	e58d3000 	str	r3, [sp]
 558:	e1a03422 	lsr	r3, r2, #8
 55c:	e203307f 	and	r3, r3, #127	; 0x7f
 560:	e1a02822 	lsr	r2, r2, #16
 564:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 568:	e596302c 	ldr	r3, [r6, #44]	; 0x2c
 56c:	e7835007 	str	r5, [r3, r7]
 570:	e5963008 	ldr	r3, [r6, #8]
 574:	e2844001 	add	r4, r4, #1
 578:	e6ff4074 	uxth	r4, r4
 57c:	e1540003 	cmp	r4, r3
 580:	e1a05004 	mov	r5, r4
 584:	2a000019 	bcs	5f0 <PixelPatterns::ScannerUpdate(unsigned int)+0x124>
 588:	e1580005 	cmp	r8, r5
 58c:	e5960000 	ldr	r0, [r6]
 590:	e1a07105 	lsl	r7, r5, #2
 594:	0a00000b 	beq	5c8 <PixelPatterns::ScannerUpdate(unsigned int)+0xfc>
 598:	e1590005 	cmp	r9, r5
 59c:	1affffe1 	bne	528 <PixelPatterns::ScannerUpdate(unsigned int)+0x5c>
 5a0:	e59d2010 	ldr	r2, [sp, #16]
 5a4:	e1a0300a 	mov	r3, sl
 5a8:	e58d2000 	str	r2, [sp]
 5ac:	e1a01009 	mov	r1, r9
 5b0:	e1a0200b 	mov	r2, fp
 5b4:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 5b8:	e596302c 	ldr	r3, [r6, #44]	; 0x2c
 5bc:	e59d200c 	ldr	r2, [sp, #12]
 5c0:	e7832007 	str	r2, [r3, r7]
 5c4:	eaffffe9 	b	570 <PixelPatterns::ScannerUpdate(unsigned int)+0xa4>
 5c8:	e59d1010 	ldr	r1, [sp, #16]
 5cc:	e1a0300a 	mov	r3, sl
 5d0:	e1a0200b 	mov	r2, fp
 5d4:	e58d1000 	str	r1, [sp]
 5d8:	e1a01008 	mov	r1, r8
 5dc:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 5e0:	e596302c 	ldr	r3, [r6, #44]	; 0x2c
 5e4:	e59d200c 	ldr	r2, [sp, #12]
 5e8:	e7832105 	str	r2, [r3, r5, lsl #2]
 5ec:	eaffffdf 	b	570 <PixelPatterns::ScannerUpdate(unsigned int)+0xa4>
 5f0:	e1a00006 	mov	r0, r6
 5f4:	e59d1014 	ldr	r1, [sp, #20]
 5f8:	e28dd01c 	add	sp, sp, #28
 5fc:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 600:	eafffffe 	b	2a4 <PixelPatterns::Increment(unsigned int)>

00000604 <PixelPatterns::FadeUpdate(unsigned int)>:
 604:	e0803281 	add	r3, r0, r1, lsl #5
 608:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 60c:	e5934018 	ldr	r4, [r3, #24]
 610:	e593a020 	ldr	sl, [r3, #32]
 614:	e5938014 	ldr	r8, [r3, #20]
 618:	e1a07001 	mov	r7, r1
 61c:	e593101c 	ldr	r1, [r3, #28]
 620:	e1a03424 	lsr	r3, r4, #8
 624:	e6ef3073 	uxtb	r3, r3
 628:	e003039a 	mul	r3, sl, r3
 62c:	e1a05000 	mov	r5, r0
 630:	e1a00428 	lsr	r0, r8, #8
 634:	e041900a 	sub	r9, r1, sl
 638:	e6ef0070 	uxtb	r0, r0
 63c:	e24dd010 	sub	sp, sp, #16
 640:	e0203099 	mla	r0, r9, r0, r3
 644:	e58d100c 	str	r1, [sp, #12]
 648:	ebfffffe 	bl	0 <__aeabi_uidiv>
 64c:	e1a03824 	lsr	r3, r4, #16
 650:	e6ef3073 	uxtb	r3, r3
 654:	e003039a 	mul	r3, sl, r3
 658:	e1a06000 	mov	r6, r0
 65c:	e1a00828 	lsr	r0, r8, #16
 660:	e6ef0070 	uxtb	r0, r0
 664:	e0203099 	mla	r0, r9, r0, r3
 668:	e59d100c 	ldr	r1, [sp, #12]
 66c:	ebfffffe 	bl	0 <__aeabi_uidiv>
 670:	e1a03000 	mov	r3, r0
 674:	e6ef4074 	uxtb	r4, r4
 678:	e004049a 	mul	r4, sl, r4
 67c:	e1a06406 	lsl	r6, r6, #8
 680:	e6ef0078 	uxtb	r0, r8
 684:	e1a03803 	lsl	r3, r3, #16
 688:	e20338ff 	and	r3, r3, #16711680	; 0xff0000
 68c:	e0204099 	mla	r0, r9, r0, r4
 690:	e59d100c 	ldr	r1, [sp, #12]
 694:	e6ff6076 	uxth	r6, r6
 698:	e1866003 	orr	r6, r6, r3
 69c:	ebfffffe 	bl	0 <__aeabi_uidiv>
 6a0:	e5953008 	ldr	r3, [r5, #8]
 6a4:	e6ef0070 	uxtb	r0, r0
 6a8:	e3530000 	cmp	r3, #0
 6ac:	e1866000 	orr	r6, r6, r0
 6b0:	0a00000e 	beq	6f0 <PixelPatterns::FadeUpdate(unsigned int)+0xec>
 6b4:	e3a04000 	mov	r4, #0
 6b8:	e1a08426 	lsr	r8, r6, #8
 6bc:	e1a09826 	lsr	r9, r6, #16
 6c0:	e6ef8078 	uxtb	r8, r8
 6c4:	e6ef6076 	uxtb	r6, r6
 6c8:	e5950000 	ldr	r0, [r5]
 6cc:	e1a01004 	mov	r1, r4
 6d0:	e1a03008 	mov	r3, r8
 6d4:	e1a02009 	mov	r2, r9
 6d8:	e58d6000 	str	r6, [sp]
 6dc:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 6e0:	e5950008 	ldr	r0, [r5, #8]
 6e4:	e2844001 	add	r4, r4, #1
 6e8:	e1500004 	cmp	r0, r4
 6ec:	8afffff5 	bhi	6c8 <PixelPatterns::FadeUpdate(unsigned int)+0xc4>
 6f0:	e1a01007 	mov	r1, r7
 6f4:	e1a00005 	mov	r0, r5
 6f8:	e28dd010 	add	sp, sp, #16
 6fc:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 700:	eafffffe 	b	2a4 <PixelPatterns::Increment(unsigned int)>

00000704 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 704:	e92d4030 	push	{r4, r5, lr}
 708:	e1a04001 	mov	r4, r1
 70c:	e0801281 	add	r1, r0, r1, lsl #5
 710:	e591300c 	ldr	r3, [r1, #12]
 714:	e1a05000 	mov	r5, r0
 718:	e5910010 	ldr	r0, [r1, #16]
 71c:	e0423003 	sub	r3, r2, r3
 720:	e1530000 	cmp	r3, r0
 724:	e24dd00c 	sub	sp, sp, #12
 728:	3a00000a 	bcc	758 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x54>
 72c:	e5913028 	ldr	r3, [r1, #40]	; 0x28
 730:	e581200c 	str	r2, [r1, #12]
 734:	e2433001 	sub	r3, r3, #1
 738:	e3530004 	cmp	r3, #4
 73c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
 740:	ea000004 	b	758 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x54>
 744:	0000077c 	andeq	r0, r0, ip, ror r7
 748:	00000794 	muleq	r0, r4, r7
 74c:	000007ac 	andeq	r0, r0, ip, lsr #15
 750:	000007f4 	strdeq	r0, [r0], -r4
 754:	00000764 	andeq	r0, r0, r4, ror #14
 758:	e3a00000 	mov	r0, #0
 75c:	e28dd00c 	add	sp, sp, #12
 760:	e8bd8030 	pop	{r4, r5, pc}
 764:	e1a00005 	mov	r0, r5
 768:	e1a01004 	mov	r1, r4
 76c:	ebfffffe 	bl	604 <PixelPatterns::FadeUpdate(unsigned int)>
 770:	e3a00001 	mov	r0, #1
 774:	e28dd00c 	add	sp, sp, #12
 778:	e8bd8030 	pop	{r4, r5, pc}
 77c:	e1a00005 	mov	r0, r5
 780:	e1a01004 	mov	r1, r4
 784:	ebfffffe 	bl	304 <PixelPatterns::RainbowCycleUpdate(unsigned int)>
 788:	e3a00001 	mov	r0, #1
 78c:	e28dd00c 	add	sp, sp, #12
 790:	e8bd8030 	pop	{r4, r5, pc}
 794:	e1a00005 	mov	r0, r5
 798:	e1a01004 	mov	r1, r4
 79c:	ebfffffe 	bl	3a4 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 7a0:	e3a00001 	mov	r0, #1
 7a4:	e28dd00c 	add	sp, sp, #12
 7a8:	e8bd8030 	pop	{r4, r5, pc}
 7ac:	e1a0c284 	lsl	ip, r4, #5
 7b0:	e085c00c 	add	ip, r5, ip
 7b4:	e59c0014 	ldr	r0, [ip, #20]
 7b8:	e59c1020 	ldr	r1, [ip, #32]
 7bc:	e1a03420 	lsr	r3, r0, #8
 7c0:	e1a02820 	lsr	r2, r0, #16
 7c4:	e6ef0070 	uxtb	r0, r0
 7c8:	e58d0000 	str	r0, [sp]
 7cc:	e5950000 	ldr	r0, [r5]
 7d0:	e6ef3073 	uxtb	r3, r3
 7d4:	e6ef2072 	uxtb	r2, r2
 7d8:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 7dc:	e1a00005 	mov	r0, r5
 7e0:	e1a01004 	mov	r1, r4
 7e4:	ebfffffe 	bl	2a4 <PixelPatterns::Increment(unsigned int)>
 7e8:	e3a00001 	mov	r0, #1
 7ec:	e28dd00c 	add	sp, sp, #12
 7f0:	e8bd8030 	pop	{r4, r5, pc}
 7f4:	e1a00005 	mov	r0, r5
 7f8:	e1a01004 	mov	r1, r4
 7fc:	ebfffffe 	bl	4cc <PixelPatterns::ScannerUpdate(unsigned int)>
 800:	e3a00001 	mov	r0, #1
 804:	e28dd00c 	add	sp, sp, #12
 808:	e8bd8030 	pop	{r4, r5, pc}

0000080c <PixelPatterns::Run()>:
 80c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 810:	e1a06000 	mov	r6, r0
 814:	ebfffffe 	bl	0 <millis>
 818:	e5963004 	ldr	r3, [r6, #4]
 81c:	e3530000 	cmp	r3, #0
 820:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
 824:	e3a04000 	mov	r4, #0
 828:	e1a07000 	mov	r7, r0
 82c:	e1a05004 	mov	r5, r4
 830:	e1a01004 	mov	r1, r4
 834:	e1a02007 	mov	r2, r7
 838:	e1a00006 	mov	r0, r6
 83c:	ebfffffe 	bl	704 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 840:	e2844001 	add	r4, r4, #1
 844:	e5963004 	ldr	r3, [r6, #4]
 848:	e6ef4074 	uxtb	r4, r4
 84c:	e1805005 	orr	r5, r0, r5
 850:	e1540003 	cmp	r4, r3
 854:	e1a01004 	mov	r1, r4
 858:	e6ef5075 	uxtb	r5, r5
 85c:	3afffff4 	bcc	834 <PixelPatterns::Run()+0x28>
 860:	e3550000 	cmp	r5, #0
 864:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
 868:	e5960000 	ldr	r0, [r6]
 86c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
 870:	eafffffe 	b	0 <WS28xx::Update()>

00000874 <PixelPatterns::Reverse(unsigned int)>:
 874:	e0801281 	add	r1, r0, r1, lsl #5
 878:	e5913024 	ldr	r3, [r1, #36]	; 0x24
 87c:	e3530000 	cmp	r3, #0
 880:	13a03000 	movne	r3, #0
 884:	03a02001 	moveq	r2, #1
 888:	0591301c 	ldreq	r3, [r1, #28]
 88c:	05812024 	streq	r2, [r1, #36]	; 0x24
 890:	02433001 	subeq	r3, r3, #1
 894:	06ff3073 	uxtheq	r3, r3
 898:	05813020 	streq	r3, [r1, #32]
 89c:	15813024 	strne	r3, [r1, #36]	; 0x24
 8a0:	15813020 	strne	r3, [r1, #32]
 8a4:	e12fff1e 	bx	lr

Disassembly of section .rodata.str1.4:

00000000 <.rodata.str1.4>:
   0:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
   4:	006e776f 	rsbeq	r7, lr, pc, ror #14

Disassembly of section .rodata:

00000000 <s_patternName>:
   0:	656e6f4e 	strbvs	r6, [lr, #-3918]!	; 0xfffff0b2
	...
   c:	61520000 	cmpvs	r2, r0
  10:	6f626e69 	svcvs	0x00626e69
  14:	79632077 	stmdbvc	r3!, {r0, r1, r2, r4, r5, r6, sp}^
  18:	00656c63 	rsbeq	r6, r5, r3, ror #24
  1c:	61656854 	cmnvs	r5, r4, asr r8
  20:	20726574 	rsbscs	r6, r2, r4, ror r5
  24:	73616863 	cmnvc	r1, #6488064	; 0x630000
  28:	6f430065 	svcvs	0x00430065
  2c:	72756f6c 	rsbsvc	r6, r5, #108, 30	; 0x1b0
  30:	70697720 	rsbvc	r7, r9, r0, lsr #14
  34:	00000065 	andeq	r0, r0, r5, rrx
  38:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
  3c:	0072656e 	rsbseq	r6, r2, lr, ror #10
  40:	00000000 	andeq	r0, r0, r0
  44:	61460000 	mrsvs	r0, (UNDEF: 70)
  48:	00006564 	andeq	r6, r0, r4, ror #10
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <PixelPatterns::Reverse(unsigned int)+0x168cfb8>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <PixelPatterns::Reverse(unsigned int)+0x41bb0>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


pixelconfiguration.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <PixelConfiguration::GetRgbMapping(pixel::Type)>:
   0:	e3c03008 	bic	r3, r0, #8
   4:	e3530001 	cmp	r3, #1
   8:	0a000005 	beq	24 <PixelConfiguration::GetRgbMapping(pixel::Type)+0x24>
   c:	e3500008 	cmp	r0, #8
  10:	0a000005 	beq	2c <PixelConfiguration::GetRgbMapping(pixel::Type)+0x2c>
  14:	e350000a 	cmp	r0, #10
  18:	13a00002 	movne	r0, #2
  1c:	03a00005 	moveq	r0, #5
  20:	e12fff1e 	bx	lr
  24:	e3a00000 	mov	r0, #0
  28:	e12fff1e 	bx	lr
  2c:	e3a00004 	mov	r0, #4
  30:	e12fff1e 	bx	lr

00000034 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
  34:	e3e0303f 	mvn	r3, #63	; 0x3f
  38:	e3500003 	cmp	r0, #3
  3c:	e5c13000 	strb	r3, [r1]
  40:	03a030f8 	moveq	r3, #248	; 0xf8
  44:	0a000003 	beq	58 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x24>
  48:	e2400008 	sub	r0, r0, #8
  4c:	e3500003 	cmp	r0, #3
  50:	33a030fc 	movcc	r3, #252	; 0xfc
  54:	23a030f0 	movcs	r3, #240	; 0xf0
  58:	e5c23000 	strb	r3, [r2]
  5c:	e12fff1e 	bx	lr

00000060 <PixelConfiguration::Validate(unsigned int&)>:
  60:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
  64:	e5905000 	ldr	r5, [r0]
  68:	e1a04000 	mov	r4, r0
  6c:	e3550007 	cmp	r5, #7
  70:	e5903004 	ldr	r3, [r0, #4]
  74:	e245200b 	sub	r2, r5, #11
  78:	1a000005 	bne	94 <PixelConfiguration::Validate(unsigned int&)+0x34>
  7c:	e3530c02 	cmp	r3, #512	; 0x200
  80:	23a03c02 	movcs	r3, #512	; 0x200
  84:	e5803004 	str	r3, [r0, #4]
  88:	e3a03004 	mov	r3, #4
  8c:	e5813000 	str	r3, [r1]
  90:	ea00000c 	b	c8 <PixelConfiguration::Validate(unsigned int&)+0x68>
  94:	e3530faa 	cmp	r3, #680	; 0x2a8
  98:	23a03faa 	movcs	r3, #680	; 0x2a8
  9c:	e5803004 	str	r3, [r0, #4]
  a0:	e3a03003 	mov	r3, #3
  a4:	e3520001 	cmp	r2, #1
  a8:	e5813000 	str	r3, [r1]
  ac:	8a000005 	bhi	c8 <PixelConfiguration::Validate(unsigned int&)+0x68>
  b0:	e5d03012 	ldrb	r3, [r0, #18]
  b4:	e353001f 	cmp	r3, #31
  b8:	91e03d83 	mvnls	r3, r3, lsl #27
  bc:	83e03000 	mvnhi	r3, #0
  c0:	91e03da3 	mvnls	r3, r3, lsr #27
  c4:	e5c03012 	strb	r3, [r0, #18]
  c8:	e3550000 	cmp	r5, #0
  cc:	13520002 	cmpne	r2, #2
  d0:	e5943008 	ldr	r3, [r4, #8]
  d4:	8a000014 	bhi	12c <PixelConfiguration::Validate(unsigned int&)+0xcc>
  d8:	e3a02000 	mov	r2, #0
  dc:	e3a01cff 	mov	r1, #65280	; 0xff00
  e0:	e3530006 	cmp	r3, #6
  e4:	05842008 	streq	r2, [r4, #8]
  e8:	e355000d 	cmp	r5, #13
  ec:	e594300c 	ldr	r3, [r4, #12]
  f0:	e5c42013 	strb	r2, [r4, #19]
  f4:	e1c411b0 	strh	r1, [r4, #16]
  f8:	1a000005 	bne	114 <PixelConfiguration::Validate(unsigned int&)+0xb4>
  fc:	e3530000 	cmp	r3, #0
 100:	1a000001 	bne	10c <PixelConfiguration::Validate(unsigned int&)+0xac>
 104:	e59f3090 	ldr	r3, [pc, #144]	; 19c <PixelConfiguration::Validate(unsigned int&)+0x13c>
 108:	ea000020 	b	190 <PixelConfiguration::Validate(unsigned int&)+0x130>
 10c:	e59f208c 	ldr	r2, [pc, #140]	; 1a0 <PixelConfiguration::Validate(unsigned int&)+0x140>
 110:	ea000002 	b	120 <PixelConfiguration::Validate(unsigned int&)+0xc0>
 114:	e3530000 	cmp	r3, #0
 118:	0afffff9 	beq	104 <PixelConfiguration::Validate(unsigned int&)+0xa4>
 11c:	e59f2080 	ldr	r2, [pc, #128]	; 1a4 <PixelConfiguration::Validate(unsigned int&)+0x144>
 120:	e1530002 	cmp	r3, r2
 124:	8584200c 	strhi	r2, [r4, #12]
 128:	ea000019 	b	194 <PixelConfiguration::Validate(unsigned int&)+0x134>
 12c:	e3a02001 	mov	r2, #1
 130:	e3530006 	cmp	r3, #6
 134:	e5c42013 	strb	r2, [r4, #19]
 138:	1a000002 	bne	148 <PixelConfiguration::Validate(unsigned int&)+0xe8>
 13c:	e1a00005 	mov	r0, r5
 140:	ebfffffe 	bl	0 <PixelConfiguration::GetRgbMapping(pixel::Type)>
 144:	e5840008 	str	r0, [r4, #8]
 148:	e5d43011 	ldrb	r3, [r4, #17]
 14c:	e5d42010 	ldrb	r2, [r4, #16]
 150:	e1a00005 	mov	r0, r5
 154:	e1520003 	cmp	r2, r3
 158:	23a03000 	movcs	r3, #0
 15c:	e28d2007 	add	r2, sp, #7
 160:	21c431b0 	strhcs	r3, [r4, #16]
 164:	e28d1006 	add	r1, sp, #6
 168:	ebfffffe 	bl	34 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 16c:	e5d43010 	ldrb	r3, [r4, #16]
 170:	e3530000 	cmp	r3, #0
 174:	05dd3006 	ldrbeq	r3, [sp, #6]
 178:	05c43010 	strbeq	r3, [r4, #16]
 17c:	e5d43011 	ldrb	r3, [r4, #17]
 180:	e3530000 	cmp	r3, #0
 184:	05dd3007 	ldrbeq	r3, [sp, #7]
 188:	05c43011 	strbeq	r3, [r4, #17]
 18c:	e59f3014 	ldr	r3, [pc, #20]	; 1a8 <PixelConfiguration::Validate(unsigned int&)+0x148>
 190:	e584300c 	str	r3, [r4, #12]
 194:	e28dd00c 	add	sp, sp, #12
 198:	e8bd8030 	pop	{r4, r5, pc}
 19c:	003d0900 	eorseq	r0, sp, r0, lsl #18
 1a0:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 1a4:	017d7840 	cmneq	sp, r0, asr #16
 1a8:	0061a800 	rsbeq	sl, r1, r0, lsl #16

000001ac <PixelConfiguration::Dump()>:
 1ac:	e12fff1e 	bx	lr

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <PixelConfiguration::Dump()+0x168d680>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <PixelConfiguration::Dump()+0x42278>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


ws28xx.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <WS28xx::~WS28xx()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	e5900018 	ldr	r0, [r0, #24]
   c:	e3500000 	cmp	r0, #0
  10:	0a000002 	beq	20 <WS28xx::~WS28xx()+0x20>
  14:	ebfffffe 	bl	0 <operator delete[](void*)>
  18:	e3a03000 	mov	r3, #0
  1c:	e5843018 	str	r3, [r4, #24]
  20:	e5940014 	ldr	r0, [r4, #20]
  24:	e3500000 	cmp	r0, #0
  28:	0a000000 	beq	30 <WS28xx::~WS28xx()+0x30>
  2c:	ebfffffe 	bl	0 <operator delete[](void*)>
  30:	e3a02000 	mov	r2, #0
  34:	e59f3008 	ldr	r3, [pc, #8]	; 44 <WS28xx::~WS28xx()+0x44>
  38:	e1a00004 	mov	r0, r4
  3c:	e5832000 	str	r2, [r3]
  40:	e8bd8010 	pop	{r4, pc}
  44:	00000000 	andeq	r0, r0, r0

00000048 <WS28xx::Update()>:
  48:	e590100c 	ldr	r1, [r0, #12]
  4c:	e5900014 	ldr	r0, [r0, #20]
  50:	eafffffe 	b	0 <bcm2835_spi_writenb>

00000054 <WS28xx::Blackout()>:
  54:	e590100c 	ldr	r1, [r0, #12]
  58:	e5900018 	ldr	r0, [r0, #24]
  5c:	eafffffe 	b	0 <bcm2835_spi_writenb>

00000060 <WS28xx::Print()>:
  60:	e92d4010 	push	{r4, lr}
  64:	e1a04000 	mov	r4, r0
  68:	e24dd008 	sub	sp, sp, #8
  6c:	e59f0098 	ldr	r0, [pc, #152]	; 10c <WS28xx::Print()+0xac>
  70:	ebfffffe 	bl	0 <printf>
  74:	e5940000 	ldr	r0, [r4]
  78:	ebfffffe 	bl	0 <PixelType::GetType(pixel::Type)>
  7c:	e5942000 	ldr	r2, [r4]
  80:	e1a01000 	mov	r1, r0
  84:	e59f0084 	ldr	r0, [pc, #132]	; 110 <WS28xx::Print()+0xb0>
  88:	ebfffffe 	bl	0 <printf>
  8c:	e5941004 	ldr	r1, [r4, #4]
  90:	e59f007c 	ldr	r0, [pc, #124]	; 114 <WS28xx::Print()+0xb4>
  94:	ebfffffe 	bl	0 <printf>
  98:	e5d43012 	ldrb	r3, [r4, #18]
  9c:	e3530000 	cmp	r3, #0
  a0:	1a000001 	bne	ac <WS28xx::Print()+0x4c>
  a4:	e28dd008 	add	sp, sp, #8
  a8:	e8bd8010 	pop	{r4, pc}
  ac:	e5940008 	ldr	r0, [r4, #8]
  b0:	ebfffffe 	bl	0 <PixelType::GetMap(pixel::Map)>
  b4:	e5942008 	ldr	r2, [r4, #8]
  b8:	e1a01000 	mov	r1, r0
  bc:	e59f0054 	ldr	r0, [pc, #84]	; 118 <WS28xx::Print()+0xb8>
  c0:	ebfffffe 	bl	0 <printf>
  c4:	e5d40010 	ldrb	r0, [r4, #16]
  c8:	ebfffffe 	bl	0 <PixelType::ConvertTxH(unsigned char)>
  cc:	eeb77ac0 	vcvt.f64.f32	d7, s0
  d0:	e5d43010 	ldrb	r3, [r4, #16]
  d4:	e59f0040 	ldr	r0, [pc, #64]	; 11c <WS28xx::Print()+0xbc>
  d8:	e58d3000 	str	r3, [sp]
  dc:	ec532b17 	vmov	r2, r3, d7
  e0:	ebfffffe 	bl	0 <printf>
  e4:	e5d40011 	ldrb	r0, [r4, #17]
  e8:	ebfffffe 	bl	0 <PixelType::ConvertTxH(unsigned char)>
  ec:	eeb77ac0 	vcvt.f64.f32	d7, s0
  f0:	e5d43011 	ldrb	r3, [r4, #17]
  f4:	e59f0024 	ldr	r0, [pc, #36]	; 120 <WS28xx::Print()+0xc0>
  f8:	e58d3000 	str	r3, [sp]
  fc:	ec532b17 	vmov	r2, r3, d7
 100:	ebfffffe 	bl	0 <printf>
 104:	e28dd008 	add	sp, sp, #8
 108:	e8bd8010 	pop	{r4, pc}
 10c:	00000000 	andeq	r0, r0, r0
 110:	00000014 	andeq	r0, r0, r4, lsl r0
 114:	00000028 	andeq	r0, r0, r8, lsr #32
 118:	00000038 	andeq	r0, r0, r8, lsr r0
 11c:	0000004c 	andeq	r0, r0, ip, asr #32
 120:	00000064 	andeq	r0, r0, r4, rrx

00000124 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>:
 124:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 128:	e5d0c012 	ldrb	ip, [r0, #18]
 12c:	e5dde014 	ldrb	lr, [sp, #20]
 130:	e35c0000 	cmp	ip, #0
 134:	1a00000f 	bne	178 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x54>
 138:	e590c000 	ldr	ip, [r0]
 13c:	e24c400b 	sub	r4, ip, #11
 140:	e3540001 	cmp	r4, #1
 144:	9a00002f 	bls	208 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0xe4>
 148:	e35c0000 	cmp	ip, #0
 14c:	1a000017 	bne	1b0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x8c>
 150:	e590c014 	ldr	ip, [r0, #20]
 154:	e0811081 	add	r1, r1, r1, lsl #1
 158:	e7cc2001 	strb	r2, [ip, r1]
 15c:	e5902014 	ldr	r2, [r0, #20]
 160:	e0822001 	add	r2, r2, r1
 164:	e5c23001 	strb	r3, [r2, #1]
 168:	e5903014 	ldr	r3, [r0, #20]
 16c:	e0831001 	add	r1, r3, r1
 170:	e5c1e002 	strb	lr, [r1, #2]
 174:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 178:	e0811081 	add	r1, r1, r1, lsl #1
 17c:	e5904008 	ldr	r4, [r0, #8]
 180:	e1a0c181 	lsl	ip, r1, #3
 184:	e3a05080 	mov	r5, #128	; 0x80
 188:	e28c1001 	add	r1, ip, #1
 18c:	e3540005 	cmp	r4, #5
 190:	979ff104 	ldrls	pc, [pc, r4, lsl #2]
 194:	ea0000ef 	b	558 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x434>
 198:	000002c4 	andeq	r0, r0, r4, asr #5
 19c:	00000348 	andeq	r0, r0, r8, asr #6
 1a0:	00000450 	andeq	r0, r0, r0, asr r4
 1a4:	000003cc 	andeq	r0, r0, ip, asr #7
 1a8:	000004d4 	ldrdeq	r0, [r0], -r4
 1ac:	00000240 	andeq	r0, r0, r0, asr #4
 1b0:	e1e0c12e 	mvn	ip, lr, lsr #2
 1b4:	e1e04223 	mvn	r4, r3, lsr #4
 1b8:	e22260c0 	eor	r6, r2, #192	; 0xc0
 1bc:	e20cc030 	and	ip, ip, #48	; 0x30
 1c0:	e18cc326 	orr	ip, ip, r6, lsr #6
 1c4:	e204400c 	and	r4, r4, #12
 1c8:	e18cc004 	orr	ip, ip, r4
 1cc:	e1e0cd0c 	mvn	ip, ip, lsl #26
 1d0:	e1e0cd2c 	mvn	ip, ip, lsr #26
 1d4:	e5905014 	ldr	r5, [r0, #20]
 1d8:	e2811001 	add	r1, r1, #1
 1dc:	e7c5c101 	strb	ip, [r5, r1, lsl #2]
 1e0:	e590c014 	ldr	ip, [r0, #20]
 1e4:	e08cc101 	add	ip, ip, r1, lsl #2
 1e8:	e5cce001 	strb	lr, [ip, #1]
 1ec:	e590c014 	ldr	ip, [r0, #20]
 1f0:	e08cc101 	add	ip, ip, r1, lsl #2
 1f4:	e5cc3002 	strb	r3, [ip, #2]
 1f8:	e5903014 	ldr	r3, [r0, #20]
 1fc:	e0831101 	add	r1, r3, r1, lsl #2
 200:	e5c12003 	strb	r2, [r1, #3]
 204:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 208:	e590c014 	ldr	ip, [r0, #20]
 20c:	e5d04013 	ldrb	r4, [r0, #19]
 210:	e2811001 	add	r1, r1, #1
 214:	e7cc4101 	strb	r4, [ip, r1, lsl #2]
 218:	e590c014 	ldr	ip, [r0, #20]
 21c:	e08cc101 	add	ip, ip, r1, lsl #2
 220:	e5cc2001 	strb	r2, [ip, #1]
 224:	e5902014 	ldr	r2, [r0, #20]
 228:	e0822101 	add	r2, r2, r1, lsl #2
 22c:	e5c23002 	strb	r3, [r2, #2]
 230:	e5903014 	ldr	r3, [r0, #20]
 234:	e0831101 	add	r1, r3, r1, lsl #2
 238:	e5c1e003 	strb	lr, [r1, #3]
 23c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 240:	e28c4009 	add	r4, ip, #9
 244:	e11e0005 	tst	lr, r5
 248:	15d07011 	ldrbne	r7, [r0, #17]
 24c:	05d07010 	ldrbeq	r7, [r0, #16]
 250:	e5906014 	ldr	r6, [r0, #20]
 254:	e1a050a5 	lsr	r5, r5, #1
 258:	e7c67001 	strb	r7, [r6, r1]
 25c:	e2811001 	add	r1, r1, #1
 260:	e1540001 	cmp	r4, r1
 264:	1afffff6 	bne	244 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x120>
 268:	e3a01080 	mov	r1, #128	; 0x80
 26c:	e28ce011 	add	lr, ip, #17
 270:	e1130001 	tst	r3, r1
 274:	15d06011 	ldrbne	r6, [r0, #17]
 278:	05d06010 	ldrbeq	r6, [r0, #16]
 27c:	e5905014 	ldr	r5, [r0, #20]
 280:	e1a010a1 	lsr	r1, r1, #1
 284:	e7c56004 	strb	r6, [r5, r4]
 288:	e2844001 	add	r4, r4, #1
 28c:	e15e0004 	cmp	lr, r4
 290:	1afffff6 	bne	270 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x14c>
 294:	e3a03080 	mov	r3, #128	; 0x80
 298:	e28cc019 	add	ip, ip, #25
 29c:	e1120003 	tst	r2, r3
 2a0:	15d01011 	ldrbne	r1, [r0, #17]
 2a4:	05d01010 	ldrbeq	r1, [r0, #16]
 2a8:	e5904014 	ldr	r4, [r0, #20]
 2ac:	e1a030a3 	lsr	r3, r3, #1
 2b0:	e7c4100e 	strb	r1, [r4, lr]
 2b4:	e28ee001 	add	lr, lr, #1
 2b8:	e15c000e 	cmp	ip, lr
 2bc:	1afffff6 	bne	29c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x178>
 2c0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 2c4:	e28c4009 	add	r4, ip, #9
 2c8:	e1120005 	tst	r2, r5
 2cc:	15d07011 	ldrbne	r7, [r0, #17]
 2d0:	05d07010 	ldrbeq	r7, [r0, #16]
 2d4:	e5906014 	ldr	r6, [r0, #20]
 2d8:	e1a050a5 	lsr	r5, r5, #1
 2dc:	e7c67001 	strb	r7, [r6, r1]
 2e0:	e2811001 	add	r1, r1, #1
 2e4:	e1540001 	cmp	r4, r1
 2e8:	1afffff6 	bne	2c8 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x1a4>
 2ec:	e3a01080 	mov	r1, #128	; 0x80
 2f0:	e28c2011 	add	r2, ip, #17
 2f4:	e1130001 	tst	r3, r1
 2f8:	15d06011 	ldrbne	r6, [r0, #17]
 2fc:	05d06010 	ldrbeq	r6, [r0, #16]
 300:	e5905014 	ldr	r5, [r0, #20]
 304:	e1a010a1 	lsr	r1, r1, #1
 308:	e7c56004 	strb	r6, [r5, r4]
 30c:	e2844001 	add	r4, r4, #1
 310:	e1520004 	cmp	r2, r4
 314:	1afffff6 	bne	2f4 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x1d0>
 318:	e3a03080 	mov	r3, #128	; 0x80
 31c:	e28cc019 	add	ip, ip, #25
 320:	e11e0003 	tst	lr, r3
 324:	15d01011 	ldrbne	r1, [r0, #17]
 328:	05d01010 	ldrbeq	r1, [r0, #16]
 32c:	e5904014 	ldr	r4, [r0, #20]
 330:	e1a030a3 	lsr	r3, r3, #1
 334:	e7c41002 	strb	r1, [r4, r2]
 338:	e2822001 	add	r2, r2, #1
 33c:	e15c0002 	cmp	ip, r2
 340:	1afffff6 	bne	320 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x1fc>
 344:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 348:	e28c4009 	add	r4, ip, #9
 34c:	e1120005 	tst	r2, r5
 350:	15d07011 	ldrbne	r7, [r0, #17]
 354:	05d07010 	ldrbeq	r7, [r0, #16]
 358:	e5906014 	ldr	r6, [r0, #20]
 35c:	e1a050a5 	lsr	r5, r5, #1
 360:	e7c67001 	strb	r7, [r6, r1]
 364:	e2811001 	add	r1, r1, #1
 368:	e1510004 	cmp	r1, r4
 36c:	1afffff6 	bne	34c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x228>
 370:	e3a01080 	mov	r1, #128	; 0x80
 374:	e28c2011 	add	r2, ip, #17
 378:	e11e0001 	tst	lr, r1
 37c:	15d06011 	ldrbne	r6, [r0, #17]
 380:	05d06010 	ldrbeq	r6, [r0, #16]
 384:	e5905014 	ldr	r5, [r0, #20]
 388:	e1a010a1 	lsr	r1, r1, #1
 38c:	e7c56004 	strb	r6, [r5, r4]
 390:	e2844001 	add	r4, r4, #1
 394:	e1520004 	cmp	r2, r4
 398:	1afffff6 	bne	378 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x254>
 39c:	e3a0e080 	mov	lr, #128	; 0x80
 3a0:	e28cc019 	add	ip, ip, #25
 3a4:	e113000e 	tst	r3, lr
 3a8:	15d01011 	ldrbne	r1, [r0, #17]
 3ac:	05d01010 	ldrbeq	r1, [r0, #16]
 3b0:	e5904014 	ldr	r4, [r0, #20]
 3b4:	e1a0e0ae 	lsr	lr, lr, #1
 3b8:	e7c41002 	strb	r1, [r4, r2]
 3bc:	e2822001 	add	r2, r2, #1
 3c0:	e15c0002 	cmp	ip, r2
 3c4:	1afffff6 	bne	3a4 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x280>
 3c8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 3cc:	e28c4009 	add	r4, ip, #9
 3d0:	e1130005 	tst	r3, r5
 3d4:	15d07011 	ldrbne	r7, [r0, #17]
 3d8:	05d07010 	ldrbeq	r7, [r0, #16]
 3dc:	e5906014 	ldr	r6, [r0, #20]
 3e0:	e1a050a5 	lsr	r5, r5, #1
 3e4:	e7c67001 	strb	r7, [r6, r1]
 3e8:	e2811001 	add	r1, r1, #1
 3ec:	e1510004 	cmp	r1, r4
 3f0:	1afffff6 	bne	3d0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x2ac>
 3f4:	e3a01080 	mov	r1, #128	; 0x80
 3f8:	e28c3011 	add	r3, ip, #17
 3fc:	e11e0001 	tst	lr, r1
 400:	15d06011 	ldrbne	r6, [r0, #17]
 404:	05d06010 	ldrbeq	r6, [r0, #16]
 408:	e5905014 	ldr	r5, [r0, #20]
 40c:	e1a010a1 	lsr	r1, r1, #1
 410:	e7c56004 	strb	r6, [r5, r4]
 414:	e2844001 	add	r4, r4, #1
 418:	e1540003 	cmp	r4, r3
 41c:	1afffff6 	bne	3fc <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x2d8>
 420:	e3a0e080 	mov	lr, #128	; 0x80
 424:	e28cc019 	add	ip, ip, #25
 428:	e112000e 	tst	r2, lr
 42c:	15d01011 	ldrbne	r1, [r0, #17]
 430:	05d01010 	ldrbeq	r1, [r0, #16]
 434:	e5904014 	ldr	r4, [r0, #20]
 438:	e1a0e0ae 	lsr	lr, lr, #1
 43c:	e7c41003 	strb	r1, [r4, r3]
 440:	e2833001 	add	r3, r3, #1
 444:	e153000c 	cmp	r3, ip
 448:	1afffff6 	bne	428 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x304>
 44c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 450:	e28c4009 	add	r4, ip, #9
 454:	e1130005 	tst	r3, r5
 458:	15d07011 	ldrbne	r7, [r0, #17]
 45c:	05d07010 	ldrbeq	r7, [r0, #16]
 460:	e5906014 	ldr	r6, [r0, #20]
 464:	e1a050a5 	lsr	r5, r5, #1
 468:	e7c67001 	strb	r7, [r6, r1]
 46c:	e2811001 	add	r1, r1, #1
 470:	e1510004 	cmp	r1, r4
 474:	1afffff6 	bne	454 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x330>
 478:	e3a01080 	mov	r1, #128	; 0x80
 47c:	e28c3011 	add	r3, ip, #17
 480:	e1120001 	tst	r2, r1
 484:	15d06011 	ldrbne	r6, [r0, #17]
 488:	05d06010 	ldrbeq	r6, [r0, #16]
 48c:	e5905014 	ldr	r5, [r0, #20]
 490:	e1a010a1 	lsr	r1, r1, #1
 494:	e7c56004 	strb	r6, [r5, r4]
 498:	e2844001 	add	r4, r4, #1
 49c:	e1540003 	cmp	r4, r3
 4a0:	1afffff6 	bne	480 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x35c>
 4a4:	e3a02080 	mov	r2, #128	; 0x80
 4a8:	e28cc019 	add	ip, ip, #25
 4ac:	e11e0002 	tst	lr, r2
 4b0:	15d01011 	ldrbne	r1, [r0, #17]
 4b4:	05d01010 	ldrbeq	r1, [r0, #16]
 4b8:	e5904014 	ldr	r4, [r0, #20]
 4bc:	e1a020a2 	lsr	r2, r2, #1
 4c0:	e7c41003 	strb	r1, [r4, r3]
 4c4:	e2833001 	add	r3, r3, #1
 4c8:	e153000c 	cmp	r3, ip
 4cc:	1afffff6 	bne	4ac <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x388>
 4d0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 4d4:	e28c4009 	add	r4, ip, #9
 4d8:	e11e0005 	tst	lr, r5
 4dc:	15d07011 	ldrbne	r7, [r0, #17]
 4e0:	05d07010 	ldrbeq	r7, [r0, #16]
 4e4:	e5906014 	ldr	r6, [r0, #20]
 4e8:	e1a050a5 	lsr	r5, r5, #1
 4ec:	e7c67001 	strb	r7, [r6, r1]
 4f0:	e2811001 	add	r1, r1, #1
 4f4:	e1510004 	cmp	r1, r4
 4f8:	1afffff6 	bne	4d8 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x3b4>
 4fc:	e3a01080 	mov	r1, #128	; 0x80
 500:	e28ce011 	add	lr, ip, #17
 504:	e1120001 	tst	r2, r1
 508:	15d06011 	ldrbne	r6, [r0, #17]
 50c:	05d06010 	ldrbeq	r6, [r0, #16]
 510:	e5905014 	ldr	r5, [r0, #20]
 514:	e1a010a1 	lsr	r1, r1, #1
 518:	e7c56004 	strb	r6, [r5, r4]
 51c:	e2844001 	add	r4, r4, #1
 520:	e154000e 	cmp	r4, lr
 524:	1afffff6 	bne	504 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x3e0>
 528:	e3a02080 	mov	r2, #128	; 0x80
 52c:	e28cc019 	add	ip, ip, #25
 530:	e1130002 	tst	r3, r2
 534:	15d01011 	ldrbne	r1, [r0, #17]
 538:	05d01010 	ldrbeq	r1, [r0, #16]
 53c:	e5904014 	ldr	r4, [r0, #20]
 540:	e1a020a2 	lsr	r2, r2, #1
 544:	e7c4100e 	strb	r1, [r4, lr]
 548:	e28ee001 	add	lr, lr, #1
 54c:	e15e000c 	cmp	lr, ip
 550:	1afffff6 	bne	530 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x40c>
 554:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 558:	e28c4009 	add	r4, ip, #9
 55c:	e1120005 	tst	r2, r5
 560:	15d07011 	ldrbne	r7, [r0, #17]
 564:	05d07010 	ldrbeq	r7, [r0, #16]
 568:	e5906014 	ldr	r6, [r0, #20]
 56c:	e1a050a5 	lsr	r5, r5, #1
 570:	e7c67001 	strb	r7, [r6, r1]
 574:	e2811001 	add	r1, r1, #1
 578:	e1540001 	cmp	r4, r1
 57c:	1afffff6 	bne	55c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x438>
 580:	e3a01080 	mov	r1, #128	; 0x80
 584:	e28c2011 	add	r2, ip, #17
 588:	e1130001 	tst	r3, r1
 58c:	15d06011 	ldrbne	r6, [r0, #17]
 590:	05d06010 	ldrbeq	r6, [r0, #16]
 594:	e5905014 	ldr	r5, [r0, #20]
 598:	e1a010a1 	lsr	r1, r1, #1
 59c:	e7c56004 	strb	r6, [r5, r4]
 5a0:	e2844001 	add	r4, r4, #1
 5a4:	e1520004 	cmp	r2, r4
 5a8:	1afffff6 	bne	588 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x464>
 5ac:	e3a03080 	mov	r3, #128	; 0x80
 5b0:	e28cc019 	add	ip, ip, #25
 5b4:	e11e0003 	tst	lr, r3
 5b8:	15d04011 	ldrbne	r4, [r0, #17]
 5bc:	05d04010 	ldrbeq	r4, [r0, #16]
 5c0:	e5901014 	ldr	r1, [r0, #20]
 5c4:	e1a030a3 	lsr	r3, r3, #1
 5c8:	e7c14002 	strb	r4, [r1, r2]
 5cc:	e2822001 	add	r2, r2, #1
 5d0:	e15c0002 	cmp	ip, r2
 5d4:	1afffff6 	bne	5b4 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x490>
 5d8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

000005dc <WS28xx::SetupBuffers()>:
 5dc:	e92d4070 	push	{r4, r5, r6, lr}
 5e0:	e1a05000 	mov	r5, r0
 5e4:	e24dd008 	sub	sp, sp, #8
 5e8:	e590000c 	ldr	r0, [r0, #12]
 5ec:	ebfffffe 	bl	0 <operator new[](unsigned int)>
 5f0:	e1a03000 	mov	r3, r0
 5f4:	e595000c 	ldr	r0, [r5, #12]
 5f8:	e5853014 	str	r3, [r5, #20]
 5fc:	ebfffffe 	bl	0 <operator new[](unsigned int)>
 600:	e5953000 	ldr	r3, [r5]
 604:	e5850018 	str	r0, [r5, #24]
 608:	e243300b 	sub	r3, r3, #11
 60c:	e3530002 	cmp	r3, #2
 610:	8a00002f 	bhi	6d4 <WS28xx::SetupBuffers()+0xf8>
 614:	e3a04000 	mov	r4, #0
 618:	e5953014 	ldr	r3, [r5, #20]
 61c:	e5c34000 	strb	r4, [r3]
 620:	e5c34001 	strb	r4, [r3, #1]
 624:	e5c34002 	strb	r4, [r3, #2]
 628:	e5c34003 	strb	r4, [r3, #3]
 62c:	e5953004 	ldr	r3, [r5, #4]
 630:	e1530004 	cmp	r3, r4
 634:	11a01004 	movne	r1, r4
 638:	11a06004 	movne	r6, r4
 63c:	0a00000a 	beq	66c <WS28xx::SetupBuffers()+0x90>
 640:	e3a03000 	mov	r3, #0
 644:	e1a00005 	mov	r0, r5
 648:	e1a02003 	mov	r2, r3
 64c:	e58d6000 	str	r6, [sp]
 650:	ebfffffe 	bl	124 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 654:	e2844001 	add	r4, r4, #1
 658:	e5953004 	ldr	r3, [r5, #4]
 65c:	e6ff4074 	uxth	r4, r4
 660:	e1540003 	cmp	r4, r3
 664:	e1a01004 	mov	r1, r4
 668:	3afffff4 	bcc	640 <WS28xx::SetupBuffers()+0x64>
 66c:	e5952000 	ldr	r2, [r5]
 670:	e595300c 	ldr	r3, [r5, #12]
 674:	e242200b 	sub	r2, r2, #11
 678:	e5951014 	ldr	r1, [r5, #20]
 67c:	e2433004 	sub	r3, r3, #4
 680:	e3520001 	cmp	r2, #1
 684:	e0812003 	add	r2, r1, r3
 688:	9a00004d 	bls	7c4 <WS28xx::SetupBuffers()+0x1e8>
 68c:	e3a00000 	mov	r0, #0
 690:	e7c10003 	strb	r0, [r1, r3]
 694:	e5c20001 	strb	r0, [r2, #1]
 698:	e5c20002 	strb	r0, [r2, #2]
 69c:	e5c20003 	strb	r0, [r2, #3]
 6a0:	e595000c 	ldr	r0, [r5, #12]
 6a4:	e5952018 	ldr	r2, [r5, #24]
 6a8:	e3500000 	cmp	r0, #0
 6ac:	e5953014 	ldr	r3, [r5, #20]
 6b0:	0a000005 	beq	6cc <WS28xx::SetupBuffers()+0xf0>
 6b4:	e2422001 	sub	r2, r2, #1
 6b8:	e0830000 	add	r0, r3, r0
 6bc:	e4d31001 	ldrb	r1, [r3], #1
 6c0:	e1530000 	cmp	r3, r0
 6c4:	e5e21001 	strb	r1, [r2, #1]!
 6c8:	1afffffb 	bne	6bc <WS28xx::SetupBuffers()+0xe0>
 6cc:	e28dd008 	add	sp, sp, #8
 6d0:	e8bd8070 	pop	{r4, r5, r6, pc}
 6d4:	e3a02000 	mov	r2, #0
 6d8:	e5953014 	ldr	r3, [r5, #20]
 6dc:	e5c32000 	strb	r2, [r3]
 6e0:	e5952000 	ldr	r2, [r5]
 6e4:	e595100c 	ldr	r1, [r5, #12]
 6e8:	e3520000 	cmp	r2, #0
 6ec:	e5950014 	ldr	r0, [r5, #20]
 6f0:	15d52010 	ldrbne	r2, [r5, #16]
 6f4:	e3510000 	cmp	r1, #0
 6f8:	e2803001 	add	r3, r0, #1
 6fc:	e2411001 	sub	r1, r1, #1
 700:	0afffff1 	beq	6cc <WS28xx::SetupBuffers()+0xf0>
 704:	e351001f 	cmp	r1, #31
 708:	e6ef2072 	uxtb	r2, r2
 70c:	9a000026 	bls	7ac <WS28xx::SetupBuffers()+0x1d0>
 710:	e2800021 	add	r0, r0, #33	; 0x21
 714:	e2411020 	sub	r1, r1, #32
 718:	e351001f 	cmp	r1, #31
 71c:	f5d0f008 	pld	[r0, #8]
 720:	e5402020 	strb	r2, [r0, #-32]	; 0xffffffe0
 724:	e540201f 	strb	r2, [r0, #-31]	; 0xffffffe1
 728:	e540201e 	strb	r2, [r0, #-30]	; 0xffffffe2
 72c:	e540201d 	strb	r2, [r0, #-29]	; 0xffffffe3
 730:	e540201c 	strb	r2, [r0, #-28]	; 0xffffffe4
 734:	e540201b 	strb	r2, [r0, #-27]	; 0xffffffe5
 738:	e540201a 	strb	r2, [r0, #-26]	; 0xffffffe6
 73c:	e5402019 	strb	r2, [r0, #-25]	; 0xffffffe7
 740:	e5402018 	strb	r2, [r0, #-24]	; 0xffffffe8
 744:	e5402017 	strb	r2, [r0, #-23]	; 0xffffffe9
 748:	e5402016 	strb	r2, [r0, #-22]	; 0xffffffea
 74c:	e5402015 	strb	r2, [r0, #-21]	; 0xffffffeb
 750:	e5402014 	strb	r2, [r0, #-20]	; 0xffffffec
 754:	e5402013 	strb	r2, [r0, #-19]	; 0xffffffed
 758:	e5402012 	strb	r2, [r0, #-18]	; 0xffffffee
 75c:	e5402011 	strb	r2, [r0, #-17]	; 0xffffffef
 760:	e5402010 	strb	r2, [r0, #-16]
 764:	e540200f 	strb	r2, [r0, #-15]
 768:	e540200e 	strb	r2, [r0, #-14]
 76c:	e540200d 	strb	r2, [r0, #-13]
 770:	e540200c 	strb	r2, [r0, #-12]
 774:	e540200b 	strb	r2, [r0, #-11]
 778:	e540200a 	strb	r2, [r0, #-10]
 77c:	e5402009 	strb	r2, [r0, #-9]
 780:	e5402008 	strb	r2, [r0, #-8]
 784:	e5402007 	strb	r2, [r0, #-7]
 788:	e5402006 	strb	r2, [r0, #-6]
 78c:	e5402005 	strb	r2, [r0, #-5]
 790:	e5402004 	strb	r2, [r0, #-4]
 794:	e5402003 	strb	r2, [r0, #-3]
 798:	e5402002 	strb	r2, [r0, #-2]
 79c:	e1a03000 	mov	r3, r0
 7a0:	e5402001 	strb	r2, [r0, #-1]
 7a4:	e2800020 	add	r0, r0, #32
 7a8:	8affffd9 	bhi	714 <WS28xx::SetupBuffers()+0x138>
 7ac:	e2811001 	add	r1, r1, #1
 7b0:	e0831001 	add	r1, r3, r1
 7b4:	e4c32001 	strb	r2, [r3], #1
 7b8:	e1530001 	cmp	r3, r1
 7bc:	1afffffc 	bne	7b4 <WS28xx::SetupBuffers()+0x1d8>
 7c0:	eaffffb6 	b	6a0 <WS28xx::SetupBuffers()+0xc4>
 7c4:	e3e00000 	mvn	r0, #0
 7c8:	e7c10003 	strb	r0, [r1, r3]
 7cc:	e5c20001 	strb	r0, [r2, #1]
 7d0:	e5c20002 	strb	r0, [r2, #2]
 7d4:	e5c20003 	strb	r0, [r2, #3]
 7d8:	eaffffb0 	b	6a0 <WS28xx::SetupBuffers()+0xc4>

000007dc <WS28xx::WS28xx(PixelConfiguration&)>:
 7dc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 7e0:	e3a0c003 	mov	ip, #3
 7e4:	e1a05001 	mov	r5, r1
 7e8:	e3a03000 	mov	r3, #0
 7ec:	e3a020aa 	mov	r2, #170	; 0xaa
 7f0:	e3a07006 	mov	r7, #6
 7f4:	e3a06cff 	mov	r6, #65280	; 0xff00
 7f8:	e1a04000 	mov	r4, r0
 7fc:	e59fe0c8 	ldr	lr, [pc, #200]	; 8cc <WS28xx::WS28xx(PixelConfiguration&)+0xf0>
 800:	e24dd00c 	sub	sp, sp, #12
 804:	e58e0000 	str	r0, [lr]
 808:	e580c000 	str	ip, [r0]
 80c:	e28d1004 	add	r1, sp, #4
 810:	e5802004 	str	r2, [r0, #4]
 814:	e5803014 	str	r3, [r0, #20]
 818:	e5803018 	str	r3, [r0, #24]
 81c:	e5807008 	str	r7, [r0, #8]
 820:	e1c061b2 	strh	r6, [r0, #18]
 824:	e1a00005 	mov	r0, r5
 828:	ebfffffe 	bl	0 <PixelConfiguration::Validate(unsigned int&)>
 82c:	e1a00005 	mov	r0, r5
 830:	ebfffffe 	bl	0 <PixelConfiguration::Dump()>
 834:	e5d53013 	ldrb	r3, [r5, #19]
 838:	e5951004 	ldr	r1, [r5, #4]
 83c:	e3530000 	cmp	r3, #0
 840:	e5c43012 	strb	r3, [r4, #18]
 844:	e5d53012 	ldrb	r3, [r5, #18]
 848:	e5952000 	ldr	r2, [r5]
 84c:	e5c43013 	strb	r3, [r4, #19]
 850:	e59d3004 	ldr	r3, [sp, #4]
 854:	e5842000 	str	r2, [r4]
 858:	e0030193 	mul	r3, r3, r1
 85c:	11a03183 	lslne	r3, r3, #3
 860:	12833001 	addne	r3, r3, #1
 864:	e242200b 	sub	r2, r2, #11
 868:	e3520002 	cmp	r2, #2
 86c:	e584300c 	str	r3, [r4, #12]
 870:	e5950008 	ldr	r0, [r5, #8]
 874:	9594300c 	ldrls	r3, [r4, #12]
 878:	e5841004 	str	r1, [r4, #4]
 87c:	e5840008 	str	r0, [r4, #8]
 880:	92811008 	addls	r1, r1, #8
 884:	e1d501b0 	ldrh	r0, [r5, #16]
 888:	90831001 	addls	r1, r3, r1
 88c:	9584100c 	strls	r1, [r4, #12]
 890:	e1c401b0 	strh	r0, [r4, #16]
 894:	ebfffffe 	bl	0 <bcm2835_spi_begin>
 898:	e595100c 	ldr	r1, [r5, #12]
 89c:	e59f002c 	ldr	r0, [pc, #44]	; 8d0 <WS28xx::WS28xx(PixelConfiguration&)+0xf4>
 8a0:	ebfffffe 	bl	0 <__aeabi_uidiv>
 8a4:	e1a01000 	mov	r1, r0
 8a8:	e59f3024 	ldr	r3, [pc, #36]	; 8d4 <WS28xx::WS28xx(PixelConfiguration&)+0xf8>
 8ac:	e59f2024 	ldr	r2, [pc, #36]	; 8d8 <WS28xx::WS28xx(PixelConfiguration&)+0xfc>
 8b0:	e0033001 	and	r3, r3, r1
 8b4:	e1a00004 	mov	r0, r4
 8b8:	e5823008 	str	r3, [r2, #8]
 8bc:	ebfffffe 	bl	5dc <WS28xx::SetupBuffers()>
 8c0:	e1a00004 	mov	r0, r4
 8c4:	e28dd00c 	add	sp, sp, #12
 8c8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 8cc:	00000000 	andeq	r0, r0, r0
 8d0:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
 8d4:	0000fffe 	strdeq	pc, [r0], -lr
 8d8:	20204000 	eorcs	r4, r0, r0

000008dc <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 8dc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 8e0:	e590c000 	ldr	ip, [r0]
 8e4:	e5dd6018 	ldrb	r6, [sp, #24]
 8e8:	e35c0007 	cmp	ip, #7
 8ec:	e5dd501c 	ldrb	r5, [sp, #28]
 8f0:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
 8f4:	e3a04080 	mov	r4, #128	; 0x80
 8f8:	e1a0e281 	lsl	lr, r1, #5
 8fc:	e28e1001 	add	r1, lr, #1
 900:	e28ec009 	add	ip, lr, #9
 904:	e1130004 	tst	r3, r4
 908:	15d08011 	ldrbne	r8, [r0, #17]
 90c:	05d08010 	ldrbeq	r8, [r0, #16]
 910:	e5907014 	ldr	r7, [r0, #20]
 914:	e1a040a4 	lsr	r4, r4, #1
 918:	e7c78001 	strb	r8, [r7, r1]
 91c:	e2811001 	add	r1, r1, #1
 920:	e15c0001 	cmp	ip, r1
 924:	1afffff6 	bne	904 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x28>
 928:	e3a03080 	mov	r3, #128	; 0x80
 92c:	e28e1011 	add	r1, lr, #17
 930:	e1120003 	tst	r2, r3
 934:	15d07011 	ldrbne	r7, [r0, #17]
 938:	05d07010 	ldrbeq	r7, [r0, #16]
 93c:	e5904014 	ldr	r4, [r0, #20]
 940:	e1a030a3 	lsr	r3, r3, #1
 944:	e7c4700c 	strb	r7, [r4, ip]
 948:	e28cc001 	add	ip, ip, #1
 94c:	e151000c 	cmp	r1, ip
 950:	1afffff6 	bne	930 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x54>
 954:	e3a02080 	mov	r2, #128	; 0x80
 958:	e28e3019 	add	r3, lr, #25
 95c:	e1160002 	tst	r6, r2
 960:	15d04011 	ldrbne	r4, [r0, #17]
 964:	05d04010 	ldrbeq	r4, [r0, #16]
 968:	e590c014 	ldr	ip, [r0, #20]
 96c:	e1a020a2 	lsr	r2, r2, #1
 970:	e7cc4001 	strb	r4, [ip, r1]
 974:	e2811001 	add	r1, r1, #1
 978:	e1530001 	cmp	r3, r1
 97c:	1afffff6 	bne	95c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x80>
 980:	e3a02080 	mov	r2, #128	; 0x80
 984:	e28ee021 	add	lr, lr, #33	; 0x21
 988:	e1150002 	tst	r5, r2
 98c:	15d01011 	ldrbne	r1, [r0, #17]
 990:	05d01010 	ldrbeq	r1, [r0, #16]
 994:	e590c014 	ldr	ip, [r0, #20]
 998:	e1a020a2 	lsr	r2, r2, #1
 99c:	e7cc1003 	strb	r1, [ip, r3]
 9a0:	e2833001 	add	r3, r3, #1
 9a4:	e15e0003 	cmp	lr, r3
 9a8:	1afffff6 	bne	988 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0xac>
 9ac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000009b0 <WS28xx::SetColorWS28xx(unsigned int, unsigned char)>:
 9b0:	e3a0c080 	mov	ip, #128	; 0x80
 9b4:	e92d4010 	push	{r4, lr}
 9b8:	e2813001 	add	r3, r1, #1
 9bc:	e281e009 	add	lr, r1, #9
 9c0:	e112000c 	tst	r2, ip
 9c4:	15d04011 	ldrbne	r4, [r0, #17]
 9c8:	05d04010 	ldrbeq	r4, [r0, #16]
 9cc:	e5901014 	ldr	r1, [r0, #20]
 9d0:	e1a0c0ac 	lsr	ip, ip, #1
 9d4:	e7c14003 	strb	r4, [r1, r3]
 9d8:	e2833001 	add	r3, r3, #1
 9dc:	e15e0003 	cmp	lr, r3
 9e0:	1afffff6 	bne	9c0 <WS28xx::SetColorWS28xx(unsigned int, unsigned char)+0x10>
 9e4:	e8bd8010 	pop	{r4, pc}

Disassembly of section .bss:

00000000 <WS28xx::s_pThis>:
   0:	00000000 	andeq	r0, r0, r0

Disassembly of section .rodata.str1.4:

00000000 <.rodata.str1.4>:
   0:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
   4:	6170206c 	cmnvs	r0, ip, rrx
   8:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
   c:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
  10:	0000000a 	andeq	r0, r0, sl
  14:	70795420 	rsbsvc	r5, r9, r0, lsr #8
  18:	20202065 	eorcs	r2, r0, r5, rrx
  1c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
  20:	255b2073 	ldrbcs	r2, [fp, #-115]	; 0xffffff8d
  24:	000a5d64 	andeq	r5, sl, r4, ror #26
  28:	756f4320 	strbvc	r4, [pc, #-800]!	; fffffd10 <WS28xx::SetColorWS28xx(unsigned int, unsigned char)+0xfffff360>
  2c:	2020746e 	eorcs	r7, r0, lr, ror #8
  30:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
  34:	00000a64 	andeq	r0, r0, r4, ror #20
  38:	70614d20 	rsbvc	r4, r1, r0, lsr #26
  3c:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
  40:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
  44:	255b2073 	ldrbcs	r2, [fp, #-115]	; 0xffffff8d
  48:	000a5d64 	andeq	r5, sl, r4, ror #26
  4c:	48305420 	ldmdami	r0!, {r5, sl, ip, lr}
  50:	20202020 	eorcs	r2, r0, r0, lsr #32
  54:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
  58:	2066322e 	rsbcs	r3, r6, lr, lsr #4
  5c:	2578305b 	ldrbcs	r3, [r8, #-91]!	; 0xffffffa5
  60:	000a5d58 	andeq	r5, sl, r8, asr sp
  64:	48315420 	ldmdami	r1!, {r5, sl, ip, lr}
  68:	20202020 	eorcs	r2, r0, r0, lsr #32
  6c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
  70:	2066322e 	rsbcs	r3, r6, lr, lsr #4
  74:	2578305b 	ldrbcs	r3, [r8, #-91]!	; 0xffffffa5
  78:	000a5d58 	andeq	r5, sl, r8, asr sp

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <WS28xx::SetColorWS28xx(unsigned int, unsigned char)+0x168ce7c>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <WS28xx::SetColorWS28xx(unsigned int, unsigned char)+0x41a74>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


ws28xxmulti.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <WS28xxMulti::~WS28xxMulti()>:
   0:	e3a02000 	mov	r2, #0
   4:	e59f3004 	ldr	r3, [pc, #4]	; 10 <WS28xxMulti::~WS28xxMulti()+0x10>
   8:	e5832000 	str	r2, [r3]
   c:	e12fff1e 	bx	lr
  10:	00000000 	andeq	r0, r0, r0

00000014 <WS28xxMulti::Print()>:
  14:	e92d4010 	push	{r4, lr}
  18:	e1a04000 	mov	r4, r0
  1c:	e24dd010 	sub	sp, sp, #16
  20:	e59f0070 	ldr	r0, [pc, #112]	; 98 <WS28xxMulti::Print()+0x84>
  24:	ebfffffe 	bl	0 <printf>
  28:	e5940004 	ldr	r0, [r4, #4]
  2c:	ebfffffe 	bl	0 <PixelType::GetType(pixel::Type)>
  30:	e1a01000 	mov	r1, r0
  34:	e5942004 	ldr	r2, [r4, #4]
  38:	e594000c 	ldr	r0, [r4, #12]
  3c:	e58d200c 	str	r2, [sp, #12]
  40:	e58d1008 	str	r1, [sp, #8]
  44:	ebfffffe 	bl	0 <PixelType::GetMap(pixel::Map)>
  48:	e1a03000 	mov	r3, r0
  4c:	e594000c 	ldr	r0, [r4, #12]
  50:	e59d200c 	ldr	r2, [sp, #12]
  54:	e59d1008 	ldr	r1, [sp, #8]
  58:	e58d0000 	str	r0, [sp]
  5c:	e59f0038 	ldr	r0, [pc, #56]	; 9c <WS28xxMulti::Print()+0x88>
  60:	ebfffffe 	bl	0 <printf>
  64:	e5941008 	ldr	r1, [r4, #8]
  68:	e59f0030 	ldr	r0, [pc, #48]	; a0 <WS28xxMulti::Print()+0x8c>
  6c:	ebfffffe 	bl	0 <printf>
  70:	e5d41000 	ldrb	r1, [r4]
  74:	e59f2028 	ldr	r2, [pc, #40]	; a4 <WS28xxMulti::Print()+0x90>
  78:	e59f3028 	ldr	r3, [pc, #40]	; a8 <WS28xxMulti::Print()+0x94>
  7c:	e3510000 	cmp	r1, #0
  80:	11a01002 	movne	r1, r2
  84:	01a01003 	moveq	r1, r3
  88:	e59f001c 	ldr	r0, [pc, #28]	; ac <WS28xxMulti::Print()+0x98>
  8c:	e28dd010 	add	sp, sp, #16
  90:	e8bd4010 	pop	{r4, lr}
  94:	eafffffe 	b	0 <printf>
  98:	00000014 	andeq	r0, r0, r4, lsl r0
  9c:	00000028 	andeq	r0, r0, r8, lsr #32
  a0:	00000048 	andeq	r0, r0, r8, asr #32
  a4:	00000000 	andeq	r0, r0, r0
  a8:	00000008 	andeq	r0, r0, r8
  ac:	00000058 	andeq	r0, r0, r8, asr r0

000000b0 <WS28xxMulti::SetupHC595(unsigned char, unsigned char)>:
  b0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  b4:	e3a07080 	mov	r7, #128	; 0x80
  b8:	e59f6054 	ldr	r6, [pc, #84]	; 114 <WS28xxMulti::SetupHC595(unsigned char, unsigned char)+0x64>
  bc:	e1a04002 	mov	r4, r2
  c0:	e3a00007 	mov	r0, #7
  c4:	e1a05001 	mov	r5, r1
  c8:	e3a01001 	mov	r1, #1
  cc:	ebfffffe 	bl	0 <bcm2835_gpio_fsel>
  d0:	e586701c 	str	r7, [r6, #28]
  d4:	ebfffffe 	bl	0 <bcm2835_spi_begin>
  d8:	e3a010fa 	mov	r1, #250	; 0xfa
  dc:	e59f3034 	ldr	r3, [pc, #52]	; 118 <WS28xxMulti::SetupHC595(unsigned char, unsigned char)+0x68>
  e0:	e1a04484 	lsl	r4, r4, #9
  e4:	e5932000 	ldr	r2, [r3]
  e8:	e1a00085 	lsl	r0, r5, #1
  ec:	e3822003 	orr	r2, r2, #3
  f0:	e2044cfe 	and	r4, r4, #65024	; 0xfe00
  f4:	e6ef0070 	uxtb	r0, r0
  f8:	e5832000 	str	r2, [r3]
  fc:	e1800004 	orr	r0, r0, r4
 100:	e5831008 	str	r1, [r3, #8]
 104:	e5867028 	str	r7, [r6, #40]	; 0x28
 108:	ebfffffe 	bl	0 <bcm2835_spi_write>
 10c:	e586701c 	str	r7, [r6, #28]
 110:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
 114:	20200000 	eorcs	r0, r0, r0
 118:	20204000 	eorcs	r4, r0, r0

0000011c <WS28xxMulti::SetupSPI(unsigned int)>:
 11c:	e92d4010 	push	{r4, lr}
 120:	e59f4034 	ldr	r4, [pc, #52]	; 15c <WS28xxMulti::SetupSPI(unsigned int)+0x40>
 124:	e24dd008 	sub	sp, sp, #8
 128:	e58d1004 	str	r1, [sp, #4]
 12c:	ebfffffe 	bl	0 <bcm2835_spi_begin>
 130:	e5943000 	ldr	r3, [r4]
 134:	e59d1004 	ldr	r1, [sp, #4]
 138:	e3c33003 	bic	r3, r3, #3
 13c:	e5843000 	str	r3, [r4]
 140:	e59f0018 	ldr	r0, [pc, #24]	; 160 <WS28xxMulti::SetupSPI(unsigned int)+0x44>
 144:	ebfffffe 	bl	0 <__aeabi_uidiv>
 148:	e59f3014 	ldr	r3, [pc, #20]	; 164 <WS28xxMulti::SetupSPI(unsigned int)+0x48>
 14c:	e0033000 	and	r3, r3, r0
 150:	e5843008 	str	r3, [r4, #8]
 154:	e28dd008 	add	sp, sp, #8
 158:	e8bd8010 	pop	{r4, pc}
 15c:	20204000 	eorcs	r4, r0, r0
 160:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
 164:	0000fffe 	strdeq	pc, [r0], -lr

00000168 <WS28xxMulti::SetupCPLD()>:
 168:	e92d4030 	push	{r4, r5, lr}
 16c:	e24dd034 	sub	sp, sp, #52	; 0x34
 170:	e1a05000 	mov	r5, r0
 174:	ebfffffe 	bl	0 <getPIXEL8X4_SIZE>
 178:	e59f30cc 	ldr	r3, [pc, #204]	; 24c <WS28xxMulti::SetupCPLD()+0xe4>
 17c:	e3e02000 	mvn	r2, #0
 180:	e58d3004 	str	r3, [sp, #4]
 184:	e3a03000 	mov	r3, #0
 188:	e3a04001 	mov	r4, #1
 18c:	e58d2018 	str	r2, [sp, #24]
 190:	e1cd30bc 	strh	r3, [sp, #12]
 194:	e3a02002 	mov	r2, #2
 198:	e58d302c 	str	r3, [sp, #44]	; 0x2c
 19c:	e3a03018 	mov	r3, #24
 1a0:	e1a01004 	mov	r1, r4
 1a4:	e58d0008 	str	r0, [sp, #8]
 1a8:	e28d0004 	add	r0, sp, #4
 1ac:	e1cd21fc 	strd	r2, [sp, #28]
 1b0:	e58d4010 	str	r4, [sp, #16]
 1b4:	ebfffffe 	bl	0 <JamSTAPL::PlatformInit(bool)>
 1b8:	e5953020 	ldr	r3, [r5, #32]
 1bc:	e28d0004 	add	r0, sp, #4
 1c0:	e58d302c 	str	r3, [sp, #44]	; 0x2c
 1c4:	ebfffffe 	bl	0 <JamSTAPL::PrintInfo()>
 1c8:	e2501000 	subs	r1, r0, #0
 1cc:	0a000002 	beq	1dc <WS28xxMulti::SetupCPLD()+0x74>
 1d0:	e3a00000 	mov	r0, #0
 1d4:	e28dd034 	add	sp, sp, #52	; 0x34
 1d8:	e8bd8030 	pop	{r4, r5, pc}
 1dc:	e28d0004 	add	r0, sp, #4
 1e0:	ebfffffe 	bl	0 <JamSTAPL::CheckCRC(bool)>
 1e4:	e3500000 	cmp	r0, #0
 1e8:	1afffff8 	bne	1d0 <WS28xxMulti::SetupCPLD()+0x68>
 1ec:	e59f305c 	ldr	r3, [pc, #92]	; 250 <WS28xxMulti::SetupCPLD()+0xe8>
 1f0:	e1dd20bc 	ldrh	r2, [sp, #12]
 1f4:	e1520003 	cmp	r2, r3
 1f8:	1afffff4 	bne	1d0 <WS28xxMulti::SetupCPLD()+0x68>
 1fc:	e28d0004 	add	r0, sp, #4
 200:	ebfffffe 	bl	0 <JamSTAPL::CheckIdCode()>
 204:	e59d3018 	ldr	r3, [sp, #24]
 208:	e3530000 	cmp	r3, #0
 20c:	1affffef 	bne	1d0 <WS28xxMulti::SetupCPLD()+0x68>
 210:	e28d0004 	add	r0, sp, #4
 214:	ebfffffe 	bl	0 <JamSTAPL::ReadUsercode()>
 218:	e59d3018 	ldr	r3, [sp, #24]
 21c:	e3530000 	cmp	r3, #0
 220:	1a000007 	bne	244 <WS28xxMulti::SetupCPLD()+0xdc>
 224:	e59f3028 	ldr	r3, [pc, #40]	; 254 <WS28xxMulti::SetupCPLD()+0xec>
 228:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
 22c:	e1520003 	cmp	r2, r3
 230:	0a000003 	beq	244 <WS28xxMulti::SetupCPLD()+0xdc>
 234:	e28d0004 	add	r0, sp, #4
 238:	ebfffffe 	bl	0 <JamSTAPL::Program()>
 23c:	e1a00004 	mov	r0, r4
 240:	eaffffe3 	b	1d4 <WS28xxMulti::SetupCPLD()+0x6c>
 244:	e1a00004 	mov	r0, r4
 248:	eaffffe1 	b	1d4 <WS28xxMulti::SetupCPLD()+0x6c>
 24c:	00000000 	andeq	r0, r0, r0
 250:	00001d3c 	andeq	r1, r0, ip, lsr sp
 254:	0018ad81 	andseq	sl, r8, r1, lsl #27

00000258 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>:
 258:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 25c:	e3a0c003 	mov	ip, #3
 260:	e1a05001 	mov	r5, r1
 264:	e3a03000 	mov	r3, #0
 268:	e3a020aa 	mov	r2, #170	; 0xaa
 26c:	e3a07006 	mov	r7, #6
 270:	e3e060fe 	mvn	r6, #254	; 0xfe
 274:	e1a04000 	mov	r4, r0
 278:	e59fe1dc 	ldr	lr, [pc, #476]	; 45c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x204>
 27c:	e24dd010 	sub	sp, sp, #16
 280:	e58e0000 	str	r0, [lr]
 284:	e580c004 	str	ip, [r0, #4]
 288:	e5c03000 	strb	r3, [r0]
 28c:	e5802008 	str	r2, [r0, #8]
 290:	e5803014 	str	r3, [r0, #20]
 294:	e5803018 	str	r3, [r0, #24]
 298:	e580301c 	str	r3, [r0, #28]
 29c:	e5803020 	str	r3, [r0, #32]
 2a0:	e28d100c 	add	r1, sp, #12
 2a4:	e580700c 	str	r7, [r0, #12]
 2a8:	e1c061b0 	strh	r6, [r0, #16]
 2ac:	e1a00005 	mov	r0, r5
 2b0:	ebfffffe 	bl	0 <PixelConfiguration::Validate(unsigned int&)>
 2b4:	e1a00005 	mov	r0, r5
 2b8:	ebfffffe 	bl	0 <PixelConfiguration::Dump()>
 2bc:	e5953000 	ldr	r3, [r5]
 2c0:	e5952004 	ldr	r2, [r5, #4]
 2c4:	e5843004 	str	r3, [r4, #4]
 2c8:	e243300b 	sub	r3, r3, #11
 2cc:	e3530002 	cmp	r3, #2
 2d0:	e5d53012 	ldrb	r3, [r5, #18]
 2d4:	e5951008 	ldr	r1, [r5, #8]
 2d8:	e5c43011 	strb	r3, [r4, #17]
 2dc:	e59d300c 	ldr	r3, [sp, #12]
 2e0:	e5842008 	str	r2, [r4, #8]
 2e4:	e0030293 	mul	r3, r3, r2
 2e8:	e584100c 	str	r1, [r4, #12]
 2ec:	92822008 	addls	r2, r2, #8
 2f0:	e5d51013 	ldrb	r1, [r5, #19]
 2f4:	90833002 	addls	r3, r3, r2
 2f8:	e1a03183 	lsl	r3, r3, #3
 2fc:	e5c41010 	strb	r1, [r4, #16]
 300:	e5d51010 	ldrb	r1, [r5, #16]
 304:	e5843014 	str	r3, [r4, #20]
 308:	e1a00004 	mov	r0, r4
 30c:	e5d56011 	ldrb	r6, [r5, #17]
 310:	e58d1004 	str	r1, [sp, #4]
 314:	ebfffffe 	bl	168 <WS28xxMulti::SetupCPLD()>
 318:	e1a03000 	mov	r3, r0
 31c:	e59d1004 	ldr	r1, [sp, #4]
 320:	e5c43000 	strb	r3, [r4]
 324:	e1a00004 	mov	r0, r4
 328:	ebfffffe 	bl	0 <WS28xxMulti::ReverseBits(unsigned char)>
 32c:	e1a01006 	mov	r1, r6
 330:	e1a07000 	mov	r7, r0
 334:	e1a00004 	mov	r0, r4
 338:	ebfffffe 	bl	0 <WS28xxMulti::ReverseBits(unsigned char)>
 33c:	e3a0a080 	mov	sl, #128	; 0x80
 340:	e59f9118 	ldr	r9, [pc, #280]	; 460 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x208>
 344:	e3a01001 	mov	r1, #1
 348:	e1a06000 	mov	r6, r0
 34c:	e3a00007 	mov	r0, #7
 350:	ebfffffe 	bl	0 <bcm2835_gpio_fsel>
 354:	e589a01c 	str	sl, [r9, #28]
 358:	ebfffffe 	bl	0 <bcm2835_spi_begin>
 35c:	e3a020fa 	mov	r2, #250	; 0xfa
 360:	e59f80fc 	ldr	r8, [pc, #252]	; 464 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x20c>
 364:	e1a07087 	lsl	r7, r7, #1
 368:	e5983000 	ldr	r3, [r8]
 36c:	e1a00486 	lsl	r0, r6, #9
 370:	e3833003 	orr	r3, r3, #3
 374:	e6ef7077 	uxtb	r7, r7
 378:	e2000cfe 	and	r0, r0, #65024	; 0xfe00
 37c:	e5883000 	str	r3, [r8]
 380:	e1870000 	orr	r0, r7, r0
 384:	e5882008 	str	r2, [r8, #8]
 388:	e589a028 	str	sl, [r9, #40]	; 0x28
 38c:	ebfffffe 	bl	0 <bcm2835_spi_write>
 390:	e5d53013 	ldrb	r3, [r5, #19]
 394:	e589a01c 	str	sl, [r9, #28]
 398:	e3530000 	cmp	r3, #0
 39c:	1a000021 	bne	428 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x1d0>
 3a0:	e5d43000 	ldrb	r3, [r4]
 3a4:	e595500c 	ldr	r5, [r5, #12]
 3a8:	e3530000 	cmp	r3, #0
 3ac:	1a000011 	bne	3f8 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x1a0>
 3b0:	ebfffffe 	bl	0 <bcm2835_spi_begin>
 3b4:	e5983000 	ldr	r3, [r8]
 3b8:	e59f00a8 	ldr	r0, [pc, #168]	; 468 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x210>
 3bc:	e3c33003 	bic	r3, r3, #3
 3c0:	e5883000 	str	r3, [r8]
 3c4:	e1a01105 	lsl	r1, r5, #2
 3c8:	ebfffffe 	bl	0 <__aeabi_uidiv>
 3cc:	e59f3098 	ldr	r3, [pc, #152]	; 46c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x214>
 3d0:	e0033000 	and	r3, r3, r0
 3d4:	e5883008 	str	r3, [r8, #8]
 3d8:	e5943014 	ldr	r3, [r4, #20]
 3dc:	e1a00004 	mov	r0, r4
 3e0:	e2833001 	add	r3, r3, #1
 3e4:	e5843014 	str	r3, [r4, #20]
 3e8:	ebfffffe 	bl	0 <WS28xxMulti::SetupBuffers()>
 3ec:	e1a00004 	mov	r0, r4
 3f0:	e28dd010 	add	sp, sp, #16
 3f4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 3f8:	ebfffffe 	bl	0 <bcm2835_spi_begin>
 3fc:	e5983000 	ldr	r3, [r8]
 400:	e0855085 	add	r5, r5, r5, lsl #1
 404:	e3c33003 	bic	r3, r3, #3
 408:	e5883000 	str	r3, [r8]
 40c:	e59f0054 	ldr	r0, [pc, #84]	; 468 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x210>
 410:	e1a01085 	lsl	r1, r5, #1
 414:	ebfffffe 	bl	0 <__aeabi_uidiv>
 418:	e59f304c 	ldr	r3, [pc, #76]	; 46c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x214>
 41c:	e0033000 	and	r3, r3, r0
 420:	e5883008 	str	r3, [r8, #8]
 424:	eaffffeb 	b	3d8 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x180>
 428:	e595100c 	ldr	r1, [r5, #12]
 42c:	e58d1004 	str	r1, [sp, #4]
 430:	ebfffffe 	bl	0 <bcm2835_spi_begin>
 434:	e5983000 	ldr	r3, [r8]
 438:	e59d1004 	ldr	r1, [sp, #4]
 43c:	e3c33003 	bic	r3, r3, #3
 440:	e5883000 	str	r3, [r8]
 444:	e59f001c 	ldr	r0, [pc, #28]	; 468 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x210>
 448:	ebfffffe 	bl	0 <__aeabi_uidiv>
 44c:	e59f3018 	ldr	r3, [pc, #24]	; 46c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x214>
 450:	e0033000 	and	r3, r3, r0
 454:	e5883008 	str	r3, [r8, #8]
 458:	eaffffde 	b	3d8 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x180>
 45c:	00000000 	andeq	r0, r0, r0
 460:	20200000 	eorcs	r0, r0, r0
 464:	20204000 	eorcs	r4, r0, r0
 468:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
 46c:	0000fffe 	strdeq	pc, [r0], -lr

00000470 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 470:	e3a0c001 	mov	ip, #1
 474:	e1a0111c 	lsl	r1, ip, r1
 478:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
 47c:	e6efe071 	uxtb	lr, r1
 480:	e1e0400e 	mvn	r4, lr
 484:	e3a01080 	mov	r1, #128	; 0x80
 488:	e0822c12 	add	r2, r2, r2, lsl ip
 48c:	e1a02182 	lsl	r2, r2, #3
 490:	e5dd701c 	ldrb	r7, [sp, #28]
 494:	e5dd6020 	ldrb	r6, [sp, #32]
 498:	e2825008 	add	r5, r2, #8
 49c:	e6ef4074 	uxtb	r4, r4
 4a0:	e5908018 	ldr	r8, [r0, #24]
 4a4:	e1130001 	tst	r3, r1
 4a8:	e7d8c002 	ldrb	ip, [r8, r2]
 4ac:	118ec00c 	orrne	ip, lr, ip
 4b0:	000cc004 	andeq	ip, ip, r4
 4b4:	e7c8c002 	strb	ip, [r8, r2]
 4b8:	e5909018 	ldr	r9, [r0, #24]
 4bc:	e2828008 	add	r8, r2, #8
 4c0:	e7d9c008 	ldrb	ip, [r9, r8]
 4c4:	e1170001 	tst	r7, r1
 4c8:	118ec00c 	orrne	ip, lr, ip
 4cc:	000cc004 	andeq	ip, ip, r4
 4d0:	e7c9c008 	strb	ip, [r9, r8]
 4d4:	e5909018 	ldr	r9, [r0, #24]
 4d8:	e2828010 	add	r8, r2, #16
 4dc:	e7d9c008 	ldrb	ip, [r9, r8]
 4e0:	e1160001 	tst	r6, r1
 4e4:	e2822001 	add	r2, r2, #1
 4e8:	118ec00c 	orrne	ip, lr, ip
 4ec:	000cc004 	andeq	ip, ip, r4
 4f0:	e1520005 	cmp	r2, r5
 4f4:	e7c9c008 	strb	ip, [r9, r8]
 4f8:	e1a010a1 	lsr	r1, r1, #1
 4fc:	1affffe7 	bne	4a0 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x30>
 500:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

00000504 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 504:	e3a0c001 	mov	ip, #1
 508:	e1a0111c 	lsl	r1, ip, r1
 50c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 510:	e1a02282 	lsl	r2, r2, #5
 514:	e6ef5071 	uxtb	r5, r1
 518:	e1e06005 	mvn	r6, r5
 51c:	e282e008 	add	lr, r2, #8
 520:	e1a0900e 	mov	r9, lr
 524:	e3a01080 	mov	r1, #128	; 0x80
 528:	e5dda020 	ldrb	sl, [sp, #32]
 52c:	e5dd8024 	ldrb	r8, [sp, #36]	; 0x24
 530:	e5dd7028 	ldrb	r7, [sp, #40]	; 0x28
 534:	e6ef6076 	uxtb	r6, r6
 538:	e5904018 	ldr	r4, [r0, #24]
 53c:	e11a0001 	tst	sl, r1
 540:	e7d4c002 	ldrb	ip, [r4, r2]
 544:	1185c00c 	orrne	ip, r5, ip
 548:	000cc006 	andeq	ip, ip, r6
 54c:	e7c4c002 	strb	ip, [r4, r2]
 550:	e5904018 	ldr	r4, [r0, #24]
 554:	e1130001 	tst	r3, r1
 558:	e7d4c00e 	ldrb	ip, [r4, lr]
 55c:	1185c00c 	orrne	ip, r5, ip
 560:	000cc006 	andeq	ip, ip, r6
 564:	e7c4c00e 	strb	ip, [r4, lr]
 568:	e5904018 	ldr	r4, [r0, #24]
 56c:	e282e010 	add	lr, r2, #16
 570:	e7d4c00e 	ldrb	ip, [r4, lr]
 574:	e1180001 	tst	r8, r1
 578:	1185c00c 	orrne	ip, r5, ip
 57c:	000cc006 	andeq	ip, ip, r6
 580:	e7c4c00e 	strb	ip, [r4, lr]
 584:	e5904018 	ldr	r4, [r0, #24]
 588:	e282e018 	add	lr, r2, #24
 58c:	e7d4c00e 	ldrb	ip, [r4, lr]
 590:	e1170001 	tst	r7, r1
 594:	e2822001 	add	r2, r2, #1
 598:	1185c00c 	orrne	ip, r5, ip
 59c:	000cc006 	andeq	ip, ip, r6
 5a0:	e1520009 	cmp	r2, r9
 5a4:	e7c4c00e 	strb	ip, [r4, lr]
 5a8:	e1a010a1 	lsr	r1, r1, #1
 5ac:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 5b0:	e282e008 	add	lr, r2, #8
 5b4:	eaffffdf 	b	538 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x34>

000005b8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 5b8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 5bc:	e5d07010 	ldrb	r7, [r0, #16]
 5c0:	e24dd014 	sub	sp, sp, #20
 5c4:	e3570000 	cmp	r7, #0
 5c8:	e1a0c000 	mov	ip, r0
 5cc:	e1a06001 	mov	r6, r1
 5d0:	e1a04003 	mov	r4, r3
 5d4:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
 5d8:	e5dde02c 	ldrb	lr, [sp, #44]	; 0x2c
 5dc:	1a000014 	bne	634 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x7c>
 5e0:	e5907004 	ldr	r7, [r0, #4]
 5e4:	e3570000 	cmp	r7, #0
 5e8:	0a000011 	beq	634 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x7c>
 5ec:	e247700b 	sub	r7, r7, #11
 5f0:	e3570001 	cmp	r7, #1
 5f4:	9a00003d 	bls	6f0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x138>
 5f8:	e58de008 	str	lr, [sp, #8]
 5fc:	e1e0e12e 	mvn	lr, lr, lsr #2
 600:	e58d5004 	str	r5, [sp, #4]
 604:	e1e05225 	mvn	r5, r5, lsr #4
 608:	e22340c0 	eor	r4, r3, #192	; 0xc0
 60c:	e20ee030 	and	lr, lr, #48	; 0x30
 610:	e18ee324 	orr	lr, lr, r4, lsr #6
 614:	e205500c 	and	r5, r5, #12
 618:	e18ee005 	orr	lr, lr, r5
 61c:	e38ee0c0 	orr	lr, lr, #192	; 0xc0
 620:	e2822001 	add	r2, r2, #1
 624:	e58de000 	str	lr, [sp]
 628:	ebfffffe 	bl	504 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 62c:	e28dd014 	add	sp, sp, #20
 630:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 634:	e59c300c 	ldr	r3, [ip, #12]
 638:	e3530005 	cmp	r3, #5
 63c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
 640:	ea000022 	b	6d0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x118>
 644:	0000067c 	andeq	r0, r0, ip, ror r6
 648:	00000688 	andeq	r0, r0, r8, lsl #13
 64c:	000006d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 650:	000006a0 	andeq	r0, r0, r0, lsr #13
 654:	000006b8 			; <UNDEFINED> instruction: 0x000006b8
 658:	0000065c 	andeq	r0, r0, ip, asr r6
 65c:	e1a0300e 	mov	r3, lr
 660:	e58d402c 	str	r4, [sp, #44]	; 0x2c
 664:	e1a01006 	mov	r1, r6
 668:	e1a0000c 	mov	r0, ip
 66c:	e58d5028 	str	r5, [sp, #40]	; 0x28
 670:	e28dd014 	add	sp, sp, #20
 674:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
 678:	eafffffe 	b	470 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 67c:	e1a03004 	mov	r3, r4
 680:	e58de02c 	str	lr, [sp, #44]	; 0x2c
 684:	eafffff6 	b	664 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xac>
 688:	e1a03004 	mov	r3, r4
 68c:	e1a01006 	mov	r1, r6
 690:	e1a0000c 	mov	r0, ip
 694:	e58d502c 	str	r5, [sp, #44]	; 0x2c
 698:	e58de028 	str	lr, [sp, #40]	; 0x28
 69c:	eafffff3 	b	670 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb8>
 6a0:	e1a03005 	mov	r3, r5
 6a4:	e1a01006 	mov	r1, r6
 6a8:	e1a0000c 	mov	r0, ip
 6ac:	e58d402c 	str	r4, [sp, #44]	; 0x2c
 6b0:	e58de028 	str	lr, [sp, #40]	; 0x28
 6b4:	eaffffed 	b	670 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb8>
 6b8:	e1a0300e 	mov	r3, lr
 6bc:	e1a01006 	mov	r1, r6
 6c0:	e1a0000c 	mov	r0, ip
 6c4:	e58d502c 	str	r5, [sp, #44]	; 0x2c
 6c8:	e58d4028 	str	r4, [sp, #40]	; 0x28
 6cc:	eaffffe7 	b	670 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb8>
 6d0:	e1a03005 	mov	r3, r5
 6d4:	e1a01006 	mov	r1, r6
 6d8:	e1a0000c 	mov	r0, ip
 6dc:	e58de02c 	str	lr, [sp, #44]	; 0x2c
 6e0:	e58d4028 	str	r4, [sp, #40]	; 0x28
 6e4:	e28dd014 	add	sp, sp, #20
 6e8:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
 6ec:	eafffffe 	b	470 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 6f0:	e58d3008 	str	r3, [sp, #8]
 6f4:	e58d5004 	str	r5, [sp, #4]
 6f8:	e5d0c011 	ldrb	ip, [r0, #17]
 6fc:	e1a0300e 	mov	r3, lr
 700:	e58dc000 	str	ip, [sp]
 704:	e2822001 	add	r2, r2, #1
 708:	ebfffffe 	bl	504 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 70c:	e28dd014 	add	sp, sp, #20
 710:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

Disassembly of section .bss:

00000000 <WS28xxMulti::s_pThis>:
   0:	00000000 	andeq	r0, r0, r0

Disassembly of section .rodata.str1.4:

00000000 <.rodata.str1.4>:
   0:	444c5043 	strbmi	r5, [ip], #-67	; 0xffffffbd
   4:	00000000 	andeq	r0, r0, r0
   8:	6c2d3437 	cfstrsvs	mvf3, [sp], #-220	; 0xffffff24
   c:	6369676f 	cmnvs	r9, #29097984	; 0x1bc0000
  10:	00000000 	andeq	r0, r0, r0
  14:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
  18:	6170206c 	cmnvs	r0, ip, rrx
  1c:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
  20:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
  24:	0000000a 	andeq	r0, r0, sl
  28:	70795420 	rsbsvc	r5, r9, r0, lsr #8
  2c:	20202065 	eorcs	r2, r0, r5, rrx
  30:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
  34:	255b2073 	ldrbcs	r2, [fp, #-115]	; 0xffffff8d
  38:	2d205d64 	stccs	13, cr5, [r0, #-400]!	; 0xfffffe70
  3c:	20732520 	rsbscs	r2, r3, r0, lsr #10
  40:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
  44:	0000000a 	andeq	r0, r0, sl
  48:	756f4320 	strbvc	r4, [pc, #-800]!	; fffffd30 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xfffff778>
  4c:	2020746e 	eorcs	r7, r0, lr, ror #8
  50:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
  54:	00000a64 	andeq	r0, r0, r4, ror #20
  58:	616f4220 	cmnvs	pc, r0, lsr #4
  5c:	20206472 	eorcs	r6, r0, r2, ror r4
  60:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
  64:	Address 0x0000000000000064 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x168d274>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x41e6c>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.

