
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08000000 <__gVectors>:
 8000000:	2000c000 	andcs	ip, r0, r0
 8000004:	080011b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, ip}
 8000008:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 800000c:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000010:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000014:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000018:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
	...
 800002c:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000030:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 800003c:	080049b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, fp, lr}
 8000040:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000044:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000048:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 800004c:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000050:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000054:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000058:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 800005c:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000060:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000064:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000068:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 800006c:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000070:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000074:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000078:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 800007c:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000080:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000084:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000088:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 800008c:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000090:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000094:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000098:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 800009c:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000a0:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000a4:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000a8:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000ac:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000b0:	08002bcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, fp, sp}
 80000b4:	08002c6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, fp, sp}
 80000b8:	08002cb1 	stmdaeq	r0, {r0, r4, r5, r7, sl, fp, sp}
 80000bc:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000c0:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000c4:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000c8:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000cc:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000d0:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000d4:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000d8:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000dc:	08002991 	stmdaeq	r0, {r0, r4, r7, r8, fp, sp}
 80000e0:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000e4:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000e8:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000ec:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000f0:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000f4:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 80000f8:	00000000 	andeq	r0, r0, r0
 80000fc:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000100:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000104:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000108:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 800010c:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000110:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000114:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000118:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 800011c:	08002cd1 	stmdaeq	r0, {r0, r4, r6, r7, sl, fp, sp}
 8000120:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000124:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8000128:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 800012c:	080011fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip}

Disassembly of section .text:

08000130 <__aeabi_fmul>:
 8000130:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000134:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000138:	bf1e      	ittt	ne
 800013a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800013e:	ea92 0f0c 	teqne	r2, ip
 8000142:	ea93 0f0c 	teqne	r3, ip
 8000146:	d06f      	beq.n	8000228 <__aeabi_fmul+0xf8>
 8000148:	441a      	add	r2, r3
 800014a:	ea80 0c01 	eor.w	ip, r0, r1
 800014e:	0240      	lsls	r0, r0, #9
 8000150:	bf18      	it	ne
 8000152:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000156:	d01e      	beq.n	8000196 <__aeabi_fmul+0x66>
 8000158:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800015c:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000160:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000164:	fba0 3101 	umull	r3, r1, r0, r1
 8000168:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 800016c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000170:	bf3e      	ittt	cc
 8000172:	0049      	lslcc	r1, r1, #1
 8000174:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000178:	005b      	lslcc	r3, r3, #1
 800017a:	ea40 0001 	orr.w	r0, r0, r1
 800017e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000182:	2afd      	cmp	r2, #253	; 0xfd
 8000184:	d81d      	bhi.n	80001c2 <__aeabi_fmul+0x92>
 8000186:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800018a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800018e:	bf08      	it	eq
 8000190:	f020 0001 	biceq.w	r0, r0, #1
 8000194:	4770      	bx	lr
 8000196:	f090 0f00 	teq	r0, #0
 800019a:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 800019e:	bf08      	it	eq
 80001a0:	0249      	lsleq	r1, r1, #9
 80001a2:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80001a6:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80001aa:	3a7f      	subs	r2, #127	; 0x7f
 80001ac:	bfc2      	ittt	gt
 80001ae:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80001b2:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80001b6:	4770      	bxgt	lr
 80001b8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80001bc:	f04f 0300 	mov.w	r3, #0
 80001c0:	3a01      	subs	r2, #1
 80001c2:	dc5d      	bgt.n	8000280 <__aeabi_fmul+0x150>
 80001c4:	f112 0f19 	cmn.w	r2, #25
 80001c8:	bfdc      	itt	le
 80001ca:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 80001ce:	4770      	bxle	lr
 80001d0:	f1c2 0200 	rsb	r2, r2, #0
 80001d4:	0041      	lsls	r1, r0, #1
 80001d6:	fa21 f102 	lsr.w	r1, r1, r2
 80001da:	f1c2 0220 	rsb	r2, r2, #32
 80001de:	fa00 fc02 	lsl.w	ip, r0, r2
 80001e2:	ea5f 0031 	movs.w	r0, r1, rrx
 80001e6:	f140 0000 	adc.w	r0, r0, #0
 80001ea:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 80001ee:	bf08      	it	eq
 80001f0:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 80001f4:	4770      	bx	lr
 80001f6:	f092 0f00 	teq	r2, #0
 80001fa:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80001fe:	bf02      	ittt	eq
 8000200:	0040      	lsleq	r0, r0, #1
 8000202:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000206:	3a01      	subeq	r2, #1
 8000208:	d0f9      	beq.n	80001fe <__aeabi_fmul+0xce>
 800020a:	ea40 000c 	orr.w	r0, r0, ip
 800020e:	f093 0f00 	teq	r3, #0
 8000212:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000216:	bf02      	ittt	eq
 8000218:	0049      	lsleq	r1, r1, #1
 800021a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 800021e:	3b01      	subeq	r3, #1
 8000220:	d0f9      	beq.n	8000216 <__aeabi_fmul+0xe6>
 8000222:	ea41 010c 	orr.w	r1, r1, ip
 8000226:	e78f      	b.n	8000148 <__aeabi_fmul+0x18>
 8000228:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 800022c:	ea92 0f0c 	teq	r2, ip
 8000230:	bf18      	it	ne
 8000232:	ea93 0f0c 	teqne	r3, ip
 8000236:	d00a      	beq.n	800024e <__aeabi_fmul+0x11e>
 8000238:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 800023c:	bf18      	it	ne
 800023e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000242:	d1d8      	bne.n	80001f6 <__aeabi_fmul+0xc6>
 8000244:	ea80 0001 	eor.w	r0, r0, r1
 8000248:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 800024c:	4770      	bx	lr
 800024e:	f090 0f00 	teq	r0, #0
 8000252:	bf17      	itett	ne
 8000254:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000258:	4608      	moveq	r0, r1
 800025a:	f091 0f00 	teqne	r1, #0
 800025e:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000262:	d014      	beq.n	800028e <__aeabi_fmul+0x15e>
 8000264:	ea92 0f0c 	teq	r2, ip
 8000268:	d101      	bne.n	800026e <__aeabi_fmul+0x13e>
 800026a:	0242      	lsls	r2, r0, #9
 800026c:	d10f      	bne.n	800028e <__aeabi_fmul+0x15e>
 800026e:	ea93 0f0c 	teq	r3, ip
 8000272:	d103      	bne.n	800027c <__aeabi_fmul+0x14c>
 8000274:	024b      	lsls	r3, r1, #9
 8000276:	bf18      	it	ne
 8000278:	4608      	movne	r0, r1
 800027a:	d108      	bne.n	800028e <__aeabi_fmul+0x15e>
 800027c:	ea80 0001 	eor.w	r0, r0, r1
 8000280:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000284:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000288:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800028c:	4770      	bx	lr
 800028e:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000292:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000296:	4770      	bx	lr

08000298 <__aeabi_d2f>:
 8000298:	ea4f 0241 	mov.w	r2, r1, lsl #1
 800029c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 80002a0:	bf24      	itt	cs
 80002a2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 80002a6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 80002aa:	d90d      	bls.n	80002c8 <__aeabi_d2f+0x30>
 80002ac:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80002b0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 80002b4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 80002b8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 80002bc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 80002c0:	bf08      	it	eq
 80002c2:	f020 0001 	biceq.w	r0, r0, #1
 80002c6:	4770      	bx	lr
 80002c8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 80002cc:	d121      	bne.n	8000312 <__aeabi_d2f+0x7a>
 80002ce:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 80002d2:	bfbc      	itt	lt
 80002d4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 80002d8:	4770      	bxlt	lr
 80002da:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80002de:	ea4f 5252 	mov.w	r2, r2, lsr #21
 80002e2:	f1c2 0218 	rsb	r2, r2, #24
 80002e6:	f1c2 0c20 	rsb	ip, r2, #32
 80002ea:	fa10 f30c 	lsls.w	r3, r0, ip
 80002ee:	fa20 f002 	lsr.w	r0, r0, r2
 80002f2:	bf18      	it	ne
 80002f4:	f040 0001 	orrne.w	r0, r0, #1
 80002f8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80002fc:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000300:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000304:	ea40 000c 	orr.w	r0, r0, ip
 8000308:	fa23 f302 	lsr.w	r3, r3, r2
 800030c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000310:	e7cc      	b.n	80002ac <__aeabi_d2f+0x14>
 8000312:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000316:	d107      	bne.n	8000328 <__aeabi_d2f+0x90>
 8000318:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 800031c:	bf1e      	ittt	ne
 800031e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000322:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000326:	4770      	bxne	lr
 8000328:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 800032c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000330:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000334:	4770      	bx	lr
 8000336:	bf00      	nop

08000338 <__aeabi_frsub>:
 8000338:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 800033c:	e002      	b.n	8000344 <__addsf3>
 800033e:	bf00      	nop

08000340 <__aeabi_fsub>:
 8000340:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000344 <__addsf3>:
 8000344:	0042      	lsls	r2, r0, #1
 8000346:	bf1f      	itttt	ne
 8000348:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 800034c:	ea92 0f03 	teqne	r2, r3
 8000350:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000354:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000358:	d06a      	beq.n	8000430 <__addsf3+0xec>
 800035a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 800035e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000362:	bfc1      	itttt	gt
 8000364:	18d2      	addgt	r2, r2, r3
 8000366:	4041      	eorgt	r1, r0
 8000368:	4048      	eorgt	r0, r1
 800036a:	4041      	eorgt	r1, r0
 800036c:	bfb8      	it	lt
 800036e:	425b      	neglt	r3, r3
 8000370:	2b19      	cmp	r3, #25
 8000372:	bf88      	it	hi
 8000374:	4770      	bxhi	lr
 8000376:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 800037a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800037e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000382:	bf18      	it	ne
 8000384:	4240      	negne	r0, r0
 8000386:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800038a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 800038e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000392:	bf18      	it	ne
 8000394:	4249      	negne	r1, r1
 8000396:	ea92 0f03 	teq	r2, r3
 800039a:	d03f      	beq.n	800041c <__addsf3+0xd8>
 800039c:	f1a2 0201 	sub.w	r2, r2, #1
 80003a0:	fa41 fc03 	asr.w	ip, r1, r3
 80003a4:	eb10 000c 	adds.w	r0, r0, ip
 80003a8:	f1c3 0320 	rsb	r3, r3, #32
 80003ac:	fa01 f103 	lsl.w	r1, r1, r3
 80003b0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 80003b4:	d502      	bpl.n	80003bc <__addsf3+0x78>
 80003b6:	4249      	negs	r1, r1
 80003b8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 80003bc:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 80003c0:	d313      	bcc.n	80003ea <__addsf3+0xa6>
 80003c2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80003c6:	d306      	bcc.n	80003d6 <__addsf3+0x92>
 80003c8:	0840      	lsrs	r0, r0, #1
 80003ca:	ea4f 0131 	mov.w	r1, r1, rrx
 80003ce:	f102 0201 	add.w	r2, r2, #1
 80003d2:	2afe      	cmp	r2, #254	; 0xfe
 80003d4:	d251      	bcs.n	800047a <__addsf3+0x136>
 80003d6:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 80003da:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80003de:	bf08      	it	eq
 80003e0:	f020 0001 	biceq.w	r0, r0, #1
 80003e4:	ea40 0003 	orr.w	r0, r0, r3
 80003e8:	4770      	bx	lr
 80003ea:	0049      	lsls	r1, r1, #1
 80003ec:	eb40 0000 	adc.w	r0, r0, r0
 80003f0:	3a01      	subs	r2, #1
 80003f2:	bf28      	it	cs
 80003f4:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 80003f8:	d2ed      	bcs.n	80003d6 <__addsf3+0x92>
 80003fa:	fab0 fc80 	clz	ip, r0
 80003fe:	f1ac 0c08 	sub.w	ip, ip, #8
 8000402:	ebb2 020c 	subs.w	r2, r2, ip
 8000406:	fa00 f00c 	lsl.w	r0, r0, ip
 800040a:	bfaa      	itet	ge
 800040c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000410:	4252      	neglt	r2, r2
 8000412:	4318      	orrge	r0, r3
 8000414:	bfbc      	itt	lt
 8000416:	40d0      	lsrlt	r0, r2
 8000418:	4318      	orrlt	r0, r3
 800041a:	4770      	bx	lr
 800041c:	f092 0f00 	teq	r2, #0
 8000420:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000424:	bf06      	itte	eq
 8000426:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 800042a:	3201      	addeq	r2, #1
 800042c:	3b01      	subne	r3, #1
 800042e:	e7b5      	b.n	800039c <__addsf3+0x58>
 8000430:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000434:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000438:	bf18      	it	ne
 800043a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800043e:	d021      	beq.n	8000484 <__addsf3+0x140>
 8000440:	ea92 0f03 	teq	r2, r3
 8000444:	d004      	beq.n	8000450 <__addsf3+0x10c>
 8000446:	f092 0f00 	teq	r2, #0
 800044a:	bf08      	it	eq
 800044c:	4608      	moveq	r0, r1
 800044e:	4770      	bx	lr
 8000450:	ea90 0f01 	teq	r0, r1
 8000454:	bf1c      	itt	ne
 8000456:	2000      	movne	r0, #0
 8000458:	4770      	bxne	lr
 800045a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 800045e:	d104      	bne.n	800046a <__addsf3+0x126>
 8000460:	0040      	lsls	r0, r0, #1
 8000462:	bf28      	it	cs
 8000464:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000468:	4770      	bx	lr
 800046a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 800046e:	bf3c      	itt	cc
 8000470:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000474:	4770      	bxcc	lr
 8000476:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 800047a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 800047e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000482:	4770      	bx	lr
 8000484:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000488:	bf16      	itet	ne
 800048a:	4608      	movne	r0, r1
 800048c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000490:	4601      	movne	r1, r0
 8000492:	0242      	lsls	r2, r0, #9
 8000494:	bf06      	itte	eq
 8000496:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 800049a:	ea90 0f01 	teqeq	r0, r1
 800049e:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 80004a2:	4770      	bx	lr

080004a4 <__aeabi_ui2f>:
 80004a4:	f04f 0300 	mov.w	r3, #0
 80004a8:	e004      	b.n	80004b4 <__aeabi_i2f+0x8>
 80004aa:	bf00      	nop

080004ac <__aeabi_i2f>:
 80004ac:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 80004b0:	bf48      	it	mi
 80004b2:	4240      	negmi	r0, r0
 80004b4:	ea5f 0c00 	movs.w	ip, r0
 80004b8:	bf08      	it	eq
 80004ba:	4770      	bxeq	lr
 80004bc:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 80004c0:	4601      	mov	r1, r0
 80004c2:	f04f 0000 	mov.w	r0, #0
 80004c6:	e01c      	b.n	8000502 <__aeabi_l2f+0x2a>

080004c8 <__aeabi_ul2f>:
 80004c8:	ea50 0201 	orrs.w	r2, r0, r1
 80004cc:	bf08      	it	eq
 80004ce:	4770      	bxeq	lr
 80004d0:	f04f 0300 	mov.w	r3, #0
 80004d4:	e00a      	b.n	80004ec <__aeabi_l2f+0x14>
 80004d6:	bf00      	nop

080004d8 <__aeabi_l2f>:
 80004d8:	ea50 0201 	orrs.w	r2, r0, r1
 80004dc:	bf08      	it	eq
 80004de:	4770      	bxeq	lr
 80004e0:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 80004e4:	d502      	bpl.n	80004ec <__aeabi_l2f+0x14>
 80004e6:	4240      	negs	r0, r0
 80004e8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004ec:	ea5f 0c01 	movs.w	ip, r1
 80004f0:	bf02      	ittt	eq
 80004f2:	4684      	moveq	ip, r0
 80004f4:	4601      	moveq	r1, r0
 80004f6:	2000      	moveq	r0, #0
 80004f8:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 80004fc:	bf08      	it	eq
 80004fe:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000502:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000506:	fabc f28c 	clz	r2, ip
 800050a:	3a08      	subs	r2, #8
 800050c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000510:	db10      	blt.n	8000534 <__aeabi_l2f+0x5c>
 8000512:	fa01 fc02 	lsl.w	ip, r1, r2
 8000516:	4463      	add	r3, ip
 8000518:	fa00 fc02 	lsl.w	ip, r0, r2
 800051c:	f1c2 0220 	rsb	r2, r2, #32
 8000520:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000524:	fa20 f202 	lsr.w	r2, r0, r2
 8000528:	eb43 0002 	adc.w	r0, r3, r2
 800052c:	bf08      	it	eq
 800052e:	f020 0001 	biceq.w	r0, r0, #1
 8000532:	4770      	bx	lr
 8000534:	f102 0220 	add.w	r2, r2, #32
 8000538:	fa01 fc02 	lsl.w	ip, r1, r2
 800053c:	f1c2 0220 	rsb	r2, r2, #32
 8000540:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000544:	fa21 f202 	lsr.w	r2, r1, r2
 8000548:	eb43 0002 	adc.w	r0, r3, r2
 800054c:	bf08      	it	eq
 800054e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000552:	4770      	bx	lr

08000554 <__gesf2>:
 8000554:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000558:	e006      	b.n	8000568 <__cmpsf2+0x4>
 800055a:	bf00      	nop

0800055c <__lesf2>:
 800055c:	f04f 0c01 	mov.w	ip, #1
 8000560:	e002      	b.n	8000568 <__cmpsf2+0x4>
 8000562:	bf00      	nop

08000564 <__cmpsf2>:
 8000564:	f04f 0c01 	mov.w	ip, #1
 8000568:	f84d cd04 	str.w	ip, [sp, #-4]!
 800056c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000570:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000574:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000578:	bf18      	it	ne
 800057a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800057e:	d011      	beq.n	80005a4 <__cmpsf2+0x40>
 8000580:	b001      	add	sp, #4
 8000582:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8000586:	bf18      	it	ne
 8000588:	ea90 0f01 	teqne	r0, r1
 800058c:	bf58      	it	pl
 800058e:	ebb2 0003 	subspl.w	r0, r2, r3
 8000592:	bf88      	it	hi
 8000594:	17c8      	asrhi	r0, r1, #31
 8000596:	bf38      	it	cc
 8000598:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 800059c:	bf18      	it	ne
 800059e:	f040 0001 	orrne.w	r0, r0, #1
 80005a2:	4770      	bx	lr
 80005a4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80005a8:	d102      	bne.n	80005b0 <__cmpsf2+0x4c>
 80005aa:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 80005ae:	d105      	bne.n	80005bc <__cmpsf2+0x58>
 80005b0:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80005b4:	d1e4      	bne.n	8000580 <__cmpsf2+0x1c>
 80005b6:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80005ba:	d0e1      	beq.n	8000580 <__cmpsf2+0x1c>
 80005bc:	f85d 0b04 	ldr.w	r0, [sp], #4
 80005c0:	4770      	bx	lr
 80005c2:	bf00      	nop

080005c4 <__aeabi_cfrcmple>:
 80005c4:	4684      	mov	ip, r0
 80005c6:	4608      	mov	r0, r1
 80005c8:	4661      	mov	r1, ip
 80005ca:	e7ff      	b.n	80005cc <__aeabi_cfcmpeq>

080005cc <__aeabi_cfcmpeq>:
 80005cc:	b50f      	push	{r0, r1, r2, r3, lr}
 80005ce:	f7ff ffc9 	bl	8000564 <__cmpsf2>
 80005d2:	2800      	cmp	r0, #0
 80005d4:	bf48      	it	mi
 80005d6:	f110 0f00 	cmnmi.w	r0, #0
 80005da:	bd0f      	pop	{r0, r1, r2, r3, pc}

080005dc <__aeabi_fcmpeq>:
 80005dc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80005e0:	f7ff fff4 	bl	80005cc <__aeabi_cfcmpeq>
 80005e4:	bf0c      	ite	eq
 80005e6:	2001      	moveq	r0, #1
 80005e8:	2000      	movne	r0, #0
 80005ea:	f85d fb08 	ldr.w	pc, [sp], #8
 80005ee:	bf00      	nop

080005f0 <__aeabi_fcmplt>:
 80005f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80005f4:	f7ff ffea 	bl	80005cc <__aeabi_cfcmpeq>
 80005f8:	bf34      	ite	cc
 80005fa:	2001      	movcc	r0, #1
 80005fc:	2000      	movcs	r0, #0
 80005fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000602:	bf00      	nop

08000604 <__aeabi_fcmple>:
 8000604:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000608:	f7ff ffe0 	bl	80005cc <__aeabi_cfcmpeq>
 800060c:	bf94      	ite	ls
 800060e:	2001      	movls	r0, #1
 8000610:	2000      	movhi	r0, #0
 8000612:	f85d fb08 	ldr.w	pc, [sp], #8
 8000616:	bf00      	nop

08000618 <__aeabi_fcmpge>:
 8000618:	f84d ed08 	str.w	lr, [sp, #-8]!
 800061c:	f7ff ffd2 	bl	80005c4 <__aeabi_cfrcmple>
 8000620:	bf94      	ite	ls
 8000622:	2001      	movls	r0, #1
 8000624:	2000      	movhi	r0, #0
 8000626:	f85d fb08 	ldr.w	pc, [sp], #8
 800062a:	bf00      	nop

0800062c <__aeabi_fcmpgt>:
 800062c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000630:	f7ff ffc8 	bl	80005c4 <__aeabi_cfrcmple>
 8000634:	bf34      	ite	cc
 8000636:	2001      	movcc	r0, #1
 8000638:	2000      	movcs	r0, #0
 800063a:	f85d fb08 	ldr.w	pc, [sp], #8
 800063e:	bf00      	nop

08000640 <__aeabi_f2iz>:
 8000640:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000644:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8000648:	d30f      	bcc.n	800066a <__aeabi_f2iz+0x2a>
 800064a:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800064e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000652:	d90d      	bls.n	8000670 <__aeabi_f2iz+0x30>
 8000654:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000658:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800065c:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000660:	fa23 f002 	lsr.w	r0, r3, r2
 8000664:	bf18      	it	ne
 8000666:	4240      	negne	r0, r0
 8000668:	4770      	bx	lr
 800066a:	f04f 0000 	mov.w	r0, #0
 800066e:	4770      	bx	lr
 8000670:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8000674:	d101      	bne.n	800067a <__aeabi_f2iz+0x3a>
 8000676:	0242      	lsls	r2, r0, #9
 8000678:	d105      	bne.n	8000686 <__aeabi_f2iz+0x46>
 800067a:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 800067e:	bf08      	it	eq
 8000680:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000684:	4770      	bx	lr
 8000686:	f04f 0000 	mov.w	r0, #0
 800068a:	4770      	bx	lr

0800068c <__aeabi_uldivmod>:
 800068c:	b953      	cbnz	r3, 80006a4 <__aeabi_uldivmod+0x18>
 800068e:	b94a      	cbnz	r2, 80006a4 <__aeabi_uldivmod+0x18>
 8000690:	2900      	cmp	r1, #0
 8000692:	bf08      	it	eq
 8000694:	2800      	cmpeq	r0, #0
 8000696:	bf1c      	itt	ne
 8000698:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 800069c:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80006a0:	f000 b976 	b.w	8000990 <__aeabi_idiv0>
 80006a4:	f1ad 0c08 	sub.w	ip, sp, #8
 80006a8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80006ac:	f000 f806 	bl	80006bc <__udivmoddi4>
 80006b0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80006b4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80006b8:	b004      	add	sp, #16
 80006ba:	4770      	bx	lr

080006bc <__udivmoddi4>:
 80006bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80006c0:	9e08      	ldr	r6, [sp, #32]
 80006c2:	460d      	mov	r5, r1
 80006c4:	4604      	mov	r4, r0
 80006c6:	4688      	mov	r8, r1
 80006c8:	2b00      	cmp	r3, #0
 80006ca:	d14d      	bne.n	8000768 <__udivmoddi4+0xac>
 80006cc:	428a      	cmp	r2, r1
 80006ce:	4694      	mov	ip, r2
 80006d0:	d968      	bls.n	80007a4 <__udivmoddi4+0xe8>
 80006d2:	fab2 f282 	clz	r2, r2
 80006d6:	b152      	cbz	r2, 80006ee <__udivmoddi4+0x32>
 80006d8:	fa01 f302 	lsl.w	r3, r1, r2
 80006dc:	f1c2 0120 	rsb	r1, r2, #32
 80006e0:	fa20 f101 	lsr.w	r1, r0, r1
 80006e4:	fa0c fc02 	lsl.w	ip, ip, r2
 80006e8:	ea41 0803 	orr.w	r8, r1, r3
 80006ec:	4094      	lsls	r4, r2
 80006ee:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80006f2:	fbb8 f7f1 	udiv	r7, r8, r1
 80006f6:	fa1f fe8c 	uxth.w	lr, ip
 80006fa:	fb01 8817 	mls	r8, r1, r7, r8
 80006fe:	fb07 f00e 	mul.w	r0, r7, lr
 8000702:	0c23      	lsrs	r3, r4, #16
 8000704:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000708:	4298      	cmp	r0, r3
 800070a:	d90a      	bls.n	8000722 <__udivmoddi4+0x66>
 800070c:	eb1c 0303 	adds.w	r3, ip, r3
 8000710:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
 8000714:	f080 811e 	bcs.w	8000954 <__udivmoddi4+0x298>
 8000718:	4298      	cmp	r0, r3
 800071a:	f240 811b 	bls.w	8000954 <__udivmoddi4+0x298>
 800071e:	3f02      	subs	r7, #2
 8000720:	4463      	add	r3, ip
 8000722:	1a1b      	subs	r3, r3, r0
 8000724:	fbb3 f0f1 	udiv	r0, r3, r1
 8000728:	fb01 3310 	mls	r3, r1, r0, r3
 800072c:	fb00 fe0e 	mul.w	lr, r0, lr
 8000730:	b2a4      	uxth	r4, r4
 8000732:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000736:	45a6      	cmp	lr, r4
 8000738:	d90a      	bls.n	8000750 <__udivmoddi4+0x94>
 800073a:	eb1c 0404 	adds.w	r4, ip, r4
 800073e:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000742:	f080 8109 	bcs.w	8000958 <__udivmoddi4+0x29c>
 8000746:	45a6      	cmp	lr, r4
 8000748:	f240 8106 	bls.w	8000958 <__udivmoddi4+0x29c>
 800074c:	4464      	add	r4, ip
 800074e:	3802      	subs	r0, #2
 8000750:	2100      	movs	r1, #0
 8000752:	eba4 040e 	sub.w	r4, r4, lr
 8000756:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 800075a:	b11e      	cbz	r6, 8000764 <__udivmoddi4+0xa8>
 800075c:	2300      	movs	r3, #0
 800075e:	40d4      	lsrs	r4, r2
 8000760:	e9c6 4300 	strd	r4, r3, [r6]
 8000764:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000768:	428b      	cmp	r3, r1
 800076a:	d908      	bls.n	800077e <__udivmoddi4+0xc2>
 800076c:	2e00      	cmp	r6, #0
 800076e:	f000 80ee 	beq.w	800094e <__udivmoddi4+0x292>
 8000772:	2100      	movs	r1, #0
 8000774:	e9c6 0500 	strd	r0, r5, [r6]
 8000778:	4608      	mov	r0, r1
 800077a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800077e:	fab3 f183 	clz	r1, r3
 8000782:	2900      	cmp	r1, #0
 8000784:	d14a      	bne.n	800081c <__udivmoddi4+0x160>
 8000786:	42ab      	cmp	r3, r5
 8000788:	d302      	bcc.n	8000790 <__udivmoddi4+0xd4>
 800078a:	4282      	cmp	r2, r0
 800078c:	f200 80fc 	bhi.w	8000988 <__udivmoddi4+0x2cc>
 8000790:	1a84      	subs	r4, r0, r2
 8000792:	eb65 0303 	sbc.w	r3, r5, r3
 8000796:	2001      	movs	r0, #1
 8000798:	4698      	mov	r8, r3
 800079a:	2e00      	cmp	r6, #0
 800079c:	d0e2      	beq.n	8000764 <__udivmoddi4+0xa8>
 800079e:	e9c6 4800 	strd	r4, r8, [r6]
 80007a2:	e7df      	b.n	8000764 <__udivmoddi4+0xa8>
 80007a4:	b902      	cbnz	r2, 80007a8 <__udivmoddi4+0xec>
 80007a6:	deff      	udf	#255	; 0xff
 80007a8:	fab2 f282 	clz	r2, r2
 80007ac:	2a00      	cmp	r2, #0
 80007ae:	f040 8091 	bne.w	80008d4 <__udivmoddi4+0x218>
 80007b2:	eba1 000c 	sub.w	r0, r1, ip
 80007b6:	2101      	movs	r1, #1
 80007b8:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80007bc:	fa1f fe8c 	uxth.w	lr, ip
 80007c0:	fbb0 f3f7 	udiv	r3, r0, r7
 80007c4:	fb07 0013 	mls	r0, r7, r3, r0
 80007c8:	0c25      	lsrs	r5, r4, #16
 80007ca:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80007ce:	fb0e f003 	mul.w	r0, lr, r3
 80007d2:	42a8      	cmp	r0, r5
 80007d4:	d908      	bls.n	80007e8 <__udivmoddi4+0x12c>
 80007d6:	eb1c 0505 	adds.w	r5, ip, r5
 80007da:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 80007de:	d202      	bcs.n	80007e6 <__udivmoddi4+0x12a>
 80007e0:	42a8      	cmp	r0, r5
 80007e2:	f200 80ce 	bhi.w	8000982 <__udivmoddi4+0x2c6>
 80007e6:	4643      	mov	r3, r8
 80007e8:	1a2d      	subs	r5, r5, r0
 80007ea:	fbb5 f0f7 	udiv	r0, r5, r7
 80007ee:	fb07 5510 	mls	r5, r7, r0, r5
 80007f2:	fb0e fe00 	mul.w	lr, lr, r0
 80007f6:	b2a4      	uxth	r4, r4
 80007f8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80007fc:	45a6      	cmp	lr, r4
 80007fe:	d908      	bls.n	8000812 <__udivmoddi4+0x156>
 8000800:	eb1c 0404 	adds.w	r4, ip, r4
 8000804:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8000808:	d202      	bcs.n	8000810 <__udivmoddi4+0x154>
 800080a:	45a6      	cmp	lr, r4
 800080c:	f200 80b6 	bhi.w	800097c <__udivmoddi4+0x2c0>
 8000810:	4628      	mov	r0, r5
 8000812:	eba4 040e 	sub.w	r4, r4, lr
 8000816:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800081a:	e79e      	b.n	800075a <__udivmoddi4+0x9e>
 800081c:	f1c1 0720 	rsb	r7, r1, #32
 8000820:	408b      	lsls	r3, r1
 8000822:	fa22 fc07 	lsr.w	ip, r2, r7
 8000826:	ea4c 0c03 	orr.w	ip, ip, r3
 800082a:	fa25 fa07 	lsr.w	sl, r5, r7
 800082e:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000832:	fbba f8f9 	udiv	r8, sl, r9
 8000836:	fa20 f307 	lsr.w	r3, r0, r7
 800083a:	fb09 aa18 	mls	sl, r9, r8, sl
 800083e:	408d      	lsls	r5, r1
 8000840:	fa1f fe8c 	uxth.w	lr, ip
 8000844:	431d      	orrs	r5, r3
 8000846:	fa00 f301 	lsl.w	r3, r0, r1
 800084a:	fb08 f00e 	mul.w	r0, r8, lr
 800084e:	0c2c      	lsrs	r4, r5, #16
 8000850:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8000854:	42a0      	cmp	r0, r4
 8000856:	fa02 f201 	lsl.w	r2, r2, r1
 800085a:	d90b      	bls.n	8000874 <__udivmoddi4+0x1b8>
 800085c:	eb1c 0404 	adds.w	r4, ip, r4
 8000860:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8000864:	f080 8088 	bcs.w	8000978 <__udivmoddi4+0x2bc>
 8000868:	42a0      	cmp	r0, r4
 800086a:	f240 8085 	bls.w	8000978 <__udivmoddi4+0x2bc>
 800086e:	f1a8 0802 	sub.w	r8, r8, #2
 8000872:	4464      	add	r4, ip
 8000874:	1a24      	subs	r4, r4, r0
 8000876:	fbb4 f0f9 	udiv	r0, r4, r9
 800087a:	fb09 4410 	mls	r4, r9, r0, r4
 800087e:	fb00 fe0e 	mul.w	lr, r0, lr
 8000882:	b2ad      	uxth	r5, r5
 8000884:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000888:	45a6      	cmp	lr, r4
 800088a:	d908      	bls.n	800089e <__udivmoddi4+0x1e2>
 800088c:	eb1c 0404 	adds.w	r4, ip, r4
 8000890:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8000894:	d26c      	bcs.n	8000970 <__udivmoddi4+0x2b4>
 8000896:	45a6      	cmp	lr, r4
 8000898:	d96a      	bls.n	8000970 <__udivmoddi4+0x2b4>
 800089a:	3802      	subs	r0, #2
 800089c:	4464      	add	r4, ip
 800089e:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80008a2:	fba0 9502 	umull	r9, r5, r0, r2
 80008a6:	eba4 040e 	sub.w	r4, r4, lr
 80008aa:	42ac      	cmp	r4, r5
 80008ac:	46c8      	mov	r8, r9
 80008ae:	46ae      	mov	lr, r5
 80008b0:	d356      	bcc.n	8000960 <__udivmoddi4+0x2a4>
 80008b2:	d053      	beq.n	800095c <__udivmoddi4+0x2a0>
 80008b4:	2e00      	cmp	r6, #0
 80008b6:	d069      	beq.n	800098c <__udivmoddi4+0x2d0>
 80008b8:	ebb3 0208 	subs.w	r2, r3, r8
 80008bc:	eb64 040e 	sbc.w	r4, r4, lr
 80008c0:	fa22 f301 	lsr.w	r3, r2, r1
 80008c4:	fa04 f707 	lsl.w	r7, r4, r7
 80008c8:	431f      	orrs	r7, r3
 80008ca:	40cc      	lsrs	r4, r1
 80008cc:	e9c6 7400 	strd	r7, r4, [r6]
 80008d0:	2100      	movs	r1, #0
 80008d2:	e747      	b.n	8000764 <__udivmoddi4+0xa8>
 80008d4:	fa0c fc02 	lsl.w	ip, ip, r2
 80008d8:	f1c2 0120 	rsb	r1, r2, #32
 80008dc:	fa25 f301 	lsr.w	r3, r5, r1
 80008e0:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80008e4:	fa20 f101 	lsr.w	r1, r0, r1
 80008e8:	4095      	lsls	r5, r2
 80008ea:	430d      	orrs	r5, r1
 80008ec:	fbb3 f1f7 	udiv	r1, r3, r7
 80008f0:	fb07 3311 	mls	r3, r7, r1, r3
 80008f4:	fa1f fe8c 	uxth.w	lr, ip
 80008f8:	0c28      	lsrs	r0, r5, #16
 80008fa:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 80008fe:	fb01 f30e 	mul.w	r3, r1, lr
 8000902:	4283      	cmp	r3, r0
 8000904:	fa04 f402 	lsl.w	r4, r4, r2
 8000908:	d908      	bls.n	800091c <__udivmoddi4+0x260>
 800090a:	eb1c 0000 	adds.w	r0, ip, r0
 800090e:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8000912:	d22f      	bcs.n	8000974 <__udivmoddi4+0x2b8>
 8000914:	4283      	cmp	r3, r0
 8000916:	d92d      	bls.n	8000974 <__udivmoddi4+0x2b8>
 8000918:	3902      	subs	r1, #2
 800091a:	4460      	add	r0, ip
 800091c:	1ac0      	subs	r0, r0, r3
 800091e:	fbb0 f3f7 	udiv	r3, r0, r7
 8000922:	fb07 0013 	mls	r0, r7, r3, r0
 8000926:	b2ad      	uxth	r5, r5
 8000928:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 800092c:	fb03 f00e 	mul.w	r0, r3, lr
 8000930:	42a8      	cmp	r0, r5
 8000932:	d908      	bls.n	8000946 <__udivmoddi4+0x28a>
 8000934:	eb1c 0505 	adds.w	r5, ip, r5
 8000938:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 800093c:	d216      	bcs.n	800096c <__udivmoddi4+0x2b0>
 800093e:	42a8      	cmp	r0, r5
 8000940:	d914      	bls.n	800096c <__udivmoddi4+0x2b0>
 8000942:	3b02      	subs	r3, #2
 8000944:	4465      	add	r5, ip
 8000946:	1a28      	subs	r0, r5, r0
 8000948:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 800094c:	e738      	b.n	80007c0 <__udivmoddi4+0x104>
 800094e:	4631      	mov	r1, r6
 8000950:	4630      	mov	r0, r6
 8000952:	e707      	b.n	8000764 <__udivmoddi4+0xa8>
 8000954:	462f      	mov	r7, r5
 8000956:	e6e4      	b.n	8000722 <__udivmoddi4+0x66>
 8000958:	4618      	mov	r0, r3
 800095a:	e6f9      	b.n	8000750 <__udivmoddi4+0x94>
 800095c:	454b      	cmp	r3, r9
 800095e:	d2a9      	bcs.n	80008b4 <__udivmoddi4+0x1f8>
 8000960:	ebb9 0802 	subs.w	r8, r9, r2
 8000964:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000968:	3801      	subs	r0, #1
 800096a:	e7a3      	b.n	80008b4 <__udivmoddi4+0x1f8>
 800096c:	4643      	mov	r3, r8
 800096e:	e7ea      	b.n	8000946 <__udivmoddi4+0x28a>
 8000970:	4628      	mov	r0, r5
 8000972:	e794      	b.n	800089e <__udivmoddi4+0x1e2>
 8000974:	4641      	mov	r1, r8
 8000976:	e7d1      	b.n	800091c <__udivmoddi4+0x260>
 8000978:	46d0      	mov	r8, sl
 800097a:	e77b      	b.n	8000874 <__udivmoddi4+0x1b8>
 800097c:	4464      	add	r4, ip
 800097e:	3802      	subs	r0, #2
 8000980:	e747      	b.n	8000812 <__udivmoddi4+0x156>
 8000982:	3b02      	subs	r3, #2
 8000984:	4465      	add	r5, ip
 8000986:	e72f      	b.n	80007e8 <__udivmoddi4+0x12c>
 8000988:	4608      	mov	r0, r1
 800098a:	e706      	b.n	800079a <__udivmoddi4+0xde>
 800098c:	4631      	mov	r1, r6
 800098e:	e6e9      	b.n	8000764 <__udivmoddi4+0xa8>

08000990 <__aeabi_idiv0>:
 8000990:	4770      	bx	lr
 8000992:	bf00      	nop

08000994 <__aeabi_drsub>:
 8000994:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000998:	e002      	b.n	80009a0 <__adddf3>
 800099a:	bf00      	nop

0800099c <__aeabi_dsub>:
 800099c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080009a0 <__adddf3>:
 80009a0:	b530      	push	{r4, r5, lr}
 80009a2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80009a6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80009aa:	ea94 0f05 	teq	r4, r5
 80009ae:	bf08      	it	eq
 80009b0:	ea90 0f02 	teqeq	r0, r2
 80009b4:	bf1f      	itttt	ne
 80009b6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80009ba:	ea55 0c02 	orrsne.w	ip, r5, r2
 80009be:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80009c2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80009c6:	f000 80e2 	beq.w	8000b8e <__adddf3+0x1ee>
 80009ca:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80009ce:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80009d2:	bfb8      	it	lt
 80009d4:	426d      	neglt	r5, r5
 80009d6:	dd0c      	ble.n	80009f2 <__adddf3+0x52>
 80009d8:	442c      	add	r4, r5
 80009da:	ea80 0202 	eor.w	r2, r0, r2
 80009de:	ea81 0303 	eor.w	r3, r1, r3
 80009e2:	ea82 0000 	eor.w	r0, r2, r0
 80009e6:	ea83 0101 	eor.w	r1, r3, r1
 80009ea:	ea80 0202 	eor.w	r2, r0, r2
 80009ee:	ea81 0303 	eor.w	r3, r1, r3
 80009f2:	2d36      	cmp	r5, #54	; 0x36
 80009f4:	bf88      	it	hi
 80009f6:	bd30      	pophi	{r4, r5, pc}
 80009f8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80009fc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000a00:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000a04:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000a08:	d002      	beq.n	8000a10 <__adddf3+0x70>
 8000a0a:	4240      	negs	r0, r0
 8000a0c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000a10:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000a14:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000a18:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000a1c:	d002      	beq.n	8000a24 <__adddf3+0x84>
 8000a1e:	4252      	negs	r2, r2
 8000a20:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000a24:	ea94 0f05 	teq	r4, r5
 8000a28:	f000 80a7 	beq.w	8000b7a <__adddf3+0x1da>
 8000a2c:	f1a4 0401 	sub.w	r4, r4, #1
 8000a30:	f1d5 0e20 	rsbs	lr, r5, #32
 8000a34:	db0d      	blt.n	8000a52 <__adddf3+0xb2>
 8000a36:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000a3a:	fa22 f205 	lsr.w	r2, r2, r5
 8000a3e:	1880      	adds	r0, r0, r2
 8000a40:	f141 0100 	adc.w	r1, r1, #0
 8000a44:	fa03 f20e 	lsl.w	r2, r3, lr
 8000a48:	1880      	adds	r0, r0, r2
 8000a4a:	fa43 f305 	asr.w	r3, r3, r5
 8000a4e:	4159      	adcs	r1, r3
 8000a50:	e00e      	b.n	8000a70 <__adddf3+0xd0>
 8000a52:	f1a5 0520 	sub.w	r5, r5, #32
 8000a56:	f10e 0e20 	add.w	lr, lr, #32
 8000a5a:	2a01      	cmp	r2, #1
 8000a5c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000a60:	bf28      	it	cs
 8000a62:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000a66:	fa43 f305 	asr.w	r3, r3, r5
 8000a6a:	18c0      	adds	r0, r0, r3
 8000a6c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000a70:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000a74:	d507      	bpl.n	8000a86 <__adddf3+0xe6>
 8000a76:	f04f 0e00 	mov.w	lr, #0
 8000a7a:	f1dc 0c00 	rsbs	ip, ip, #0
 8000a7e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000a82:	eb6e 0101 	sbc.w	r1, lr, r1
 8000a86:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000a8a:	d31b      	bcc.n	8000ac4 <__adddf3+0x124>
 8000a8c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000a90:	d30c      	bcc.n	8000aac <__adddf3+0x10c>
 8000a92:	0849      	lsrs	r1, r1, #1
 8000a94:	ea5f 0030 	movs.w	r0, r0, rrx
 8000a98:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000a9c:	f104 0401 	add.w	r4, r4, #1
 8000aa0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000aa4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000aa8:	f080 809a 	bcs.w	8000be0 <__adddf3+0x240>
 8000aac:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000ab0:	bf08      	it	eq
 8000ab2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000ab6:	f150 0000 	adcs.w	r0, r0, #0
 8000aba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000abe:	ea41 0105 	orr.w	r1, r1, r5
 8000ac2:	bd30      	pop	{r4, r5, pc}
 8000ac4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000ac8:	4140      	adcs	r0, r0
 8000aca:	eb41 0101 	adc.w	r1, r1, r1
 8000ace:	3c01      	subs	r4, #1
 8000ad0:	bf28      	it	cs
 8000ad2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000ad6:	d2e9      	bcs.n	8000aac <__adddf3+0x10c>
 8000ad8:	f091 0f00 	teq	r1, #0
 8000adc:	bf04      	itt	eq
 8000ade:	4601      	moveq	r1, r0
 8000ae0:	2000      	moveq	r0, #0
 8000ae2:	fab1 f381 	clz	r3, r1
 8000ae6:	bf08      	it	eq
 8000ae8:	3320      	addeq	r3, #32
 8000aea:	f1a3 030b 	sub.w	r3, r3, #11
 8000aee:	f1b3 0220 	subs.w	r2, r3, #32
 8000af2:	da0c      	bge.n	8000b0e <__adddf3+0x16e>
 8000af4:	320c      	adds	r2, #12
 8000af6:	dd08      	ble.n	8000b0a <__adddf3+0x16a>
 8000af8:	f102 0c14 	add.w	ip, r2, #20
 8000afc:	f1c2 020c 	rsb	r2, r2, #12
 8000b00:	fa01 f00c 	lsl.w	r0, r1, ip
 8000b04:	fa21 f102 	lsr.w	r1, r1, r2
 8000b08:	e00c      	b.n	8000b24 <__adddf3+0x184>
 8000b0a:	f102 0214 	add.w	r2, r2, #20
 8000b0e:	bfd8      	it	le
 8000b10:	f1c2 0c20 	rsble	ip, r2, #32
 8000b14:	fa01 f102 	lsl.w	r1, r1, r2
 8000b18:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000b1c:	bfdc      	itt	le
 8000b1e:	ea41 010c 	orrle.w	r1, r1, ip
 8000b22:	4090      	lslle	r0, r2
 8000b24:	1ae4      	subs	r4, r4, r3
 8000b26:	bfa2      	ittt	ge
 8000b28:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000b2c:	4329      	orrge	r1, r5
 8000b2e:	bd30      	popge	{r4, r5, pc}
 8000b30:	ea6f 0404 	mvn.w	r4, r4
 8000b34:	3c1f      	subs	r4, #31
 8000b36:	da1c      	bge.n	8000b72 <__adddf3+0x1d2>
 8000b38:	340c      	adds	r4, #12
 8000b3a:	dc0e      	bgt.n	8000b5a <__adddf3+0x1ba>
 8000b3c:	f104 0414 	add.w	r4, r4, #20
 8000b40:	f1c4 0220 	rsb	r2, r4, #32
 8000b44:	fa20 f004 	lsr.w	r0, r0, r4
 8000b48:	fa01 f302 	lsl.w	r3, r1, r2
 8000b4c:	ea40 0003 	orr.w	r0, r0, r3
 8000b50:	fa21 f304 	lsr.w	r3, r1, r4
 8000b54:	ea45 0103 	orr.w	r1, r5, r3
 8000b58:	bd30      	pop	{r4, r5, pc}
 8000b5a:	f1c4 040c 	rsb	r4, r4, #12
 8000b5e:	f1c4 0220 	rsb	r2, r4, #32
 8000b62:	fa20 f002 	lsr.w	r0, r0, r2
 8000b66:	fa01 f304 	lsl.w	r3, r1, r4
 8000b6a:	ea40 0003 	orr.w	r0, r0, r3
 8000b6e:	4629      	mov	r1, r5
 8000b70:	bd30      	pop	{r4, r5, pc}
 8000b72:	fa21 f004 	lsr.w	r0, r1, r4
 8000b76:	4629      	mov	r1, r5
 8000b78:	bd30      	pop	{r4, r5, pc}
 8000b7a:	f094 0f00 	teq	r4, #0
 8000b7e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000b82:	bf06      	itte	eq
 8000b84:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000b88:	3401      	addeq	r4, #1
 8000b8a:	3d01      	subne	r5, #1
 8000b8c:	e74e      	b.n	8000a2c <__adddf3+0x8c>
 8000b8e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000b92:	bf18      	it	ne
 8000b94:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000b98:	d029      	beq.n	8000bee <__adddf3+0x24e>
 8000b9a:	ea94 0f05 	teq	r4, r5
 8000b9e:	bf08      	it	eq
 8000ba0:	ea90 0f02 	teqeq	r0, r2
 8000ba4:	d005      	beq.n	8000bb2 <__adddf3+0x212>
 8000ba6:	ea54 0c00 	orrs.w	ip, r4, r0
 8000baa:	bf04      	itt	eq
 8000bac:	4619      	moveq	r1, r3
 8000bae:	4610      	moveq	r0, r2
 8000bb0:	bd30      	pop	{r4, r5, pc}
 8000bb2:	ea91 0f03 	teq	r1, r3
 8000bb6:	bf1e      	ittt	ne
 8000bb8:	2100      	movne	r1, #0
 8000bba:	2000      	movne	r0, #0
 8000bbc:	bd30      	popne	{r4, r5, pc}
 8000bbe:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000bc2:	d105      	bne.n	8000bd0 <__adddf3+0x230>
 8000bc4:	0040      	lsls	r0, r0, #1
 8000bc6:	4149      	adcs	r1, r1
 8000bc8:	bf28      	it	cs
 8000bca:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000bce:	bd30      	pop	{r4, r5, pc}
 8000bd0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000bd4:	bf3c      	itt	cc
 8000bd6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000bda:	bd30      	popcc	{r4, r5, pc}
 8000bdc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000be0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000be4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000be8:	f04f 0000 	mov.w	r0, #0
 8000bec:	bd30      	pop	{r4, r5, pc}
 8000bee:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000bf2:	bf1a      	itte	ne
 8000bf4:	4619      	movne	r1, r3
 8000bf6:	4610      	movne	r0, r2
 8000bf8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000bfc:	bf1c      	itt	ne
 8000bfe:	460b      	movne	r3, r1
 8000c00:	4602      	movne	r2, r0
 8000c02:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000c06:	bf06      	itte	eq
 8000c08:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000c0c:	ea91 0f03 	teqeq	r1, r3
 8000c10:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000c14:	bd30      	pop	{r4, r5, pc}
 8000c16:	bf00      	nop

08000c18 <__aeabi_ui2d>:
 8000c18:	f090 0f00 	teq	r0, #0
 8000c1c:	bf04      	itt	eq
 8000c1e:	2100      	moveq	r1, #0
 8000c20:	4770      	bxeq	lr
 8000c22:	b530      	push	{r4, r5, lr}
 8000c24:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000c28:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000c2c:	f04f 0500 	mov.w	r5, #0
 8000c30:	f04f 0100 	mov.w	r1, #0
 8000c34:	e750      	b.n	8000ad8 <__adddf3+0x138>
 8000c36:	bf00      	nop

08000c38 <__aeabi_i2d>:
 8000c38:	f090 0f00 	teq	r0, #0
 8000c3c:	bf04      	itt	eq
 8000c3e:	2100      	moveq	r1, #0
 8000c40:	4770      	bxeq	lr
 8000c42:	b530      	push	{r4, r5, lr}
 8000c44:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000c48:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000c4c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000c50:	bf48      	it	mi
 8000c52:	4240      	negmi	r0, r0
 8000c54:	f04f 0100 	mov.w	r1, #0
 8000c58:	e73e      	b.n	8000ad8 <__adddf3+0x138>
 8000c5a:	bf00      	nop

08000c5c <__aeabi_f2d>:
 8000c5c:	0042      	lsls	r2, r0, #1
 8000c5e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000c62:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c66:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000c6a:	bf1f      	itttt	ne
 8000c6c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000c70:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000c74:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000c78:	4770      	bxne	lr
 8000c7a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8000c7e:	bf08      	it	eq
 8000c80:	4770      	bxeq	lr
 8000c82:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000c86:	bf04      	itt	eq
 8000c88:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000c8c:	4770      	bxeq	lr
 8000c8e:	b530      	push	{r4, r5, lr}
 8000c90:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000c94:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000c98:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000c9c:	e71c      	b.n	8000ad8 <__adddf3+0x138>
 8000c9e:	bf00      	nop

08000ca0 <__aeabi_ul2d>:
 8000ca0:	ea50 0201 	orrs.w	r2, r0, r1
 8000ca4:	bf08      	it	eq
 8000ca6:	4770      	bxeq	lr
 8000ca8:	b530      	push	{r4, r5, lr}
 8000caa:	f04f 0500 	mov.w	r5, #0
 8000cae:	e00a      	b.n	8000cc6 <__aeabi_l2d+0x16>

08000cb0 <__aeabi_l2d>:
 8000cb0:	ea50 0201 	orrs.w	r2, r0, r1
 8000cb4:	bf08      	it	eq
 8000cb6:	4770      	bxeq	lr
 8000cb8:	b530      	push	{r4, r5, lr}
 8000cba:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000cbe:	d502      	bpl.n	8000cc6 <__aeabi_l2d+0x16>
 8000cc0:	4240      	negs	r0, r0
 8000cc2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cc6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000cca:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000cce:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000cd2:	f43f aed8 	beq.w	8000a86 <__adddf3+0xe6>
 8000cd6:	f04f 0203 	mov.w	r2, #3
 8000cda:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000cde:	bf18      	it	ne
 8000ce0:	3203      	addne	r2, #3
 8000ce2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000ce6:	bf18      	it	ne
 8000ce8:	3203      	addne	r2, #3
 8000cea:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000cee:	f1c2 0320 	rsb	r3, r2, #32
 8000cf2:	fa00 fc03 	lsl.w	ip, r0, r3
 8000cf6:	fa20 f002 	lsr.w	r0, r0, r2
 8000cfa:	fa01 fe03 	lsl.w	lr, r1, r3
 8000cfe:	ea40 000e 	orr.w	r0, r0, lr
 8000d02:	fa21 f102 	lsr.w	r1, r1, r2
 8000d06:	4414      	add	r4, r2
 8000d08:	e6bd      	b.n	8000a86 <__adddf3+0xe6>
 8000d0a:	bf00      	nop

08000d0c <__aeabi_dmul>:
 8000d0c:	b570      	push	{r4, r5, r6, lr}
 8000d0e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000d12:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000d16:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000d1a:	bf1d      	ittte	ne
 8000d1c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000d20:	ea94 0f0c 	teqne	r4, ip
 8000d24:	ea95 0f0c 	teqne	r5, ip
 8000d28:	f000 f8de 	bleq	8000ee8 <__aeabi_dmul+0x1dc>
 8000d2c:	442c      	add	r4, r5
 8000d2e:	ea81 0603 	eor.w	r6, r1, r3
 8000d32:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000d36:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000d3a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000d3e:	bf18      	it	ne
 8000d40:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000d44:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000d48:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000d4c:	d038      	beq.n	8000dc0 <__aeabi_dmul+0xb4>
 8000d4e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000d52:	f04f 0500 	mov.w	r5, #0
 8000d56:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000d5a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000d5e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000d62:	f04f 0600 	mov.w	r6, #0
 8000d66:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000d6a:	f09c 0f00 	teq	ip, #0
 8000d6e:	bf18      	it	ne
 8000d70:	f04e 0e01 	orrne.w	lr, lr, #1
 8000d74:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000d78:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000d7c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000d80:	d204      	bcs.n	8000d8c <__aeabi_dmul+0x80>
 8000d82:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000d86:	416d      	adcs	r5, r5
 8000d88:	eb46 0606 	adc.w	r6, r6, r6
 8000d8c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000d90:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000d94:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000d98:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000d9c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000da0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000da4:	bf88      	it	hi
 8000da6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000daa:	d81e      	bhi.n	8000dea <__aeabi_dmul+0xde>
 8000dac:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000db0:	bf08      	it	eq
 8000db2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000db6:	f150 0000 	adcs.w	r0, r0, #0
 8000dba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000dbe:	bd70      	pop	{r4, r5, r6, pc}
 8000dc0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000dc4:	ea46 0101 	orr.w	r1, r6, r1
 8000dc8:	ea40 0002 	orr.w	r0, r0, r2
 8000dcc:	ea81 0103 	eor.w	r1, r1, r3
 8000dd0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000dd4:	bfc2      	ittt	gt
 8000dd6:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000dda:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000dde:	bd70      	popgt	{r4, r5, r6, pc}
 8000de0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000de4:	f04f 0e00 	mov.w	lr, #0
 8000de8:	3c01      	subs	r4, #1
 8000dea:	f300 80ab 	bgt.w	8000f44 <__aeabi_dmul+0x238>
 8000dee:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000df2:	bfde      	ittt	le
 8000df4:	2000      	movle	r0, #0
 8000df6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000dfa:	bd70      	pople	{r4, r5, r6, pc}
 8000dfc:	f1c4 0400 	rsb	r4, r4, #0
 8000e00:	3c20      	subs	r4, #32
 8000e02:	da35      	bge.n	8000e70 <__aeabi_dmul+0x164>
 8000e04:	340c      	adds	r4, #12
 8000e06:	dc1b      	bgt.n	8000e40 <__aeabi_dmul+0x134>
 8000e08:	f104 0414 	add.w	r4, r4, #20
 8000e0c:	f1c4 0520 	rsb	r5, r4, #32
 8000e10:	fa00 f305 	lsl.w	r3, r0, r5
 8000e14:	fa20 f004 	lsr.w	r0, r0, r4
 8000e18:	fa01 f205 	lsl.w	r2, r1, r5
 8000e1c:	ea40 0002 	orr.w	r0, r0, r2
 8000e20:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000e24:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000e28:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000e2c:	fa21 f604 	lsr.w	r6, r1, r4
 8000e30:	eb42 0106 	adc.w	r1, r2, r6
 8000e34:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000e38:	bf08      	it	eq
 8000e3a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000e3e:	bd70      	pop	{r4, r5, r6, pc}
 8000e40:	f1c4 040c 	rsb	r4, r4, #12
 8000e44:	f1c4 0520 	rsb	r5, r4, #32
 8000e48:	fa00 f304 	lsl.w	r3, r0, r4
 8000e4c:	fa20 f005 	lsr.w	r0, r0, r5
 8000e50:	fa01 f204 	lsl.w	r2, r1, r4
 8000e54:	ea40 0002 	orr.w	r0, r0, r2
 8000e58:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000e5c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000e60:	f141 0100 	adc.w	r1, r1, #0
 8000e64:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000e68:	bf08      	it	eq
 8000e6a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000e6e:	bd70      	pop	{r4, r5, r6, pc}
 8000e70:	f1c4 0520 	rsb	r5, r4, #32
 8000e74:	fa00 f205 	lsl.w	r2, r0, r5
 8000e78:	ea4e 0e02 	orr.w	lr, lr, r2
 8000e7c:	fa20 f304 	lsr.w	r3, r0, r4
 8000e80:	fa01 f205 	lsl.w	r2, r1, r5
 8000e84:	ea43 0302 	orr.w	r3, r3, r2
 8000e88:	fa21 f004 	lsr.w	r0, r1, r4
 8000e8c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000e90:	fa21 f204 	lsr.w	r2, r1, r4
 8000e94:	ea20 0002 	bic.w	r0, r0, r2
 8000e98:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000e9c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000ea0:	bf08      	it	eq
 8000ea2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000ea6:	bd70      	pop	{r4, r5, r6, pc}
 8000ea8:	f094 0f00 	teq	r4, #0
 8000eac:	d10f      	bne.n	8000ece <__aeabi_dmul+0x1c2>
 8000eae:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000eb2:	0040      	lsls	r0, r0, #1
 8000eb4:	eb41 0101 	adc.w	r1, r1, r1
 8000eb8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000ebc:	bf08      	it	eq
 8000ebe:	3c01      	subeq	r4, #1
 8000ec0:	d0f7      	beq.n	8000eb2 <__aeabi_dmul+0x1a6>
 8000ec2:	ea41 0106 	orr.w	r1, r1, r6
 8000ec6:	f095 0f00 	teq	r5, #0
 8000eca:	bf18      	it	ne
 8000ecc:	4770      	bxne	lr
 8000ece:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000ed2:	0052      	lsls	r2, r2, #1
 8000ed4:	eb43 0303 	adc.w	r3, r3, r3
 8000ed8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000edc:	bf08      	it	eq
 8000ede:	3d01      	subeq	r5, #1
 8000ee0:	d0f7      	beq.n	8000ed2 <__aeabi_dmul+0x1c6>
 8000ee2:	ea43 0306 	orr.w	r3, r3, r6
 8000ee6:	4770      	bx	lr
 8000ee8:	ea94 0f0c 	teq	r4, ip
 8000eec:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000ef0:	bf18      	it	ne
 8000ef2:	ea95 0f0c 	teqne	r5, ip
 8000ef6:	d00c      	beq.n	8000f12 <__aeabi_dmul+0x206>
 8000ef8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000efc:	bf18      	it	ne
 8000efe:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000f02:	d1d1      	bne.n	8000ea8 <__aeabi_dmul+0x19c>
 8000f04:	ea81 0103 	eor.w	r1, r1, r3
 8000f08:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000f0c:	f04f 0000 	mov.w	r0, #0
 8000f10:	bd70      	pop	{r4, r5, r6, pc}
 8000f12:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000f16:	bf06      	itte	eq
 8000f18:	4610      	moveq	r0, r2
 8000f1a:	4619      	moveq	r1, r3
 8000f1c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000f20:	d019      	beq.n	8000f56 <__aeabi_dmul+0x24a>
 8000f22:	ea94 0f0c 	teq	r4, ip
 8000f26:	d102      	bne.n	8000f2e <__aeabi_dmul+0x222>
 8000f28:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000f2c:	d113      	bne.n	8000f56 <__aeabi_dmul+0x24a>
 8000f2e:	ea95 0f0c 	teq	r5, ip
 8000f32:	d105      	bne.n	8000f40 <__aeabi_dmul+0x234>
 8000f34:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000f38:	bf1c      	itt	ne
 8000f3a:	4610      	movne	r0, r2
 8000f3c:	4619      	movne	r1, r3
 8000f3e:	d10a      	bne.n	8000f56 <__aeabi_dmul+0x24a>
 8000f40:	ea81 0103 	eor.w	r1, r1, r3
 8000f44:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000f48:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000f4c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000f50:	f04f 0000 	mov.w	r0, #0
 8000f54:	bd70      	pop	{r4, r5, r6, pc}
 8000f56:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000f5a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000f5e:	bd70      	pop	{r4, r5, r6, pc}

08000f60 <__aeabi_ddiv>:
 8000f60:	b570      	push	{r4, r5, r6, lr}
 8000f62:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000f66:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000f6a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000f6e:	bf1d      	ittte	ne
 8000f70:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000f74:	ea94 0f0c 	teqne	r4, ip
 8000f78:	ea95 0f0c 	teqne	r5, ip
 8000f7c:	f000 f8a7 	bleq	80010ce <__aeabi_ddiv+0x16e>
 8000f80:	eba4 0405 	sub.w	r4, r4, r5
 8000f84:	ea81 0e03 	eor.w	lr, r1, r3
 8000f88:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000f8c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000f90:	f000 8088 	beq.w	80010a4 <__aeabi_ddiv+0x144>
 8000f94:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000f98:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000f9c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000fa0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000fa4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000fa8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000fac:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000fb0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000fb4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000fb8:	429d      	cmp	r5, r3
 8000fba:	bf08      	it	eq
 8000fbc:	4296      	cmpeq	r6, r2
 8000fbe:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000fc2:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000fc6:	d202      	bcs.n	8000fce <__aeabi_ddiv+0x6e>
 8000fc8:	085b      	lsrs	r3, r3, #1
 8000fca:	ea4f 0232 	mov.w	r2, r2, rrx
 8000fce:	1ab6      	subs	r6, r6, r2
 8000fd0:	eb65 0503 	sbc.w	r5, r5, r3
 8000fd4:	085b      	lsrs	r3, r3, #1
 8000fd6:	ea4f 0232 	mov.w	r2, r2, rrx
 8000fda:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000fde:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000fe2:	ebb6 0e02 	subs.w	lr, r6, r2
 8000fe6:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000fea:	bf22      	ittt	cs
 8000fec:	1ab6      	subcs	r6, r6, r2
 8000fee:	4675      	movcs	r5, lr
 8000ff0:	ea40 000c 	orrcs.w	r0, r0, ip
 8000ff4:	085b      	lsrs	r3, r3, #1
 8000ff6:	ea4f 0232 	mov.w	r2, r2, rrx
 8000ffa:	ebb6 0e02 	subs.w	lr, r6, r2
 8000ffe:	eb75 0e03 	sbcs.w	lr, r5, r3
 8001002:	bf22      	ittt	cs
 8001004:	1ab6      	subcs	r6, r6, r2
 8001006:	4675      	movcs	r5, lr
 8001008:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800100c:	085b      	lsrs	r3, r3, #1
 800100e:	ea4f 0232 	mov.w	r2, r2, rrx
 8001012:	ebb6 0e02 	subs.w	lr, r6, r2
 8001016:	eb75 0e03 	sbcs.w	lr, r5, r3
 800101a:	bf22      	ittt	cs
 800101c:	1ab6      	subcs	r6, r6, r2
 800101e:	4675      	movcs	r5, lr
 8001020:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8001024:	085b      	lsrs	r3, r3, #1
 8001026:	ea4f 0232 	mov.w	r2, r2, rrx
 800102a:	ebb6 0e02 	subs.w	lr, r6, r2
 800102e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8001032:	bf22      	ittt	cs
 8001034:	1ab6      	subcs	r6, r6, r2
 8001036:	4675      	movcs	r5, lr
 8001038:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800103c:	ea55 0e06 	orrs.w	lr, r5, r6
 8001040:	d018      	beq.n	8001074 <__aeabi_ddiv+0x114>
 8001042:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8001046:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800104a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800104e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8001052:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8001056:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800105a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800105e:	d1c0      	bne.n	8000fe2 <__aeabi_ddiv+0x82>
 8001060:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8001064:	d10b      	bne.n	800107e <__aeabi_ddiv+0x11e>
 8001066:	ea41 0100 	orr.w	r1, r1, r0
 800106a:	f04f 0000 	mov.w	r0, #0
 800106e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8001072:	e7b6      	b.n	8000fe2 <__aeabi_ddiv+0x82>
 8001074:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8001078:	bf04      	itt	eq
 800107a:	4301      	orreq	r1, r0
 800107c:	2000      	moveq	r0, #0
 800107e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8001082:	bf88      	it	hi
 8001084:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8001088:	f63f aeaf 	bhi.w	8000dea <__aeabi_dmul+0xde>
 800108c:	ebb5 0c03 	subs.w	ip, r5, r3
 8001090:	bf04      	itt	eq
 8001092:	ebb6 0c02 	subseq.w	ip, r6, r2
 8001096:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800109a:	f150 0000 	adcs.w	r0, r0, #0
 800109e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80010a2:	bd70      	pop	{r4, r5, r6, pc}
 80010a4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80010a8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80010ac:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80010b0:	bfc2      	ittt	gt
 80010b2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80010b6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80010ba:	bd70      	popgt	{r4, r5, r6, pc}
 80010bc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80010c0:	f04f 0e00 	mov.w	lr, #0
 80010c4:	3c01      	subs	r4, #1
 80010c6:	e690      	b.n	8000dea <__aeabi_dmul+0xde>
 80010c8:	ea45 0e06 	orr.w	lr, r5, r6
 80010cc:	e68d      	b.n	8000dea <__aeabi_dmul+0xde>
 80010ce:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80010d2:	ea94 0f0c 	teq	r4, ip
 80010d6:	bf08      	it	eq
 80010d8:	ea95 0f0c 	teqeq	r5, ip
 80010dc:	f43f af3b 	beq.w	8000f56 <__aeabi_dmul+0x24a>
 80010e0:	ea94 0f0c 	teq	r4, ip
 80010e4:	d10a      	bne.n	80010fc <__aeabi_ddiv+0x19c>
 80010e6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80010ea:	f47f af34 	bne.w	8000f56 <__aeabi_dmul+0x24a>
 80010ee:	ea95 0f0c 	teq	r5, ip
 80010f2:	f47f af25 	bne.w	8000f40 <__aeabi_dmul+0x234>
 80010f6:	4610      	mov	r0, r2
 80010f8:	4619      	mov	r1, r3
 80010fa:	e72c      	b.n	8000f56 <__aeabi_dmul+0x24a>
 80010fc:	ea95 0f0c 	teq	r5, ip
 8001100:	d106      	bne.n	8001110 <__aeabi_ddiv+0x1b0>
 8001102:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8001106:	f43f aefd 	beq.w	8000f04 <__aeabi_dmul+0x1f8>
 800110a:	4610      	mov	r0, r2
 800110c:	4619      	mov	r1, r3
 800110e:	e722      	b.n	8000f56 <__aeabi_dmul+0x24a>
 8001110:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8001114:	bf18      	it	ne
 8001116:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800111a:	f47f aec5 	bne.w	8000ea8 <__aeabi_dmul+0x19c>
 800111e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8001122:	f47f af0d 	bne.w	8000f40 <__aeabi_dmul+0x234>
 8001126:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800112a:	f47f aeeb 	bne.w	8000f04 <__aeabi_dmul+0x1f8>
 800112e:	e712      	b.n	8000f56 <__aeabi_dmul+0x24a>

08001130 <__aeabi_d2uiz>:
 8001130:	004a      	lsls	r2, r1, #1
 8001132:	d211      	bcs.n	8001158 <__aeabi_d2uiz+0x28>
 8001134:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8001138:	d211      	bcs.n	800115e <__aeabi_d2uiz+0x2e>
 800113a:	d50d      	bpl.n	8001158 <__aeabi_d2uiz+0x28>
 800113c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8001140:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8001144:	d40e      	bmi.n	8001164 <__aeabi_d2uiz+0x34>
 8001146:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 800114a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800114e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8001152:	fa23 f002 	lsr.w	r0, r3, r2
 8001156:	4770      	bx	lr
 8001158:	f04f 0000 	mov.w	r0, #0
 800115c:	4770      	bx	lr
 800115e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8001162:	d102      	bne.n	800116a <__aeabi_d2uiz+0x3a>
 8001164:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001168:	4770      	bx	lr
 800116a:	f04f 0000 	mov.w	r0, #0
 800116e:	4770      	bx	lr

08001170 <__aeabi_f2uiz>:
 8001170:	0042      	lsls	r2, r0, #1
 8001172:	d20e      	bcs.n	8001192 <__aeabi_f2uiz+0x22>
 8001174:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8001178:	d30b      	bcc.n	8001192 <__aeabi_f2uiz+0x22>
 800117a:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800117e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001182:	d409      	bmi.n	8001198 <__aeabi_f2uiz+0x28>
 8001184:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8001188:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800118c:	fa23 f002 	lsr.w	r0, r3, r2
 8001190:	4770      	bx	lr
 8001192:	f04f 0000 	mov.w	r0, #0
 8001196:	4770      	bx	lr
 8001198:	f112 0f61 	cmn.w	r2, #97	; 0x61
 800119c:	d101      	bne.n	80011a2 <__aeabi_f2uiz+0x32>
 800119e:	0242      	lsls	r2, r0, #9
 80011a0:	d102      	bne.n	80011a8 <__aeabi_f2uiz+0x38>
 80011a2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80011a6:	4770      	bx	lr
 80011a8:	f04f 0000 	mov.w	r0, #0
 80011ac:	4770      	bx	lr
 80011ae:	bf00      	nop

080011b0 <Reset_Handler>:
 80011b0:	480c      	ldr	r0, [pc, #48]	; (80011e4 <Zerobss+0x10>)
 80011b2:	4685      	mov	sp, r0
 80011b4:	2100      	movs	r1, #0
 80011b6:	e003      	b.n	80011c0 <DataInit>

080011b8 <CopyData>:
 80011b8:	4b0b      	ldr	r3, [pc, #44]	; (80011e8 <Zerobss+0x14>)
 80011ba:	585b      	ldr	r3, [r3, r1]
 80011bc:	5043      	str	r3, [r0, r1]
 80011be:	3104      	adds	r1, #4

080011c0 <DataInit>:
 80011c0:	480a      	ldr	r0, [pc, #40]	; (80011ec <Zerobss+0x18>)
 80011c2:	4b0b      	ldr	r3, [pc, #44]	; (80011f0 <Zerobss+0x1c>)
 80011c4:	1842      	adds	r2, r0, r1
 80011c6:	429a      	cmp	r2, r3
 80011c8:	d3f6      	bcc.n	80011b8 <CopyData>
 80011ca:	4a0a      	ldr	r2, [pc, #40]	; (80011f4 <Zerobss+0x20>)
 80011cc:	e002      	b.n	80011d4 <Zerobss>

080011ce <FillZerobss>:
 80011ce:	2300      	movs	r3, #0
 80011d0:	f842 3b04 	str.w	r3, [r2], #4

080011d4 <Zerobss>:
 80011d4:	4b08      	ldr	r3, [pc, #32]	; (80011f8 <Zerobss+0x24>)
 80011d6:	429a      	cmp	r2, r3
 80011d8:	d3f9      	bcc.n	80011ce <FillZerobss>
 80011da:	f003 fc1f 	bl	8004a1c <SystemInit>
 80011de:	f000 f837 	bl	8001250 <main>
 80011e2:	4770      	bx	lr
 80011e4:	2000c000 	andcs	ip, r0, r0
 80011e8:	08005eac 	stmdaeq	r0, {r2, r3, r5, r7, r9, sl, fp, ip, lr}
 80011ec:	20000000 	andcs	r0, r0, r0
 80011f0:	200000ec 	andcs	r0, r0, ip, ror #1
 80011f4:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 80011f8:	2000181c 	andcs	r1, r0, ip, lsl r8

080011fc <ADC0_1_IRQHandler>:
 80011fc:	e7fe      	b.n	80011fc <ADC0_1_IRQHandler>

080011fe <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 80011fe:	b470      	push	{r4, r5, r6}
 8001200:	790a      	ldrb	r2, [r1, #4]
 8001202:	680b      	ldr	r3, [r1, #0]
 8001204:	2a20      	cmp	r2, #32
 8001206:	bf28      	it	cs
 8001208:	2220      	movcs	r2, #32
 800120a:	f890 1052 	ldrb.w	r1, [r0, #82]	; 0x52
 800120e:	189c      	adds	r4, r3, r2
 8001210:	b189      	cbz	r1, 8001236 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x38>
 8001212:	f100 010a 	add.w	r1, r0, #10
 8001216:	460d      	mov	r5, r1
 8001218:	42a3      	cmp	r3, r4
 800121a:	d004      	beq.n	8001226 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x28>
 800121c:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001220:	f805 6b01 	strb.w	r6, [r5], #1
 8001224:	e7f8      	b.n	8001218 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x1a>
 8001226:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 800122a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 800122c:	b170      	cbz	r0, 800124c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x4e>
 800122e:	bc70      	pop	{r4, r5, r6}
 8001230:	6803      	ldr	r3, [r0, #0]
 8001232:	689b      	ldr	r3, [r3, #8]
 8001234:	4718      	bx	r3
 8001236:	f100 0153 	add.w	r1, r0, #83	; 0x53
 800123a:	42a3      	cmp	r3, r4
 800123c:	d004      	beq.n	8001248 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x4a>
 800123e:	f813 5b01 	ldrb.w	r5, [r3], #1
 8001242:	f801 5b01 	strb.w	r5, [r1], #1
 8001246:	e7f8      	b.n	800123a <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3c>
 8001248:	f880 2073 	strb.w	r2, [r0, #115]	; 0x73
 800124c:	bc70      	pop	{r4, r5, r6}
 800124e:	4770      	bx	lr

08001250 <main>:
 8001250:	b570      	push	{r4, r5, r6, lr}
 8001252:	f5ad 7d78 	sub.w	sp, sp, #992	; 0x3e0
 8001256:	a807      	add	r0, sp, #28
 8001258:	f002 ff44 	bl	80040e4 <Hardware::Hardware()>
 800125c:	a80f      	add	r0, sp, #60	; 0x3c
 800125e:	f002 fc3d 	bl	8003adc <Network::Network()>
 8001262:	a817      	add	r0, sp, #92	; 0x5c
 8001264:	f002 ff2e 	bl	80040c4 <LedBlink::LedBlink()>
 8001268:	a81d      	add	r0, sp, #116	; 0x74
 800126a:	f002 fcb7 	bl	8003bdc <Display::Display()>
 800126e:	a805      	add	r0, sp, #20
 8001270:	f002 fb46 	bl	8003900 <FlashRom::FlashRom()>
 8001274:	a806      	add	r0, sp, #24
 8001276:	f002 f9b5 	bl	80035e4 <SpiFlashStore::SpiFlashStore()>
 800127a:	a831      	add	r0, sp, #196	; 0xc4
 800127c:	f000 fbf0 	bl	8001a60 <Widget::Widget()>
 8001280:	2300      	movs	r3, #0
 8001282:	2201      	movs	r2, #1
 8001284:	4619      	mov	r1, r3
 8001286:	a831      	add	r0, sp, #196	; 0xc4
 8001288:	f001 fdc6 	bl	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800128c:	a809      	add	r0, sp, #36	; 0x24
 800128e:	f002 fb2b 	bl	80038e8 <StoreWidget::StoreWidget()>
 8001292:	a909      	add	r1, sp, #36	; 0x24
 8001294:	a813      	add	r0, sp, #76	; 0x4c
 8001296:	f000 ff99 	bl	80021cc <WidgetParams::WidgetParams(WidgetParamsStore*)>
 800129a:	a813      	add	r0, sp, #76	; 0x4c
 800129c:	f000 ff9e 	bl	80021dc <WidgetParams::Load()>
 80012a0:	b128      	cbz	r0, 80012ae <main+0x5e>
 80012a2:	a813      	add	r0, sp, #76	; 0x4c
 80012a4:	f001 f816 	bl	80022d4 <WidgetParams::Set()>
 80012a8:	a813      	add	r0, sp, #76	; 0x4c
 80012aa:	f001 f836 	bl	800231a <WidgetParams::Dump()>
 80012ae:	a80b      	add	r0, sp, #44	; 0x2c
 80012b0:	f002 fade 	bl	8003870 <StoreRDMDevice::StoreRDMDevice()>
 80012b4:	a90b      	add	r1, sp, #44	; 0x2c
 80012b6:	a825      	add	r0, sp, #148	; 0x94
 80012b8:	f002 f892 	bl	80033e0 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 80012bc:	a838      	add	r0, sp, #224	; 0xe0
 80012be:	494f      	ldr	r1, [pc, #316]	; (80013fc <main+0x1ac>)
 80012c0:	f7ff ff9d 	bl	80011fe <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 80012c4:	a825      	add	r0, sp, #148	; 0x94
 80012c6:	f002 f89d 	bl	8003404 <RDMDeviceParams::Load()>
 80012ca:	b130      	cbz	r0, 80012da <main+0x8a>
 80012cc:	a825      	add	r0, sp, #148	; 0x94
 80012ce:	a938      	add	r1, sp, #224	; 0xe0
 80012d0:	f002 f8a3 	bl	800341a <RDMDeviceParams::Set(RDMDevice*)>
 80012d4:	a825      	add	r0, sp, #148	; 0x94
 80012d6:	f002 f8d5 	bl	8003484 <RDMDeviceParams::Dump()>
 80012da:	2301      	movs	r3, #1
 80012dc:	f88d 3132 	strb.w	r3, [sp, #306]	; 0x132
 80012e0:	f20d 1333 	addw	r3, sp, #307	; 0x133
 80012e4:	930d      	str	r3, [sp, #52]	; 0x34
 80012e6:	f89d 3153 	ldrb.w	r3, [sp, #339]	; 0x153
 80012ea:	a90d      	add	r1, sp, #52	; 0x34
 80012ec:	a838      	add	r0, sp, #224	; 0xe0
 80012ee:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
 80012f2:	f7ff ff84 	bl	80011fe <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 80012f6:	f10d 01ea 	add.w	r1, sp, #234	; 0xea
 80012fa:	2200      	movs	r2, #0
 80012fc:	460e      	mov	r6, r1
 80012fe:	f89d 3153 	ldrb.w	r3, [sp, #339]	; 0x153
 8001302:	f89d 510a 	ldrb.w	r5, [sp, #266]	; 0x10a
 8001306:	4295      	cmp	r5, r2
 8001308:	d905      	bls.n	8001316 <main+0xc6>
 800130a:	f811 0b01 	ldrb.w	r0, [r1], #1
 800130e:	3201      	adds	r2, #1
 8001310:	4403      	add	r3, r0
 8001312:	b29b      	uxth	r3, r3
 8001314:	e7f7      	b.n	8001306 <main+0xb6>
 8001316:	f8ad 3154 	strh.w	r3, [sp, #340]	; 0x154
 800131a:	4b39      	ldr	r3, [pc, #228]	; (8001400 <main+0x1b0>)
 800131c:	4a39      	ldr	r2, [pc, #228]	; (8001404 <main+0x1b4>)
 800131e:	493a      	ldr	r1, [pc, #232]	; (8001408 <main+0x1b8>)
 8001320:	9300      	str	r3, [sp, #0]
 8001322:	483a      	ldr	r0, [pc, #232]	; (800140c <main+0x1bc>)
 8001324:	4b3a      	ldr	r3, [pc, #232]	; (8001410 <main+0x1c0>)
 8001326:	f89d 4057 	ldrb.w	r4, [sp, #87]	; 0x57
 800132a:	f000 fb89 	bl	8001a40 <printf>
 800132e:	220c      	movs	r2, #12
 8001330:	4b38      	ldr	r3, [pc, #224]	; (8001414 <main+0x1c4>)
 8001332:	4621      	mov	r1, r4
 8001334:	fb02 3204 	mla	r2, r2, r4, r3
 8001338:	4837      	ldr	r0, [pc, #220]	; (8001418 <main+0x1c8>)
 800133a:	f000 fb81 	bl	8001a40 <printf>
 800133e:	f89d 30e5 	ldrb.w	r3, [sp, #229]	; 0xe5
 8001342:	f89d 20e1 	ldrb.w	r2, [sp, #225]	; 0xe1
 8001346:	9302      	str	r3, [sp, #8]
 8001348:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 800134c:	f89d 10e0 	ldrb.w	r1, [sp, #224]	; 0xe0
 8001350:	9301      	str	r3, [sp, #4]
 8001352:	f89d 30e3 	ldrb.w	r3, [sp, #227]	; 0xe3
 8001356:	4831      	ldr	r0, [pc, #196]	; (800141c <main+0x1cc>)
 8001358:	9300      	str	r3, [sp, #0]
 800135a:	f89d 30e2 	ldrb.w	r3, [sp, #226]	; 0xe2
 800135e:	f000 fb6f 	bl	8001a40 <printf>
 8001362:	4632      	mov	r2, r6
 8001364:	4629      	mov	r1, r5
 8001366:	482e      	ldr	r0, [pc, #184]	; (8001420 <main+0x1d0>)
 8001368:	f000 fb6a 	bl	8001a40 <printf>
 800136c:	2102      	movs	r1, #2
 800136e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001372:	f003 fd59 	bl	8004e28 <fwdgt_config>
 8001376:	2801      	cmp	r0, #1
 8001378:	bf0c      	ite	eq
 800137a:	2301      	moveq	r3, #1
 800137c:	2300      	movne	r3, #0
 800137e:	f88d 3020 	strb.w	r3, [sp, #32]
 8001382:	d101      	bne.n	8001388 <main+0x138>
 8001384:	f003 fd40 	bl	8004e08 <fwdgt_enable>
 8001388:	2c03      	cmp	r4, #3
 800138a:	d108      	bne.n	800139e <main+0x14e>
 800138c:	2301      	movs	r3, #1
 800138e:	a831      	add	r0, sp, #196	; 0xc4
 8001390:	461a      	mov	r2, r3
 8001392:	2100      	movs	r1, #0
 8001394:	f001 fd40 	bl	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001398:	a831      	add	r0, sp, #196	; 0xc4
 800139a:	f001 f8af 	bl	80024fc <Widget::SnifferFillTransmitBuffer()>
 800139e:	2601      	movs	r6, #1
 80013a0:	4c20      	ldr	r4, [pc, #128]	; (8001424 <main+0x1d4>)
 80013a2:	4d21      	ldr	r5, [pc, #132]	; (8001428 <main+0x1d8>)
 80013a4:	f003 fd38 	bl	8004e18 <fwdgt_counter_reload>
 80013a8:	a831      	add	r0, sp, #196	; 0xc4
 80013aa:	f000 fe27 	bl	8001ffc <Widget::ReceiveDataFromHost()>
 80013ae:	a831      	add	r0, sp, #196	; 0xc4
 80013b0:	f000 fbd4 	bl	8001b5c <Widget::ReceivedDmxPacket()>
 80013b4:	a831      	add	r0, sp, #196	; 0xc4
 80013b6:	f000 fc99 	bl	8001cec <Widget::ReceivedDmxChangeOfStatePacket()>
 80013ba:	a831      	add	r0, sp, #196	; 0xc4
 80013bc:	f000 fd24 	bl	8001e08 <Widget::ReceivedRdmPacket()>
 80013c0:	a831      	add	r0, sp, #196	; 0xc4
 80013c2:	f000 fd97 	bl	8001ef4 <Widget::RdmTimeout()>
 80013c6:	a831      	add	r0, sp, #196	; 0xc4
 80013c8:	f001 f842 	bl	8002450 <Widget::SnifferRdm()>
 80013cc:	a831      	add	r0, sp, #196	; 0xc4
 80013ce:	f001 f819 	bl	8002404 <Widget::SnifferDmx()>
 80013d2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80013d4:	b172      	cbz	r2, 80013f4 <main+0x1a4>
 80013d6:	6823      	ldr	r3, [r4, #0]
 80013d8:	991c      	ldr	r1, [sp, #112]	; 0x70
 80013da:	1a5b      	subs	r3, r3, r1
 80013dc:	429a      	cmp	r2, r3
 80013de:	d809      	bhi.n	80013f4 <main+0x1a4>
 80013e0:	6823      	ldr	r3, [r4, #0]
 80013e2:	931c      	str	r3, [sp, #112]	; 0x70
 80013e4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80013e6:	2b01      	cmp	r3, #1
 80013e8:	f083 0201 	eor.w	r2, r3, #1
 80013ec:	921b      	str	r2, [sp, #108]	; 0x6c
 80013ee:	bf14      	ite	ne
 80013f0:	612e      	strne	r6, [r5, #16]
 80013f2:	616b      	streq	r3, [r5, #20]
 80013f4:	a806      	add	r0, sp, #24
 80013f6:	f002 f98f 	bl	8003718 <SpiFlashStore::Flash()>
 80013fa:	e7d3      	b.n	80013a4 <main+0x154>
 80013fc:	080056d4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, ip, lr}
 8001400:	08005621 	stmdaeq	r0, {r0, r5, r9, sl, ip, lr}
 8001404:	080055f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl, ip, lr}
 8001408:	080056dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl, ip, lr}
 800140c:	08005602 	stmdaeq	r0, {r1, r9, sl, ip, lr}
 8001410:	080055ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl, ip, lr}
 8001414:	080056e0 	stmdaeq	r0, {r5, r6, r7, r9, sl, ip, lr}
 8001418:	0800562a 	stmdaeq	r0, {r1, r3, r5, r9, sl, ip, lr}
 800141c:	08005684 	stmdaeq	r0, {r2, r7, r9, sl, ip, lr}
 8001420:	080056ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9, sl, ip, lr}
 8001424:	20001818 	andcs	r1, r0, r8, lsl r8
 8001428:	40011000 	andmi	r1, r1, r0

0800142c <_itostr>:
 800142c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800142e:	0fc7      	lsrs	r7, r0, #31
 8001430:	b091      	sub	sp, #68	; 0x44
 8001432:	bf18      	it	ne
 8001434:	4240      	negne	r0, r0
 8001436:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 800143a:	b9c8      	cbnz	r0, 8001470 <_itostr+0x44>
 800143c:	2330      	movs	r3, #48	; 0x30
 800143e:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8001442:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8001446:	b132      	cbz	r2, 8001456 <_itostr+0x2a>
 8001448:	4668      	mov	r0, sp
 800144a:	2530      	movs	r5, #48	; 0x30
 800144c:	1ae6      	subs	r6, r4, r3
 800144e:	4296      	cmp	r6, r2
 8001450:	da01      	bge.n	8001456 <_itostr+0x2a>
 8001452:	4283      	cmp	r3, r0
 8001454:	d81c      	bhi.n	8001490 <_itostr+0x64>
 8001456:	b117      	cbz	r7, 800145e <_itostr+0x32>
 8001458:	222d      	movs	r2, #45	; 0x2d
 800145a:	f803 2901 	strb.w	r2, [r3], #-1
 800145e:	3301      	adds	r3, #1
 8001460:	1ae0      	subs	r0, r4, r3
 8001462:	3901      	subs	r1, #1
 8001464:	aa10      	add	r2, sp, #64	; 0x40
 8001466:	4293      	cmp	r3, r2
 8001468:	d315      	bcc.n	8001496 <_itostr+0x6a>
 800146a:	3001      	adds	r0, #1
 800146c:	b011      	add	sp, #68	; 0x44
 800146e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001470:	4623      	mov	r3, r4
 8001472:	250a      	movs	r5, #10
 8001474:	46ec      	mov	ip, sp
 8001476:	fb90 f6f5 	sdiv	r6, r0, r5
 800147a:	fb05 0016 	mls	r0, r5, r6, r0
 800147e:	3030      	adds	r0, #48	; 0x30
 8001480:	f803 0901 	strb.w	r0, [r3], #-1
 8001484:	4630      	mov	r0, r6
 8001486:	2e00      	cmp	r6, #0
 8001488:	d0dd      	beq.n	8001446 <_itostr+0x1a>
 800148a:	4563      	cmp	r3, ip
 800148c:	d1f3      	bne.n	8001476 <_itostr+0x4a>
 800148e:	e7da      	b.n	8001446 <_itostr+0x1a>
 8001490:	f803 5901 	strb.w	r5, [r3], #-1
 8001494:	e7da      	b.n	800144c <_itostr+0x20>
 8001496:	f813 2b01 	ldrb.w	r2, [r3], #1
 800149a:	f801 2f01 	strb.w	r2, [r1, #1]!
 800149e:	e7e1      	b.n	8001464 <_itostr+0x38>

080014a0 <_xputch>:
 80014a0:	4603      	mov	r3, r0
 80014a2:	b410      	push	{r4}
 80014a4:	4c08      	ldr	r4, [pc, #32]	; (80014c8 <_xputch+0x28>)
 80014a6:	68da      	ldr	r2, [r3, #12]
 80014a8:	4608      	mov	r0, r1
 80014aa:	6821      	ldr	r1, [r4, #0]
 80014ac:	3201      	adds	r2, #1
 80014ae:	60da      	str	r2, [r3, #12]
 80014b0:	b139      	cbz	r1, 80014c2 <_xputch+0x22>
 80014b2:	691b      	ldr	r3, [r3, #16]
 80014b4:	429a      	cmp	r2, r3
 80014b6:	da02      	bge.n	80014be <_xputch+0x1e>
 80014b8:	1c4b      	adds	r3, r1, #1
 80014ba:	6023      	str	r3, [r4, #0]
 80014bc:	7008      	strb	r0, [r1, #0]
 80014be:	bc10      	pop	{r4}
 80014c0:	4770      	bx	lr
 80014c2:	bc10      	pop	{r4}
 80014c4:	f002 bdf0 	b.w	80040a8 <console_putc>
 80014c8:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

080014cc <_format_int>:
 80014cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80014d0:	461f      	mov	r7, r3
 80014d2:	b091      	sub	sp, #68	; 0x44
 80014d4:	ea52 0307 	orrs.w	r3, r2, r7
 80014d8:	4680      	mov	r8, r0
 80014da:	4616      	mov	r6, r2
 80014dc:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 80014e0:	d138      	bne.n	8001554 <_format_int+0x88>
 80014e2:	2330      	movs	r3, #48	; 0x30
 80014e4:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 80014e8:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80014ec:	f8d8 3000 	ldr.w	r3, [r8]
 80014f0:	07d8      	lsls	r0, r3, #31
 80014f2:	d508      	bpl.n	8001506 <_format_int+0x3a>
 80014f4:	466a      	mov	r2, sp
 80014f6:	2030      	movs	r0, #48	; 0x30
 80014f8:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80014fc:	1b2e      	subs	r6, r5, r4
 80014fe:	428e      	cmp	r6, r1
 8001500:	da01      	bge.n	8001506 <_format_int+0x3a>
 8001502:	4294      	cmp	r4, r2
 8001504:	d843      	bhi.n	800158e <_format_int+0xc2>
 8001506:	0699      	lsls	r1, r3, #26
 8001508:	d508      	bpl.n	800151c <_format_int+0x50>
 800150a:	466a      	mov	r2, sp
 800150c:	2030      	movs	r0, #48	; 0x30
 800150e:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8001512:	1b2e      	subs	r6, r5, r4
 8001514:	428e      	cmp	r6, r1
 8001516:	da01      	bge.n	800151c <_format_int+0x50>
 8001518:	4294      	cmp	r4, r2
 800151a:	d83b      	bhi.n	8001594 <_format_int+0xc8>
 800151c:	071a      	lsls	r2, r3, #28
 800151e:	bf44      	itt	mi
 8001520:	222d      	movmi	r2, #45	; 0x2d
 8001522:	f804 2901 	strbmi.w	r2, [r4], #-1
 8001526:	065b      	lsls	r3, r3, #25
 8001528:	d408      	bmi.n	800153c <_format_int+0x70>
 800152a:	466b      	mov	r3, sp
 800152c:	2120      	movs	r1, #32
 800152e:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8001532:	1b28      	subs	r0, r5, r4
 8001534:	4290      	cmp	r0, r2
 8001536:	da01      	bge.n	800153c <_format_int+0x70>
 8001538:	429c      	cmp	r4, r3
 800153a:	d82e      	bhi.n	800159a <_format_int+0xce>
 800153c:	1b2d      	subs	r5, r5, r4
 800153e:	3401      	adds	r4, #1
 8001540:	ab10      	add	r3, sp, #64	; 0x40
 8001542:	429c      	cmp	r4, r3
 8001544:	d32c      	bcc.n	80015a0 <_format_int+0xd4>
 8001546:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800154a:	42ab      	cmp	r3, r5
 800154c:	dc2e      	bgt.n	80015ac <_format_int+0xe0>
 800154e:	b011      	add	sp, #68	; 0x44
 8001550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001554:	462c      	mov	r4, r5
 8001556:	46eb      	mov	fp, sp
 8001558:	4630      	mov	r0, r6
 800155a:	4639      	mov	r1, r7
 800155c:	220a      	movs	r2, #10
 800155e:	2300      	movs	r3, #0
 8001560:	f7ff f894 	bl	800068c <__aeabi_uldivmod>
 8001564:	46b2      	mov	sl, r6
 8001566:	3230      	adds	r2, #48	; 0x30
 8001568:	46b9      	mov	r9, r7
 800156a:	2300      	movs	r3, #0
 800156c:	4630      	mov	r0, r6
 800156e:	4639      	mov	r1, r7
 8001570:	f804 2901 	strb.w	r2, [r4], #-1
 8001574:	220a      	movs	r2, #10
 8001576:	f7ff f889 	bl	800068c <__aeabi_uldivmod>
 800157a:	f1ba 0f0a 	cmp.w	sl, #10
 800157e:	f179 0300 	sbcs.w	r3, r9, #0
 8001582:	4606      	mov	r6, r0
 8001584:	460f      	mov	r7, r1
 8001586:	d3b1      	bcc.n	80014ec <_format_int+0x20>
 8001588:	455c      	cmp	r4, fp
 800158a:	d1e5      	bne.n	8001558 <_format_int+0x8c>
 800158c:	e7ae      	b.n	80014ec <_format_int+0x20>
 800158e:	f804 0901 	strb.w	r0, [r4], #-1
 8001592:	e7b3      	b.n	80014fc <_format_int+0x30>
 8001594:	f804 0901 	strb.w	r0, [r4], #-1
 8001598:	e7bb      	b.n	8001512 <_format_int+0x46>
 800159a:	f804 1901 	strb.w	r1, [r4], #-1
 800159e:	e7c8      	b.n	8001532 <_format_int+0x66>
 80015a0:	4640      	mov	r0, r8
 80015a2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80015a6:	f7ff ff7b 	bl	80014a0 <_xputch>
 80015aa:	e7c9      	b.n	8001540 <_format_int+0x74>
 80015ac:	2120      	movs	r1, #32
 80015ae:	4640      	mov	r0, r8
 80015b0:	f7ff ff76 	bl	80014a0 <_xputch>
 80015b4:	3501      	adds	r5, #1
 80015b6:	e7c6      	b.n	8001546 <_format_int+0x7a>

080015b8 <_format_hex>:
 80015b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80015ba:	b091      	sub	sp, #68	; 0x44
 80015bc:	4606      	mov	r6, r0
 80015be:	6804      	ldr	r4, [r0, #0]
 80015c0:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 80015c4:	bb61      	cbnz	r1, 8001620 <_format_hex+0x68>
 80015c6:	2330      	movs	r3, #48	; 0x30
 80015c8:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80015cc:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 80015d0:	07e5      	lsls	r5, r4, #31
 80015d2:	d507      	bpl.n	80015e4 <_format_hex+0x2c>
 80015d4:	4669      	mov	r1, sp
 80015d6:	2530      	movs	r5, #48	; 0x30
 80015d8:	6870      	ldr	r0, [r6, #4]
 80015da:	1ad7      	subs	r7, r2, r3
 80015dc:	4287      	cmp	r7, r0
 80015de:	da01      	bge.n	80015e4 <_format_hex+0x2c>
 80015e0:	428b      	cmp	r3, r1
 80015e2:	d831      	bhi.n	8001648 <_format_hex+0x90>
 80015e4:	06a0      	lsls	r0, r4, #26
 80015e6:	d507      	bpl.n	80015f8 <_format_hex+0x40>
 80015e8:	4669      	mov	r1, sp
 80015ea:	2530      	movs	r5, #48	; 0x30
 80015ec:	68b0      	ldr	r0, [r6, #8]
 80015ee:	1ad7      	subs	r7, r2, r3
 80015f0:	4287      	cmp	r7, r0
 80015f2:	da01      	bge.n	80015f8 <_format_hex+0x40>
 80015f4:	428b      	cmp	r3, r1
 80015f6:	d82a      	bhi.n	800164e <_format_hex+0x96>
 80015f8:	0661      	lsls	r1, r4, #25
 80015fa:	d407      	bmi.n	800160c <_format_hex+0x54>
 80015fc:	4669      	mov	r1, sp
 80015fe:	2420      	movs	r4, #32
 8001600:	68b0      	ldr	r0, [r6, #8]
 8001602:	1ad5      	subs	r5, r2, r3
 8001604:	4285      	cmp	r5, r0
 8001606:	da01      	bge.n	800160c <_format_hex+0x54>
 8001608:	428b      	cmp	r3, r1
 800160a:	d823      	bhi.n	8001654 <_format_hex+0x9c>
 800160c:	1ad5      	subs	r5, r2, r3
 800160e:	1c5c      	adds	r4, r3, #1
 8001610:	ab10      	add	r3, sp, #64	; 0x40
 8001612:	429c      	cmp	r4, r3
 8001614:	d321      	bcc.n	800165a <_format_hex+0xa2>
 8001616:	68b3      	ldr	r3, [r6, #8]
 8001618:	429d      	cmp	r5, r3
 800161a:	db24      	blt.n	8001666 <_format_hex+0xae>
 800161c:	b011      	add	sp, #68	; 0x44
 800161e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001620:	f014 0f02 	tst.w	r4, #2
 8001624:	bf0c      	ite	eq
 8001626:	2757      	moveq	r7, #87	; 0x57
 8001628:	2737      	movne	r7, #55	; 0x37
 800162a:	4613      	mov	r3, r2
 800162c:	466d      	mov	r5, sp
 800162e:	f001 000f 	and.w	r0, r1, #15
 8001632:	2809      	cmp	r0, #9
 8001634:	bf94      	ite	ls
 8001636:	3030      	addls	r0, #48	; 0x30
 8001638:	19c0      	addhi	r0, r0, r7
 800163a:	0909      	lsrs	r1, r1, #4
 800163c:	f803 0901 	strb.w	r0, [r3], #-1
 8001640:	d0c6      	beq.n	80015d0 <_format_hex+0x18>
 8001642:	42ab      	cmp	r3, r5
 8001644:	d1f3      	bne.n	800162e <_format_hex+0x76>
 8001646:	e7c3      	b.n	80015d0 <_format_hex+0x18>
 8001648:	f803 5901 	strb.w	r5, [r3], #-1
 800164c:	e7c5      	b.n	80015da <_format_hex+0x22>
 800164e:	f803 5901 	strb.w	r5, [r3], #-1
 8001652:	e7cc      	b.n	80015ee <_format_hex+0x36>
 8001654:	f803 4901 	strb.w	r4, [r3], #-1
 8001658:	e7d3      	b.n	8001602 <_format_hex+0x4a>
 800165a:	4630      	mov	r0, r6
 800165c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001660:	f7ff ff1e 	bl	80014a0 <_xputch>
 8001664:	e7d4      	b.n	8001610 <_format_hex+0x58>
 8001666:	2120      	movs	r1, #32
 8001668:	4630      	mov	r0, r6
 800166a:	f7ff ff19 	bl	80014a0 <_xputch>
 800166e:	3501      	adds	r5, #1
 8001670:	e7d1      	b.n	8001616 <_format_hex+0x5e>
	...

08001674 <_vprintf>:
 8001674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001678:	4614      	mov	r4, r2
 800167a:	2200      	movs	r2, #0
 800167c:	460b      	mov	r3, r1
 800167e:	2700      	movs	r7, #0
 8001680:	b099      	sub	sp, #100	; 0x64
 8001682:	e9cd 2006 	strd	r2, r0, [sp, #24]
 8001686:	ae08      	add	r6, sp, #32
 8001688:	7819      	ldrb	r1, [r3, #0]
 800168a:	b919      	cbnz	r1, 8001694 <_vprintf+0x20>
 800168c:	9806      	ldr	r0, [sp, #24]
 800168e:	b019      	add	sp, #100	; 0x64
 8001690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001694:	2925      	cmp	r1, #37	; 0x25
 8001696:	f103 0501 	add.w	r5, r3, #1
 800169a:	d004      	beq.n	80016a6 <_vprintf+0x32>
 800169c:	a803      	add	r0, sp, #12
 800169e:	f7ff feff 	bl	80014a0 <_xputch>
 80016a2:	462b      	mov	r3, r5
 80016a4:	e7f0      	b.n	8001688 <_vprintf+0x14>
 80016a6:	2200      	movs	r2, #0
 80016a8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80016ac:	9205      	str	r2, [sp, #20]
 80016ae:	785a      	ldrb	r2, [r3, #1]
 80016b0:	2a30      	cmp	r2, #48	; 0x30
 80016b2:	d12b      	bne.n	800170c <_vprintf+0x98>
 80016b4:	2220      	movs	r2, #32
 80016b6:	9203      	str	r2, [sp, #12]
 80016b8:	1c9d      	adds	r5, r3, #2
 80016ba:	2200      	movs	r2, #0
 80016bc:	46ac      	mov	ip, r5
 80016be:	4613      	mov	r3, r2
 80016c0:	f04f 0e0a 	mov.w	lr, #10
 80016c4:	f89c 1000 	ldrb.w	r1, [ip]
 80016c8:	4665      	mov	r5, ip
 80016ca:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 80016ce:	2809      	cmp	r0, #9
 80016d0:	f10c 0c01 	add.w	ip, ip, #1
 80016d4:	d91e      	bls.n	8001714 <_vprintf+0xa0>
 80016d6:	b12a      	cbz	r2, 80016e4 <_vprintf+0x70>
 80016d8:	9305      	str	r3, [sp, #20]
 80016da:	b11b      	cbz	r3, 80016e4 <_vprintf+0x70>
 80016dc:	9b03      	ldr	r3, [sp, #12]
 80016de:	f043 0310 	orr.w	r3, r3, #16
 80016e2:	9303      	str	r3, [sp, #12]
 80016e4:	292e      	cmp	r1, #46	; 0x2e
 80016e6:	d124      	bne.n	8001732 <_vprintf+0xbe>
 80016e8:	786b      	ldrb	r3, [r5, #1]
 80016ea:	2b2a      	cmp	r3, #42	; 0x2a
 80016ec:	d016      	beq.n	800171c <_vprintf+0xa8>
 80016ee:	2100      	movs	r1, #0
 80016f0:	f04f 0c0a 	mov.w	ip, #10
 80016f4:	460a      	mov	r2, r1
 80016f6:	1c68      	adds	r0, r5, #1
 80016f8:	7803      	ldrb	r3, [r0, #0]
 80016fa:	4605      	mov	r5, r0
 80016fc:	3b30      	subs	r3, #48	; 0x30
 80016fe:	2b09      	cmp	r3, #9
 8001700:	f100 0001 	add.w	r0, r0, #1
 8001704:	d958      	bls.n	80017b8 <_vprintf+0x144>
 8001706:	b181      	cbz	r1, 800172a <_vprintf+0xb6>
 8001708:	9204      	str	r2, [sp, #16]
 800170a:	e00e      	b.n	800172a <_vprintf+0xb6>
 800170c:	2a2d      	cmp	r2, #45	; 0x2d
 800170e:	d1d4      	bne.n	80016ba <_vprintf+0x46>
 8001710:	2240      	movs	r2, #64	; 0x40
 8001712:	e7d0      	b.n	80016b6 <_vprintf+0x42>
 8001714:	2201      	movs	r2, #1
 8001716:	fb0e 0303 	mla	r3, lr, r3, r0
 800171a:	e7d3      	b.n	80016c4 <_vprintf+0x50>
 800171c:	f854 3b04 	ldr.w	r3, [r4], #4
 8001720:	3502      	adds	r5, #2
 8001722:	2b00      	cmp	r3, #0
 8001724:	bfb8      	it	lt
 8001726:	425b      	neglt	r3, r3
 8001728:	9304      	str	r3, [sp, #16]
 800172a:	9b03      	ldr	r3, [sp, #12]
 800172c:	f043 0301 	orr.w	r3, r3, #1
 8001730:	9303      	str	r3, [sp, #12]
 8001732:	782b      	ldrb	r3, [r5, #0]
 8001734:	2b6c      	cmp	r3, #108	; 0x6c
 8001736:	bf04      	itt	eq
 8001738:	9b03      	ldreq	r3, [sp, #12]
 800173a:	3501      	addeq	r5, #1
 800173c:	7829      	ldrb	r1, [r5, #0]
 800173e:	bf04      	itt	eq
 8001740:	f043 0304 	orreq.w	r3, r3, #4
 8001744:	9303      	streq	r3, [sp, #12]
 8001746:	2958      	cmp	r1, #88	; 0x58
 8001748:	f000 8173 	beq.w	8001a32 <_vprintf+0x3be>
 800174c:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8001750:	b2da      	uxtb	r2, r3
 8001752:	2a15      	cmp	r2, #21
 8001754:	d8a2      	bhi.n	800169c <_vprintf+0x28>
 8001756:	2b15      	cmp	r3, #21
 8001758:	d8a0      	bhi.n	800169c <_vprintf+0x28>
 800175a:	a201      	add	r2, pc, #4	; (adr r2, 8001760 <_vprintf+0xec>)
 800175c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001760:	080017c1 	stmdaeq	r0, {r0, r6, r7, r8, r9, sl, ip}
 8001764:	080017cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, sl, ip}
 8001768:	0800169d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, ip}
 800176c:	08001803 	stmdaeq	r0, {r0, r1, fp, ip}
 8001770:	0800169d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, ip}
 8001774:	0800169d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, ip}
 8001778:	080017cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, sl, ip}
 800177c:	0800169d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, ip}
 8001780:	0800169d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, ip}
 8001784:	0800169d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, ip}
 8001788:	0800169d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, ip}
 800178c:	0800169d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, ip}
 8001790:	0800169d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, ip}
 8001794:	08001975 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, fp, ip}
 8001798:	0800169d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, ip}
 800179c:	0800169d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, ip}
 80017a0:	0800199b 	stmdaeq	r0, {r0, r1, r3, r4, r7, r8, fp, ip}
 80017a4:	0800169d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, ip}
 80017a8:	08001a15 	stmdaeq	r0, {r0, r2, r4, r9, fp, ip}
 80017ac:	0800169d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, ip}
 80017b0:	0800169d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, ip}
 80017b4:	08001a3b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r9, fp, ip}
 80017b8:	2101      	movs	r1, #1
 80017ba:	fb0c 3202 	mla	r2, ip, r2, r3
 80017be:	e79b      	b.n	80016f8 <_vprintf+0x84>
 80017c0:	f854 1b04 	ldr.w	r1, [r4], #4
 80017c4:	a803      	add	r0, sp, #12
 80017c6:	f7ff fe6b 	bl	80014a0 <_xputch>
 80017ca:	3501      	adds	r5, #1
 80017cc:	e769      	b.n	80016a2 <_vprintf+0x2e>
 80017ce:	9903      	ldr	r1, [sp, #12]
 80017d0:	074a      	lsls	r2, r1, #29
 80017d2:	bf43      	ittte	mi
 80017d4:	3407      	addmi	r4, #7
 80017d6:	f024 0307 	bicmi.w	r3, r4, #7
 80017da:	461c      	movmi	r4, r3
 80017dc:	f854 2b04 	ldrpl.w	r2, [r4], #4
 80017e0:	bf4a      	itet	mi
 80017e2:	685b      	ldrmi	r3, [r3, #4]
 80017e4:	17d3      	asrpl	r3, r2, #31
 80017e6:	f854 2b08 	ldrmi.w	r2, [r4], #8
 80017ea:	2b00      	cmp	r3, #0
 80017ec:	da05      	bge.n	80017fa <_vprintf+0x186>
 80017ee:	f041 0108 	orr.w	r1, r1, #8
 80017f2:	4252      	negs	r2, r2
 80017f4:	9103      	str	r1, [sp, #12]
 80017f6:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80017fa:	a803      	add	r0, sp, #12
 80017fc:	f7ff fe66 	bl	80014cc <_format_int>
 8001800:	e7e3      	b.n	80017ca <_vprintf+0x156>
 8001802:	3407      	adds	r4, #7
 8001804:	f024 0407 	bic.w	r4, r4, #7
 8001808:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 800180c:	f7fe fd44 	bl	8000298 <__aeabi_d2f>
 8001810:	9b03      	ldr	r3, [sp, #12]
 8001812:	4639      	mov	r1, r7
 8001814:	07db      	lsls	r3, r3, #31
 8001816:	bf54      	ite	pl
 8001818:	f04f 0a06 	movpl.w	sl, #6
 800181c:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 8001820:	4681      	mov	r9, r0
 8001822:	f7fe fee5 	bl	80005f0 <__aeabi_fcmplt>
 8001826:	2800      	cmp	r0, #0
 8001828:	d069      	beq.n	80018fe <_vprintf+0x28a>
 800182a:	232d      	movs	r3, #45	; 0x2d
 800182c:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 8001830:	f88d 3020 	strb.w	r3, [sp, #32]
 8001834:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 8001838:	4648      	mov	r0, r9
 800183a:	f7fe ff01 	bl	8000640 <__aeabi_f2iz>
 800183e:	4659      	mov	r1, fp
 8001840:	2200      	movs	r2, #0
 8001842:	4680      	mov	r8, r0
 8001844:	f7ff fdf2 	bl	800142c <_itostr>
 8001848:	eb0b 0200 	add.w	r2, fp, r0
 800184c:	e9cd 2000 	strd	r2, r0, [sp]
 8001850:	4640      	mov	r0, r8
 8001852:	f7fe fe2b 	bl	80004ac <__aeabi_i2f>
 8001856:	4601      	mov	r1, r0
 8001858:	4648      	mov	r0, r9
 800185a:	f7fe fd71 	bl	8000340 <__aeabi_fsub>
 800185e:	222e      	movs	r2, #46	; 0x2e
 8001860:	4601      	mov	r1, r0
 8001862:	200a      	movs	r0, #10
 8001864:	9b00      	ldr	r3, [sp, #0]
 8001866:	f10a 0901 	add.w	r9, sl, #1
 800186a:	f103 0801 	add.w	r8, r3, #1
 800186e:	9b01      	ldr	r3, [sp, #4]
 8001870:	f80b 2003 	strb.w	r2, [fp, r3]
 8001874:	4603      	mov	r3, r0
 8001876:	f1ba 0f00 	cmp.w	sl, #0
 800187a:	dc42      	bgt.n	8001902 <_vprintf+0x28e>
 800187c:	9100      	str	r1, [sp, #0]
 800187e:	f7fe fe15 	bl	80004ac <__aeabi_i2f>
 8001882:	9900      	ldr	r1, [sp, #0]
 8001884:	f7fe fc54 	bl	8000130 <__aeabi_fmul>
 8001888:	f7fe feda 	bl	8000640 <__aeabi_f2iz>
 800188c:	4641      	mov	r1, r8
 800188e:	464a      	mov	r2, r9
 8001890:	f7ff fdcc 	bl	800142c <_itostr>
 8001894:	4480      	add	r8, r0
 8001896:	eba8 0806 	sub.w	r8, r8, r6
 800189a:	f108 31ff 	add.w	r1, r8, #4294967295	; 0xffffffff
 800189e:	5c73      	ldrb	r3, [r6, r1]
 80018a0:	1872      	adds	r2, r6, r1
 80018a2:	2b34      	cmp	r3, #52	; 0x34
 80018a4:	d910      	bls.n	80018c8 <_vprintf+0x254>
 80018a6:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 80018aa:	1e53      	subs	r3, r2, #1
 80018ac:	282e      	cmp	r0, #46	; 0x2e
 80018ae:	d02f      	beq.n	8001910 <_vprintf+0x29c>
 80018b0:	469c      	mov	ip, r3
 80018b2:	f04f 0e30 	mov.w	lr, #48	; 0x30
 80018b6:	4663      	mov	r3, ip
 80018b8:	f81c 0901 	ldrb.w	r0, [ip], #-1
 80018bc:	2839      	cmp	r0, #57	; 0x39
 80018be:	d024      	beq.n	800190a <_vprintf+0x296>
 80018c0:	282e      	cmp	r0, #46	; 0x2e
 80018c2:	d025      	beq.n	8001910 <_vprintf+0x29c>
 80018c4:	3001      	adds	r0, #1
 80018c6:	7018      	strb	r0, [r3, #0]
 80018c8:	f101 0360 	add.w	r3, r1, #96	; 0x60
 80018cc:	446b      	add	r3, sp
 80018ce:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 80018d2:	2b2e      	cmp	r3, #46	; 0x2e
 80018d4:	bf08      	it	eq
 80018d6:	f101 31ff 	addeq.w	r1, r1, #4294967295	; 0xffffffff
 80018da:	4688      	mov	r8, r1
 80018dc:	4689      	mov	r9, r1
 80018de:	9b05      	ldr	r3, [sp, #20]
 80018e0:	454b      	cmp	r3, r9
 80018e2:	dc40      	bgt.n	8001966 <_vprintf+0x2f2>
 80018e4:	46b1      	mov	r9, r6
 80018e6:	f1b8 0f00 	cmp.w	r8, #0
 80018ea:	f77f af6e 	ble.w	80017ca <_vprintf+0x156>
 80018ee:	f819 1b01 	ldrb.w	r1, [r9], #1
 80018f2:	a803      	add	r0, sp, #12
 80018f4:	f7ff fdd4 	bl	80014a0 <_xputch>
 80018f8:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 80018fc:	e7f3      	b.n	80018e6 <_vprintf+0x272>
 80018fe:	46b3      	mov	fp, r6
 8001900:	e79a      	b.n	8001838 <_vprintf+0x1c4>
 8001902:	4358      	muls	r0, r3
 8001904:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8001908:	e7b5      	b.n	8001876 <_vprintf+0x202>
 800190a:	f88c e001 	strb.w	lr, [ip, #1]
 800190e:	e7d2      	b.n	80018b6 <_vprintf+0x242>
 8001910:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8001914:	3b01      	subs	r3, #1
 8001916:	7818      	ldrb	r0, [r3, #0]
 8001918:	2839      	cmp	r0, #57	; 0x39
 800191a:	d112      	bne.n	8001942 <_vprintf+0x2ce>
 800191c:	42b3      	cmp	r3, r6
 800191e:	d20d      	bcs.n	800193c <_vprintf+0x2c8>
 8001920:	1c98      	adds	r0, r3, #2
 8001922:	1c59      	adds	r1, r3, #1
 8001924:	4281      	cmp	r1, r0
 8001926:	eba2 0203 	sub.w	r2, r2, r3
 800192a:	d913      	bls.n	8001954 <_vprintf+0x2e0>
 800192c:	3201      	adds	r2, #1
 800192e:	441a      	add	r2, r3
 8001930:	428a      	cmp	r2, r1
 8001932:	d10b      	bne.n	800194c <_vprintf+0x2d8>
 8001934:	2231      	movs	r2, #49	; 0x31
 8001936:	4641      	mov	r1, r8
 8001938:	705a      	strb	r2, [r3, #1]
 800193a:	e7c5      	b.n	80018c8 <_vprintf+0x254>
 800193c:	f803 c901 	strb.w	ip, [r3], #-1
 8001940:	e7e9      	b.n	8001916 <_vprintf+0x2a2>
 8001942:	42b3      	cmp	r3, r6
 8001944:	d3ec      	bcc.n	8001920 <_vprintf+0x2ac>
 8001946:	282d      	cmp	r0, #45	; 0x2d
 8001948:	d0ea      	beq.n	8001920 <_vprintf+0x2ac>
 800194a:	e7bb      	b.n	80018c4 <_vprintf+0x250>
 800194c:	f811 0b01 	ldrb.w	r0, [r1], #1
 8001950:	7008      	strb	r0, [r1, #0]
 8001952:	e7ed      	b.n	8001930 <_vprintf+0x2bc>
 8001954:	4411      	add	r1, r2
 8001956:	4402      	add	r2, r0
 8001958:	4290      	cmp	r0, r2
 800195a:	d0eb      	beq.n	8001934 <_vprintf+0x2c0>
 800195c:	f811 cd01 	ldrb.w	ip, [r1, #-1]!
 8001960:	f802 cd01 	strb.w	ip, [r2, #-1]!
 8001964:	e7f8      	b.n	8001958 <_vprintf+0x2e4>
 8001966:	2120      	movs	r1, #32
 8001968:	a803      	add	r0, sp, #12
 800196a:	f7ff fd99 	bl	80014a0 <_xputch>
 800196e:	f109 0901 	add.w	r9, r9, #1
 8001972:	e7b4      	b.n	80018de <_vprintf+0x26a>
 8001974:	2308      	movs	r3, #8
 8001976:	9305      	str	r3, [sp, #20]
 8001978:	2320      	movs	r3, #32
 800197a:	2130      	movs	r1, #48	; 0x30
 800197c:	f854 8b04 	ldr.w	r8, [r4], #4
 8001980:	a803      	add	r0, sp, #12
 8001982:	9303      	str	r3, [sp, #12]
 8001984:	f7ff fd8c 	bl	80014a0 <_xputch>
 8001988:	2178      	movs	r1, #120	; 0x78
 800198a:	a803      	add	r0, sp, #12
 800198c:	f7ff fd88 	bl	80014a0 <_xputch>
 8001990:	4641      	mov	r1, r8
 8001992:	a803      	add	r0, sp, #12
 8001994:	f7ff fe10 	bl	80015b8 <_format_hex>
 8001998:	e717      	b.n	80017ca <_vprintf+0x156>
 800199a:	f04f 0800 	mov.w	r8, #0
 800199e:	f854 9b04 	ldr.w	r9, [r4], #4
 80019a2:	f819 3008 	ldrb.w	r3, [r9, r8]
 80019a6:	b993      	cbnz	r3, 80019ce <_vprintf+0x35a>
 80019a8:	9b03      	ldr	r3, [sp, #12]
 80019aa:	07d9      	lsls	r1, r3, #31
 80019ac:	d503      	bpl.n	80019b6 <_vprintf+0x342>
 80019ae:	9b04      	ldr	r3, [sp, #16]
 80019b0:	4598      	cmp	r8, r3
 80019b2:	bfa8      	it	ge
 80019b4:	4698      	movge	r8, r3
 80019b6:	9b03      	ldr	r3, [sp, #12]
 80019b8:	f108 0a01 	add.w	sl, r8, #1
 80019bc:	065a      	lsls	r2, r3, #25
 80019be:	d403      	bmi.n	80019c8 <_vprintf+0x354>
 80019c0:	9b05      	ldr	r3, [sp, #20]
 80019c2:	4598      	cmp	r8, r3
 80019c4:	db06      	blt.n	80019d4 <_vprintf+0x360>
 80019c6:	46d0      	mov	r8, sl
 80019c8:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80019cc:	e00e      	b.n	80019ec <_vprintf+0x378>
 80019ce:	f108 0801 	add.w	r8, r8, #1
 80019d2:	e7e6      	b.n	80019a2 <_vprintf+0x32e>
 80019d4:	2120      	movs	r1, #32
 80019d6:	a803      	add	r0, sp, #12
 80019d8:	f7ff fd62 	bl	80014a0 <_xputch>
 80019dc:	46d0      	mov	r8, sl
 80019de:	e7ea      	b.n	80019b6 <_vprintf+0x342>
 80019e0:	a803      	add	r0, sp, #12
 80019e2:	f7ff fd5d 	bl	80014a0 <_xputch>
 80019e6:	9b04      	ldr	r3, [sp, #16]
 80019e8:	3b01      	subs	r3, #1
 80019ea:	9304      	str	r3, [sp, #16]
 80019ec:	9b03      	ldr	r3, [sp, #12]
 80019ee:	07db      	lsls	r3, r3, #31
 80019f0:	d501      	bpl.n	80019f6 <_vprintf+0x382>
 80019f2:	9b04      	ldr	r3, [sp, #16]
 80019f4:	b11b      	cbz	r3, 80019fe <_vprintf+0x38a>
 80019f6:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 80019fa:	2900      	cmp	r1, #0
 80019fc:	d1f0      	bne.n	80019e0 <_vprintf+0x36c>
 80019fe:	9b05      	ldr	r3, [sp, #20]
 8001a00:	4543      	cmp	r3, r8
 8001a02:	f77f aee2 	ble.w	80017ca <_vprintf+0x156>
 8001a06:	2120      	movs	r1, #32
 8001a08:	a803      	add	r0, sp, #12
 8001a0a:	f7ff fd49 	bl	80014a0 <_xputch>
 8001a0e:	f108 0801 	add.w	r8, r8, #1
 8001a12:	e7f4      	b.n	80019fe <_vprintf+0x38a>
 8001a14:	9b03      	ldr	r3, [sp, #12]
 8001a16:	f013 0304 	ands.w	r3, r3, #4
 8001a1a:	bf1d      	ittte	ne
 8001a1c:	3407      	addne	r4, #7
 8001a1e:	f024 0307 	bicne.w	r3, r4, #7
 8001a22:	461c      	movne	r4, r3
 8001a24:	f854 2b04 	ldreq.w	r2, [r4], #4
 8001a28:	bf1c      	itt	ne
 8001a2a:	f854 2b08 	ldrne.w	r2, [r4], #8
 8001a2e:	685b      	ldrne	r3, [r3, #4]
 8001a30:	e6e3      	b.n	80017fa <_vprintf+0x186>
 8001a32:	9b03      	ldr	r3, [sp, #12]
 8001a34:	f043 0302 	orr.w	r3, r3, #2
 8001a38:	9303      	str	r3, [sp, #12]
 8001a3a:	f854 1b04 	ldr.w	r1, [r4], #4
 8001a3e:	e7a8      	b.n	8001992 <_vprintf+0x31e>

08001a40 <printf>:
 8001a40:	b40f      	push	{r0, r1, r2, r3}
 8001a42:	b507      	push	{r0, r1, r2, lr}
 8001a44:	aa04      	add	r2, sp, #16
 8001a46:	f852 1b04 	ldr.w	r1, [r2], #4
 8001a4a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8001a4e:	9201      	str	r2, [sp, #4]
 8001a50:	f7ff fe10 	bl	8001674 <_vprintf>
 8001a54:	b003      	add	sp, #12
 8001a56:	f85d eb04 	ldr.w	lr, [sp], #4
 8001a5a:	b004      	add	sp, #16
 8001a5c:	4770      	bx	lr
	...

08001a60 <Widget::Widget()>:
 8001a60:	b510      	push	{r4, lr}
 8001a62:	4604      	mov	r4, r0
 8001a64:	f001 fa06 	bl	8002e74 <Dmx::Dmx()>
 8001a68:	f104 001c 	add.w	r0, r4, #28
 8001a6c:	f001 fc40 	bl	80032f0 <RDMDevice::RDMDevice()>
 8001a70:	2300      	movs	r3, #0
 8001a72:	e9c4 33bc 	strd	r3, r3, [r4, #752]	; 0x2f0
 8001a76:	e9c4 33be 	strd	r3, r3, [r4, #760]	; 0x2f8
 8001a7a:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8001a7e:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 8001a82:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
 8001a86:	4b03      	ldr	r3, [pc, #12]	; (8001a94 <Widget::Widget()+0x34>)
 8001a88:	601c      	str	r4, [r3, #0]
 8001a8a:	f001 fb4f 	bl	800312c <FT245RL_init>
 8001a8e:	4620      	mov	r0, r4
 8001a90:	bd10      	pop	{r4, pc}
 8001a92:	bf00      	nop
 8001a94:	200000f4 	strdcs	r0, [r0], -r4

08001a98 <Widget::GetParamsReply()>:
 8001a98:	b513      	push	{r0, r1, r4, lr}
 8001a9a:	4604      	mov	r4, r0
 8001a9c:	4911      	ldr	r1, [pc, #68]	; (8001ae4 <Widget::GetParamsReply()+0x4c>)
 8001a9e:	2007      	movs	r0, #7
 8001aa0:	f000 fb90 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001aa4:	2100      	movs	r1, #0
 8001aa6:	201c      	movs	r0, #28
 8001aa8:	f000 fb8c 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001aac:	4b0e      	ldr	r3, [pc, #56]	; (8001ae8 <Widget::GetParamsReply()+0x50>)
 8001aae:	466a      	mov	r2, sp
 8001ab0:	781b      	ldrb	r3, [r3, #0]
 8001ab2:	2103      	movs	r1, #3
 8001ab4:	f88d 3002 	strb.w	r3, [sp, #2]
 8001ab8:	4b0c      	ldr	r3, [pc, #48]	; (8001aec <Widget::GetParamsReply()+0x54>)
 8001aba:	4620      	mov	r0, r4
 8001abc:	781b      	ldrb	r3, [r3, #0]
 8001abe:	f88d 3000 	strb.w	r3, [sp]
 8001ac2:	4b0b      	ldr	r3, [pc, #44]	; (8001af0 <Widget::GetParamsReply()+0x58>)
 8001ac4:	781b      	ldrb	r3, [r3, #0]
 8001ac6:	f88d 3001 	strb.w	r3, [sp, #1]
 8001aca:	4b0a      	ldr	r3, [pc, #40]	; (8001af4 <Widget::GetParamsReply()+0x5c>)
 8001acc:	781b      	ldrb	r3, [r3, #0]
 8001ace:	f88d 3003 	strb.w	r3, [sp, #3]
 8001ad2:	4b09      	ldr	r3, [pc, #36]	; (8001af8 <Widget::GetParamsReply()+0x60>)
 8001ad4:	781b      	ldrb	r3, [r3, #0]
 8001ad6:	f88d 3004 	strb.w	r3, [sp, #4]
 8001ada:	2305      	movs	r3, #5
 8001adc:	f000 fd40 	bl	8002560 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>
 8001ae0:	b002      	add	sp, #8
 8001ae2:	bd10      	pop	{r4, pc}
 8001ae4:	08005710 	stmdaeq	r0, {r4, r8, r9, sl, ip, lr}
 8001ae8:	20000001 	andcs	r0, r0, r1
 8001aec:	20000002 	andcs	r0, r0, r2
 8001af0:	20000003 	andcs	r0, r0, r3
 8001af4:	20000000 	andcs	r0, r0, r0
 8001af8:	20000004 	andcs	r0, r0, r4

08001afc <Widget::SetParams()>:
 8001afc:	b513      	push	{r0, r1, r4, lr}
 8001afe:	4604      	mov	r4, r0
 8001b00:	4914      	ldr	r1, [pc, #80]	; (8001b54 <Widget::SetParams()+0x58>)
 8001b02:	2007      	movs	r0, #7
 8001b04:	f000 fb5e 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001b08:	2100      	movs	r1, #0
 8001b0a:	201c      	movs	r0, #28
 8001b0c:	f000 fb5a 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001b10:	2300      	movs	r3, #0
 8001b12:	2201      	movs	r2, #1
 8001b14:	4619      	mov	r1, r3
 8001b16:	4620      	mov	r0, r4
 8001b18:	f001 f97e 	bl	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001b1c:	f894 309a 	ldrb.w	r3, [r4, #154]	; 0x9a
 8001b20:	4668      	mov	r0, sp
 8001b22:	f88d 3002 	strb.w	r3, [sp, #2]
 8001b26:	f894 309b 	ldrb.w	r3, [r4, #155]	; 0x9b
 8001b2a:	f88d 3003 	strb.w	r3, [sp, #3]
 8001b2e:	f894 309c 	ldrb.w	r3, [r4, #156]	; 0x9c
 8001b32:	f88d 3004 	strb.w	r3, [sp, #4]
 8001b36:	f000 fd73 	bl	8002620 <WidgetConfiguration::Store(TWidgetConfiguration const*)>
 8001b3a:	2301      	movs	r3, #1
 8001b3c:	2100      	movs	r1, #0
 8001b3e:	461a      	mov	r2, r3
 8001b40:	4620      	mov	r0, r4
 8001b42:	f001 f969 	bl	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001b46:	4b04      	ldr	r3, [pc, #16]	; (8001b58 <Widget::SetParams()+0x5c>)
 8001b48:	681b      	ldr	r3, [r3, #0]
 8001b4a:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001b4e:	b002      	add	sp, #8
 8001b50:	bd10      	pop	{r4, pc}
 8001b52:	bf00      	nop
 8001b54:	08005728 	stmdaeq	r0, {r3, r5, r8, r9, sl, ip, lr}
 8001b58:	20001818 	andcs	r1, r0, r8, lsl r8

08001b5c <Widget::ReceivedDmxPacket()>:
 8001b5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001b5e:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001b62:	4604      	mov	r4, r0
 8001b64:	2b03      	cmp	r3, #3
 8001b66:	d042      	beq.n	8001bee <Widget::ReceivedDmxPacket()+0x92>
 8001b68:	f890 7304 	ldrb.w	r7, [r0, #772]	; 0x304
 8001b6c:	2f00      	cmp	r7, #0
 8001b6e:	d13e      	bne.n	8001bee <Widget::ReceivedDmxPacket()+0x92>
 8001b70:	6943      	ldr	r3, [r0, #20]
 8001b72:	2b01      	cmp	r3, #1
 8001b74:	d13b      	bne.n	8001bee <Widget::ReceivedDmxPacket()+0x92>
 8001b76:	f8d0 32f4 	ldr.w	r3, [r0, #756]	; 0x2f4
 8001b7a:	2b01      	cmp	r3, #1
 8001b7c:	d037      	beq.n	8001bee <Widget::ReceivedDmxPacket()+0x92>
 8001b7e:	4639      	mov	r1, r7
 8001b80:	f001 fa24 	bl	8002fcc <Dmx::GetDmxAvailable(unsigned int)>
 8001b84:	4605      	mov	r5, r0
 8001b86:	b390      	cbz	r0, 8001bee <Widget::ReceivedDmxPacket()+0x92>
 8001b88:	4b19      	ldr	r3, [pc, #100]	; (8001bf0 <Widget::ReceivedDmxPacket()+0x94>)
 8001b8a:	f8d4 12f8 	ldr.w	r1, [r4, #760]	; 0x2f8
 8001b8e:	681a      	ldr	r2, [r3, #0]
 8001b90:	f8d4 32fc 	ldr.w	r3, [r4, #764]	; 0x2fc
 8001b94:	1ad3      	subs	r3, r2, r3
 8001b96:	428b      	cmp	r3, r1
 8001b98:	d329      	bcc.n	8001bee <Widget::ReceivedDmxPacket()+0x92>
 8001b9a:	f8d4 3308 	ldr.w	r3, [r4, #776]	; 0x308
 8001b9e:	f8c4 22fc 	str.w	r2, [r4, #764]	; 0x2fc
 8001ba2:	3301      	adds	r3, #1
 8001ba4:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
 8001ba8:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 8001bac:	4911      	ldr	r1, [pc, #68]	; (8001bf4 <Widget::ReceivedDmxPacket()+0x98>)
 8001bae:	3601      	adds	r6, #1
 8001bb0:	2006      	movs	r0, #6
 8001bb2:	f000 fb07 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001bb6:	4632      	mov	r2, r6
 8001bb8:	2007      	movs	r0, #7
 8001bba:	490f      	ldr	r1, [pc, #60]	; (8001bf8 <Widget::ReceivedDmxPacket()+0x9c>)
 8001bbc:	f000 fb02 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001bc0:	4639      	mov	r1, r7
 8001bc2:	201c      	movs	r0, #28
 8001bc4:	f000 fafe 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001bc8:	1c72      	adds	r2, r6, #1
 8001bca:	2105      	movs	r1, #5
 8001bcc:	4620      	mov	r0, r4
 8001bce:	b292      	uxth	r2, r2
 8001bd0:	f000 fca6 	bl	8002520 <Widget::SendHeader(unsigned char, unsigned int)>
 8001bd4:	4638      	mov	r0, r7
 8001bd6:	f001 fa8a 	bl	80030ee <usb_send_byte>
 8001bda:	4620      	mov	r0, r4
 8001bdc:	4629      	mov	r1, r5
 8001bde:	b2b2      	uxth	r2, r6
 8001be0:	f000 fcb0 	bl	8002544 <Widget::SendData(unsigned char const*, unsigned int)>
 8001be4:	4620      	mov	r0, r4
 8001be6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8001bea:	f000 bcb6 	b.w	800255a <Widget::SendFooter()>
 8001bee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001bf0:	20001818 	andcs	r1, r0, r8, lsl r8
 8001bf4:	0800573a 	stmdaeq	r0, {r1, r3, r4, r5, r8, r9, sl, ip, lr}
 8001bf8:	0800574e 	stmdaeq	r0, {r1, r2, r3, r6, r8, r9, sl, ip, lr}

08001bfc <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>:
 8001bfc:	b570      	push	{r4, r5, r6, lr}
 8001bfe:	f8d0 5300 	ldr.w	r5, [r0, #768]	; 0x300
 8001c02:	4604      	mov	r4, r0
 8001c04:	460e      	mov	r6, r1
 8001c06:	b9e5      	cbnz	r5, 8001c42 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x46>
 8001c08:	2007      	movs	r0, #7
 8001c0a:	490e      	ldr	r1, [pc, #56]	; (8001c44 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x48>)
 8001c0c:	f000 fada 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001c10:	4629      	mov	r1, r5
 8001c12:	201c      	movs	r0, #28
 8001c14:	f000 fad6 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001c18:	462b      	mov	r3, r5
 8001c1a:	462a      	mov	r2, r5
 8001c1c:	4629      	mov	r1, r5
 8001c1e:	4620      	mov	r0, r4
 8001c20:	f001 f8fa 	bl	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001c24:	4633      	mov	r3, r6
 8001c26:	4629      	mov	r1, r5
 8001c28:	4620      	mov	r0, r4
 8001c2a:	f104 0298 	add.w	r2, r4, #152	; 0x98
 8001c2e:	f001 f9a5 	bl	8002f7c <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)>
 8001c32:	462a      	mov	r2, r5
 8001c34:	4629      	mov	r1, r5
 8001c36:	4620      	mov	r0, r4
 8001c38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001c3c:	2301      	movs	r3, #1
 8001c3e:	f001 b8eb 	b.w	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001c42:	bd70      	pop	{r4, r5, r6, pc}
 8001c44:	08005768 	stmdaeq	r0, {r3, r5, r6, r8, r9, sl, ip, lr}

08001c48 <Widget::SendRdmPacketRequest(unsigned short)>:
 8001c48:	b570      	push	{r4, r5, r6, lr}
 8001c4a:	4604      	mov	r4, r0
 8001c4c:	460d      	mov	r5, r1
 8001c4e:	2007      	movs	r0, #7
 8001c50:	4910      	ldr	r1, [pc, #64]	; (8001c94 <Widget::SendRdmPacketRequest(unsigned short)+0x4c>)
 8001c52:	f000 fab7 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001c56:	2100      	movs	r1, #0
 8001c58:	201c      	movs	r0, #28
 8001c5a:	f000 fab3 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001c5e:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 8001c62:	f104 0698 	add.w	r6, r4, #152	; 0x98
 8001c66:	f1a3 0210 	sub.w	r2, r3, #16
 8001c6a:	4253      	negs	r3, r2
 8001c6c:	4153      	adcs	r3, r2
 8001c6e:	4631      	mov	r1, r6
 8001c70:	462a      	mov	r2, r5
 8001c72:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 8001c76:	2000      	movs	r0, #0
 8001c78:	f000 fd34 	bl	80026e4 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 8001c7c:	4b06      	ldr	r3, [pc, #24]	; (8001c98 <Widget::SendRdmPacketRequest(unsigned short)+0x50>)
 8001c7e:	4632      	mov	r2, r6
 8001c80:	681b      	ldr	r3, [r3, #0]
 8001c82:	4629      	mov	r1, r5
 8001c84:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8001c88:	2011      	movs	r0, #17
 8001c8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001c8e:	2301      	movs	r3, #1
 8001c90:	f000 bd1e 	b.w	80026d0 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8001c94:	0800578c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl, ip, lr}
 8001c98:	20001818 	andcs	r1, r0, r8, lsl r8

08001c9c <Widget::ReceiveDmxOnChange()>:
 8001c9c:	b510      	push	{r4, lr}
 8001c9e:	4604      	mov	r4, r0
 8001ca0:	4910      	ldr	r1, [pc, #64]	; (8001ce4 <Widget::ReceiveDmxOnChange()+0x48>)
 8001ca2:	2007      	movs	r0, #7
 8001ca4:	f000 fa8e 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001ca8:	2100      	movs	r1, #0
 8001caa:	201c      	movs	r0, #28
 8001cac:	f000 fa8a 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001cb0:	f894 3098 	ldrb.w	r3, [r4, #152]	; 0x98
 8001cb4:	2201      	movs	r2, #1
 8001cb6:	f8c4 32f4 	str.w	r3, [r4, #756]	; 0x2f4
 8001cba:	2300      	movs	r3, #0
 8001cbc:	4620      	mov	r0, r4
 8001cbe:	4619      	mov	r1, r3
 8001cc0:	f001 f8aa 	bl	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001cc4:	2100      	movs	r1, #0
 8001cc6:	4620      	mov	r0, r4
 8001cc8:	f001 f818 	bl	8002cfc <Dmx::ClearData(unsigned int)>
 8001ccc:	2301      	movs	r3, #1
 8001cce:	2100      	movs	r1, #0
 8001cd0:	461a      	mov	r2, r3
 8001cd2:	4620      	mov	r0, r4
 8001cd4:	f001 f8a0 	bl	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001cd8:	4b03      	ldr	r3, [pc, #12]	; (8001ce8 <Widget::ReceiveDmxOnChange()+0x4c>)
 8001cda:	681b      	ldr	r3, [r3, #0]
 8001cdc:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001ce0:	bd10      	pop	{r4, pc}
 8001ce2:	bf00      	nop
 8001ce4:	080057a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, ip, lr}
 8001ce8:	20001818 	andcs	r1, r0, r8, lsl r8

08001cec <Widget::ReceivedDmxChangeOfStatePacket()>:
 8001cec:	f8d0 22f0 	ldr.w	r2, [r0, #752]	; 0x2f0
 8001cf0:	b510      	push	{r4, lr}
 8001cf2:	2a03      	cmp	r2, #3
 8001cf4:	d01a      	beq.n	8001d2c <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001cf6:	f890 4304 	ldrb.w	r4, [r0, #772]	; 0x304
 8001cfa:	b9bc      	cbnz	r4, 8001d2c <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001cfc:	6942      	ldr	r2, [r0, #20]
 8001cfe:	2a01      	cmp	r2, #1
 8001d00:	d114      	bne.n	8001d2c <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001d02:	f8d0 32f4 	ldr.w	r3, [r0, #756]	; 0x2f4
 8001d06:	b18b      	cbz	r3, 8001d2c <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001d08:	4621      	mov	r1, r4
 8001d0a:	f001 f973 	bl	8002ff4 <Dmx::GetDmxChanged(unsigned int)>
 8001d0e:	b168      	cbz	r0, 8001d2c <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001d10:	2007      	movs	r0, #7
 8001d12:	4907      	ldr	r1, [pc, #28]	; (8001d30 <Widget::ReceivedDmxChangeOfStatePacket()+0x44>)
 8001d14:	f000 fa56 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001d18:	4621      	mov	r1, r4
 8001d1a:	201c      	movs	r0, #28
 8001d1c:	f000 fa52 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001d20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d24:	2007      	movs	r0, #7
 8001d26:	4903      	ldr	r1, [pc, #12]	; (8001d34 <Widget::ReceivedDmxChangeOfStatePacket()+0x48>)
 8001d28:	f000 ba4c 	b.w	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001d2c:	bd10      	pop	{r4, pc}
 8001d2e:	bf00      	nop
 8001d30:	080057ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, r9, sl, ip, lr}
 8001d34:	080057d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, ip, lr}

08001d38 <Widget::GetSnReply()>:
 8001d38:	b510      	push	{r4, lr}
 8001d3a:	4910      	ldr	r1, [pc, #64]	; (8001d7c <Widget::GetSnReply()+0x44>)
 8001d3c:	4604      	mov	r4, r0
 8001d3e:	2007      	movs	r0, #7
 8001d40:	f000 fa40 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001d44:	2100      	movs	r1, #0
 8001d46:	201c      	movs	r0, #28
 8001d48:	f000 fa3c 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001d4c:	2300      	movs	r3, #0
 8001d4e:	2201      	movs	r2, #1
 8001d50:	4619      	mov	r1, r3
 8001d52:	4620      	mov	r0, r4
 8001d54:	f001 f860 	bl	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001d58:	2304      	movs	r3, #4
 8001d5a:	210a      	movs	r1, #10
 8001d5c:	4620      	mov	r0, r4
 8001d5e:	f104 0222 	add.w	r2, r4, #34	; 0x22
 8001d62:	f000 fbfd 	bl	8002560 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>
 8001d66:	2301      	movs	r3, #1
 8001d68:	2100      	movs	r1, #0
 8001d6a:	461a      	mov	r2, r3
 8001d6c:	4620      	mov	r0, r4
 8001d6e:	f001 f853 	bl	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001d72:	4b03      	ldr	r3, [pc, #12]	; (8001d80 <Widget::GetSnReply()+0x48>)
 8001d74:	681b      	ldr	r3, [r3, #0]
 8001d76:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001d7a:	bd10      	pop	{r4, pc}
 8001d7c:	08005710 	stmdaeq	r0, {r4, r8, r9, sl, ip, lr}
 8001d80:	20001818 	andcs	r1, r0, r8, lsl r8

08001d84 <Widget::SendRdmDiscoveryRequest(unsigned short)>:
 8001d84:	b570      	push	{r4, r5, r6, lr}
 8001d86:	4604      	mov	r4, r0
 8001d88:	460d      	mov	r5, r1
 8001d8a:	2007      	movs	r0, #7
 8001d8c:	490d      	ldr	r1, [pc, #52]	; (8001dc4 <Widget::SendRdmDiscoveryRequest(unsigned short)+0x40>)
 8001d8e:	f000 fa19 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001d92:	f104 0698 	add.w	r6, r4, #152	; 0x98
 8001d96:	2100      	movs	r1, #0
 8001d98:	201c      	movs	r0, #28
 8001d9a:	f000 fa13 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001d9e:	462a      	mov	r2, r5
 8001da0:	4631      	mov	r1, r6
 8001da2:	2000      	movs	r0, #0
 8001da4:	f000 fc9e 	bl	80026e4 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 8001da8:	2301      	movs	r3, #1
 8001daa:	4a07      	ldr	r2, [pc, #28]	; (8001dc8 <Widget::SendRdmDiscoveryRequest(unsigned short)+0x44>)
 8001dac:	4629      	mov	r1, r5
 8001dae:	6812      	ldr	r2, [r2, #0]
 8001db0:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 8001db4:	f8c4 2300 	str.w	r2, [r4, #768]	; 0x300
 8001db8:	2011      	movs	r0, #17
 8001dba:	4632      	mov	r2, r6
 8001dbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001dc0:	f000 bc86 	b.w	80026d0 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8001dc4:	080057ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, r9, sl, ip, lr}
 8001dc8:	20001818 	andcs	r1, r0, r8, lsl r8

08001dcc <Widget::RdmTimeOutMessage()>:
 8001dcc:	b510      	push	{r4, lr}
 8001dce:	4604      	mov	r4, r0
 8001dd0:	2200      	movs	r2, #0
 8001dd2:	2007      	movs	r0, #7
 8001dd4:	490a      	ldr	r1, [pc, #40]	; (8001e00 <Widget::RdmTimeOutMessage()+0x34>)
 8001dd6:	f000 f9f5 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001dda:	201c      	movs	r0, #28
 8001ddc:	4909      	ldr	r1, [pc, #36]	; (8001e04 <Widget::RdmTimeOutMessage()+0x38>)
 8001dde:	f000 f9f1 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001de2:	2200      	movs	r2, #0
 8001de4:	210c      	movs	r1, #12
 8001de6:	4620      	mov	r0, r4
 8001de8:	f000 fb9a 	bl	8002520 <Widget::SendHeader(unsigned char, unsigned int)>
 8001dec:	4620      	mov	r0, r4
 8001dee:	f000 fbb4 	bl	800255a <Widget::SendFooter()>
 8001df2:	2300      	movs	r3, #0
 8001df4:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 8001df8:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8001dfc:	bd10      	pop	{r4, pc}
 8001dfe:	bf00      	nop
 8001e00:	08005809 	stmdaeq	r0, {r0, r3, fp, ip, lr}
 8001e04:	08005825 	stmdaeq	r0, {r0, r2, r5, fp, ip, lr}

08001e08 <Widget::ReceivedRdmPacket()>:
 8001e08:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001e0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e10:	f023 0302 	bic.w	r3, r3, #2
 8001e14:	2b01      	cmp	r3, #1
 8001e16:	4604      	mov	r4, r0
 8001e18:	d063      	beq.n	8001ee2 <Widget::ReceivedRdmPacket()+0xda>
 8001e1a:	f8d0 32f4 	ldr.w	r3, [r0, #756]	; 0x2f4
 8001e1e:	2b01      	cmp	r3, #1
 8001e20:	d05f      	beq.n	8001ee2 <Widget::ReceivedRdmPacket()+0xda>
 8001e22:	2000      	movs	r0, #0
 8001e24:	f000 fc56 	bl	80026d4 <Rdm::Receive(unsigned int)>
 8001e28:	4605      	mov	r5, r0
 8001e2a:	2800      	cmp	r0, #0
 8001e2c:	d059      	beq.n	8001ee2 <Widget::ReceivedRdmPacket()+0xda>
 8001e2e:	7803      	ldrb	r3, [r0, #0]
 8001e30:	2bcc      	cmp	r3, #204	; 0xcc
 8001e32:	d134      	bne.n	8001e9e <Widget::ReceivedRdmPacket()+0x96>
 8001e34:	7886      	ldrb	r6, [r0, #2]
 8001e36:	7d07      	ldrb	r7, [r0, #20]
 8001e38:	3602      	adds	r6, #2
 8001e3a:	b2f6      	uxtb	r6, r6
 8001e3c:	4632      	mov	r2, r6
 8001e3e:	2007      	movs	r0, #7
 8001e40:	4929      	ldr	r1, [pc, #164]	; (8001ee8 <Widget::ReceivedRdmPacket()+0xe0>)
 8001e42:	f000 f9bf 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001e46:	201c      	movs	r0, #28
 8001e48:	4928      	ldr	r1, [pc, #160]	; (8001eec <Widget::ReceivedRdmPacket()+0xe4>)
 8001e4a:	f000 f9bb 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001e4e:	2105      	movs	r1, #5
 8001e50:	1c72      	adds	r2, r6, #1
 8001e52:	4620      	mov	r0, r4
 8001e54:	f000 fb64 	bl	8002520 <Widget::SendHeader(unsigned char, unsigned int)>
 8001e58:	2000      	movs	r0, #0
 8001e5a:	f001 f948 	bl	80030ee <usb_send_byte>
 8001e5e:	4632      	mov	r2, r6
 8001e60:	4629      	mov	r1, r5
 8001e62:	4620      	mov	r0, r4
 8001e64:	f000 fb6e 	bl	8002544 <Widget::SendData(unsigned char const*, unsigned int)>
 8001e68:	4620      	mov	r0, r4
 8001e6a:	f000 fb76 	bl	800255a <Widget::SendFooter()>
 8001e6e:	2f11      	cmp	r7, #17
 8001e70:	d111      	bne.n	8001e96 <Widget::ReceivedRdmPacket()+0x8e>
 8001e72:	7d6a      	ldrb	r2, [r5, #21]
 8001e74:	7dab      	ldrb	r3, [r5, #22]
 8001e76:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8001e7a:	b29b      	uxth	r3, r3
 8001e7c:	2b02      	cmp	r3, #2
 8001e7e:	d00a      	beq.n	8001e96 <Widget::ReceivedRdmPacket()+0x8e>
 8001e80:	4620      	mov	r0, r4
 8001e82:	f7ff ffa3 	bl	8001dcc <Widget::RdmTimeOutMessage()>
 8001e86:	462a      	mov	r2, r5
 8001e88:	4631      	mov	r1, r6
 8001e8a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001e8e:	2300      	movs	r3, #0
 8001e90:	2011      	movs	r0, #17
 8001e92:	f000 bc1d 	b.w	80026d0 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8001e96:	2300      	movs	r3, #0
 8001e98:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8001e9c:	e7f3      	b.n	8001e86 <Widget::ReceivedRdmPacket()+0x7e>
 8001e9e:	2bfe      	cmp	r3, #254	; 0xfe
 8001ea0:	d11d      	bne.n	8001ede <Widget::ReceivedRdmPacket()+0xd6>
 8001ea2:	2218      	movs	r2, #24
 8001ea4:	2007      	movs	r0, #7
 8001ea6:	4910      	ldr	r1, [pc, #64]	; (8001ee8 <Widget::ReceivedRdmPacket()+0xe0>)
 8001ea8:	f000 f98c 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001eac:	201c      	movs	r0, #28
 8001eae:	4910      	ldr	r1, [pc, #64]	; (8001ef0 <Widget::ReceivedRdmPacket()+0xe8>)
 8001eb0:	f000 f988 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001eb4:	2219      	movs	r2, #25
 8001eb6:	2105      	movs	r1, #5
 8001eb8:	4620      	mov	r0, r4
 8001eba:	f000 fb31 	bl	8002520 <Widget::SendHeader(unsigned char, unsigned int)>
 8001ebe:	2000      	movs	r0, #0
 8001ec0:	f001 f915 	bl	80030ee <usb_send_byte>
 8001ec4:	2218      	movs	r2, #24
 8001ec6:	4629      	mov	r1, r5
 8001ec8:	4620      	mov	r0, r4
 8001eca:	f000 fb3b 	bl	8002544 <Widget::SendData(unsigned char const*, unsigned int)>
 8001ece:	4620      	mov	r0, r4
 8001ed0:	f000 fb43 	bl	800255a <Widget::SendFooter()>
 8001ed4:	4620      	mov	r0, r4
 8001ed6:	f7ff ff79 	bl	8001dcc <Widget::RdmTimeOutMessage()>
 8001eda:	2618      	movs	r6, #24
 8001edc:	e7d3      	b.n	8001e86 <Widget::ReceivedRdmPacket()+0x7e>
 8001ede:	2600      	movs	r6, #0
 8001ee0:	e7d1      	b.n	8001e86 <Widget::ReceivedRdmPacket()+0x7e>
 8001ee2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001ee6:	bf00      	nop
 8001ee8:	08005809 	stmdaeq	r0, {r0, r3, fp, ip, lr}
 8001eec:	08005831 	stmdaeq	r0, {r0, r4, r5, fp, ip, lr}
 8001ef0:	0800584d 	stmdaeq	r0, {r0, r2, r3, r6, fp, ip, lr}

08001ef4 <Widget::RdmTimeout()>:
 8001ef4:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001ef8:	b510      	push	{r4, lr}
 8001efa:	2b03      	cmp	r3, #3
 8001efc:	4604      	mov	r4, r0
 8001efe:	d00d      	beq.n	8001f1c <Widget::RdmTimeout()+0x28>
 8001f00:	f8d0 2300 	ldr.w	r2, [r0, #768]	; 0x300
 8001f04:	b152      	cbz	r2, 8001f1c <Widget::RdmTimeout()+0x28>
 8001f06:	4b06      	ldr	r3, [pc, #24]	; (8001f20 <Widget::RdmTimeout()+0x2c>)
 8001f08:	681b      	ldr	r3, [r3, #0]
 8001f0a:	1a9b      	subs	r3, r3, r2
 8001f0c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001f10:	d304      	bcc.n	8001f1c <Widget::RdmTimeout()+0x28>
 8001f12:	f7ff ff5b 	bl	8001dcc <Widget::RdmTimeOutMessage()>
 8001f16:	2300      	movs	r3, #0
 8001f18:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8001f1c:	bd10      	pop	{r4, pc}
 8001f1e:	bf00      	nop
 8001f20:	20001818 	andcs	r1, r0, r8, lsl r8

08001f24 <Widget::GetManufacturerReply()>:
 8001f24:	b538      	push	{r3, r4, r5, lr}
 8001f26:	4918      	ldr	r1, [pc, #96]	; (8001f88 <Widget::GetManufacturerReply()+0x64>)
 8001f28:	4604      	mov	r4, r0
 8001f2a:	2007      	movs	r0, #7
 8001f2c:	f000 f94a 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001f30:	2100      	movs	r1, #0
 8001f32:	201c      	movs	r0, #28
 8001f34:	f000 f946 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001f38:	2300      	movs	r3, #0
 8001f3a:	f894 5067 	ldrb.w	r5, [r4, #103]	; 0x67
 8001f3e:	4619      	mov	r1, r3
 8001f40:	2201      	movs	r2, #1
 8001f42:	4620      	mov	r0, r4
 8001f44:	f000 ff68 	bl	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001f48:	214d      	movs	r1, #77	; 0x4d
 8001f4a:	4620      	mov	r0, r4
 8001f4c:	1caa      	adds	r2, r5, #2
 8001f4e:	f000 fae7 	bl	8002520 <Widget::SendHeader(unsigned char, unsigned int)>
 8001f52:	2202      	movs	r2, #2
 8001f54:	4620      	mov	r0, r4
 8001f56:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 8001f5a:	f000 faf3 	bl	8002544 <Widget::SendData(unsigned char const*, unsigned int)>
 8001f5e:	462a      	mov	r2, r5
 8001f60:	f104 0147 	add.w	r1, r4, #71	; 0x47
 8001f64:	4620      	mov	r0, r4
 8001f66:	f000 faed 	bl	8002544 <Widget::SendData(unsigned char const*, unsigned int)>
 8001f6a:	4620      	mov	r0, r4
 8001f6c:	f000 faf5 	bl	800255a <Widget::SendFooter()>
 8001f70:	2301      	movs	r3, #1
 8001f72:	2100      	movs	r1, #0
 8001f74:	461a      	mov	r2, r3
 8001f76:	4620      	mov	r0, r4
 8001f78:	f000 ff4e 	bl	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001f7c:	4b03      	ldr	r3, [pc, #12]	; (8001f8c <Widget::GetManufacturerReply()+0x68>)
 8001f7e:	681b      	ldr	r3, [r3, #0]
 8001f80:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001f84:	bd38      	pop	{r3, r4, r5, pc}
 8001f86:	bf00      	nop
 8001f88:	08005869 	stmdaeq	r0, {r0, r3, r5, r6, fp, ip, lr}
 8001f8c:	20001818 	andcs	r1, r0, r8, lsl r8

08001f90 <Widget::GetNameReply()>:
 8001f90:	b538      	push	{r3, r4, r5, lr}
 8001f92:	4917      	ldr	r1, [pc, #92]	; (8001ff0 <Widget::GetNameReply()+0x60>)
 8001f94:	4604      	mov	r4, r0
 8001f96:	2007      	movs	r0, #7
 8001f98:	f000 f914 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001f9c:	2100      	movs	r1, #0
 8001f9e:	201c      	movs	r0, #28
 8001fa0:	f000 f910 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8001fa4:	2300      	movs	r3, #0
 8001fa6:	f894 5046 	ldrb.w	r5, [r4, #70]	; 0x46
 8001faa:	4619      	mov	r1, r3
 8001fac:	2201      	movs	r2, #1
 8001fae:	4620      	mov	r0, r4
 8001fb0:	f000 ff32 	bl	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001fb4:	214e      	movs	r1, #78	; 0x4e
 8001fb6:	4620      	mov	r0, r4
 8001fb8:	1caa      	adds	r2, r5, #2
 8001fba:	f000 fab1 	bl	8002520 <Widget::SendHeader(unsigned char, unsigned int)>
 8001fbe:	2202      	movs	r2, #2
 8001fc0:	4620      	mov	r0, r4
 8001fc2:	490c      	ldr	r1, [pc, #48]	; (8001ff4 <Widget::GetNameReply()+0x64>)
 8001fc4:	f000 fabe 	bl	8002544 <Widget::SendData(unsigned char const*, unsigned int)>
 8001fc8:	462a      	mov	r2, r5
 8001fca:	f104 0126 	add.w	r1, r4, #38	; 0x26
 8001fce:	4620      	mov	r0, r4
 8001fd0:	f000 fab8 	bl	8002544 <Widget::SendData(unsigned char const*, unsigned int)>
 8001fd4:	4620      	mov	r0, r4
 8001fd6:	f000 fac0 	bl	800255a <Widget::SendFooter()>
 8001fda:	2301      	movs	r3, #1
 8001fdc:	2100      	movs	r1, #0
 8001fde:	461a      	mov	r2, r3
 8001fe0:	4620      	mov	r0, r4
 8001fe2:	f000 ff19 	bl	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001fe6:	4b04      	ldr	r3, [pc, #16]	; (8001ff8 <Widget::GetNameReply()+0x68>)
 8001fe8:	681b      	ldr	r3, [r3, #0]
 8001fea:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001fee:	bd38      	pop	{r3, r4, r5, pc}
 8001ff0:	0800587c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, ip, lr}
 8001ff4:	20000005 	andcs	r0, r0, r5
 8001ff8:	20001818 	andcs	r1, r0, r8, lsl r8

08001ffc <Widget::ReceiveDataFromHost()>:
 8001ffc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8002000:	4604      	mov	r4, r0
 8002002:	f001 f95d 	bl	80032c0 <FT245RL_data_available>
 8002006:	2800      	cmp	r0, #0
 8002008:	d040      	beq.n	800208c <Widget::ReceiveDataFromHost()+0x90>
 800200a:	f001 f867 	bl	80030dc <usb_read_byte>
 800200e:	287e      	cmp	r0, #126	; 0x7e
 8002010:	d13c      	bne.n	800208c <Widget::ReceiveDataFromHost()+0x90>
 8002012:	f001 f863 	bl	80030dc <usb_read_byte>
 8002016:	4607      	mov	r7, r0
 8002018:	f001 f860 	bl	80030dc <usb_read_byte>
 800201c:	4605      	mov	r5, r0
 800201e:	f001 f85d 	bl	80030dc <usb_read_byte>
 8002022:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8002026:	f06f 0997 	mvn.w	r9, #151	; 0x97
 800202a:	b2ad      	uxth	r5, r5
 800202c:	462e      	mov	r6, r5
 800202e:	f104 0898 	add.w	r8, r4, #152	; 0x98
 8002032:	eba9 0904 	sub.w	r9, r9, r4
 8002036:	eb09 0308 	add.w	r3, r9, r8
 800203a:	429d      	cmp	r5, r3
 800203c:	d904      	bls.n	8002048 <Widget::ReceiveDataFromHost()+0x4c>
 800203e:	f001 f84d 	bl	80030dc <usb_read_byte>
 8002042:	f808 0b01 	strb.w	r0, [r8], #1
 8002046:	e7f6      	b.n	8002036 <Widget::ReceiveDataFromHost()+0x3a>
 8002048:	f001 f848 	bl	80030dc <usb_read_byte>
 800204c:	28e7      	cmp	r0, #231	; 0xe7
 800204e:	d004      	beq.n	800205a <Widget::ReceiveDataFromHost()+0x5e>
 8002050:	1c73      	adds	r3, r6, #1
 8002052:	f5b6 7f16 	cmp.w	r6, #600	; 0x258
 8002056:	461e      	mov	r6, r3
 8002058:	d3f6      	bcc.n	8002048 <Widget::ReceiveDataFromHost()+0x4c>
 800205a:	462b      	mov	r3, r5
 800205c:	463a      	mov	r2, r7
 800205e:	2006      	movs	r0, #6
 8002060:	4928      	ldr	r1, [pc, #160]	; (8002104 <Widget::ReceiveDataFromHost()+0x108>)
 8002062:	9600      	str	r6, [sp, #0]
 8002064:	f000 f8ae 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 8002068:	2f0b      	cmp	r7, #11
 800206a:	d80b      	bhi.n	8002084 <Widget::ReceiveDataFromHost()+0x88>
 800206c:	2f02      	cmp	r7, #2
 800206e:	d90d      	bls.n	800208c <Widget::ReceiveDataFromHost()+0x90>
 8002070:	3f03      	subs	r7, #3
 8002072:	2f08      	cmp	r7, #8
 8002074:	d80a      	bhi.n	800208c <Widget::ReceiveDataFromHost()+0x90>
 8002076:	e8df f007 	tbb	[pc, r7]
 800207a:	2a09180c 	bcs	82480b2 <__exidx_end+0x242206>
 800207e:	12093137 	andne	r3, r9, #-1073741811	; 0xc000000d
 8002082:	2f4d003e 	svccs	0x004d003e
 8002086:	d01c      	beq.n	80020c2 <Widget::ReceiveDataFromHost()+0xc6>
 8002088:	2f4e      	cmp	r7, #78	; 0x4e
 800208a:	d014      	beq.n	80020b6 <Widget::ReceiveDataFromHost()+0xba>
 800208c:	b003      	add	sp, #12
 800208e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002092:	4620      	mov	r0, r4
 8002094:	b003      	add	sp, #12
 8002096:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800209a:	f7ff bcfd 	b.w	8001a98 <Widget::GetParamsReply()>
 800209e:	4620      	mov	r0, r4
 80020a0:	b003      	add	sp, #12
 80020a2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020a6:	f7ff be47 	b.w	8001d38 <Widget::GetSnReply()>
 80020aa:	4620      	mov	r0, r4
 80020ac:	b003      	add	sp, #12
 80020ae:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020b2:	f7ff bd23 	b.w	8001afc <Widget::SetParams()>
 80020b6:	4620      	mov	r0, r4
 80020b8:	b003      	add	sp, #12
 80020ba:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020be:	f7ff bf67 	b.w	8001f90 <Widget::GetNameReply()>
 80020c2:	4620      	mov	r0, r4
 80020c4:	b003      	add	sp, #12
 80020c6:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020ca:	f7ff bf2b 	b.w	8001f24 <Widget::GetManufacturerReply()>
 80020ce:	4629      	mov	r1, r5
 80020d0:	4620      	mov	r0, r4
 80020d2:	b003      	add	sp, #12
 80020d4:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020d8:	f7ff bd90 	b.w	8001bfc <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>
 80020dc:	4620      	mov	r0, r4
 80020de:	b003      	add	sp, #12
 80020e0:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020e4:	f7ff bdda 	b.w	8001c9c <Widget::ReceiveDmxOnChange()>
 80020e8:	4629      	mov	r1, r5
 80020ea:	4620      	mov	r0, r4
 80020ec:	b003      	add	sp, #12
 80020ee:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020f2:	f7ff bda9 	b.w	8001c48 <Widget::SendRdmPacketRequest(unsigned short)>
 80020f6:	4629      	mov	r1, r5
 80020f8:	4620      	mov	r0, r4
 80020fa:	b003      	add	sp, #12
 80020fc:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002100:	f7ff be40 	b.w	8001d84 <Widget::SendRdmDiscoveryRequest(unsigned short)>
 8002104:	08005892 	stmdaeq	r0, {r1, r4, r7, fp, ip, lr}

08002108 <WidgetConfiguration::SetRefreshRate(unsigned char)>:
 8002108:	4b05      	ldr	r3, [pc, #20]	; (8002120 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x18>)
 800210a:	7018      	strb	r0, [r3, #0]
 800210c:	b130      	cbz	r0, 800211c <WidgetConfiguration::SetRefreshRate(unsigned char)+0x14>
 800210e:	4905      	ldr	r1, [pc, #20]	; (8002124 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x1c>)
 8002110:	fbb1 f1f0 	udiv	r1, r1, r0
 8002114:	4b04      	ldr	r3, [pc, #16]	; (8002128 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x20>)
 8002116:	6818      	ldr	r0, [r3, #0]
 8002118:	f000 bef8 	b.w	8002f0c <Dmx::SetDmxPeriodTime(unsigned int)>
 800211c:	4601      	mov	r1, r0
 800211e:	e7f9      	b.n	8002114 <WidgetConfiguration::SetRefreshRate(unsigned char)+0xc>
 8002120:	20000004 	andcs	r0, r0, r4
 8002124:	000f4240 	andeq	r4, pc, r0, asr #4
 8002128:	20000724 	andcs	r0, r0, r4, lsr #14

0800212c <WidgetConfiguration::SetBreakTime(unsigned char)>:
 800212c:	b508      	push	{r3, lr}
 800212e:	4b08      	ldr	r3, [pc, #32]	; (8002150 <WidgetConfiguration::SetBreakTime(unsigned char)+0x24>)
 8002130:	7018      	strb	r0, [r3, #0]
 8002132:	f7fe f9bb 	bl	80004ac <__aeabi_i2f>
 8002136:	4907      	ldr	r1, [pc, #28]	; (8002154 <WidgetConfiguration::SetBreakTime(unsigned char)+0x28>)
 8002138:	f7fd fffa 	bl	8000130 <__aeabi_fmul>
 800213c:	f7ff f818 	bl	8001170 <__aeabi_f2uiz>
 8002140:	4b05      	ldr	r3, [pc, #20]	; (8002158 <WidgetConfiguration::SetBreakTime(unsigned char)+0x2c>)
 8002142:	4601      	mov	r1, r0
 8002144:	6818      	ldr	r0, [r3, #0]
 8002146:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800214a:	f000 bf03 	b.w	8002f54 <Dmx::SetDmxBreakTime(unsigned int)>
 800214e:	bf00      	nop
 8002150:	20000001 	andcs	r0, r0, r1
 8002154:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 8002158:	20000724 	andcs	r0, r0, r4, lsr #14

0800215c <WidgetConfiguration::SetMabTime(unsigned char)>:
 800215c:	b508      	push	{r3, lr}
 800215e:	4b08      	ldr	r3, [pc, #32]	; (8002180 <WidgetConfiguration::SetMabTime(unsigned char)+0x24>)
 8002160:	7018      	strb	r0, [r3, #0]
 8002162:	f7fe f9a3 	bl	80004ac <__aeabi_i2f>
 8002166:	4907      	ldr	r1, [pc, #28]	; (8002184 <WidgetConfiguration::SetMabTime(unsigned char)+0x28>)
 8002168:	f7fd ffe2 	bl	8000130 <__aeabi_fmul>
 800216c:	f7ff f800 	bl	8001170 <__aeabi_f2uiz>
 8002170:	4b05      	ldr	r3, [pc, #20]	; (8002188 <WidgetConfiguration::SetMabTime(unsigned char)+0x2c>)
 8002172:	4601      	mov	r1, r0
 8002174:	6818      	ldr	r0, [r3, #0]
 8002176:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800217a:	f000 bef5 	b.w	8002f68 <Dmx::SetDmxMabTime(unsigned int)>
 800217e:	bf00      	nop
 8002180:	20000000 	andcs	r0, r0, r0
 8002184:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 8002188:	20000724 	andcs	r0, r0, r4, lsr #14

0800218c <WidgetConfiguration::SetMode(widget::Mode)>:
 800218c:	2800      	cmp	r0, #0
 800218e:	bf14      	ite	ne
 8002190:	4602      	movne	r2, r0
 8002192:	2202      	moveq	r2, #2
 8002194:	4b03      	ldr	r3, [pc, #12]	; (80021a4 <WidgetConfiguration::SetMode(widget::Mode)+0x18>)
 8002196:	701a      	strb	r2, [r3, #0]
 8002198:	4b03      	ldr	r3, [pc, #12]	; (80021a8 <WidgetConfiguration::SetMode(widget::Mode)+0x1c>)
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	f8c3 02f0 	str.w	r0, [r3, #752]	; 0x2f0
 80021a0:	4770      	bx	lr
 80021a2:	bf00      	nop
 80021a4:	20000002 	andcs	r0, r0, r2
 80021a8:	200000f4 	strdcs	r0, [r0], -r4

080021ac <WidgetConfiguration::SetThrottle(unsigned char)>:
 80021ac:	b118      	cbz	r0, 80021b6 <WidgetConfiguration::SetThrottle(unsigned char)+0xa>
 80021ae:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80021b2:	fbb3 f0f0 	udiv	r0, r3, r0
 80021b6:	4b02      	ldr	r3, [pc, #8]	; (80021c0 <WidgetConfiguration::SetThrottle(unsigned char)+0x14>)
 80021b8:	681b      	ldr	r3, [r3, #0]
 80021ba:	f8c3 02f8 	str.w	r0, [r3, #760]	; 0x2f8
 80021be:	4770      	bx	lr
 80021c0:	200000f4 	strdcs	r0, [r0], -r4

080021c4 <WidgetMonitor::Line(int, char const*, ...)>:
 80021c4:	b40e      	push	{r1, r2, r3}
 80021c6:	b003      	add	sp, #12
 80021c8:	4770      	bx	lr
	...

080021cc <WidgetParams::WidgetParams(WidgetParamsStore*)>:
 80021cc:	4a02      	ldr	r2, [pc, #8]	; (80021d8 <WidgetParams::WidgetParams(WidgetParamsStore*)+0xc>)
 80021ce:	6001      	str	r1, [r0, #0]
 80021d0:	6082      	str	r2, [r0, #8]
 80021d2:	2200      	movs	r2, #0
 80021d4:	7302      	strb	r2, [r0, #12]
 80021d6:	4770      	bx	lr
 80021d8:	00280109 	eoreq	r0, r8, r9, lsl #2

080021dc <WidgetParams::Load()>:
 80021dc:	2300      	movs	r3, #0
 80021de:	b513      	push	{r0, r1, r4, lr}
 80021e0:	4604      	mov	r4, r0
 80021e2:	4602      	mov	r2, r0
 80021e4:	6043      	str	r3, [r0, #4]
 80021e6:	4909      	ldr	r1, [pc, #36]	; (800220c <WidgetParams::Load()+0x30>)
 80021e8:	4668      	mov	r0, sp
 80021ea:	f001 fc8a 	bl	8003b02 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80021ee:	6820      	ldr	r0, [r4, #0]
 80021f0:	b150      	cbz	r0, 8002208 <WidgetParams::Load()+0x2c>
 80021f2:	6803      	ldr	r3, [r0, #0]
 80021f4:	1d21      	adds	r1, r4, #4
 80021f6:	68db      	ldr	r3, [r3, #12]
 80021f8:	4798      	blx	r3
 80021fa:	2401      	movs	r4, #1
 80021fc:	4668      	mov	r0, sp
 80021fe:	f001 fc83 	bl	8003b08 <ReadConfigFile::~ReadConfigFile()>
 8002202:	4620      	mov	r0, r4
 8002204:	b002      	add	sp, #8
 8002206:	bd10      	pop	{r4, pc}
 8002208:	4604      	mov	r4, r0
 800220a:	e7f7      	b.n	80021fc <WidgetParams::Load()+0x20>
 800220c:	080022d1 	stmdaeq	r0, {r0, r4, r6, r7, r9, sp}

08002210 <WidgetParams::callbackFunction(char const*)>:
 8002210:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002212:	460d      	mov	r5, r1
 8002214:	4604      	mov	r4, r0
 8002216:	4929      	ldr	r1, [pc, #164]	; (80022bc <WidgetParams::callbackFunction(char const*)+0xac>)
 8002218:	4628      	mov	r0, r5
 800221a:	f10d 0207 	add.w	r2, sp, #7
 800221e:	f001 fc74 	bl	8003b0a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8002222:	b960      	cbnz	r0, 800223e <WidgetParams::callbackFunction(char const*)+0x2e>
 8002224:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002228:	f1a3 0209 	sub.w	r2, r3, #9
 800222c:	2a76      	cmp	r2, #118	; 0x76
 800222e:	d806      	bhi.n	800223e <WidgetParams::callbackFunction(char const*)+0x2e>
 8002230:	7223      	strb	r3, [r4, #8]
 8002232:	6863      	ldr	r3, [r4, #4]
 8002234:	f043 0301 	orr.w	r3, r3, #1
 8002238:	6063      	str	r3, [r4, #4]
 800223a:	b003      	add	sp, #12
 800223c:	bd30      	pop	{r4, r5, pc}
 800223e:	4628      	mov	r0, r5
 8002240:	491f      	ldr	r1, [pc, #124]	; (80022c0 <WidgetParams::callbackFunction(char const*)+0xb0>)
 8002242:	f10d 0207 	add.w	r2, sp, #7
 8002246:	f001 fc60 	bl	8003b0a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800224a:	b950      	cbnz	r0, 8002262 <WidgetParams::callbackFunction(char const*)+0x52>
 800224c:	f99d 2007 	ldrsb.w	r2, [sp, #7]
 8002250:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002254:	2a00      	cmp	r2, #0
 8002256:	dd04      	ble.n	8002262 <WidgetParams::callbackFunction(char const*)+0x52>
 8002258:	7263      	strb	r3, [r4, #9]
 800225a:	6863      	ldr	r3, [r4, #4]
 800225c:	f043 0302 	orr.w	r3, r3, #2
 8002260:	e7ea      	b.n	8002238 <WidgetParams::callbackFunction(char const*)+0x28>
 8002262:	4628      	mov	r0, r5
 8002264:	4917      	ldr	r1, [pc, #92]	; (80022c4 <WidgetParams::callbackFunction(char const*)+0xb4>)
 8002266:	f10d 0207 	add.w	r2, sp, #7
 800226a:	f001 fc4e 	bl	8003b0a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800226e:	b930      	cbnz	r0, 800227e <WidgetParams::callbackFunction(char const*)+0x6e>
 8002270:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002274:	72a3      	strb	r3, [r4, #10]
 8002276:	6863      	ldr	r3, [r4, #4]
 8002278:	f043 0304 	orr.w	r3, r3, #4
 800227c:	e7dc      	b.n	8002238 <WidgetParams::callbackFunction(char const*)+0x28>
 800227e:	4628      	mov	r0, r5
 8002280:	4911      	ldr	r1, [pc, #68]	; (80022c8 <WidgetParams::callbackFunction(char const*)+0xb8>)
 8002282:	f10d 0207 	add.w	r2, sp, #7
 8002286:	f001 fc40 	bl	8003b0a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800228a:	b940      	cbnz	r0, 800229e <WidgetParams::callbackFunction(char const*)+0x8e>
 800228c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002290:	2b03      	cmp	r3, #3
 8002292:	d804      	bhi.n	800229e <WidgetParams::callbackFunction(char const*)+0x8e>
 8002294:	72e3      	strb	r3, [r4, #11]
 8002296:	6863      	ldr	r3, [r4, #4]
 8002298:	f043 0308 	orr.w	r3, r3, #8
 800229c:	e7cc      	b.n	8002238 <WidgetParams::callbackFunction(char const*)+0x28>
 800229e:	4628      	mov	r0, r5
 80022a0:	490a      	ldr	r1, [pc, #40]	; (80022cc <WidgetParams::callbackFunction(char const*)+0xbc>)
 80022a2:	f10d 0207 	add.w	r2, sp, #7
 80022a6:	f001 fc30 	bl	8003b0a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80022aa:	2800      	cmp	r0, #0
 80022ac:	d1c5      	bne.n	800223a <WidgetParams::callbackFunction(char const*)+0x2a>
 80022ae:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80022b2:	7323      	strb	r3, [r4, #12]
 80022b4:	6863      	ldr	r3, [r4, #4]
 80022b6:	f043 0310 	orr.w	r3, r3, #16
 80022ba:	e7bd      	b.n	8002238 <WidgetParams::callbackFunction(char const*)+0x28>
 80022bc:	080058bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, fp, ip, lr}
 80022c0:	080058aa 	stmdaeq	r0, {r1, r3, r5, r7, fp, ip, lr}
 80022c4:	080058d2 	stmdaeq	r0, {r1, r4, r6, r7, fp, ip, lr}
 80022c8:	0800589e 	stmdaeq	r0, {r1, r2, r3, r4, r7, fp, ip, lr}
 80022cc:	080058e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, fp, ip, lr}

080022d0 <WidgetParams::staticCallbackFunction(void*, char const*)>:
 80022d0:	f7ff bf9e 	b.w	8002210 <WidgetParams::callbackFunction(char const*)>

080022d4 <WidgetParams::Set()>:
 80022d4:	6843      	ldr	r3, [r0, #4]
 80022d6:	b510      	push	{r4, lr}
 80022d8:	075b      	lsls	r3, r3, #29
 80022da:	4604      	mov	r4, r0
 80022dc:	d502      	bpl.n	80022e4 <WidgetParams::Set()+0x10>
 80022de:	7a80      	ldrb	r0, [r0, #10]
 80022e0:	f7ff ff12 	bl	8002108 <WidgetConfiguration::SetRefreshRate(unsigned char)>
 80022e4:	6863      	ldr	r3, [r4, #4]
 80022e6:	07d8      	lsls	r0, r3, #31
 80022e8:	d502      	bpl.n	80022f0 <WidgetParams::Set()+0x1c>
 80022ea:	7a20      	ldrb	r0, [r4, #8]
 80022ec:	f7ff ff1e 	bl	800212c <WidgetConfiguration::SetBreakTime(unsigned char)>
 80022f0:	6863      	ldr	r3, [r4, #4]
 80022f2:	0799      	lsls	r1, r3, #30
 80022f4:	d502      	bpl.n	80022fc <WidgetParams::Set()+0x28>
 80022f6:	7a60      	ldrb	r0, [r4, #9]
 80022f8:	f7ff ff30 	bl	800215c <WidgetConfiguration::SetMabTime(unsigned char)>
 80022fc:	6863      	ldr	r3, [r4, #4]
 80022fe:	06da      	lsls	r2, r3, #27
 8002300:	d502      	bpl.n	8002308 <WidgetParams::Set()+0x34>
 8002302:	7b20      	ldrb	r0, [r4, #12]
 8002304:	f7ff ff52 	bl	80021ac <WidgetConfiguration::SetThrottle(unsigned char)>
 8002308:	6863      	ldr	r3, [r4, #4]
 800230a:	071b      	lsls	r3, r3, #28
 800230c:	d504      	bpl.n	8002318 <WidgetParams::Set()+0x44>
 800230e:	7ae0      	ldrb	r0, [r4, #11]
 8002310:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002314:	f7ff bf3a 	b.w	800218c <WidgetConfiguration::SetMode(widget::Mode)>
 8002318:	bd10      	pop	{r4, pc}

0800231a <WidgetParams::Dump()>:
 800231a:	4770      	bx	lr

0800231c <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>:
 800231c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002320:	4606      	mov	r6, r0
 8002322:	460f      	mov	r7, r1
 8002324:	461d      	mov	r5, r3
 8002326:	eb03 0802 	add.w	r8, r3, r2
 800232a:	eba8 0405 	sub.w	r4, r8, r5
 800232e:	b2a4      	uxth	r4, r4
 8002330:	2d63      	cmp	r5, #99	; 0x63
 8002332:	f04f 02c8 	mov.w	r2, #200	; 0xc8
 8002336:	f04f 0181 	mov.w	r1, #129	; 0x81
 800233a:	4630      	mov	r0, r6
 800233c:	443c      	add	r4, r7
 800233e:	d81e      	bhi.n	800237e <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x62>
 8002340:	f000 f8ee 	bl	8002520 <Widget::SendHeader(unsigned char, unsigned int)>
 8002344:	f04f 0800 	mov.w	r8, #0
 8002348:	4545      	cmp	r5, r8
 800234a:	462f      	mov	r7, r5
 800234c:	d909      	bls.n	8002362 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x46>
 800234e:	2080      	movs	r0, #128	; 0x80
 8002350:	f000 fecd 	bl	80030ee <usb_send_byte>
 8002354:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002358:	f000 fec9 	bl	80030ee <usb_send_byte>
 800235c:	f108 0801 	add.w	r8, r8, #1
 8002360:	e7f2      	b.n	8002348 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x2c>
 8002362:	2000      	movs	r0, #0
 8002364:	f000 fec3 	bl	80030ee <usb_send_byte>
 8002368:	3701      	adds	r7, #1
 800236a:	2002      	movs	r0, #2
 800236c:	f000 febf 	bl	80030ee <usb_send_byte>
 8002370:	2f64      	cmp	r7, #100	; 0x64
 8002372:	d1f6      	bne.n	8002362 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x46>
 8002374:	4630      	mov	r0, r6
 8002376:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800237a:	f000 b8ee 	b.w	800255a <Widget::SendFooter()>
 800237e:	f000 f8cf 	bl	8002520 <Widget::SendHeader(unsigned char, unsigned int)>
 8002382:	f04f 0900 	mov.w	r9, #0
 8002386:	2080      	movs	r0, #128	; 0x80
 8002388:	f000 feb1 	bl	80030ee <usb_send_byte>
 800238c:	f109 0901 	add.w	r9, r9, #1
 8002390:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002394:	f000 feab 	bl	80030ee <usb_send_byte>
 8002398:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 800239c:	d1f3      	bne.n	8002386 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x6a>
 800239e:	4630      	mov	r0, r6
 80023a0:	3d64      	subs	r5, #100	; 0x64
 80023a2:	f000 f8da 	bl	800255a <Widget::SendFooter()>
 80023a6:	b2ad      	uxth	r5, r5
 80023a8:	e7bf      	b.n	800232a <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0xe>
	...

080023ac <Widget::UsbCanSend()>:
 80023ac:	b570      	push	{r4, r5, r6, lr}
 80023ae:	4a12      	ldr	r2, [pc, #72]	; (80023f8 <Widget::UsbCanSend()+0x4c>)
 80023b0:	4812      	ldr	r0, [pc, #72]	; (80023fc <Widget::UsbCanSend()+0x50>)
 80023b2:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80023b4:	f8d0 4c24 	ldr.w	r4, [r0, #3108]	; 0xc24
 80023b8:	6a51      	ldr	r1, [r2, #36]	; 0x24
 80023ba:	428b      	cmp	r3, r1
 80023bc:	d1f9      	bne.n	80023b2 <Widget::UsbCanSend()+0x6>
 80023be:	4d0e      	ldr	r5, [pc, #56]	; (80023f8 <Widget::UsbCanSend()+0x4c>)
 80023c0:	4e0e      	ldr	r6, [pc, #56]	; (80023fc <Widget::UsbCanSend()+0x50>)
 80023c2:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80023c6:	f000 ff87 	bl	80032d8 <FT245RL_can_write>
 80023ca:	b958      	cbnz	r0, 80023e4 <Widget::UsbCanSend()+0x38>
 80023cc:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 80023ce:	f8d6 3c24 	ldr.w	r3, [r6, #3108]	; 0xc24
 80023d2:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80023d4:	428a      	cmp	r2, r1
 80023d6:	d1f9      	bne.n	80023cc <Widget::UsbCanSend()+0x20>
 80023d8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80023dc:	1b1b      	subs	r3, r3, r4
 80023de:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80023e2:	d3f0      	bcc.n	80023c6 <Widget::UsbCanSend()+0x1a>
 80023e4:	f000 ff78 	bl	80032d8 <FT245RL_can_write>
 80023e8:	4604      	mov	r4, r0
 80023ea:	b918      	cbnz	r0, 80023f4 <Widget::UsbCanSend()+0x48>
 80023ec:	2007      	movs	r0, #7
 80023ee:	4904      	ldr	r1, [pc, #16]	; (8002400 <Widget::UsbCanSend()+0x54>)
 80023f0:	f7ff fee8 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 80023f4:	4620      	mov	r0, r4
 80023f6:	bd70      	pop	{r4, r5, r6, pc}
 80023f8:	40015000 	andmi	r5, r1, r0
 80023fc:	40014000 	andmi	r4, r1, r0
 8002400:	08005903 	stmdaeq	r0, {r0, r1, r8, fp, ip, lr}

08002404 <Widget::SnifferDmx()>:
 8002404:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8002408:	b570      	push	{r4, r5, r6, lr}
 800240a:	2b03      	cmp	r3, #3
 800240c:	4604      	mov	r4, r0
 800240e:	d11c      	bne.n	800244a <Widget::SnifferDmx()+0x46>
 8002410:	f7ff ffcc 	bl	80023ac <Widget::UsbCanSend()>
 8002414:	b1c8      	cbz	r0, 800244a <Widget::SnifferDmx()+0x46>
 8002416:	2100      	movs	r1, #0
 8002418:	4620      	mov	r0, r4
 800241a:	f000 fdeb 	bl	8002ff4 <Dmx::GetDmxChanged(unsigned int)>
 800241e:	4605      	mov	r5, r0
 8002420:	b198      	cbz	r0, 800244a <Widget::SnifferDmx()+0x46>
 8002422:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 8002426:	4620      	mov	r0, r4
 8002428:	f7ff ffc0 	bl	80023ac <Widget::UsbCanSend()>
 800242c:	b168      	cbz	r0, 800244a <Widget::SnifferDmx()+0x46>
 800242e:	3601      	adds	r6, #1
 8002430:	4632      	mov	r2, r6
 8002432:	2007      	movs	r0, #7
 8002434:	4905      	ldr	r1, [pc, #20]	; (800244c <Widget::SnifferDmx()+0x48>)
 8002436:	f7ff fec5 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 800243a:	4629      	mov	r1, r5
 800243c:	4620      	mov	r0, r4
 800243e:	b2b3      	uxth	r3, r6
 8002440:	2200      	movs	r2, #0
 8002442:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002446:	f7ff bf69 	b.w	800231c <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 800244a:	bd70      	pop	{r4, r5, r6, pc}
 800244c:	08005920 	stmdaeq	r0, {r5, r8, fp, ip, lr}

08002450 <Widget::SnifferRdm()>:
 8002450:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8002454:	b570      	push	{r4, r5, r6, lr}
 8002456:	2b03      	cmp	r3, #3
 8002458:	4604      	mov	r4, r0
 800245a:	d14c      	bne.n	80024f6 <Widget::SnifferRdm()+0xa6>
 800245c:	f7ff ffa6 	bl	80023ac <Widget::UsbCanSend()>
 8002460:	2800      	cmp	r0, #0
 8002462:	d048      	beq.n	80024f6 <Widget::SnifferRdm()+0xa6>
 8002464:	2000      	movs	r0, #0
 8002466:	f000 f935 	bl	80026d4 <Rdm::Receive(unsigned int)>
 800246a:	4605      	mov	r5, r0
 800246c:	2800      	cmp	r0, #0
 800246e:	d042      	beq.n	80024f6 <Widget::SnifferRdm()+0xa6>
 8002470:	7803      	ldrb	r3, [r0, #0]
 8002472:	2bcc      	cmp	r3, #204	; 0xcc
 8002474:	d134      	bne.n	80024e0 <Widget::SnifferRdm()+0x90>
 8002476:	7886      	ldrb	r6, [r0, #2]
 8002478:	7d03      	ldrb	r3, [r0, #20]
 800247a:	3602      	adds	r6, #2
 800247c:	2b20      	cmp	r3, #32
 800247e:	b2f6      	uxtb	r6, r6
 8002480:	d028      	beq.n	80024d4 <Widget::SnifferRdm()+0x84>
 8002482:	d813      	bhi.n	80024ac <Widget::SnifferRdm()+0x5c>
 8002484:	2b10      	cmp	r3, #16
 8002486:	d019      	beq.n	80024bc <Widget::SnifferRdm()+0x6c>
 8002488:	2b11      	cmp	r3, #17
 800248a:	d01d      	beq.n	80024c8 <Widget::SnifferRdm()+0x78>
 800248c:	4620      	mov	r0, r4
 800248e:	f7ff ff8d 	bl	80023ac <Widget::UsbCanSend()>
 8002492:	b380      	cbz	r0, 80024f6 <Widget::SnifferRdm()+0xa6>
 8002494:	2007      	movs	r0, #7
 8002496:	4918      	ldr	r1, [pc, #96]	; (80024f8 <Widget::SnifferRdm()+0xa8>)
 8002498:	f7ff fe94 	bl	80021c4 <WidgetMonitor::Line(int, char const*, ...)>
 800249c:	4633      	mov	r3, r6
 800249e:	4629      	mov	r1, r5
 80024a0:	4620      	mov	r0, r4
 80024a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80024a6:	2200      	movs	r2, #0
 80024a8:	f7ff bf38 	b.w	800231c <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 80024ac:	2b30      	cmp	r3, #48	; 0x30
 80024ae:	d1ed      	bne.n	800248c <Widget::SnifferRdm()+0x3c>
 80024b0:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
 80024b4:	3301      	adds	r3, #1
 80024b6:	f8c4 3318 	str.w	r3, [r4, #792]	; 0x318
 80024ba:	e7e7      	b.n	800248c <Widget::SnifferRdm()+0x3c>
 80024bc:	f8d4 330c 	ldr.w	r3, [r4, #780]	; 0x30c
 80024c0:	3301      	adds	r3, #1
 80024c2:	f8c4 330c 	str.w	r3, [r4, #780]	; 0x30c
 80024c6:	e7e1      	b.n	800248c <Widget::SnifferRdm()+0x3c>
 80024c8:	f8d4 3310 	ldr.w	r3, [r4, #784]	; 0x310
 80024cc:	3301      	adds	r3, #1
 80024ce:	f8c4 3310 	str.w	r3, [r4, #784]	; 0x310
 80024d2:	e7db      	b.n	800248c <Widget::SnifferRdm()+0x3c>
 80024d4:	f8d4 3314 	ldr.w	r3, [r4, #788]	; 0x314
 80024d8:	3301      	adds	r3, #1
 80024da:	f8c4 3314 	str.w	r3, [r4, #788]	; 0x314
 80024de:	e7d5      	b.n	800248c <Widget::SnifferRdm()+0x3c>
 80024e0:	2bfe      	cmp	r3, #254	; 0xfe
 80024e2:	bf03      	ittte	eq
 80024e4:	f8d4 3310 	ldreq.w	r3, [r4, #784]	; 0x310
 80024e8:	2618      	moveq	r6, #24
 80024ea:	3301      	addeq	r3, #1
 80024ec:	2600      	movne	r6, #0
 80024ee:	bf08      	it	eq
 80024f0:	f8c4 3310 	streq.w	r3, [r4, #784]	; 0x310
 80024f4:	e7ca      	b.n	800248c <Widget::SnifferRdm()+0x3c>
 80024f6:	bd70      	pop	{r4, r5, r6, pc}
 80024f8:	0800593c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp, ip, lr}

080024fc <Widget::SnifferFillTransmitBuffer()>:
 80024fc:	b538      	push	{r3, r4, r5, lr}
 80024fe:	4605      	mov	r5, r0
 8002500:	f7ff ff54 	bl	80023ac <Widget::UsbCanSend()>
 8002504:	b158      	cbz	r0, 800251e <Widget::SnifferFillTransmitBuffer()+0x22>
 8002506:	f240 1401 	movw	r4, #257	; 0x101
 800250a:	3c01      	subs	r4, #1
 800250c:	d007      	beq.n	800251e <Widget::SnifferFillTransmitBuffer()+0x22>
 800250e:	4628      	mov	r0, r5
 8002510:	f7ff ff4c 	bl	80023ac <Widget::UsbCanSend()>
 8002514:	b118      	cbz	r0, 800251e <Widget::SnifferFillTransmitBuffer()+0x22>
 8002516:	2000      	movs	r0, #0
 8002518:	f000 fde9 	bl	80030ee <usb_send_byte>
 800251c:	e7f5      	b.n	800250a <Widget::SnifferFillTransmitBuffer()+0xe>
 800251e:	bd38      	pop	{r3, r4, r5, pc}

08002520 <Widget::SendHeader(unsigned char, unsigned int)>:
 8002520:	b538      	push	{r3, r4, r5, lr}
 8002522:	460d      	mov	r5, r1
 8002524:	4614      	mov	r4, r2
 8002526:	207e      	movs	r0, #126	; 0x7e
 8002528:	f000 fde1 	bl	80030ee <usb_send_byte>
 800252c:	4628      	mov	r0, r5
 800252e:	f000 fdde 	bl	80030ee <usb_send_byte>
 8002532:	b2e0      	uxtb	r0, r4
 8002534:	f000 fddb 	bl	80030ee <usb_send_byte>
 8002538:	f3c4 2007 	ubfx	r0, r4, #8, #8
 800253c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002540:	f000 bdd5 	b.w	80030ee <usb_send_byte>

08002544 <Widget::SendData(unsigned char const*, unsigned int)>:
 8002544:	b538      	push	{r3, r4, r5, lr}
 8002546:	460c      	mov	r4, r1
 8002548:	188d      	adds	r5, r1, r2
 800254a:	42ac      	cmp	r4, r5
 800254c:	d004      	beq.n	8002558 <Widget::SendData(unsigned char const*, unsigned int)+0x14>
 800254e:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002552:	f000 fdcc 	bl	80030ee <usb_send_byte>
 8002556:	e7f8      	b.n	800254a <Widget::SendData(unsigned char const*, unsigned int)+0x6>
 8002558:	bd38      	pop	{r3, r4, r5, pc}

0800255a <Widget::SendFooter()>:
 800255a:	20e7      	movs	r0, #231	; 0xe7
 800255c:	f000 bdc7 	b.w	80030ee <usb_send_byte>

08002560 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>:
 8002560:	b570      	push	{r4, r5, r6, lr}
 8002562:	461c      	mov	r4, r3
 8002564:	4605      	mov	r5, r0
 8002566:	4616      	mov	r6, r2
 8002568:	461a      	mov	r2, r3
 800256a:	f7ff ffd9 	bl	8002520 <Widget::SendHeader(unsigned char, unsigned int)>
 800256e:	4628      	mov	r0, r5
 8002570:	4622      	mov	r2, r4
 8002572:	4631      	mov	r1, r6
 8002574:	f7ff ffe6 	bl	8002544 <Widget::SendData(unsigned char const*, unsigned int)>
 8002578:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800257c:	20e7      	movs	r0, #231	; 0xe7
 800257e:	f000 bdb6 	b.w	80030ee <usb_send_byte>
	...

08002584 <StoreWidget::UpdateBreakTime(unsigned char)>:
 8002584:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002586:	2301      	movs	r3, #1
 8002588:	2200      	movs	r2, #0
 800258a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800258e:	4807      	ldr	r0, [pc, #28]	; (80025ac <StoreWidget::UpdateBreakTime(unsigned char)+0x28>)
 8002590:	9300      	str	r3, [sp, #0]
 8002592:	f88d 1017 	strb.w	r1, [sp, #23]
 8002596:	2204      	movs	r2, #4
 8002598:	210a      	movs	r1, #10
 800259a:	6800      	ldr	r0, [r0, #0]
 800259c:	f10d 0317 	add.w	r3, sp, #23
 80025a0:	f001 f846 	bl	8003630 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80025a4:	b007      	add	sp, #28
 80025a6:	f85d fb04 	ldr.w	pc, [sp], #4
 80025aa:	bf00      	nop
 80025ac:	20001740 	andcs	r1, r0, r0, asr #14

080025b0 <non-virtual thunk to StoreWidget::UpdateBreakTime(unsigned char)>:
 80025b0:	f1a0 0004 	sub.w	r0, r0, #4
 80025b4:	e7e6      	b.n	8002584 <StoreWidget::UpdateBreakTime(unsigned char)>
 80025b6:	bf00      	nop

080025b8 <StoreWidget::UpdateMabTime(unsigned char)>:
 80025b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80025ba:	2302      	movs	r3, #2
 80025bc:	2200      	movs	r2, #0
 80025be:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80025c2:	2301      	movs	r3, #1
 80025c4:	4806      	ldr	r0, [pc, #24]	; (80025e0 <StoreWidget::UpdateMabTime(unsigned char)+0x28>)
 80025c6:	9300      	str	r3, [sp, #0]
 80025c8:	f88d 1017 	strb.w	r1, [sp, #23]
 80025cc:	2205      	movs	r2, #5
 80025ce:	210a      	movs	r1, #10
 80025d0:	6800      	ldr	r0, [r0, #0]
 80025d2:	f10d 0317 	add.w	r3, sp, #23
 80025d6:	f001 f82b 	bl	8003630 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80025da:	b007      	add	sp, #28
 80025dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80025e0:	20001740 	andcs	r1, r0, r0, asr #14

080025e4 <non-virtual thunk to StoreWidget::UpdateMabTime(unsigned char)>:
 80025e4:	f1a0 0004 	sub.w	r0, r0, #4
 80025e8:	e7e6      	b.n	80025b8 <StoreWidget::UpdateMabTime(unsigned char)>
 80025ea:	bf00      	nop

080025ec <StoreWidget::UpdateRefreshRate(unsigned char)>:
 80025ec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80025ee:	2304      	movs	r3, #4
 80025f0:	2200      	movs	r2, #0
 80025f2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80025f6:	2301      	movs	r3, #1
 80025f8:	4806      	ldr	r0, [pc, #24]	; (8002614 <StoreWidget::UpdateRefreshRate(unsigned char)+0x28>)
 80025fa:	9300      	str	r3, [sp, #0]
 80025fc:	f88d 1017 	strb.w	r1, [sp, #23]
 8002600:	2206      	movs	r2, #6
 8002602:	210a      	movs	r1, #10
 8002604:	6800      	ldr	r0, [r0, #0]
 8002606:	f10d 0317 	add.w	r3, sp, #23
 800260a:	f001 f811 	bl	8003630 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800260e:	b007      	add	sp, #28
 8002610:	f85d fb04 	ldr.w	pc, [sp], #4
 8002614:	20001740 	andcs	r1, r0, r0, asr #14

08002618 <non-virtual thunk to StoreWidget::UpdateRefreshRate(unsigned char)>:
 8002618:	f1a0 0004 	sub.w	r0, r0, #4
 800261c:	e7e6      	b.n	80025ec <StoreWidget::UpdateRefreshRate(unsigned char)>
 800261e:	bf00      	nop

08002620 <WidgetConfiguration::Store(TWidgetConfiguration const*)>:
 8002620:	b510      	push	{r4, lr}
 8002622:	4b25      	ldr	r3, [pc, #148]	; (80026b8 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x98>)
 8002624:	4604      	mov	r4, r0
 8002626:	781a      	ldrb	r2, [r3, #0]
 8002628:	7880      	ldrb	r0, [r0, #2]
 800262a:	4282      	cmp	r2, r0
 800262c:	d013      	beq.n	8002656 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x36>
 800262e:	7018      	strb	r0, [r3, #0]
 8002630:	f7fe fb02 	bl	8000c38 <__aeabi_i2d>
 8002634:	a31e      	add	r3, pc, #120	; (adr r3, 80026b0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x90>)
 8002636:	e9d3 2300 	ldrd	r2, r3, [r3]
 800263a:	f7fe fb67 	bl	8000d0c <__aeabi_dmul>
 800263e:	f7fe fd77 	bl	8001130 <__aeabi_d2uiz>
 8002642:	4b1e      	ldr	r3, [pc, #120]	; (80026bc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>)
 8002644:	4601      	mov	r1, r0
 8002646:	6818      	ldr	r0, [r3, #0]
 8002648:	f000 fc84 	bl	8002f54 <Dmx::SetDmxBreakTime(unsigned int)>
 800264c:	4b1c      	ldr	r3, [pc, #112]	; (80026c0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 800264e:	78a1      	ldrb	r1, [r4, #2]
 8002650:	6818      	ldr	r0, [r3, #0]
 8002652:	f7ff ff97 	bl	8002584 <StoreWidget::UpdateBreakTime(unsigned char)>
 8002656:	4b1b      	ldr	r3, [pc, #108]	; (80026c4 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa4>)
 8002658:	78e0      	ldrb	r0, [r4, #3]
 800265a:	781a      	ldrb	r2, [r3, #0]
 800265c:	4282      	cmp	r2, r0
 800265e:	d013      	beq.n	8002688 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x68>
 8002660:	7018      	strb	r0, [r3, #0]
 8002662:	f7fe fae9 	bl	8000c38 <__aeabi_i2d>
 8002666:	a312      	add	r3, pc, #72	; (adr r3, 80026b0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x90>)
 8002668:	e9d3 2300 	ldrd	r2, r3, [r3]
 800266c:	f7fe fb4e 	bl	8000d0c <__aeabi_dmul>
 8002670:	f7fe fd5e 	bl	8001130 <__aeabi_d2uiz>
 8002674:	4b11      	ldr	r3, [pc, #68]	; (80026bc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>)
 8002676:	4601      	mov	r1, r0
 8002678:	6818      	ldr	r0, [r3, #0]
 800267a:	f000 fc75 	bl	8002f68 <Dmx::SetDmxMabTime(unsigned int)>
 800267e:	4b10      	ldr	r3, [pc, #64]	; (80026c0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 8002680:	78e1      	ldrb	r1, [r4, #3]
 8002682:	6818      	ldr	r0, [r3, #0]
 8002684:	f7ff ff98 	bl	80025b8 <StoreWidget::UpdateMabTime(unsigned char)>
 8002688:	4b0f      	ldr	r3, [pc, #60]	; (80026c8 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa8>)
 800268a:	7921      	ldrb	r1, [r4, #4]
 800268c:	781a      	ldrb	r2, [r3, #0]
 800268e:	428a      	cmp	r2, r1
 8002690:	d00d      	beq.n	80026ae <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x8e>
 8002692:	7019      	strb	r1, [r3, #0]
 8002694:	4b09      	ldr	r3, [pc, #36]	; (80026bc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>)
 8002696:	6818      	ldr	r0, [r3, #0]
 8002698:	b111      	cbz	r1, 80026a0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x80>
 800269a:	4b0c      	ldr	r3, [pc, #48]	; (80026cc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xac>)
 800269c:	fbb3 f1f1 	udiv	r1, r3, r1
 80026a0:	f000 fc34 	bl	8002f0c <Dmx::SetDmxPeriodTime(unsigned int)>
 80026a4:	4b06      	ldr	r3, [pc, #24]	; (80026c0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 80026a6:	7921      	ldrb	r1, [r4, #4]
 80026a8:	6818      	ldr	r0, [r3, #0]
 80026aa:	f7ff ff9f 	bl	80025ec <StoreWidget::UpdateRefreshRate(unsigned char)>
 80026ae:	bd10      	pop	{r4, pc}
 80026b0:	3d70a3d7 	ldclcc	3, cr10, [r0, #-860]!	; 0xfffffca4
 80026b4:	4025570a 	eormi	r5, r5, sl, lsl #14
 80026b8:	20000001 	andcs	r0, r0, r1
 80026bc:	20000724 	andcs	r0, r0, r4, lsr #14
 80026c0:	2000174c 	andcs	r1, r0, ip, asr #14
 80026c4:	20000000 	andcs	r0, r0, r0
 80026c8:	20000004 	andcs	r0, r0, r4
 80026cc:	000f4240 	andeq	r4, pc, r0, asr #4

080026d0 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>:
 80026d0:	4770      	bx	lr
	...

080026d4 <Rdm::Receive(unsigned int)>:
 80026d4:	4b02      	ldr	r3, [pc, #8]	; (80026e0 <Rdm::Receive(unsigned int)+0xc>)
 80026d6:	4601      	mov	r1, r0
 80026d8:	6818      	ldr	r0, [r3, #0]
 80026da:	f000 bced 	b.w	80030b8 <Dmx::RdmReceive(unsigned int)>
 80026de:	bf00      	nop
 80026e0:	20000724 	andcs	r0, r0, r4, lsr #14

080026e4 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>:
 80026e4:	2300      	movs	r3, #0
 80026e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80026ea:	4604      	mov	r4, r0
 80026ec:	460e      	mov	r6, r1
 80026ee:	4617      	mov	r7, r2
 80026f0:	4d0b      	ldr	r5, [pc, #44]	; (8002720 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)+0x3c>)
 80026f2:	461a      	mov	r2, r3
 80026f4:	4601      	mov	r1, r0
 80026f6:	6828      	ldr	r0, [r5, #0]
 80026f8:	f000 fb8e 	bl	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80026fc:	463b      	mov	r3, r7
 80026fe:	4632      	mov	r2, r6
 8002700:	4621      	mov	r1, r4
 8002702:	6828      	ldr	r0, [r5, #0]
 8002704:	f000 fc94 	bl	8003030 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>
 8002708:	2004      	movs	r0, #4
 800270a:	f002 f971 	bl	80049f0 <udelay>
 800270e:	2301      	movs	r3, #1
 8002710:	4621      	mov	r1, r4
 8002712:	6828      	ldr	r0, [r5, #0]
 8002714:	461a      	mov	r2, r3
 8002716:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800271a:	f000 bb7d 	b.w	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800271e:	bf00      	nop
 8002720:	20000724 	andcs	r0, r0, r4, lsr #14

08002724 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>:
 8002724:	b570      	push	{r4, r5, r6, lr}
 8002726:	f3bf 8f5f 	dmb	sy
 800272a:	6803      	ldr	r3, [r0, #0]
 800272c:	4c93      	ldr	r4, [pc, #588]	; (800297c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x258>)
 800272e:	f013 0f02 	tst.w	r3, #2
 8002732:	d00f      	beq.n	8002754 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x30>
 8002734:	6803      	ldr	r3, [r0, #0]
 8002736:	2200      	movs	r2, #0
 8002738:	f023 0302 	bic.w	r3, r3, #2
 800273c:	6003      	str	r3, [r0, #0]
 800273e:	6843      	ldr	r3, [r0, #4]
 8002740:	f44f 7304 	mov.w	r3, #528	; 0x210
 8002744:	fb03 4301 	mla	r3, r3, r1, r4
 8002748:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800274c:	2202      	movs	r2, #2
 800274e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002752:	bd70      	pop	{r4, r5, r6, pc}
 8002754:	f44f 7304 	mov.w	r3, #528	; 0x210
 8002758:	fb03 4201 	mla	r2, r3, r1, r4
 800275c:	6845      	ldr	r5, [r0, #4]
 800275e:	f8d2 220c 	ldr.w	r2, [r2, #524]	; 0x20c
 8002762:	f3c5 0508 	ubfx	r5, r5, #0, #9
 8002766:	2a0a      	cmp	r2, #10
 8002768:	f200 8102 	bhi.w	8002970 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x24c>
 800276c:	e8df f012 	tbh	[pc, r2, lsl #1]
 8002770:	0100000b 	tsteq	r0, fp
 8002774:	01000017 	tsteq	r0, r7, lsl r0
 8002778:	00630042 	rsbeq	r0, r3, r2, asr #32
 800277c:	008e007e 	addeq	r0, lr, lr, ror r0
 8002780:	00cb00b3 	strheq	r0, [fp], #3
 8002784:	220800e1 	andcs	r0, r8, #225	; 0xe1
 8002788:	4359      	muls	r1, r3
 800278a:	1863      	adds	r3, r4, r1
 800278c:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002790:	2201      	movs	r2, #1
 8002792:	5465      	strb	r5, [r4, r1]
 8002794:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8002798:	f3bf 8f5f 	dmb	sy
 800279c:	e7d9      	b.n	8002752 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2e>
 800279e:	b14d      	cbz	r5, 80027b4 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x90>
 80027a0:	2dcc      	cmp	r5, #204	; 0xcc
 80027a2:	f44f 7304 	mov.w	r3, #528	; 0x210
 80027a6:	d01b      	beq.n	80027e0 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xbc>
 80027a8:	2200      	movs	r2, #0
 80027aa:	fb03 4301 	mla	r3, r3, r1, r4
 80027ae:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 80027b2:	e7f1      	b.n	8002798 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 80027b4:	fb03 f001 	mul.w	r0, r3, r1
 80027b8:	2301      	movs	r3, #1
 80027ba:	1826      	adds	r6, r4, r0
 80027bc:	f8c6 3204 	str.w	r3, [r6, #516]	; 0x204
 80027c0:	4b6f      	ldr	r3, [pc, #444]	; (8002980 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x25c>)
 80027c2:	5425      	strb	r5, [r4, r0]
 80027c4:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 80027c8:	685a      	ldr	r2, [r3, #4]
 80027ca:	3201      	adds	r2, #1
 80027cc:	605a      	str	r2, [r3, #4]
 80027ce:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80027d2:	f8d2 2424 	ldr.w	r2, [r2, #1060]	; 0x424
 80027d6:	60da      	str	r2, [r3, #12]
 80027d8:	2304      	movs	r3, #4
 80027da:	f8c6 320c 	str.w	r3, [r6, #524]	; 0x20c
 80027de:	e7db      	b.n	8002798 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 80027e0:	434b      	muls	r3, r1
 80027e2:	18e2      	adds	r2, r4, r3
 80027e4:	54e5      	strb	r5, [r4, r3]
 80027e6:	4b67      	ldr	r3, [pc, #412]	; (8002984 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x260>)
 80027e8:	f8c2 3204 	str.w	r3, [r2, #516]	; 0x204
 80027ec:	2305      	movs	r3, #5
 80027ee:	f8c2 320c 	str.w	r3, [r2, #524]	; 0x20c
 80027f2:	e7d1      	b.n	8002798 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 80027f4:	fb03 4201 	mla	r2, r3, r1, r4
 80027f8:	f8d2 3204 	ldr.w	r3, [r2, #516]	; 0x204
 80027fc:	b298      	uxth	r0, r3
 80027fe:	3301      	adds	r3, #1
 8002800:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002804:	5415      	strb	r5, [r2, r0]
 8002806:	f8c2 3204 	str.w	r3, [r2, #516]	; 0x204
 800280a:	d905      	bls.n	8002818 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xf4>
 800280c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002810:	f8c2 3204 	str.w	r3, [r2, #516]	; 0x204
 8002814:	2300      	movs	r3, #0
 8002816:	e7ea      	b.n	80027ee <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xca>
 8002818:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800281c:	4b58      	ldr	r3, [pc, #352]	; (8002980 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x25c>)
 800281e:	f8d2 0424 	ldr.w	r0, [r2, #1060]	; 0x424
 8002822:	eb03 1101 	add.w	r1, r3, r1, lsl #4
 8002826:	68cb      	ldr	r3, [r1, #12]
 8002828:	60c8      	str	r0, [r1, #12]
 800282a:	ebc3 0340 	rsb	r3, r3, r0, lsl #1
 800282e:	3304      	adds	r3, #4
 8002830:	f8c2 3434 	str.w	r3, [r2, #1076]	; 0x434
 8002834:	e7b0      	b.n	8002798 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 8002836:	fb03 4201 	mla	r2, r3, r1, r4
 800283a:	f8b2 0204 	ldrh.w	r0, [r2, #516]	; 0x204
 800283e:	f8b2 6206 	ldrh.w	r6, [r2, #518]	; 0x206
 8002842:	5415      	strb	r5, [r2, r0]
 8002844:	1c43      	adds	r3, r0, #1
 8002846:	3817      	subs	r0, #23
 8002848:	b29b      	uxth	r3, r3
 800284a:	4435      	add	r5, r6
 800284c:	28e7      	cmp	r0, #231	; 0xe7
 800284e:	f8a2 3204 	strh.w	r3, [r2, #516]	; 0x204
 8002852:	f8a2 5206 	strh.w	r5, [r2, #518]	; 0x206
 8002856:	d804      	bhi.n	8002862 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x13e>
 8002858:	7890      	ldrb	r0, [r2, #2]
 800285a:	4298      	cmp	r0, r3
 800285c:	d101      	bne.n	8002862 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x13e>
 800285e:	2306      	movs	r3, #6
 8002860:	e7c5      	b.n	80027ee <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xca>
 8002862:	2bff      	cmp	r3, #255	; 0xff
 8002864:	d998      	bls.n	8002798 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 8002866:	f44f 7304 	mov.w	r3, #528	; 0x210
 800286a:	e79d      	b.n	80027a8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x84>
 800286c:	fb03 4301 	mla	r3, r3, r1, r4
 8002870:	f8b3 2204 	ldrh.w	r2, [r3, #516]	; 0x204
 8002874:	549d      	strb	r5, [r3, r2]
 8002876:	3201      	adds	r2, #1
 8002878:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800287c:	f8b3 2206 	ldrh.w	r2, [r3, #518]	; 0x206
 8002880:	eba2 2505 	sub.w	r5, r2, r5, lsl #8
 8002884:	f8a3 5206 	strh.w	r5, [r3, #518]	; 0x206
 8002888:	2207      	movs	r2, #7
 800288a:	e790      	b.n	80027ae <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8a>
 800288c:	fb03 4201 	mla	r2, r3, r1, r4
 8002890:	f8b2 3204 	ldrh.w	r3, [r2, #516]	; 0x204
 8002894:	f8b2 0206 	ldrh.w	r0, [r2, #518]	; 0x206
 8002898:	54d5      	strb	r5, [r2, r3]
 800289a:	3301      	adds	r3, #1
 800289c:	1b45      	subs	r5, r0, r5
 800289e:	b29b      	uxth	r3, r3
 80028a0:	b2ad      	uxth	r5, r5
 80028a2:	f8a2 3204 	strh.w	r3, [r2, #516]	; 0x204
 80028a6:	f8a2 5206 	strh.w	r5, [r2, #518]	; 0x206
 80028aa:	b915      	cbnz	r5, 80028b2 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x18e>
 80028ac:	7850      	ldrb	r0, [r2, #1]
 80028ae:	2801      	cmp	r0, #1
 80028b0:	d007      	beq.n	80028c2 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x19e>
 80028b2:	f44f 7304 	mov.w	r3, #528	; 0x210
 80028b6:	2200      	movs	r2, #0
 80028b8:	fb03 4301 	mla	r3, r3, r1, r4
 80028bc:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80028c0:	e7d1      	b.n	8002866 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x142>
 80028c2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80028c6:	f8a2 3204 	strh.w	r3, [r2, #516]	; 0x204
 80028ca:	4b2f      	ldr	r3, [pc, #188]	; (8002988 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x264>)
 80028cc:	4a2f      	ldr	r2, [pc, #188]	; (800298c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x268>)
 80028ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028d0:	b29b      	uxth	r3, r3
 80028d2:	8013      	strh	r3, [r2, #0]
 80028d4:	e7c7      	b.n	8002866 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x142>
 80028d6:	fb03 4001 	mla	r0, r3, r1, r4
 80028da:	f8b0 3204 	ldrh.w	r3, [r0, #516]	; 0x204
 80028de:	2daa      	cmp	r5, #170	; 0xaa
 80028e0:	54c5      	strb	r5, [r0, r3]
 80028e2:	f103 0301 	add.w	r3, r3, #1
 80028e6:	b29b      	uxth	r3, r3
 80028e8:	f8a0 3204 	strh.w	r3, [r0, #516]	; 0x204
 80028ec:	d002      	beq.n	80028f4 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x1d0>
 80028ee:	2b09      	cmp	r3, #9
 80028f0:	f47f af52 	bne.w	8002798 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 80028f4:	f44f 7304 	mov.w	r3, #528	; 0x210
 80028f8:	2200      	movs	r2, #0
 80028fa:	fb03 4301 	mla	r3, r3, r1, r4
 80028fe:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8002902:	2209      	movs	r2, #9
 8002904:	e753      	b.n	80027ae <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8a>
 8002906:	fb03 4301 	mla	r3, r3, r1, r4
 800290a:	f8b3 2204 	ldrh.w	r2, [r3, #516]	; 0x204
 800290e:	549d      	strb	r5, [r3, r2]
 8002910:	3201      	adds	r2, #1
 8002912:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8002916:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 800291a:	3201      	adds	r2, #1
 800291c:	b292      	uxth	r2, r2
 800291e:	2a0c      	cmp	r2, #12
 8002920:	d002      	beq.n	8002928 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x204>
 8002922:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8002926:	e737      	b.n	8002798 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 8002928:	2200      	movs	r2, #0
 800292a:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800292e:	220a      	movs	r2, #10
 8002930:	e73d      	b.n	80027ae <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8a>
 8002932:	fb03 4301 	mla	r3, r3, r1, r4
 8002936:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 800293a:	f8b3 2204 	ldrh.w	r2, [r3, #516]	; 0x204
 800293e:	3101      	adds	r1, #1
 8002940:	b289      	uxth	r1, r1
 8002942:	549d      	strb	r5, [r3, r2]
 8002944:	3201      	adds	r2, #1
 8002946:	b292      	uxth	r2, r2
 8002948:	2904      	cmp	r1, #4
 800294a:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800294e:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 8002952:	f47f af21 	bne.w	8002798 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 8002956:	2100      	movs	r1, #0
 8002958:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800295c:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8002960:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8002964:	4b08      	ldr	r3, [pc, #32]	; (8002988 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x264>)
 8002966:	4a09      	ldr	r2, [pc, #36]	; (800298c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x268>)
 8002968:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800296a:	b29b      	uxth	r3, r3
 800296c:	8013      	strh	r3, [r2, #0]
 800296e:	e713      	b.n	8002798 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 8002970:	2200      	movs	r2, #0
 8002972:	fb03 4301 	mla	r3, r3, r1, r4
 8002976:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800297a:	e718      	b.n	80027ae <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8a>
 800297c:	200000f8 	strdcs	r0, [r0], -r8
 8002980:	20000714 	andcs	r0, r0, r4, lsl r7
 8002984:	00cc0001 	sbceq	r0, ip, r1
 8002988:	40015000 	andmi	r5, r1, r0
 800298c:	20000728 	andcs	r0, r0, r8, lsr #14

08002990 <USART2_IRQHandler>:
 8002990:	2100      	movs	r1, #0
 8002992:	4801      	ldr	r0, [pc, #4]	; (8002998 <USART2_IRQHandler+0x8>)
 8002994:	f7ff bec6 	b.w	8002724 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 8002998:	40004800 	andmi	r4, r0, r0, lsl #16

0800299c <timer1_config()>:
 800299c:	b530      	push	{r4, r5, lr}
 800299e:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 80029a2:	b085      	sub	sp, #20
 80029a4:	f002 fba6 	bl	80050f4 <rcu_periph_clock_enable>
 80029a8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80029ac:	f002 fc48 	bl	8005240 <timer_deinit>
 80029b0:	2377      	movs	r3, #119	; 0x77
 80029b2:	2400      	movs	r4, #0
 80029b4:	9300      	str	r3, [sp, #0]
 80029b6:	4b2a      	ldr	r3, [pc, #168]	; (8002a60 <timer1_config()+0xc4>)
 80029b8:	4669      	mov	r1, sp
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80029c0:	9302      	str	r3, [sp, #8]
 80029c2:	f8ad 4004 	strh.w	r4, [sp, #4]
 80029c6:	f8ad 400c 	strh.w	r4, [sp, #12]
 80029ca:	f88d 400e 	strb.w	r4, [sp, #14]
 80029ce:	f002 fc99 	bl	8005304 <timer_init>
 80029d2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80029d6:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80029da:	f002 fd2b 	bl	8005434 <timer_flag_clear>
 80029de:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80029e2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80029e6:	f002 fd22 	bl	800542e <timer_interrupt_flag_clear>
 80029ea:	4621      	mov	r1, r4
 80029ec:	2210      	movs	r2, #16
 80029ee:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80029f2:	f002 fce4 	bl	80053be <timer_channel_output_mode_config>
 80029f6:	2210      	movs	r2, #16
 80029f8:	2101      	movs	r1, #1
 80029fa:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80029fe:	f002 fcde 	bl	80053be <timer_channel_output_mode_config>
 8002a02:	4d18      	ldr	r5, [pc, #96]	; (8002a64 <timer1_config()+0xc8>)
 8002a04:	2210      	movs	r2, #16
 8002a06:	2102      	movs	r1, #2
 8002a08:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002a0c:	f002 fcd7 	bl	80053be <timer_channel_output_mode_config>
 8002a10:	4622      	mov	r2, r4
 8002a12:	4621      	mov	r1, r4
 8002a14:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002a18:	f002 fcf7 	bl	800540a <timer_channel_output_pulse_value_config>
 8002a1c:	882a      	ldrh	r2, [r5, #0]
 8002a1e:	2101      	movs	r1, #1
 8002a20:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002a24:	f002 fcf1 	bl	800540a <timer_channel_output_pulse_value_config>
 8002a28:	4b0f      	ldr	r3, [pc, #60]	; (8002a68 <timer1_config()+0xcc>)
 8002a2a:	682a      	ldr	r2, [r5, #0]
 8002a2c:	681b      	ldr	r3, [r3, #0]
 8002a2e:	2102      	movs	r1, #2
 8002a30:	441a      	add	r2, r3
 8002a32:	b292      	uxth	r2, r2
 8002a34:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002a38:	f002 fce7 	bl	800540a <timer_channel_output_pulse_value_config>
 8002a3c:	210e      	movs	r1, #14
 8002a3e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002a42:	f002 fcf0 	bl	8005426 <timer_interrupt_enable>
 8002a46:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002a4a:	4b08      	ldr	r3, [pc, #32]	; (8002a6c <timer1_config()+0xd0>)
 8002a4c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002a50:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 8002a54:	601a      	str	r2, [r3, #0]
 8002a56:	f002 fcad 	bl	80053b4 <timer_enable>
 8002a5a:	b005      	add	sp, #20
 8002a5c:	bd30      	pop	{r4, r5, pc}
 8002a5e:	bf00      	nop
 8002a60:	20000008 	andcs	r0, r0, r8
 8002a64:	20000010 	andcs	r0, r0, r0, lsl r0
 8002a68:	2000000c 	andcs	r0, r0, ip
 8002a6c:	e000e100 	and	lr, r0, r0, lsl #2

08002a70 <timer2_config()>:
 8002a70:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002a72:	4c1f      	ldr	r4, [pc, #124]	; (8002af0 <timer2_config()+0x80>)
 8002a74:	f240 7001 	movw	r0, #1793	; 0x701
 8002a78:	f002 fb3c 	bl	80050f4 <rcu_periph_clock_enable>
 8002a7c:	4620      	mov	r0, r4
 8002a7e:	f002 fbdf 	bl	8005240 <timer_deinit>
 8002a82:	2500      	movs	r5, #0
 8002a84:	2377      	movs	r3, #119	; 0x77
 8002a86:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 8002a8a:	4669      	mov	r1, sp
 8002a8c:	4620      	mov	r0, r4
 8002a8e:	9300      	str	r3, [sp, #0]
 8002a90:	f8ad 5004 	strh.w	r5, [sp, #4]
 8002a94:	9602      	str	r6, [sp, #8]
 8002a96:	f8ad 500c 	strh.w	r5, [sp, #12]
 8002a9a:	f88d 500e 	strb.w	r5, [sp, #14]
 8002a9e:	f002 fc31 	bl	8005304 <timer_init>
 8002aa2:	4631      	mov	r1, r6
 8002aa4:	4620      	mov	r0, r4
 8002aa6:	f002 fcc5 	bl	8005434 <timer_flag_clear>
 8002aaa:	4631      	mov	r1, r6
 8002aac:	4620      	mov	r0, r4
 8002aae:	f002 fcbe 	bl	800542e <timer_interrupt_flag_clear>
 8002ab2:	4629      	mov	r1, r5
 8002ab4:	4620      	mov	r0, r4
 8002ab6:	2210      	movs	r2, #16
 8002ab8:	f002 fc81 	bl	80053be <timer_channel_output_mode_config>
 8002abc:	4620      	mov	r0, r4
 8002abe:	2210      	movs	r2, #16
 8002ac0:	2101      	movs	r1, #1
 8002ac2:	f002 fc7c 	bl	80053be <timer_channel_output_mode_config>
 8002ac6:	4620      	mov	r0, r4
 8002ac8:	2210      	movs	r2, #16
 8002aca:	2102      	movs	r1, #2
 8002acc:	f002 fc77 	bl	80053be <timer_channel_output_mode_config>
 8002ad0:	2103      	movs	r1, #3
 8002ad2:	4620      	mov	r0, r4
 8002ad4:	2210      	movs	r2, #16
 8002ad6:	f002 fc72 	bl	80053be <timer_channel_output_mode_config>
 8002ada:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 8002ade:	4b05      	ldr	r3, [pc, #20]	; (8002af4 <timer2_config()+0x84>)
 8002ae0:	4620      	mov	r0, r4
 8002ae2:	f883 531d 	strb.w	r5, [r3, #797]	; 0x31d
 8002ae6:	601a      	str	r2, [r3, #0]
 8002ae8:	f002 fc64 	bl	80053b4 <timer_enable>
 8002aec:	b004      	add	sp, #16
 8002aee:	bd70      	pop	{r4, r5, r6, pc}
 8002af0:	40000400 	andmi	r0, r0, r0, lsl #8
 8002af4:	e000e100 	and	lr, r0, r0, lsl #2

08002af8 <timer6_config()>:
 8002af8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002afa:	4c16      	ldr	r4, [pc, #88]	; (8002b54 <timer6_config()+0x5c>)
 8002afc:	f240 7005 	movw	r0, #1797	; 0x705
 8002b00:	f002 faf8 	bl	80050f4 <rcu_periph_clock_enable>
 8002b04:	4620      	mov	r0, r4
 8002b06:	f002 fb9b 	bl	8005240 <timer_deinit>
 8002b0a:	f642 63df 	movw	r3, #11999	; 0x2edf
 8002b0e:	f8ad 3000 	strh.w	r3, [sp]
 8002b12:	f242 7310 	movw	r3, #10000	; 0x2710
 8002b16:	4669      	mov	r1, sp
 8002b18:	4620      	mov	r0, r4
 8002b1a:	9302      	str	r3, [sp, #8]
 8002b1c:	f002 fbf2 	bl	8005304 <timer_init>
 8002b20:	4620      	mov	r0, r4
 8002b22:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002b26:	f002 fc85 	bl	8005434 <timer_flag_clear>
 8002b2a:	4620      	mov	r0, r4
 8002b2c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002b30:	f002 fc7d 	bl	800542e <timer_interrupt_flag_clear>
 8002b34:	2101      	movs	r1, #1
 8002b36:	4620      	mov	r0, r4
 8002b38:	f002 fc75 	bl	8005426 <timer_interrupt_enable>
 8002b3c:	2200      	movs	r2, #0
 8002b3e:	4b06      	ldr	r3, [pc, #24]	; (8002b58 <timer6_config()+0x60>)
 8002b40:	4620      	mov	r0, r4
 8002b42:	f883 2337 	strb.w	r2, [r3, #823]	; 0x337
 8002b46:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 8002b4a:	605a      	str	r2, [r3, #4]
 8002b4c:	f002 fc32 	bl	80053b4 <timer_enable>
 8002b50:	b004      	add	sp, #16
 8002b52:	bd10      	pop	{r4, pc}
 8002b54:	40001400 	andmi	r1, r0, r0, lsl #8
 8002b58:	e000e100 	and	lr, r0, r0, lsl #2

08002b5c <usart_dma_config()>:
 8002b5c:	b530      	push	{r4, r5, lr}
 8002b5e:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8002b62:	b089      	sub	sp, #36	; 0x24
 8002b64:	4c16      	ldr	r4, [pc, #88]	; (8002bc0 <usart_dma_config()+0x64>)
 8002b66:	f002 fac5 	bl	80050f4 <rcu_periph_clock_enable>
 8002b6a:	f240 5001 	movw	r0, #1281	; 0x501
 8002b6e:	f002 fac1 	bl	80050f4 <rcu_periph_clock_enable>
 8002b72:	4620      	mov	r0, r4
 8002b74:	2101      	movs	r1, #1
 8002b76:	f002 f8a7 	bl	8004cc8 <dma_deinit>
 8002b7a:	2300      	movs	r3, #0
 8002b7c:	4a11      	ldr	r2, [pc, #68]	; (8002bc4 <usart_dma_config()+0x68>)
 8002b7e:	9304      	str	r3, [sp, #16]
 8002b80:	9203      	str	r2, [sp, #12]
 8002b82:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 8002b86:	2501      	movs	r5, #1
 8002b88:	9205      	str	r2, [sp, #20]
 8002b8a:	4a0f      	ldr	r2, [pc, #60]	; (8002bc8 <usart_dma_config()+0x6c>)
 8002b8c:	4629      	mov	r1, r5
 8002b8e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8002b92:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002b96:	9306      	str	r3, [sp, #24]
 8002b98:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002b9c:	aa01      	add	r2, sp, #4
 8002b9e:	4620      	mov	r0, r4
 8002ba0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002ba4:	f88d 501e 	strb.w	r5, [sp, #30]
 8002ba8:	f002 f8aa 	bl	8004d00 <dma_init>
 8002bac:	4629      	mov	r1, r5
 8002bae:	4620      	mov	r0, r4
 8002bb0:	f002 f8e0 	bl	8004d74 <dma_circulation_disable>
 8002bb4:	4629      	mov	r1, r5
 8002bb6:	4620      	mov	r0, r4
 8002bb8:	f002 f8ec 	bl	8004d94 <dma_memory_to_memory_disable>
 8002bbc:	b009      	add	sp, #36	; 0x24
 8002bbe:	bd30      	pop	{r4, r5, pc}
 8002bc0:	40020000 	andmi	r0, r2, r0
 8002bc4:	20000308 	andcs	r0, r0, r8, lsl #6
 8002bc8:	40004804 	andmi	r4, r0, r4, lsl #16

08002bcc <TIMER1_IRQHandler>:
 8002bcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002bce:	f3bf 8f5f 	dmb	sy
 8002bd2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002bd6:	691c      	ldr	r4, [r3, #16]
 8002bd8:	4e1f      	ldr	r6, [pc, #124]	; (8002c58 <TIMER1_IRQHandler+0x8c>)
 8002bda:	07a7      	lsls	r7, r4, #30
 8002bdc:	8835      	ldrh	r5, [r6, #0]
 8002bde:	d518      	bpl.n	8002c12 <TIMER1_IRQHandler+0x46>
 8002be0:	4f1e      	ldr	r7, [pc, #120]	; (8002c5c <TIMER1_IRQHandler+0x90>)
 8002be2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002be6:	2203      	movs	r2, #3
 8002be8:	2110      	movs	r1, #16
 8002bea:	4638      	mov	r0, r7
 8002bec:	f002 f946 	bl	8004e7c <gpio_init>
 8002bf0:	07ed      	lsls	r5, r5, #31
 8002bf2:	d506      	bpl.n	8002c02 <TIMER1_IRQHandler+0x36>
 8002bf4:	8833      	ldrh	r3, [r6, #0]
 8002bf6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002bfa:	8033      	strh	r3, [r6, #0]
 8002bfc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002c00:	617b      	str	r3, [r7, #20]
 8002c02:	4621      	mov	r1, r4
 8002c04:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002c08:	f002 fc11 	bl	800542e <timer_interrupt_flag_clear>
 8002c0c:	f3bf 8f5f 	dmb	sy
 8002c10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002c12:	0760      	lsls	r0, r4, #29
 8002c14:	d509      	bpl.n	8002c2a <TIMER1_IRQHandler+0x5e>
 8002c16:	05e9      	lsls	r1, r5, #23
 8002c18:	d5f3      	bpl.n	8002c02 <TIMER1_IRQHandler+0x36>
 8002c1a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002c1e:	2203      	movs	r2, #3
 8002c20:	2118      	movs	r1, #24
 8002c22:	480e      	ldr	r0, [pc, #56]	; (8002c5c <TIMER1_IRQHandler+0x90>)
 8002c24:	f002 f92a 	bl	8004e7c <gpio_init>
 8002c28:	e7eb      	b.n	8002c02 <TIMER1_IRQHandler+0x36>
 8002c2a:	0722      	lsls	r2, r4, #28
 8002c2c:	d5e9      	bpl.n	8002c02 <TIMER1_IRQHandler+0x36>
 8002c2e:	05eb      	lsls	r3, r5, #23
 8002c30:	d5e7      	bpl.n	8002c02 <TIMER1_IRQHandler+0x36>
 8002c32:	4b0b      	ldr	r3, [pc, #44]	; (8002c60 <TIMER1_IRQHandler+0x94>)
 8002c34:	2180      	movs	r1, #128	; 0x80
 8002c36:	69da      	ldr	r2, [r3, #28]
 8002c38:	480a      	ldr	r0, [pc, #40]	; (8002c64 <TIMER1_IRQHandler+0x98>)
 8002c3a:	f022 0201 	bic.w	r2, r2, #1
 8002c3e:	61da      	str	r2, [r3, #28]
 8002c40:	4a09      	ldr	r2, [pc, #36]	; (8002c68 <TIMER1_IRQHandler+0x9c>)
 8002c42:	629a      	str	r2, [r3, #40]	; 0x28
 8002c44:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 8002c48:	621a      	str	r2, [r3, #32]
 8002c4a:	69da      	ldr	r2, [r3, #28]
 8002c4c:	f042 0201 	orr.w	r2, r2, #1
 8002c50:	61da      	str	r2, [r3, #28]
 8002c52:	f002 fc8b 	bl	800556c <usart_dma_transmit_config>
 8002c56:	e7d4      	b.n	8002c02 <TIMER1_IRQHandler+0x36>
 8002c58:	20000712 	andcs	r0, r0, r2, lsl r7
 8002c5c:	40011000 	andmi	r1, r1, r0
 8002c60:	40020000 	andmi	r0, r2, r0
 8002c64:	40004800 	andmi	r4, r0, r0, lsl #16
 8002c68:	20000308 	andcs	r0, r0, r8, lsl #6

08002c6c <TIMER2_IRQHandler>:
 8002c6c:	b508      	push	{r3, lr}
 8002c6e:	f3bf 8f5f 	dmb	sy
 8002c72:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002c76:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 8002c7a:	078b      	lsls	r3, r1, #30
 8002c7c:	d50d      	bpl.n	8002c9a <TIMER2_IRQHandler+0x2e>
 8002c7e:	4b0a      	ldr	r3, [pc, #40]	; (8002ca8 <TIMER2_IRQHandler+0x3c>)
 8002c80:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8002c84:	2a04      	cmp	r2, #4
 8002c86:	d108      	bne.n	8002c9a <TIMER2_IRQHandler+0x2e>
 8002c88:	2200      	movs	r2, #0
 8002c8a:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002c8e:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8002c92:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002c96:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8002c9a:	4804      	ldr	r0, [pc, #16]	; (8002cac <TIMER2_IRQHandler+0x40>)
 8002c9c:	f002 fbc7 	bl	800542e <timer_interrupt_flag_clear>
 8002ca0:	f3bf 8f5f 	dmb	sy
 8002ca4:	bd08      	pop	{r3, pc}
 8002ca6:	bf00      	nop
 8002ca8:	200000f8 	strdcs	r0, [r0], -r8
 8002cac:	40000400 	andmi	r0, r0, r0, lsl #8

08002cb0 <TIMER3_IRQHandler>:
 8002cb0:	b508      	push	{r3, lr}
 8002cb2:	f3bf 8f5f 	dmb	sy
 8002cb6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002cba:	4804      	ldr	r0, [pc, #16]	; (8002ccc <TIMER3_IRQHandler+0x1c>)
 8002cbc:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 8002cc0:	f002 fbb5 	bl	800542e <timer_interrupt_flag_clear>
 8002cc4:	f3bf 8f5f 	dmb	sy
 8002cc8:	bd08      	pop	{r3, pc}
 8002cca:	bf00      	nop
 8002ccc:	40000800 	andmi	r0, r0, r0, lsl #16

08002cd0 <TIMER6_IRQHandler>:
 8002cd0:	b508      	push	{r3, lr}
 8002cd2:	f3bf 8f5f 	dmb	sy
 8002cd6:	4b07      	ldr	r3, [pc, #28]	; (8002cf4 <TIMER6_IRQHandler+0x24>)
 8002cd8:	4807      	ldr	r0, [pc, #28]	; (8002cf8 <TIMER6_IRQHandler+0x28>)
 8002cda:	685a      	ldr	r2, [r3, #4]
 8002cdc:	6899      	ldr	r1, [r3, #8]
 8002cde:	1a52      	subs	r2, r2, r1
 8002ce0:	601a      	str	r2, [r3, #0]
 8002ce2:	685a      	ldr	r2, [r3, #4]
 8002ce4:	2101      	movs	r1, #1
 8002ce6:	609a      	str	r2, [r3, #8]
 8002ce8:	f002 fba1 	bl	800542e <timer_interrupt_flag_clear>
 8002cec:	f3bf 8f5f 	dmb	sy
 8002cf0:	bd08      	pop	{r3, pc}
 8002cf2:	bf00      	nop
 8002cf4:	20000714 	andcs	r0, r0, r4, lsl r7
 8002cf8:	40001400 	andmi	r1, r0, r0, lsl #8

08002cfc <Dmx::ClearData(unsigned int)>:
 8002cfc:	f44f 7301 	mov.w	r3, #516	; 0x204
 8002d00:	b510      	push	{r4, lr}
 8002d02:	2400      	movs	r4, #0
 8002d04:	4a08      	ldr	r2, [pc, #32]	; (8002d28 <Dmx::ClearData(unsigned int)+0x2c>)
 8002d06:	fb03 2301 	mla	r3, r3, r1, r2
 8002d0a:	f203 2002 	addw	r0, r3, #514	; 0x202
 8002d0e:	f823 4b02 	strh.w	r4, [r3], #2
 8002d12:	4283      	cmp	r3, r0
 8002d14:	d1fb      	bne.n	8002d0e <Dmx::ClearData(unsigned int)+0x12>
 8002d16:	f44f 7301 	mov.w	r3, #516	; 0x204
 8002d1a:	fb03 2201 	mla	r2, r3, r1, r2
 8002d1e:	f240 2301 	movw	r3, #513	; 0x201
 8002d22:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 8002d26:	bd10      	pop	{r4, pc}
 8002d28:	20000308 	andcs	r0, r0, r8, lsl #6

08002d2c <Dmx::StartData(unsigned int, unsigned int)>:
 8002d2c:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8002d30:	b538      	push	{r3, r4, r5, lr}
 8002d32:	6943      	ldr	r3, [r0, #20]
 8002d34:	460d      	mov	r5, r1
 8002d36:	4614      	mov	r4, r2
 8002d38:	b973      	cbnz	r3, 8002d58 <Dmx::StartData(unsigned int, unsigned int)+0x2c>
 8002d3a:	4d1a      	ldr	r5, [pc, #104]	; (8002da4 <Dmx::StartData(unsigned int, unsigned int)+0x78>)
 8002d3c:	882b      	ldrh	r3, [r5, #0]
 8002d3e:	b90b      	cbnz	r3, 8002d44 <Dmx::StartData(unsigned int, unsigned int)+0x18>
 8002d40:	f7ff fe2c 	bl	800299c <timer1_config()>
 8002d44:	2201      	movs	r2, #1
 8002d46:	8829      	ldrh	r1, [r5, #0]
 8002d48:	fa02 f304 	lsl.w	r3, r2, r4
 8002d4c:	430b      	orrs	r3, r1
 8002d4e:	802b      	strh	r3, [r5, #0]
 8002d50:	4b15      	ldr	r3, [pc, #84]	; (8002da8 <Dmx::StartData(unsigned int, unsigned int)+0x7c>)
 8002d52:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8002d56:	bd38      	pop	{r3, r4, r5, pc}
 8002d58:	f44f 7204 	mov.w	r2, #528	; 0x210
 8002d5c:	4b13      	ldr	r3, [pc, #76]	; (8002dac <Dmx::StartData(unsigned int, unsigned int)+0x80>)
 8002d5e:	fb02 3304 	mla	r3, r2, r4, r3
 8002d62:	2200      	movs	r2, #0
 8002d64:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002d68:	2107      	movs	r1, #7
 8002d6a:	4628      	mov	r0, r5
 8002d6c:	f002 fc04 	bl	8005578 <usart_flag_get>
 8002d70:	2800      	cmp	r0, #0
 8002d72:	d0f9      	beq.n	8002d68 <Dmx::StartData(unsigned int, unsigned int)+0x3c>
 8002d74:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002d78:	4628      	mov	r0, r5
 8002d7a:	f002 fc1e 	bl	80055ba <usart_interrupt_flag_clear>
 8002d7e:	f240 3105 	movw	r1, #773	; 0x305
 8002d82:	4628      	mov	r0, r5
 8002d84:	f002 fc00 	bl	8005588 <usart_interrupt_enable>
 8002d88:	2202      	movs	r2, #2
 8002d8a:	4b07      	ldr	r3, [pc, #28]	; (8002da8 <Dmx::StartData(unsigned int, unsigned int)+0x7c>)
 8002d8c:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8002d90:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002d94:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8002d98:	f043 0302 	orr.w	r3, r3, #2
 8002d9c:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8002da0:	e7d9      	b.n	8002d56 <Dmx::StartData(unsigned int, unsigned int)+0x2a>
 8002da2:	bf00      	nop
 8002da4:	20000712 	andcs	r0, r0, r2, lsl r7
 8002da8:	2000050c 	andcs	r0, r0, ip, lsl #10
 8002dac:	200000f8 	strdcs	r0, [r0], -r8

08002db0 <Dmx::StopData(unsigned int, unsigned int)>:
 8002db0:	b538      	push	{r3, r4, r5, lr}
 8002db2:	4d16      	ldr	r5, [pc, #88]	; (8002e0c <Dmx::StopData(unsigned int, unsigned int)+0x5c>)
 8002db4:	4614      	mov	r4, r2
 8002db6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8002dba:	4603      	mov	r3, r0
 8002dbc:	4608      	mov	r0, r1
 8002dbe:	b17a      	cbz	r2, 8002de0 <Dmx::StopData(unsigned int, unsigned int)+0x30>
 8002dc0:	695b      	ldr	r3, [r3, #20]
 8002dc2:	b973      	cbnz	r3, 8002de2 <Dmx::StopData(unsigned int, unsigned int)+0x32>
 8002dc4:	2201      	movs	r2, #1
 8002dc6:	4912      	ldr	r1, [pc, #72]	; (8002e10 <Dmx::StopData(unsigned int, unsigned int)+0x60>)
 8002dc8:	f104 0308 	add.w	r3, r4, #8
 8002dcc:	fa02 f303 	lsl.w	r3, r2, r3
 8002dd0:	40a2      	lsls	r2, r4
 8002dd2:	4313      	orrs	r3, r2
 8002dd4:	880a      	ldrh	r2, [r1, #0]
 8002dd6:	4013      	ands	r3, r2
 8002dd8:	800b      	strh	r3, [r1, #0]
 8002dda:	2300      	movs	r3, #0
 8002ddc:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 8002de0:	bd38      	pop	{r3, r4, r5, pc}
 8002de2:	f240 3105 	movw	r1, #773	; 0x305
 8002de6:	f002 fbdb 	bl	80055a0 <usart_interrupt_disable>
 8002dea:	f44f 7204 	mov.w	r2, #528	; 0x210
 8002dee:	4b09      	ldr	r3, [pc, #36]	; (8002e14 <Dmx::StopData(unsigned int, unsigned int)+0x64>)
 8002df0:	fb02 3304 	mla	r3, r2, r4, r3
 8002df4:	2200      	movs	r2, #0
 8002df6:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002dfa:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002dfe:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8002e02:	f023 0302 	bic.w	r3, r3, #2
 8002e06:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8002e0a:	e7e6      	b.n	8002dda <Dmx::StopData(unsigned int, unsigned int)+0x2a>
 8002e0c:	2000050c 	andcs	r0, r0, ip, lsl #10
 8002e10:	20000712 	andcs	r0, r0, r2, lsl r7
 8002e14:	200000f8 	strdcs	r0, [r0], -r8

08002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 8002e18:	b570      	push	{r4, r5, r6, lr}
 8002e1a:	461d      	mov	r5, r3
 8002e1c:	6943      	ldr	r3, [r0, #20]
 8002e1e:	4606      	mov	r6, r0
 8002e20:	4293      	cmp	r3, r2
 8002e22:	4614      	mov	r4, r2
 8002e24:	d014      	beq.n	8002e50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 8002e26:	6142      	str	r2, [r0, #20]
 8002e28:	4910      	ldr	r1, [pc, #64]	; (8002e6c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8002e2a:	2200      	movs	r2, #0
 8002e2c:	f7ff ffc0 	bl	8002db0 <Dmx::StopData(unsigned int, unsigned int)>
 8002e30:	b934      	cbnz	r4, 8002e40 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 8002e32:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002e36:	4b0e      	ldr	r3, [pc, #56]	; (8002e70 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 8002e38:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8002e3c:	b94d      	cbnz	r5, 8002e52 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 8002e3e:	bd70      	pop	{r4, r5, r6, pc}
 8002e40:	2c01      	cmp	r4, #1
 8002e42:	d1fb      	bne.n	8002e3c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 8002e44:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002e48:	4b09      	ldr	r3, [pc, #36]	; (8002e70 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 8002e4a:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8002e4e:	e7f5      	b.n	8002e3c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 8002e50:	b135      	cbz	r5, 8002e60 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 8002e52:	4630      	mov	r0, r6
 8002e54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002e58:	2200      	movs	r2, #0
 8002e5a:	4904      	ldr	r1, [pc, #16]	; (8002e6c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8002e5c:	f7ff bf66 	b.w	8002d2c <Dmx::StartData(unsigned int, unsigned int)>
 8002e60:	462a      	mov	r2, r5
 8002e62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002e66:	4901      	ldr	r1, [pc, #4]	; (8002e6c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8002e68:	f7ff bfa2 	b.w	8002db0 <Dmx::StopData(unsigned int, unsigned int)>
 8002e6c:	40004800 	andmi	r4, r0, r0, lsl #16
 8002e70:	40010000 	andmi	r0, r1, r0

08002e74 <Dmx::Dmx()>:
 8002e74:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002e76:	230c      	movs	r3, #12
 8002e78:	225c      	movs	r2, #92	; 0x5c
 8002e7a:	e9c0 2300 	strd	r2, r3, [r0]
 8002e7e:	f246 13a8 	movw	r3, #25000	; 0x61a8
 8002e82:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8002e86:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002e8a:	2500      	movs	r5, #0
 8002e8c:	4604      	mov	r4, r0
 8002e8e:	8203      	strh	r3, [r0, #16]
 8002e90:	4b16      	ldr	r3, [pc, #88]	; (8002eec <Dmx::Dmx()+0x78>)
 8002e92:	2203      	movs	r2, #3
 8002e94:	6018      	str	r0, [r3, #0]
 8002e96:	4b16      	ldr	r3, [pc, #88]	; (8002ef0 <Dmx::Dmx()+0x7c>)
 8002e98:	2110      	movs	r1, #16
 8002e9a:	801d      	strh	r5, [r3, #0]
 8002e9c:	4815      	ldr	r0, [pc, #84]	; (8002ef4 <Dmx::Dmx()+0x80>)
 8002e9e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002ea2:	f001 ffeb 	bl	8004e7c <gpio_init>
 8002ea6:	4629      	mov	r1, r5
 8002ea8:	4620      	mov	r0, r4
 8002eaa:	f7ff ff27 	bl	8002cfc <Dmx::ClearData(unsigned int)>
 8002eae:	4b12      	ldr	r3, [pc, #72]	; (8002ef8 <Dmx::Dmx()+0x84>)
 8002eb0:	4620      	mov	r0, r4
 8002eb2:	2201      	movs	r2, #1
 8002eb4:	601d      	str	r5, [r3, #0]
 8002eb6:	462b      	mov	r3, r5
 8002eb8:	f7ff ffae 	bl	8002e18 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8002ebc:	4b0f      	ldr	r3, [pc, #60]	; (8002efc <Dmx::Dmx()+0x88>)
 8002ebe:	f8c3 520c 	str.w	r5, [r3, #524]	; 0x20c
 8002ec2:	f7ff fe4b 	bl	8002b5c <usart_dma_config()>
 8002ec6:	f7ff fdd3 	bl	8002a70 <timer2_config()>
 8002eca:	f7ff fe15 	bl	8002af8 <timer6_config()>
 8002ece:	2302      	movs	r3, #2
 8002ed0:	2208      	movs	r2, #8
 8002ed2:	9300      	str	r3, [sp, #0]
 8002ed4:	490a      	ldr	r1, [pc, #40]	; (8002f00 <Dmx::Dmx()+0x8c>)
 8002ed6:	462b      	mov	r3, r5
 8002ed8:	480a      	ldr	r0, [pc, #40]	; (8002f04 <Dmx::Dmx()+0x90>)
 8002eda:	f001 fc2b 	bl	8004734 <gd32_uart_begin>
 8002ede:	2280      	movs	r2, #128	; 0x80
 8002ee0:	4620      	mov	r0, r4
 8002ee2:	4b09      	ldr	r3, [pc, #36]	; (8002f08 <Dmx::Dmx()+0x94>)
 8002ee4:	605a      	str	r2, [r3, #4]
 8002ee6:	b003      	add	sp, #12
 8002ee8:	bd30      	pop	{r4, r5, pc}
 8002eea:	bf00      	nop
 8002eec:	20000724 	andcs	r0, r0, r4, lsr #14
 8002ef0:	20000712 	andcs	r0, r0, r2, lsl r7
 8002ef4:	40010c00 	andmi	r0, r1, r0, lsl #24
 8002ef8:	2000050c 	andcs	r0, r0, ip, lsl #10
 8002efc:	200000f8 	strdcs	r0, [r0], -r8
 8002f00:	0003d090 	muleq	r3, r0, r0
 8002f04:	40004800 	andmi	r4, r0, r0, lsl #16
 8002f08:	e000e100 	and	lr, r0, r0, lsl #2

08002f0c <Dmx::SetDmxPeriodTime(unsigned int)>:
 8002f0c:	60c1      	str	r1, [r0, #12]
 8002f0e:	202c      	movs	r0, #44	; 0x2c
 8002f10:	4b0c      	ldr	r3, [pc, #48]	; (8002f44 <Dmx::SetDmxPeriodTime(unsigned int)+0x38>)
 8002f12:	4a0d      	ldr	r2, [pc, #52]	; (8002f48 <Dmx::SetDmxPeriodTime(unsigned int)+0x3c>)
 8002f14:	681b      	ldr	r3, [r3, #0]
 8002f16:	6812      	ldr	r2, [r2, #0]
 8002f18:	4413      	add	r3, r2
 8002f1a:	4a0c      	ldr	r2, [pc, #48]	; (8002f4c <Dmx::SetDmxPeriodTime(unsigned int)+0x40>)
 8002f1c:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 8002f20:	fb00 3302 	mla	r3, r0, r2, r3
 8002f24:	4a0a      	ldr	r2, [pc, #40]	; (8002f50 <Dmx::SetDmxPeriodTime(unsigned int)+0x44>)
 8002f26:	b111      	cbz	r1, 8002f2e <Dmx::SetDmxPeriodTime(unsigned int)+0x22>
 8002f28:	1818      	adds	r0, r3, r0
 8002f2a:	4281      	cmp	r1, r0
 8002f2c:	d207      	bcs.n	8002f3e <Dmx::SetDmxPeriodTime(unsigned int)+0x32>
 8002f2e:	f240 41b4 	movw	r1, #1204	; 0x4b4
 8002f32:	3358      	adds	r3, #88	; 0x58
 8002f34:	428b      	cmp	r3, r1
 8002f36:	bf2c      	ite	cs
 8002f38:	6013      	strcs	r3, [r2, #0]
 8002f3a:	6011      	strcc	r1, [r2, #0]
 8002f3c:	4770      	bx	lr
 8002f3e:	6011      	str	r1, [r2, #0]
 8002f40:	4770      	bx	lr
 8002f42:	bf00      	nop
 8002f44:	20000010 	andcs	r0, r0, r0, lsl r0
 8002f48:	2000000c 	andcs	r0, r0, ip
 8002f4c:	20000308 	andcs	r0, r0, r8, lsl #6
 8002f50:	20000008 	andcs	r0, r0, r8

08002f54 <Dmx::SetDmxBreakTime(unsigned int)>:
 8002f54:	295c      	cmp	r1, #92	; 0x5c
 8002f56:	bf38      	it	cc
 8002f58:	215c      	movcc	r1, #92	; 0x5c
 8002f5a:	4b02      	ldr	r3, [pc, #8]	; (8002f64 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 8002f5c:	6019      	str	r1, [r3, #0]
 8002f5e:	68c1      	ldr	r1, [r0, #12]
 8002f60:	f7ff bfd4 	b.w	8002f0c <Dmx::SetDmxPeriodTime(unsigned int)>
 8002f64:	20000010 	andcs	r0, r0, r0, lsl r0

08002f68 <Dmx::SetDmxMabTime(unsigned int)>:
 8002f68:	290c      	cmp	r1, #12
 8002f6a:	bf38      	it	cc
 8002f6c:	210c      	movcc	r1, #12
 8002f6e:	4b02      	ldr	r3, [pc, #8]	; (8002f78 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 8002f70:	6019      	str	r1, [r3, #0]
 8002f72:	68c1      	ldr	r1, [r0, #12]
 8002f74:	f7ff bfca 	b.w	8002f0c <Dmx::SetDmxPeriodTime(unsigned int)>
 8002f78:	2000000c 	andcs	r0, r0, ip

08002f7c <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)>:
 8002f7c:	b4f0      	push	{r4, r5, r6, r7}
 8002f7e:	8a04      	ldrh	r4, [r0, #16]
 8002f80:	4d11      	ldr	r5, [pc, #68]	; (8002fc8 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 8002f82:	42a3      	cmp	r3, r4
 8002f84:	bf28      	it	cs
 8002f86:	4623      	movcs	r3, r4
 8002f88:	f44f 7401 	mov.w	r4, #516	; 0x204
 8002f8c:	434c      	muls	r4, r1
 8002f8e:	1c5f      	adds	r7, r3, #1
 8002f90:	192e      	adds	r6, r5, r4
 8002f92:	f892 f000 	pld	[r2]
 8002f96:	3c01      	subs	r4, #1
 8002f98:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 8002f9c:	442c      	add	r4, r5
 8002f9e:	18d6      	adds	r6, r2, r3
 8002fa0:	4296      	cmp	r6, r2
 8002fa2:	d004      	beq.n	8002fae <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x32>
 8002fa4:	f812 5b01 	ldrb.w	r5, [r2], #1
 8002fa8:	f804 5f01 	strb.w	r5, [r4, #1]!
 8002fac:	e7f8      	b.n	8002fa0 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x24>
 8002fae:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8002fb2:	698a      	ldr	r2, [r1, #24]
 8002fb4:	429a      	cmp	r2, r3
 8002fb6:	d004      	beq.n	8002fc2 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x46>
 8002fb8:	bcf0      	pop	{r4, r5, r6, r7}
 8002fba:	618b      	str	r3, [r1, #24]
 8002fbc:	68c1      	ldr	r1, [r0, #12]
 8002fbe:	f7ff bfa5 	b.w	8002f0c <Dmx::SetDmxPeriodTime(unsigned int)>
 8002fc2:	bcf0      	pop	{r4, r5, r6, r7}
 8002fc4:	4770      	bx	lr
 8002fc6:	bf00      	nop
 8002fc8:	20000308 	andcs	r0, r0, r8, lsl #6

08002fcc <Dmx::GetDmxAvailable(unsigned int)>:
 8002fcc:	f44f 7304 	mov.w	r3, #528	; 0x210
 8002fd0:	4807      	ldr	r0, [pc, #28]	; (8002ff0 <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 8002fd2:	fb03 0001 	mla	r0, r3, r1, r0
 8002fd6:	f8d0 3204 	ldr.w	r3, [r0, #516]	; 0x204
 8002fda:	f413 4100 	ands.w	r1, r3, #32768	; 0x8000
 8002fde:	bf1b      	ittet	ne
 8002fe0:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 8002fe4:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 8002fe8:	4608      	moveq	r0, r1
 8002fea:	f8c0 3204 	strne.w	r3, [r0, #516]	; 0x204
 8002fee:	4770      	bx	lr
 8002ff0:	200000f8 	strdcs	r0, [r0], -r8

08002ff4 <Dmx::GetDmxChanged(unsigned int)>:
 8002ff4:	b570      	push	{r4, r5, r6, lr}
 8002ff6:	460a      	mov	r2, r1
 8002ff8:	f7ff ffe8 	bl	8002fcc <Dmx::GetDmxAvailable(unsigned int)>
 8002ffc:	b1a0      	cbz	r0, 8003028 <Dmx::GetDmxChanged(unsigned int)+0x34>
 8002ffe:	f240 2102 	movw	r1, #514	; 0x202
 8003002:	4b0a      	ldr	r3, [pc, #40]	; (800302c <Dmx::GetDmxChanged(unsigned int)+0x38>)
 8003004:	1e84      	subs	r4, r0, #2
 8003006:	fb01 3102 	mla	r1, r1, r2, r3
 800300a:	2200      	movs	r2, #0
 800300c:	1e8b      	subs	r3, r1, #2
 800300e:	f501 7100 	add.w	r1, r1, #512	; 0x200
 8003012:	f833 6f02 	ldrh.w	r6, [r3, #2]!
 8003016:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800301a:	42ae      	cmp	r6, r5
 800301c:	bf1c      	itt	ne
 800301e:	2201      	movne	r2, #1
 8003020:	801d      	strhne	r5, [r3, #0]
 8003022:	428b      	cmp	r3, r1
 8003024:	d1f5      	bne.n	8003012 <Dmx::GetDmxChanged(unsigned int)+0x1e>
 8003026:	b902      	cbnz	r2, 800302a <Dmx::GetDmxChanged(unsigned int)+0x36>
 8003028:	2000      	movs	r0, #0
 800302a:	bd70      	pop	{r4, r5, r6, pc}
 800302c:	20000510 	andcs	r0, r0, r0, lsl r5

08003030 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>:
 8003030:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003032:	4614      	mov	r4, r2
 8003034:	461d      	mov	r5, r3
 8003036:	4e1e      	ldr	r6, [pc, #120]	; (80030b0 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x80>)
 8003038:	2106      	movs	r1, #6
 800303a:	4630      	mov	r0, r6
 800303c:	f002 fa9c 	bl	8005578 <usart_flag_get>
 8003040:	2800      	cmp	r0, #0
 8003042:	d0f9      	beq.n	8003038 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x8>
 8003044:	f44f 6780 	mov.w	r7, #1024	; 0x400
 8003048:	4e1a      	ldr	r6, [pc, #104]	; (80030b4 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x84>)
 800304a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800304e:	2203      	movs	r2, #3
 8003050:	2110      	movs	r1, #16
 8003052:	4630      	mov	r0, r6
 8003054:	f001 ff12 	bl	8004e7c <gpio_init>
 8003058:	6177      	str	r7, [r6, #20]
 800305a:	20b0      	movs	r0, #176	; 0xb0
 800305c:	f001 fcc8 	bl	80049f0 <udelay>
 8003060:	463b      	mov	r3, r7
 8003062:	4630      	mov	r0, r6
 8003064:	2203      	movs	r2, #3
 8003066:	2118      	movs	r1, #24
 8003068:	f001 ff08 	bl	8004e7c <gpio_init>
 800306c:	200c      	movs	r0, #12
 800306e:	f001 fcbf 	bl	80049f0 <udelay>
 8003072:	f04f 2640 	mov.w	r6, #1073758208	; 0x40004000
 8003076:	4f0e      	ldr	r7, [pc, #56]	; (80030b0 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x80>)
 8003078:	4425      	add	r5, r4
 800307a:	42ac      	cmp	r4, r5
 800307c:	d10b      	bne.n	8003096 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x66>
 800307e:	f04f 2440 	mov.w	r4, #1073758208	; 0x40004000
 8003082:	4d0b      	ldr	r5, [pc, #44]	; (80030b0 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x80>)
 8003084:	2106      	movs	r1, #6
 8003086:	4628      	mov	r0, r5
 8003088:	f002 fa76 	bl	8005578 <usart_flag_get>
 800308c:	2801      	cmp	r0, #1
 800308e:	d00d      	beq.n	80030ac <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x7c>
 8003090:	f8d4 3804 	ldr.w	r3, [r4, #2052]	; 0x804
 8003094:	e7f6      	b.n	8003084 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x54>
 8003096:	2107      	movs	r1, #7
 8003098:	4638      	mov	r0, r7
 800309a:	f002 fa6d 	bl	8005578 <usart_flag_get>
 800309e:	2800      	cmp	r0, #0
 80030a0:	d0f9      	beq.n	8003096 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x66>
 80030a2:	f814 3b01 	ldrb.w	r3, [r4], #1
 80030a6:	f8c6 3804 	str.w	r3, [r6, #2052]	; 0x804
 80030aa:	e7e6      	b.n	800307a <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x4a>
 80030ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80030ae:	bf00      	nop
 80030b0:	40004800 	andmi	r4, r0, r0, lsl #16
 80030b4:	40011000 	andmi	r1, r1, r0

080030b8 <Dmx::RdmReceive(unsigned int)>:
 80030b8:	f44f 7304 	mov.w	r3, #528	; 0x210
 80030bc:	4806      	ldr	r0, [pc, #24]	; (80030d8 <Dmx::RdmReceive(unsigned int)+0x20>)
 80030be:	fb03 0101 	mla	r1, r3, r1, r0
 80030c2:	f8b1 3204 	ldrh.w	r3, [r1, #516]	; 0x204
 80030c6:	f413 4080 	ands.w	r0, r3, #16384	; 0x4000
 80030ca:	bf1e      	ittt	ne
 80030cc:	2300      	movne	r3, #0
 80030ce:	4608      	movne	r0, r1
 80030d0:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 80030d4:	4770      	bx	lr
 80030d6:	bf00      	nop
 80030d8:	200000f8 	strdcs	r0, [r0], -r8

080030dc <usb_read_byte>:
 80030dc:	b508      	push	{r3, lr}
 80030de:	f000 f8ef 	bl	80032c0 <FT245RL_data_available>
 80030e2:	2800      	cmp	r0, #0
 80030e4:	d0fb      	beq.n	80030de <usb_read_byte+0x2>
 80030e6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80030ea:	f000 b8a9 	b.w	8003240 <FT245RL_read_data>

080030ee <usb_send_byte>:
 80030ee:	b510      	push	{r4, lr}
 80030f0:	4604      	mov	r4, r0
 80030f2:	f000 f8f1 	bl	80032d8 <FT245RL_can_write>
 80030f6:	2800      	cmp	r0, #0
 80030f8:	d0fb      	beq.n	80030f2 <usb_send_byte+0x4>
 80030fa:	4620      	mov	r0, r4
 80030fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003100:	f000 b856 	b.w	80031b0 <FT245RL_write_data>

08003104 <data_gpio_fsel_input>:
 8003104:	b510      	push	{r4, lr}
 8003106:	f24c 0340 	movw	r3, #49216	; 0xc040
 800310a:	2203      	movs	r2, #3
 800310c:	2104      	movs	r1, #4
 800310e:	4805      	ldr	r0, [pc, #20]	; (8003124 <data_gpio_fsel_input+0x20>)
 8003110:	f001 feb4 	bl	8004e7c <gpio_init>
 8003114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003118:	23f8      	movs	r3, #248	; 0xf8
 800311a:	2203      	movs	r2, #3
 800311c:	2104      	movs	r1, #4
 800311e:	4802      	ldr	r0, [pc, #8]	; (8003128 <data_gpio_fsel_input+0x24>)
 8003120:	f001 beac 	b.w	8004e7c <gpio_init>
 8003124:	40010800 	andmi	r0, r1, r0, lsl #16
 8003128:	40010c00 	andmi	r0, r1, r0, lsl #24

0800312c <FT245RL_init>:
 800312c:	b510      	push	{r4, lr}
 800312e:	f240 6002 	movw	r0, #1538	; 0x602
 8003132:	f001 ffdf 	bl	80050f4 <rcu_periph_clock_enable>
 8003136:	f240 6003 	movw	r0, #1539	; 0x603
 800313a:	f001 ffdb 	bl	80050f4 <rcu_periph_clock_enable>
 800313e:	4c19      	ldr	r4, [pc, #100]	; (80031a4 <FT245RL_init+0x78>)
 8003140:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8003144:	f001 ffd6 	bl	80050f4 <rcu_periph_clock_enable>
 8003148:	2101      	movs	r1, #1
 800314a:	4817      	ldr	r0, [pc, #92]	; (80031a8 <FT245RL_init+0x7c>)
 800314c:	f001 fef0 	bl	8004f30 <gpio_pin_remap_config>
 8003150:	f7ff ffd8 	bl	8003104 <data_gpio_fsel_input>
 8003154:	4620      	mov	r0, r4
 8003156:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800315a:	2203      	movs	r2, #3
 800315c:	2110      	movs	r1, #16
 800315e:	f001 fe8d 	bl	8004e7c <gpio_init>
 8003162:	4620      	mov	r0, r4
 8003164:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8003168:	2203      	movs	r2, #3
 800316a:	2110      	movs	r1, #16
 800316c:	f5a4 6480 	sub.w	r4, r4, #1024	; 0x400
 8003170:	f001 fe84 	bl	8004e7c <gpio_init>
 8003174:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003178:	2203      	movs	r2, #3
 800317a:	2104      	movs	r1, #4
 800317c:	4620      	mov	r0, r4
 800317e:	f001 fe7d 	bl	8004e7c <gpio_init>
 8003182:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8003186:	2203      	movs	r2, #3
 8003188:	2104      	movs	r1, #4
 800318a:	4620      	mov	r0, r4
 800318c:	f001 fe76 	bl	8004e7c <gpio_init>
 8003190:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8003194:	4b05      	ldr	r3, [pc, #20]	; (80031ac <FT245RL_init+0x80>)
 8003196:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800319a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800319e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80031a2:	bd10      	pop	{r4, pc}
 80031a4:	40010c00 	andmi	r0, r1, r0, lsl #24
 80031a8:	00300400 	eorseq	r0, r0, r0, lsl #8
 80031ac:	40010000 	andmi	r0, r1, r0

080031b0 <FT245RL_write_data>:
 80031b0:	b538      	push	{r3, r4, r5, lr}
 80031b2:	2203      	movs	r2, #3
 80031b4:	4604      	mov	r4, r0
 80031b6:	f24c 0340 	movw	r3, #49216	; 0xc040
 80031ba:	2110      	movs	r1, #16
 80031bc:	481d      	ldr	r0, [pc, #116]	; (8003234 <FT245RL_write_data+0x84>)
 80031be:	f001 fe5d 	bl	8004e7c <gpio_init>
 80031c2:	23f8      	movs	r3, #248	; 0xf8
 80031c4:	2203      	movs	r2, #3
 80031c6:	2110      	movs	r1, #16
 80031c8:	481b      	ldr	r0, [pc, #108]	; (8003238 <FT245RL_write_data+0x88>)
 80031ca:	f001 fe57 	bl	8004e7c <gpio_init>
 80031ce:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80031d2:	491a      	ldr	r1, [pc, #104]	; (800323c <FT245RL_write_data+0x8c>)
 80031d4:	f8c1 0c10 	str.w	r0, [r1, #3088]	; 0xc10
 80031d8:	bf00      	nop
 80031da:	bf00      	nop
 80031dc:	02e2      	lsls	r2, r4, #11
 80031de:	0123      	lsls	r3, r4, #4
 80031e0:	ea02 0500 	and.w	r5, r2, r0
 80031e4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80031e8:	431d      	orrs	r5, r3
 80031ea:	f402 4300 	and.w	r3, r2, #32768	; 0x8000
 80031ee:	432b      	orrs	r3, r5
 80031f0:	f8c1 3810 	str.w	r3, [r1, #2064]	; 0x810
 80031f4:	f483 4340 	eor.w	r3, r3, #49152	; 0xc000
 80031f8:	f083 0340 	eor.w	r3, r3, #64	; 0x40
 80031fc:	f8c1 3814 	str.w	r3, [r1, #2068]	; 0x814
 8003200:	0162      	lsls	r2, r4, #5
 8003202:	01e3      	lsls	r3, r4, #7
 8003204:	b2db      	uxtb	r3, r3
 8003206:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800320a:	431a      	orrs	r2, r3
 800320c:	1063      	asrs	r3, r4, #1
 800320e:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8003212:	f344 1403 	sbfx	r4, r4, #4, #4
 8003216:	4313      	orrs	r3, r2
 8003218:	f004 0408 	and.w	r4, r4, #8
 800321c:	431c      	orrs	r4, r3
 800321e:	f8c1 4c10 	str.w	r4, [r1, #3088]	; 0xc10
 8003222:	f084 04f8 	eor.w	r4, r4, #248	; 0xf8
 8003226:	f8c1 4c14 	str.w	r4, [r1, #3092]	; 0xc14
 800322a:	bf00      	nop
 800322c:	bf00      	nop
 800322e:	f8c1 0c14 	str.w	r0, [r1, #3092]	; 0xc14
 8003232:	bd38      	pop	{r3, r4, r5, pc}
 8003234:	40010800 	andmi	r0, r1, r0, lsl #16
 8003238:	40010c00 	andmi	r0, r1, r0, lsl #24
 800323c:	40010000 	andmi	r0, r1, r0

08003240 <FT245RL_read_data>:
 8003240:	b510      	push	{r4, lr}
 8003242:	f7ff ff5f 	bl	8003104 <data_gpio_fsel_input>
 8003246:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800324a:	4c1b      	ldr	r4, [pc, #108]	; (80032b8 <FT245RL_read_data+0x78>)
 800324c:	f8c4 3c14 	str.w	r3, [r4, #3092]	; 0xc14
 8003250:	2318      	movs	r3, #24
 8003252:	bf00      	nop
 8003254:	3b01      	subs	r3, #1
 8003256:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 800325a:	d1fa      	bne.n	8003252 <FT245RL_read_data+0x12>
 800325c:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8003260:	f8d4 3808 	ldr.w	r3, [r4, #2056]	; 0x808
 8003264:	f8d4 2c08 	ldr.w	r2, [r4, #3080]	; 0xc08
 8003268:	f8c4 0c10 	str.w	r0, [r4, #3088]	; 0xc10
 800326c:	f3c3 100b 	ubfx	r0, r3, #4, #12
 8003270:	f3c3 24c4 	ubfx	r4, r3, #11, #5
 8003274:	f004 0408 	and.w	r4, r4, #8
 8003278:	f000 0004 	and.w	r0, r0, #4
 800327c:	f343 23c4 	sbfx	r3, r3, #11, #5
 8003280:	4320      	orrs	r0, r4
 8003282:	f003 0310 	and.w	r3, r3, #16
 8003286:	4318      	orrs	r0, r3
 8003288:	f3c2 13c0 	ubfx	r3, r2, #7, #1
 800328c:	f342 0106 	sbfx	r1, r2, #0, #7
 8003290:	4318      	orrs	r0, r3
 8003292:	f3c2 134a 	ubfx	r3, r2, #5, #11
 8003296:	0049      	lsls	r1, r1, #1
 8003298:	f003 0302 	and.w	r3, r3, #2
 800329c:	4318      	orrs	r0, r3
 800329e:	f001 0320 	and.w	r3, r1, #32
 80032a2:	4318      	orrs	r0, r3
 80032a4:	4b05      	ldr	r3, [pc, #20]	; (80032bc <FT245RL_read_data+0x7c>)
 80032a6:	f001 0140 	and.w	r1, r1, #64	; 0x40
 80032aa:	0112      	lsls	r2, r2, #4
 80032ac:	4308      	orrs	r0, r1
 80032ae:	4013      	ands	r3, r2
 80032b0:	4318      	orrs	r0, r3
 80032b2:	b2c0      	uxtb	r0, r0
 80032b4:	bd10      	pop	{r4, pc}
 80032b6:	bf00      	nop
 80032b8:	40010000 	andmi	r0, r1, r0
 80032bc:	000fff80 	andeq	pc, pc, r0, lsl #31

080032c0 <FT245RL_data_available>:
 80032c0:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80032c4:	b508      	push	{r3, lr}
 80032c6:	4803      	ldr	r0, [pc, #12]	; (80032d4 <FT245RL_data_available+0x14>)
 80032c8:	f001 fe2c 	bl	8004f24 <gpio_input_bit_get>
 80032cc:	fab0 f080 	clz	r0, r0
 80032d0:	0940      	lsrs	r0, r0, #5
 80032d2:	bd08      	pop	{r3, pc}
 80032d4:	40010800 	andmi	r0, r1, r0, lsl #16

080032d8 <FT245RL_can_write>:
 80032d8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80032dc:	b508      	push	{r3, lr}
 80032de:	4803      	ldr	r0, [pc, #12]	; (80032ec <FT245RL_can_write+0x14>)
 80032e0:	f001 fe20 	bl	8004f24 <gpio_input_bit_get>
 80032e4:	fab0 f080 	clz	r0, r0
 80032e8:	0940      	lsrs	r0, r0, #5
 80032ea:	bd08      	pop	{r3, pc}
 80032ec:	40010800 	andmi	r0, r1, r0, lsl #16

080032f0 <RDMDevice::RDMDevice()>:
 80032f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80032f2:	4b35      	ldr	r3, [pc, #212]	; (80033c8 <RDMDevice::RDMDevice()+0xd8>)
 80032f4:	4a35      	ldr	r2, [pc, #212]	; (80033cc <RDMDevice::RDMDevice()+0xdc>)
 80032f6:	7859      	ldrb	r1, [r3, #1]
 80032f8:	4604      	mov	r4, r0
 80032fa:	f880 1050 	strb.w	r1, [r0, #80]	; 0x50
 80032fe:	7818      	ldrb	r0, [r3, #0]
 8003300:	2300      	movs	r3, #0
 8003302:	4615      	mov	r5, r2
 8003304:	f884 0051 	strb.w	r0, [r4, #81]	; 0x51
 8003308:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800330c:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 8003310:	f8a4 3074 	strh.w	r3, [r4, #116]	; 0x74
 8003314:	67a3      	str	r3, [r4, #120]	; 0x78
 8003316:	4613      	mov	r3, r2
 8003318:	781e      	ldrb	r6, [r3, #0]
 800331a:	3201      	adds	r2, #1
 800331c:	2e00      	cmp	r6, #0
 800331e:	d1fa      	bne.n	8003316 <RDMDevice::RDMDevice()+0x26>
 8003320:	1b5b      	subs	r3, r3, r5
 8003322:	2b20      	cmp	r3, #32
 8003324:	bf28      	it	cs
 8003326:	2320      	movcs	r3, #32
 8003328:	f104 052b 	add.w	r5, r4, #43	; 0x2b
 800332c:	462e      	mov	r6, r5
 800332e:	461a      	mov	r2, r3
 8003330:	4f26      	ldr	r7, [pc, #152]	; (80033cc <RDMDevice::RDMDevice()+0xdc>)
 8003332:	3a01      	subs	r2, #1
 8003334:	d304      	bcc.n	8003340 <RDMDevice::RDMDevice()+0x50>
 8003336:	f817 cb01 	ldrb.w	ip, [r7], #1
 800333a:	f806 cb01 	strb.w	ip, [r6], #1
 800333e:	e7f8      	b.n	8003332 <RDMDevice::RDMDevice()+0x42>
 8003340:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 8003344:	4b22      	ldr	r3, [pc, #136]	; (80033d0 <RDMDevice::RDMDevice()+0xe0>)
 8003346:	7020      	strb	r0, [r4, #0]
 8003348:	7061      	strb	r1, [r4, #1]
 800334a:	6818      	ldr	r0, [r3, #0]
 800334c:	4669      	mov	r1, sp
 800334e:	f000 fbd5 	bl	8003afc <Network::MacAddressCopyTo(unsigned char*)>
 8003352:	f89d 3002 	ldrb.w	r3, [sp, #2]
 8003356:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800335a:	70a3      	strb	r3, [r4, #2]
 800335c:	7263      	strb	r3, [r4, #9]
 800335e:	4b1d      	ldr	r3, [pc, #116]	; (80033d4 <RDMDevice::RDMDevice()+0xe4>)
 8003360:	70e2      	strb	r2, [r4, #3]
 8003362:	7222      	strb	r2, [r4, #8]
 8003364:	461a      	mov	r2, r3
 8003366:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800336a:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800336e:	7121      	strb	r1, [r4, #4]
 8003370:	7160      	strb	r0, [r4, #5]
 8003372:	71a0      	strb	r0, [r4, #6]
 8003374:	71e1      	strb	r1, [r4, #7]
 8003376:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800337a:	2900      	cmp	r1, #0
 800337c:	d1fb      	bne.n	8003376 <RDMDevice::RDMDevice()+0x86>
 800337e:	1a9b      	subs	r3, r3, r2
 8003380:	2b20      	cmp	r3, #32
 8003382:	bf28      	it	cs
 8003384:	2320      	movcs	r3, #32
 8003386:	461a      	mov	r2, r3
 8003388:	4912      	ldr	r1, [pc, #72]	; (80033d4 <RDMDevice::RDMDevice()+0xe4>)
 800338a:	3a01      	subs	r2, #1
 800338c:	d304      	bcc.n	8003398 <RDMDevice::RDMDevice()+0xa8>
 800338e:	f811 0b01 	ldrb.w	r0, [r1], #1
 8003392:	f805 0b01 	strb.w	r0, [r5], #1
 8003396:	e7f8      	b.n	800338a <RDMDevice::RDMDevice()+0x9a>
 8003398:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800339c:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 80033a0:	64e3      	str	r3, [r4, #76]	; 0x4c
 80033a2:	2314      	movs	r3, #20
 80033a4:	4a0c      	ldr	r2, [pc, #48]	; (80033d8 <RDMDevice::RDMDevice()+0xe8>)
 80033a6:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 80033aa:	f104 0067 	add.w	r0, r4, #103	; 0x67
 80033ae:	f104 0353 	add.w	r3, r4, #83	; 0x53
 80033b2:	4298      	cmp	r0, r3
 80033b4:	d004      	beq.n	80033c0 <RDMDevice::RDMDevice()+0xd0>
 80033b6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80033ba:	f803 1b01 	strb.w	r1, [r3], #1
 80033be:	e7f8      	b.n	80033b2 <RDMDevice::RDMDevice()+0xc2>
 80033c0:	4620      	mov	r0, r4
 80033c2:	b003      	add	sp, #12
 80033c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80033c6:	bf00      	nop
 80033c8:	0800597b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r8, fp, ip, lr}
 80033cc:	0800597d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, fp, ip, lr}
 80033d0:	20001768 	andcs	r1, r0, r8, ror #14
 80033d4:	08005952 	stmdaeq	r0, {r1, r4, r6, r8, fp, ip, lr}
 80033d8:	08005966 	stmdaeq	r0, {r1, r2, r5, r6, r8, fp, ip, lr}

080033dc <memcpy.isra.0>:
 80033dc:	f000 bf48 	b.w	8004270 <memcpy>

080033e0 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 80033e0:	b510      	push	{r4, lr}
 80033e2:	6001      	str	r1, [r0, #0]
 80033e4:	2100      	movs	r1, #0
 80033e6:	4604      	mov	r4, r0
 80033e8:	6041      	str	r1, [r0, #4]
 80033ea:	2220      	movs	r2, #32
 80033ec:	3008      	adds	r0, #8
 80033ee:	f000 ff4a 	bl	8004286 <memset>
 80033f2:	4b03      	ldr	r3, [pc, #12]	; (8003400 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 80033f4:	4620      	mov	r0, r4
 80033f6:	62a3      	str	r3, [r4, #40]	; 0x28
 80033f8:	237f      	movs	r3, #127	; 0x7f
 80033fa:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80033fe:	bd10      	pop	{r4, pc}
 8003400:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

08003404 <RDMDeviceParams::Load()>:
 8003404:	4601      	mov	r1, r0
 8003406:	6800      	ldr	r0, [r0, #0]
 8003408:	b130      	cbz	r0, 8003418 <RDMDeviceParams::Load()+0x14>
 800340a:	b508      	push	{r3, lr}
 800340c:	6803      	ldr	r3, [r0, #0]
 800340e:	3104      	adds	r1, #4
 8003410:	68db      	ldr	r3, [r3, #12]
 8003412:	4798      	blx	r3
 8003414:	2001      	movs	r0, #1
 8003416:	bd08      	pop	{r3, pc}
 8003418:	4770      	bx	lr

0800341a <RDMDeviceParams::Set(RDMDevice*)>:
 800341a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800341c:	6843      	ldr	r3, [r0, #4]
 800341e:	460c      	mov	r4, r1
 8003420:	07d9      	lsls	r1, r3, #31
 8003422:	4605      	mov	r5, r0
 8003424:	d518      	bpl.n	8003458 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 8003426:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800342a:	f894 3052 	ldrb.w	r3, [r4, #82]	; 0x52
 800342e:	2e20      	cmp	r6, #32
 8003430:	bf28      	it	cs
 8003432:	2620      	movcs	r6, #32
 8003434:	f100 0108 	add.w	r1, r0, #8
 8003438:	b1e3      	cbz	r3, 8003474 <RDMDeviceParams::Set(RDMDevice*)+0x5a>
 800343a:	f104 070a 	add.w	r7, r4, #10
 800343e:	4638      	mov	r0, r7
 8003440:	4632      	mov	r2, r6
 8003442:	f7ff ffcb 	bl	80033dc <memcpy.isra.0>
 8003446:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 8003448:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 800344c:	b120      	cbz	r0, 8003458 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800344e:	6803      	ldr	r3, [r0, #0]
 8003450:	4632      	mov	r2, r6
 8003452:	4639      	mov	r1, r7
 8003454:	689b      	ldr	r3, [r3, #8]
 8003456:	4798      	blx	r3
 8003458:	686b      	ldr	r3, [r5, #4]
 800345a:	079a      	lsls	r2, r3, #30
 800345c:	bf44      	itt	mi
 800345e:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 8003462:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 8003466:	075b      	lsls	r3, r3, #29
 8003468:	bf44      	itt	mi
 800346a:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800346e:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 8003472:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003474:	4632      	mov	r2, r6
 8003476:	f104 0053 	add.w	r0, r4, #83	; 0x53
 800347a:	f7ff ffaf 	bl	80033dc <memcpy.isra.0>
 800347e:	f884 6073 	strb.w	r6, [r4, #115]	; 0x73
 8003482:	e7e9      	b.n	8003458 <RDMDeviceParams::Set(RDMDevice*)+0x3e>

08003484 <RDMDeviceParams::Dump()>:
 8003484:	4770      	bx	lr
	...

08003488 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 8003488:	2300      	movs	r3, #0
 800348a:	2020      	movs	r0, #32
 800348c:	b510      	push	{r4, lr}
 800348e:	4a04      	ldr	r2, [pc, #16]	; (80034a0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 8003490:	428b      	cmp	r3, r1
 8003492:	d004      	beq.n	800349e <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x16>
 8003494:	f852 4b04 	ldr.w	r4, [r2], #4
 8003498:	3301      	adds	r3, #1
 800349a:	4420      	add	r0, r4
 800349c:	e7f8      	b.n	8003490 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800349e:	bd10      	pop	{r4, pc}
 80034a0:	0800599c 	stmdaeq	r0, {r2, r3, r4, r7, r8, fp, ip, lr}

080034a4 <SpiFlashStore::Init()>:
 80034a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80034a8:	f8df 8120 	ldr.w	r8, [pc, #288]	; 80035cc <SpiFlashStore::Init()+0x128>
 80034ac:	4607      	mov	r7, r0
 80034ae:	b085      	sub	sp, #20
 80034b0:	f8d8 0000 	ldr.w	r0, [r8]
 80034b4:	f000 fa48 	bl	8003948 <FlashRom::GetSectorSize()>
 80034b8:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 80034bc:	4605      	mov	r5, r0
 80034be:	f040 8083 	bne.w	80035c8 <SpiFlashStore::Init()+0x124>
 80034c2:	f8d8 0000 	ldr.w	r0, [r8]
 80034c6:	f000 fa37 	bl	8003938 <FlashRom::GetSize()>
 80034ca:	4b41      	ldr	r3, [pc, #260]	; (80035d0 <SpiFlashStore::Init()+0x12c>)
 80034cc:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 80034d0:	f3c1 060b 	ubfx	r6, r1, #0, #12
 80034d4:	6019      	str	r1, [r3, #0]
 80034d6:	2e00      	cmp	r6, #0
 80034d8:	d176      	bne.n	80035c8 <SpiFlashStore::Init()+0x124>
 80034da:	4c3e      	ldr	r4, [pc, #248]	; (80035d4 <SpiFlashStore::Init()+0x130>)
 80034dc:	ab03      	add	r3, sp, #12
 80034de:	9300      	str	r3, [sp, #0]
 80034e0:	462a      	mov	r2, r5
 80034e2:	4623      	mov	r3, r4
 80034e4:	f8d8 0000 	ldr.w	r0, [r8]
 80034e8:	f000 fa31 	bl	800394e <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 80034ec:	7823      	ldrb	r3, [r4, #0]
 80034ee:	2b41      	cmp	r3, #65	; 0x41
 80034f0:	bf1c      	itt	ne
 80034f2:	2341      	movne	r3, #65	; 0x41
 80034f4:	7023      	strbne	r3, [r4, #0]
 80034f6:	7863      	ldrb	r3, [r4, #1]
 80034f8:	bf14      	ite	ne
 80034fa:	4635      	movne	r5, r6
 80034fc:	2501      	moveq	r5, #1
 80034fe:	2b76      	cmp	r3, #118	; 0x76
 8003500:	bf1c      	itt	ne
 8003502:	2376      	movne	r3, #118	; 0x76
 8003504:	7063      	strbne	r3, [r4, #1]
 8003506:	78a3      	ldrb	r3, [r4, #2]
 8003508:	bf18      	it	ne
 800350a:	2500      	movne	r5, #0
 800350c:	2b56      	cmp	r3, #86	; 0x56
 800350e:	bf1c      	itt	ne
 8003510:	2356      	movne	r3, #86	; 0x56
 8003512:	70a3      	strbne	r3, [r4, #2]
 8003514:	78e3      	ldrb	r3, [r4, #3]
 8003516:	bf18      	it	ne
 8003518:	2500      	movne	r5, #0
 800351a:	2b10      	cmp	r3, #16
 800351c:	d01c      	beq.n	8003558 <SpiFlashStore::Init()+0xb4>
 800351e:	2310      	movs	r3, #16
 8003520:	70e3      	strb	r3, [r4, #3]
 8003522:	2201      	movs	r2, #1
 8003524:	2500      	movs	r5, #0
 8003526:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800352a:	4b2b      	ldr	r3, [pc, #172]	; (80035d8 <SpiFlashStore::Init()+0x134>)
 800352c:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 80035dc <SpiFlashStore::Init()+0x138>
 8003530:	701a      	strb	r2, [r3, #0]
 8003532:	4631      	mov	r1, r6
 8003534:	4638      	mov	r0, r7
 8003536:	f7ff ffa7 	bl	8003488 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800353a:	1823      	adds	r3, r4, r0
 800353c:	5425      	strb	r5, [r4, r0]
 800353e:	705d      	strb	r5, [r3, #1]
 8003540:	709d      	strb	r5, [r3, #2]
 8003542:	70dd      	strb	r5, [r3, #3]
 8003544:	f858 3b04 	ldr.w	r3, [r8], #4
 8003548:	1d02      	adds	r2, r0, #4
 800354a:	4403      	add	r3, r0
 800354c:	4293      	cmp	r3, r2
 800354e:	d931      	bls.n	80035b4 <SpiFlashStore::Init()+0x110>
 8003550:	f804 9002 	strb.w	r9, [r4, r2]
 8003554:	3201      	adds	r2, #1
 8003556:	e7f9      	b.n	800354c <SpiFlashStore::Init()+0xa8>
 8003558:	2d00      	cmp	r5, #0
 800355a:	d0e2      	beq.n	8003522 <SpiFlashStore::Init()+0x7e>
 800355c:	f04f 0900 	mov.w	r9, #0
 8003560:	46c8      	mov	r8, r9
 8003562:	f8df a07c 	ldr.w	sl, [pc, #124]	; 80035e0 <SpiFlashStore::Init()+0x13c>
 8003566:	f8da b000 	ldr.w	fp, [sl]
 800356a:	4631      	mov	r1, r6
 800356c:	4638      	mov	r0, r7
 800356e:	f7ff ff8b 	bl	8003488 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8003572:	5c23      	ldrb	r3, [r4, r0]
 8003574:	2bff      	cmp	r3, #255	; 0xff
 8003576:	d114      	bne.n	80035a2 <SpiFlashStore::Init()+0xfe>
 8003578:	1823      	adds	r3, r4, r0
 800357a:	785a      	ldrb	r2, [r3, #1]
 800357c:	2aff      	cmp	r2, #255	; 0xff
 800357e:	d110      	bne.n	80035a2 <SpiFlashStore::Init()+0xfe>
 8003580:	789a      	ldrb	r2, [r3, #2]
 8003582:	2aff      	cmp	r2, #255	; 0xff
 8003584:	d10d      	bne.n	80035a2 <SpiFlashStore::Init()+0xfe>
 8003586:	78da      	ldrb	r2, [r3, #3]
 8003588:	2aff      	cmp	r2, #255	; 0xff
 800358a:	d10a      	bne.n	80035a2 <SpiFlashStore::Init()+0xfe>
 800358c:	46a9      	mov	r9, r5
 800358e:	f04f 0b01 	mov.w	fp, #1
 8003592:	f804 8000 	strb.w	r8, [r4, r0]
 8003596:	f883 8001 	strb.w	r8, [r3, #1]
 800359a:	f883 8002 	strb.w	r8, [r3, #2]
 800359e:	f883 8003 	strb.w	r8, [r3, #3]
 80035a2:	3601      	adds	r6, #1
 80035a4:	2e1c      	cmp	r6, #28
 80035a6:	d1e0      	bne.n	800356a <SpiFlashStore::Init()+0xc6>
 80035a8:	f1b9 0f00 	cmp.w	r9, #0
 80035ac:	d008      	beq.n	80035c0 <SpiFlashStore::Init()+0x11c>
 80035ae:	f8ca b000 	str.w	fp, [sl]
 80035b2:	e005      	b.n	80035c0 <SpiFlashStore::Init()+0x11c>
 80035b4:	3601      	adds	r6, #1
 80035b6:	2e1c      	cmp	r6, #28
 80035b8:	d1bb      	bne.n	8003532 <SpiFlashStore::Init()+0x8e>
 80035ba:	2501      	movs	r5, #1
 80035bc:	4b08      	ldr	r3, [pc, #32]	; (80035e0 <SpiFlashStore::Init()+0x13c>)
 80035be:	601d      	str	r5, [r3, #0]
 80035c0:	4628      	mov	r0, r5
 80035c2:	b005      	add	sp, #20
 80035c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80035c8:	2500      	movs	r5, #0
 80035ca:	e7f9      	b.n	80035c0 <SpiFlashStore::Init()+0x11c>
 80035cc:	20001750 	andcs	r1, r0, r0, asr r7
 80035d0:	20001730 	andcs	r1, r0, r0, lsr r7
 80035d4:	20000730 	andcs	r0, r0, r0, lsr r7
 80035d8:	20001744 	andcs	r1, r0, r4, asr #14
 80035dc:	0800599c 	stmdaeq	r0, {r2, r3, r4, r7, r8, fp, ip, lr}
 80035e0:	2000173c 	andcs	r1, r0, ip, lsr r7

080035e4 <SpiFlashStore::SpiFlashStore()>:
 80035e4:	b538      	push	{r3, r4, r5, lr}
 80035e6:	4b0d      	ldr	r3, [pc, #52]	; (800361c <SpiFlashStore::SpiFlashStore()+0x38>)
 80035e8:	4604      	mov	r4, r0
 80035ea:	6018      	str	r0, [r3, #0]
 80035ec:	4b0c      	ldr	r3, [pc, #48]	; (8003620 <SpiFlashStore::SpiFlashStore()+0x3c>)
 80035ee:	4d0d      	ldr	r5, [pc, #52]	; (8003624 <SpiFlashStore::SpiFlashStore()+0x40>)
 80035f0:	681b      	ldr	r3, [r3, #0]
 80035f2:	781b      	ldrb	r3, [r3, #0]
 80035f4:	b113      	cbz	r3, 80035fc <SpiFlashStore::SpiFlashStore()+0x18>
 80035f6:	f7ff ff55 	bl	80034a4 <SpiFlashStore::Init()>
 80035fa:	7028      	strb	r0, [r5, #0]
 80035fc:	782b      	ldrb	r3, [r5, #0]
 80035fe:	b153      	cbz	r3, 8003616 <SpiFlashStore::SpiFlashStore()+0x32>
 8003600:	2320      	movs	r3, #32
 8003602:	2200      	movs	r2, #0
 8003604:	4908      	ldr	r1, [pc, #32]	; (8003628 <SpiFlashStore::SpiFlashStore()+0x44>)
 8003606:	f851 0b04 	ldr.w	r0, [r1], #4
 800360a:	3201      	adds	r2, #1
 800360c:	2a1c      	cmp	r2, #28
 800360e:	4403      	add	r3, r0
 8003610:	d1f9      	bne.n	8003606 <SpiFlashStore::SpiFlashStore()+0x22>
 8003612:	4a06      	ldr	r2, [pc, #24]	; (800362c <SpiFlashStore::SpiFlashStore()+0x48>)
 8003614:	6013      	str	r3, [r2, #0]
 8003616:	4620      	mov	r0, r4
 8003618:	bd38      	pop	{r3, r4, r5, pc}
 800361a:	bf00      	nop
 800361c:	20001740 	andcs	r1, r0, r0, asr #14
 8003620:	20001750 	andcs	r1, r0, r0, asr r7
 8003624:	20001734 	andcs	r1, r0, r4, lsr r7
 8003628:	0800599c 	stmdaeq	r0, {r2, r3, r4, r7, r8, fp, ip, lr}
 800362c:	20001738 	andcs	r1, r0, r8, lsr r7

08003630 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 8003630:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003634:	461c      	mov	r4, r3
 8003636:	4b19      	ldr	r3, [pc, #100]	; (800369c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 8003638:	4615      	mov	r5, r2
 800363a:	781f      	ldrb	r7, [r3, #0]
 800363c:	9e07      	ldr	r6, [sp, #28]
 800363e:	b35f      	cbz	r7, 8003698 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 8003640:	f7ff ff22 	bl	8003488 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8003644:	f04f 0c00 	mov.w	ip, #0
 8003648:	4a15      	ldr	r2, [pc, #84]	; (80036a0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800364a:	1941      	adds	r1, r0, r5
 800364c:	1e63      	subs	r3, r4, #1
 800364e:	9c06      	ldr	r4, [sp, #24]
 8003650:	4411      	add	r1, r2
 8003652:	440c      	add	r4, r1
 8003654:	42a1      	cmp	r1, r4
 8003656:	d00a      	beq.n	800366e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3e>
 8003658:	f891 8000 	ldrb.w	r8, [r1]
 800365c:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 8003660:	3101      	adds	r1, #1
 8003662:	45f0      	cmp	r8, lr
 8003664:	bf1c      	itt	ne
 8003666:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800366a:	46bc      	movne	ip, r7
 800366c:	e7f2      	b.n	8003654 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800366e:	f1bc 0f00 	cmp.w	ip, #0
 8003672:	d011      	beq.n	8003698 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 8003674:	4b0b      	ldr	r3, [pc, #44]	; (80036a4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 8003676:	6819      	ldr	r1, [r3, #0]
 8003678:	b109      	cbz	r1, 800367e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x4e>
 800367a:	2906      	cmp	r1, #6
 800367c:	d101      	bne.n	8003682 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800367e:	2101      	movs	r1, #1
 8003680:	6019      	str	r1, [r3, #0]
 8003682:	4b09      	ldr	r3, [pc, #36]	; (80036a8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 8003684:	6819      	ldr	r1, [r3, #0]
 8003686:	4b09      	ldr	r3, [pc, #36]	; (80036ac <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 8003688:	6019      	str	r1, [r3, #0]
 800368a:	b12d      	cbz	r5, 8003698 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800368c:	b126      	cbz	r6, 8003698 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800368e:	9b08      	ldr	r3, [sp, #32]
 8003690:	4418      	add	r0, r3
 8003692:	5813      	ldr	r3, [r2, r0]
 8003694:	4333      	orrs	r3, r6
 8003696:	5013      	str	r3, [r2, r0]
 8003698:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800369c:	20001734 	andcs	r1, r0, r4, lsr r7
 80036a0:	20000730 	andcs	r0, r0, r0, lsr r7
 80036a4:	2000173c 	andcs	r1, r0, ip, lsr r7
 80036a8:	20001818 	andcs	r1, r0, r8, lsl r8
 80036ac:	2000072c 	andcs	r0, r0, ip, lsr #14

080036b0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 80036b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80036b4:	461d      	mov	r5, r3
 80036b6:	4b15      	ldr	r3, [pc, #84]	; (800370c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x5c>)
 80036b8:	b085      	sub	sp, #20
 80036ba:	781b      	ldrb	r3, [r3, #0]
 80036bc:	4607      	mov	r7, r0
 80036be:	4688      	mov	r8, r1
 80036c0:	4614      	mov	r4, r2
 80036c2:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80036c6:	b1eb      	cbz	r3, 8003704 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 80036c8:	f7ff fede 	bl	8003488 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 80036cc:	4910      	ldr	r1, [pc, #64]	; (8003710 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x60>)
 80036ce:	4a11      	ldr	r2, [pc, #68]	; (8003714 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x64>)
 80036d0:	7809      	ldrb	r1, [r1, #0]
 80036d2:	eb00 0309 	add.w	r3, r0, r9
 80036d6:	189e      	adds	r6, r3, r2
 80036d8:	b951      	cbnz	r1, 80036f0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 80036da:	589b      	ldr	r3, [r3, r2]
 80036dc:	b143      	cbz	r3, 80036f0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 80036de:	3c01      	subs	r4, #1
 80036e0:	4435      	add	r5, r6
 80036e2:	42b5      	cmp	r5, r6
 80036e4:	d00e      	beq.n	8003704 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 80036e6:	f816 3b01 	ldrb.w	r3, [r6], #1
 80036ea:	f804 3f01 	strb.w	r3, [r4, #1]!
 80036ee:	e7f8      	b.n	80036e2 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x32>
 80036f0:	2300      	movs	r3, #0
 80036f2:	464a      	mov	r2, r9
 80036f4:	e9cd 3301 	strd	r3, r3, [sp, #4]
 80036f8:	4641      	mov	r1, r8
 80036fa:	4623      	mov	r3, r4
 80036fc:	4638      	mov	r0, r7
 80036fe:	9500      	str	r5, [sp, #0]
 8003700:	f7ff ff96 	bl	8003630 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8003704:	b005      	add	sp, #20
 8003706:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800370a:	bf00      	nop
 800370c:	20001734 	andcs	r1, r0, r4, lsr r7
 8003710:	20001744 	andcs	r1, r0, r4, asr #14
 8003714:	20000730 	andcs	r0, r0, r0, lsr r7

08003718 <SpiFlashStore::Flash()>:
 8003718:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800371a:	4c25      	ldr	r4, [pc, #148]	; (80037b0 <SpiFlashStore::Flash()+0x98>)
 800371c:	6820      	ldr	r0, [r4, #0]
 800371e:	2800      	cmp	r0, #0
 8003720:	d043      	beq.n	80037aa <SpiFlashStore::Flash()+0x92>
 8003722:	3801      	subs	r0, #1
 8003724:	2805      	cmp	r0, #5
 8003726:	d831      	bhi.n	800378c <SpiFlashStore::Flash()+0x74>
 8003728:	e8df f000 	tbb	[pc, r0]
 800372c:	2e140b03 	vnmlscs.f64	d0, d4, d3
 8003730:	4b203025 	blmi	880f7cc <__exidx_end+0x809920>
 8003734:	681a      	ldr	r2, [r3, #0]
 8003736:	4b20      	ldr	r3, [pc, #128]	; (80037b8 <SpiFlashStore::Flash()+0xa0>)
 8003738:	601a      	str	r2, [r3, #0]
 800373a:	2302      	movs	r3, #2
 800373c:	6023      	str	r3, [r4, #0]
 800373e:	2001      	movs	r0, #1
 8003740:	e033      	b.n	80037aa <SpiFlashStore::Flash()+0x92>
 8003742:	4b1c      	ldr	r3, [pc, #112]	; (80037b4 <SpiFlashStore::Flash()+0x9c>)
 8003744:	4a1c      	ldr	r2, [pc, #112]	; (80037b8 <SpiFlashStore::Flash()+0xa0>)
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	6812      	ldr	r2, [r2, #0]
 800374a:	1a9b      	subs	r3, r3, r2
 800374c:	2b63      	cmp	r3, #99	; 0x63
 800374e:	d9f6      	bls.n	800373e <SpiFlashStore::Flash()+0x26>
 8003750:	2303      	movs	r3, #3
 8003752:	e7f3      	b.n	800373c <SpiFlashStore::Flash()+0x24>
 8003754:	4919      	ldr	r1, [pc, #100]	; (80037bc <SpiFlashStore::Flash()+0xa4>)
 8003756:	481a      	ldr	r0, [pc, #104]	; (80037c0 <SpiFlashStore::Flash()+0xa8>)
 8003758:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800375c:	6809      	ldr	r1, [r1, #0]
 800375e:	6800      	ldr	r0, [r0, #0]
 8003760:	ab03      	add	r3, sp, #12
 8003762:	f000 f903 	bl	800396c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 8003766:	2800      	cmp	r0, #0
 8003768:	d0e9      	beq.n	800373e <SpiFlashStore::Flash()+0x26>
 800376a:	4b12      	ldr	r3, [pc, #72]	; (80037b4 <SpiFlashStore::Flash()+0x9c>)
 800376c:	681a      	ldr	r2, [r3, #0]
 800376e:	4b12      	ldr	r3, [pc, #72]	; (80037b8 <SpiFlashStore::Flash()+0xa0>)
 8003770:	601a      	str	r2, [r3, #0]
 8003772:	2305      	movs	r3, #5
 8003774:	e7e2      	b.n	800373c <SpiFlashStore::Flash()+0x24>
 8003776:	4b0f      	ldr	r3, [pc, #60]	; (80037b4 <SpiFlashStore::Flash()+0x9c>)
 8003778:	4a0f      	ldr	r2, [pc, #60]	; (80037b8 <SpiFlashStore::Flash()+0xa0>)
 800377a:	681b      	ldr	r3, [r3, #0]
 800377c:	6812      	ldr	r2, [r2, #0]
 800377e:	1a9b      	subs	r3, r3, r2
 8003780:	2b63      	cmp	r3, #99	; 0x63
 8003782:	d9dc      	bls.n	800373e <SpiFlashStore::Flash()+0x26>
 8003784:	2304      	movs	r3, #4
 8003786:	e7d9      	b.n	800373c <SpiFlashStore::Flash()+0x24>
 8003788:	2306      	movs	r3, #6
 800378a:	e7d7      	b.n	800373c <SpiFlashStore::Flash()+0x24>
 800378c:	ab03      	add	r3, sp, #12
 800378e:	4a0d      	ldr	r2, [pc, #52]	; (80037c4 <SpiFlashStore::Flash()+0xac>)
 8003790:	490a      	ldr	r1, [pc, #40]	; (80037bc <SpiFlashStore::Flash()+0xa4>)
 8003792:	480b      	ldr	r0, [pc, #44]	; (80037c0 <SpiFlashStore::Flash()+0xa8>)
 8003794:	9300      	str	r3, [sp, #0]
 8003796:	6812      	ldr	r2, [r2, #0]
 8003798:	4b0b      	ldr	r3, [pc, #44]	; (80037c8 <SpiFlashStore::Flash()+0xb0>)
 800379a:	6809      	ldr	r1, [r1, #0]
 800379c:	6800      	ldr	r0, [r0, #0]
 800379e:	f000 f939 	bl	8003a14 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 80037a2:	2800      	cmp	r0, #0
 80037a4:	d0cb      	beq.n	800373e <SpiFlashStore::Flash()+0x26>
 80037a6:	2000      	movs	r0, #0
 80037a8:	6020      	str	r0, [r4, #0]
 80037aa:	b004      	add	sp, #16
 80037ac:	bd10      	pop	{r4, pc}
 80037ae:	bf00      	nop
 80037b0:	2000173c 	andcs	r1, r0, ip, lsr r7
 80037b4:	20001818 	andcs	r1, r0, r8, lsl r8
 80037b8:	2000072c 	andcs	r0, r0, ip, lsr #14
 80037bc:	20001730 	andcs	r1, r0, r0, lsr r7
 80037c0:	20001750 	andcs	r1, r0, r0, asr r7
 80037c4:	20001738 	andcs	r1, r0, r8, lsr r7
 80037c8:	20000730 	andcs	r0, r0, r0, lsr r7

080037cc <StoreRDMDevice::~StoreRDMDevice()>:
 80037cc:	4770      	bx	lr

080037ce <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 80037ce:	3804      	subs	r0, #4
 80037d0:	4770      	bx	lr
	...

080037d4 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 80037d4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80037d6:	2200      	movs	r2, #0
 80037d8:	460b      	mov	r3, r1
 80037da:	2129      	movs	r1, #41	; 0x29
 80037dc:	e9cd 2201 	strd	r2, r2, [sp, #4]
 80037e0:	4804      	ldr	r0, [pc, #16]	; (80037f4 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 80037e2:	9100      	str	r1, [sp, #0]
 80037e4:	6800      	ldr	r0, [r0, #0]
 80037e6:	210b      	movs	r1, #11
 80037e8:	f7ff ff22 	bl	8003630 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80037ec:	b005      	add	sp, #20
 80037ee:	f85d fb04 	ldr.w	pc, [sp], #4
 80037f2:	bf00      	nop
 80037f4:	20001740 	andcs	r1, r0, r0, asr #14

080037f8 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 80037f8:	b570      	push	{r4, r5, r6, lr}
 80037fa:	2401      	movs	r4, #1
 80037fc:	2600      	movs	r6, #0
 80037fe:	4d0c      	ldr	r5, [pc, #48]	; (8003830 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 8003800:	b086      	sub	sp, #24
 8003802:	460b      	mov	r3, r1
 8003804:	6828      	ldr	r0, [r5, #0]
 8003806:	f88d 2017 	strb.w	r2, [sp, #23]
 800380a:	9200      	str	r2, [sp, #0]
 800380c:	210b      	movs	r1, #11
 800380e:	2204      	movs	r2, #4
 8003810:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8003814:	f7ff ff0c 	bl	8003630 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8003818:	2224      	movs	r2, #36	; 0x24
 800381a:	210b      	movs	r1, #11
 800381c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8003820:	6828      	ldr	r0, [r5, #0]
 8003822:	9400      	str	r4, [sp, #0]
 8003824:	f10d 0317 	add.w	r3, sp, #23
 8003828:	f7ff ff02 	bl	8003630 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800382c:	b006      	add	sp, #24
 800382e:	bd70      	pop	{r4, r5, r6, pc}
 8003830:	20001740 	andcs	r1, r0, r0, asr #14

08003834 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8003834:	f1a0 0004 	sub.w	r0, r0, #4
 8003838:	e7de      	b.n	80037f8 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 800383a:	bf00      	nop

0800383c <StoreRDMDevice::~StoreRDMDevice()>:
 800383c:	b510      	push	{r4, lr}
 800383e:	4604      	mov	r4, r0
 8003840:	f000 fca2 	bl	8004188 <operator delete(void*)>
 8003844:	4620      	mov	r0, r4
 8003846:	bd10      	pop	{r4, pc}

08003848 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8003848:	f1a0 0004 	sub.w	r0, r0, #4
 800384c:	e7f6      	b.n	800383c <StoreRDMDevice::~StoreRDMDevice()>
	...

08003850 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 8003850:	2300      	movs	r3, #0
 8003852:	b507      	push	{r0, r1, r2, lr}
 8003854:	4805      	ldr	r0, [pc, #20]	; (800386c <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x1c>)
 8003856:	9300      	str	r3, [sp, #0]
 8003858:	460a      	mov	r2, r1
 800385a:	2329      	movs	r3, #41	; 0x29
 800385c:	210b      	movs	r1, #11
 800385e:	6800      	ldr	r0, [r0, #0]
 8003860:	f7ff ff26 	bl	80036b0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 8003864:	b003      	add	sp, #12
 8003866:	f85d fb04 	ldr.w	pc, [sp], #4
 800386a:	bf00      	nop
 800386c:	20001740 	andcs	r1, r0, r0, asr #14

08003870 <StoreRDMDevice::StoreRDMDevice()>:
 8003870:	4a03      	ldr	r2, [pc, #12]	; (8003880 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 8003872:	6002      	str	r2, [r0, #0]
 8003874:	321c      	adds	r2, #28
 8003876:	6042      	str	r2, [r0, #4]
 8003878:	4a02      	ldr	r2, [pc, #8]	; (8003884 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 800387a:	6010      	str	r0, [r2, #0]
 800387c:	4770      	bx	lr
 800387e:	bf00      	nop
 8003880:	08005a14 	stmdaeq	r0, {r2, r4, r9, fp, ip, lr}
 8003884:	20001748 	andcs	r1, r0, r8, asr #14

08003888 <StoreWidget::~StoreWidget()>:
 8003888:	4770      	bx	lr

0800388a <non-virtual thunk to StoreWidget::~StoreWidget()>:
 800388a:	3804      	subs	r0, #4
 800388c:	4770      	bx	lr
	...

08003890 <StoreWidget::Update(TWidgetParams const*)>:
 8003890:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003892:	2200      	movs	r2, #0
 8003894:	460b      	mov	r3, r1
 8003896:	210c      	movs	r1, #12
 8003898:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800389c:	4804      	ldr	r0, [pc, #16]	; (80038b0 <StoreWidget::Update(TWidgetParams const*)+0x20>)
 800389e:	9100      	str	r1, [sp, #0]
 80038a0:	6800      	ldr	r0, [r0, #0]
 80038a2:	210a      	movs	r1, #10
 80038a4:	f7ff fec4 	bl	8003630 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80038a8:	b005      	add	sp, #20
 80038aa:	f85d fb04 	ldr.w	pc, [sp], #4
 80038ae:	bf00      	nop
 80038b0:	20001740 	andcs	r1, r0, r0, asr #14

080038b4 <StoreWidget::~StoreWidget()>:
 80038b4:	b510      	push	{r4, lr}
 80038b6:	4604      	mov	r4, r0
 80038b8:	f000 fc66 	bl	8004188 <operator delete(void*)>
 80038bc:	4620      	mov	r0, r4
 80038be:	bd10      	pop	{r4, pc}

080038c0 <non-virtual thunk to StoreWidget::~StoreWidget()>:
 80038c0:	f1a0 0004 	sub.w	r0, r0, #4
 80038c4:	e7f6      	b.n	80038b4 <StoreWidget::~StoreWidget()>
	...

080038c8 <StoreWidget::Copy(TWidgetParams*)>:
 80038c8:	2300      	movs	r3, #0
 80038ca:	b507      	push	{r0, r1, r2, lr}
 80038cc:	4805      	ldr	r0, [pc, #20]	; (80038e4 <StoreWidget::Copy(TWidgetParams*)+0x1c>)
 80038ce:	9300      	str	r3, [sp, #0]
 80038d0:	460a      	mov	r2, r1
 80038d2:	230c      	movs	r3, #12
 80038d4:	210a      	movs	r1, #10
 80038d6:	6800      	ldr	r0, [r0, #0]
 80038d8:	f7ff feea 	bl	80036b0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 80038dc:	b003      	add	sp, #12
 80038de:	f85d fb04 	ldr.w	pc, [sp], #4
 80038e2:	bf00      	nop
 80038e4:	20001740 	andcs	r1, r0, r0, asr #14

080038e8 <StoreWidget::StoreWidget()>:
 80038e8:	4a03      	ldr	r2, [pc, #12]	; (80038f8 <StoreWidget::StoreWidget()+0x10>)
 80038ea:	6002      	str	r2, [r0, #0]
 80038ec:	3224      	adds	r2, #36	; 0x24
 80038ee:	6042      	str	r2, [r0, #4]
 80038f0:	4a02      	ldr	r2, [pc, #8]	; (80038fc <StoreWidget::StoreWidget()+0x14>)
 80038f2:	6010      	str	r0, [r2, #0]
 80038f4:	4770      	bx	lr
 80038f6:	bf00      	nop
 80038f8:	08005a44 	stmdaeq	r0, {r2, r6, r9, fp, ip, lr}
 80038fc:	2000174c 	andcs	r1, r0, ip, asr #14

08003900 <FlashRom::FlashRom()>:
 8003900:	4b09      	ldr	r3, [pc, #36]	; (8003928 <FlashRom::FlashRom()+0x28>)
 8003902:	b510      	push	{r4, lr}
 8003904:	6018      	str	r0, [r3, #0]
 8003906:	2301      	movs	r3, #1
 8003908:	4604      	mov	r4, r0
 800390a:	7003      	strb	r3, [r0, #0]
 800390c:	4b07      	ldr	r3, [pc, #28]	; (800392c <FlashRom::FlashRom()+0x2c>)
 800390e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8003912:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8003916:	4906      	ldr	r1, [pc, #24]	; (8003930 <FlashRom::FlashRom()+0x30>)
 8003918:	b29b      	uxth	r3, r3
 800391a:	029b      	lsls	r3, r3, #10
 800391c:	4805      	ldr	r0, [pc, #20]	; (8003934 <FlashRom::FlashRom()+0x34>)
 800391e:	f7fe f88f 	bl	8001a40 <printf>
 8003922:	4620      	mov	r0, r4
 8003924:	bd10      	pop	{r4, pc}
 8003926:	bf00      	nop
 8003928:	20001750 	andcs	r1, r0, r0, asr r7
 800392c:	1ffff700 	svcne	0x00fff700
 8003930:	08005a7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, fp, ip, lr}
 8003934:	08005a81 	stmdaeq	r0, {r0, r7, r9, fp, ip, lr}

08003938 <FlashRom::GetSize()>:
 8003938:	4b02      	ldr	r3, [pc, #8]	; (8003944 <FlashRom::GetSize()+0xc>)
 800393a:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800393e:	b280      	uxth	r0, r0
 8003940:	0280      	lsls	r0, r0, #10
 8003942:	4770      	bx	lr
 8003944:	1ffff700 	svcne	0x00fff700

08003948 <FlashRom::GetSectorSize()>:
 8003948:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800394c:	4770      	bx	lr

0800394e <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800394e:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8003952:	441a      	add	r2, r3
 8003954:	4293      	cmp	r3, r2
 8003956:	d004      	beq.n	8003962 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 8003958:	f851 0b04 	ldr.w	r0, [r1], #4
 800395c:	f843 0b04 	str.w	r0, [r3], #4
 8003960:	e7f8      	b.n	8003954 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>
 8003962:	2200      	movs	r2, #0
 8003964:	9b00      	ldr	r3, [sp, #0]
 8003966:	2001      	movs	r0, #1
 8003968:	601a      	str	r2, [r3, #0]
 800396a:	4770      	bx	lr

0800396c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800396c:	2000      	movs	r0, #0
 800396e:	b538      	push	{r3, r4, r5, lr}
 8003970:	4c24      	ldr	r4, [pc, #144]	; (8003a04 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x98>)
 8003972:	6018      	str	r0, [r3, #0]
 8003974:	6823      	ldr	r3, [r4, #0]
 8003976:	2b04      	cmp	r3, #4
 8003978:	d81d      	bhi.n	80039b6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x4a>
 800397a:	e8df f003 	tbb	[pc, r3]
 800397e:	3b220d03 	blcc	8886d92 <__exidx_end+0x880ee6>
 8003982:	4b200040 	blmi	8803a8a <__exidx_end+0x7fdbde>
 8003986:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800398a:	6019      	str	r1, [r3, #0]
 800398c:	4b1f      	ldr	r3, [pc, #124]	; (8003a0c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xa0>)
 800398e:	601a      	str	r2, [r3, #0]
 8003990:	f001 fa10 	bl	8004db4 <fmc_bank0_unlock>
 8003994:	2301      	movs	r3, #1
 8003996:	e011      	b.n	80039bc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x50>
 8003998:	f001 fa22 	bl	8004de0 <fmc_bank0_state_get>
 800399c:	2801      	cmp	r0, #1
 800399e:	d00e      	beq.n	80039be <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x52>
 80039a0:	4a1b      	ldr	r2, [pc, #108]	; (8003a10 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xa4>)
 80039a2:	6913      	ldr	r3, [r2, #16]
 80039a4:	f023 0302 	bic.w	r3, r3, #2
 80039a8:	6113      	str	r3, [r2, #16]
 80039aa:	4b18      	ldr	r3, [pc, #96]	; (8003a0c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xa0>)
 80039ac:	681d      	ldr	r5, [r3, #0]
 80039ae:	b925      	cbnz	r5, 80039ba <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x4e>
 80039b0:	f001 fa0e 	bl	8004dd0 <fmc_bank0_lock>
 80039b4:	6025      	str	r5, [r4, #0]
 80039b6:	2001      	movs	r0, #1
 80039b8:	e023      	b.n	8003a02 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x96>
 80039ba:	2302      	movs	r3, #2
 80039bc:	6023      	str	r3, [r4, #0]
 80039be:	2000      	movs	r0, #0
 80039c0:	e01f      	b.n	8003a02 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x96>
 80039c2:	4912      	ldr	r1, [pc, #72]	; (8003a0c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xa0>)
 80039c4:	680b      	ldr	r3, [r1, #0]
 80039c6:	2b00      	cmp	r3, #0
 80039c8:	d0e4      	beq.n	8003994 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x28>
 80039ca:	4b11      	ldr	r3, [pc, #68]	; (8003a10 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xa4>)
 80039cc:	691a      	ldr	r2, [r3, #16]
 80039ce:	f042 0202 	orr.w	r2, r2, #2
 80039d2:	611a      	str	r2, [r3, #16]
 80039d4:	4a0c      	ldr	r2, [pc, #48]	; (8003a08 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9c>)
 80039d6:	6810      	ldr	r0, [r2, #0]
 80039d8:	6158      	str	r0, [r3, #20]
 80039da:	6918      	ldr	r0, [r3, #16]
 80039dc:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 80039e0:	6118      	str	r0, [r3, #16]
 80039e2:	680b      	ldr	r3, [r1, #0]
 80039e4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80039e8:	600b      	str	r3, [r1, #0]
 80039ea:	6813      	ldr	r3, [r2, #0]
 80039ec:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80039f0:	6013      	str	r3, [r2, #0]
 80039f2:	e7cf      	b.n	8003994 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x28>
 80039f4:	4a06      	ldr	r2, [pc, #24]	; (8003a10 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xa4>)
 80039f6:	6913      	ldr	r3, [r2, #16]
 80039f8:	f023 0301 	bic.w	r3, r3, #1
 80039fc:	6113      	str	r3, [r2, #16]
 80039fe:	2000      	movs	r0, #0
 8003a00:	6020      	str	r0, [r4, #0]
 8003a02:	bd38      	pop	{r3, r4, r5, pc}
 8003a04:	20001758 	andcs	r1, r0, r8, asr r7
 8003a08:	2000175c 	andcs	r1, r0, ip, asr r7
 8003a0c:	20001764 	andcs	r1, r0, r4, ror #14
 8003a10:	40022000 	andmi	r2, r2, r0

08003a14 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 8003a14:	b570      	push	{r4, r5, r6, lr}
 8003a16:	2400      	movs	r4, #0
 8003a18:	9804      	ldr	r0, [sp, #16]
 8003a1a:	6004      	str	r4, [r0, #0]
 8003a1c:	4c2a      	ldr	r4, [pc, #168]	; (8003ac8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xb4>)
 8003a1e:	6820      	ldr	r0, [r4, #0]
 8003a20:	2804      	cmp	r0, #4
 8003a22:	d81f      	bhi.n	8003a64 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x50>
 8003a24:	e8df f000 	tbb	[pc, r0]
 8003a28:	0f4d4803 	svceq	0x004d4803
 8003a2c:	48270024 	stmdami	r7!, {r2, r5}
 8003a30:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8003a34:	6001      	str	r1, [r0, #0]
 8003a36:	4926      	ldr	r1, [pc, #152]	; (8003ad0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xbc>)
 8003a38:	600b      	str	r3, [r1, #0]
 8003a3a:	4b26      	ldr	r3, [pc, #152]	; (8003ad4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xc0>)
 8003a3c:	601a      	str	r2, [r3, #0]
 8003a3e:	f001 f9b9 	bl	8004db4 <fmc_bank0_unlock>
 8003a42:	2303      	movs	r3, #3
 8003a44:	e011      	b.n	8003a6a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x56>
 8003a46:	f001 f9cb 	bl	8004de0 <fmc_bank0_state_get>
 8003a4a:	2801      	cmp	r0, #1
 8003a4c:	d00e      	beq.n	8003a6c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x58>
 8003a4e:	4a22      	ldr	r2, [pc, #136]	; (8003ad8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xc4>)
 8003a50:	6913      	ldr	r3, [r2, #16]
 8003a52:	f023 0301 	bic.w	r3, r3, #1
 8003a56:	6113      	str	r3, [r2, #16]
 8003a58:	4b1e      	ldr	r3, [pc, #120]	; (8003ad4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xc0>)
 8003a5a:	681d      	ldr	r5, [r3, #0]
 8003a5c:	b925      	cbnz	r5, 8003a68 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x54>
 8003a5e:	f001 f9b7 	bl	8004dd0 <fmc_bank0_lock>
 8003a62:	6025      	str	r5, [r4, #0]
 8003a64:	2001      	movs	r0, #1
 8003a66:	e02e      	b.n	8003ac6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xb2>
 8003a68:	2304      	movs	r3, #4
 8003a6a:	6023      	str	r3, [r4, #0]
 8003a6c:	2000      	movs	r0, #0
 8003a6e:	e02a      	b.n	8003ac6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xb2>
 8003a70:	4b18      	ldr	r3, [pc, #96]	; (8003ad4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xc0>)
 8003a72:	681a      	ldr	r2, [r3, #0]
 8003a74:	2a03      	cmp	r2, #3
 8003a76:	d912      	bls.n	8003a9e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x8a>
 8003a78:	4917      	ldr	r1, [pc, #92]	; (8003ad8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xc4>)
 8003a7a:	4d15      	ldr	r5, [pc, #84]	; (8003ad0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xbc>)
 8003a7c:	690a      	ldr	r2, [r1, #16]
 8003a7e:	4813      	ldr	r0, [pc, #76]	; (8003acc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xb8>)
 8003a80:	f042 0201 	orr.w	r2, r2, #1
 8003a84:	610a      	str	r2, [r1, #16]
 8003a86:	6829      	ldr	r1, [r5, #0]
 8003a88:	6802      	ldr	r2, [r0, #0]
 8003a8a:	f851 6b04 	ldr.w	r6, [r1], #4
 8003a8e:	f842 6b04 	str.w	r6, [r2], #4
 8003a92:	6002      	str	r2, [r0, #0]
 8003a94:	681a      	ldr	r2, [r3, #0]
 8003a96:	6029      	str	r1, [r5, #0]
 8003a98:	3a04      	subs	r2, #4
 8003a9a:	601a      	str	r2, [r3, #0]
 8003a9c:	e7d1      	b.n	8003a42 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x2e>
 8003a9e:	2a00      	cmp	r2, #0
 8003aa0:	d0cf      	beq.n	8003a42 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x2e>
 8003aa2:	4a0d      	ldr	r2, [pc, #52]	; (8003ad8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xc4>)
 8003aa4:	6913      	ldr	r3, [r2, #16]
 8003aa6:	f043 0301 	orr.w	r3, r3, #1
 8003aaa:	6113      	str	r3, [r2, #16]
 8003aac:	4a08      	ldr	r2, [pc, #32]	; (8003ad0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xbc>)
 8003aae:	4b07      	ldr	r3, [pc, #28]	; (8003acc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xb8>)
 8003ab0:	6812      	ldr	r2, [r2, #0]
 8003ab2:	681b      	ldr	r3, [r3, #0]
 8003ab4:	6812      	ldr	r2, [r2, #0]
 8003ab6:	e7f0      	b.n	8003a9a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x86>
 8003ab8:	4a07      	ldr	r2, [pc, #28]	; (8003ad8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xc4>)
 8003aba:	6913      	ldr	r3, [r2, #16]
 8003abc:	f023 0302 	bic.w	r3, r3, #2
 8003ac0:	6113      	str	r3, [r2, #16]
 8003ac2:	2000      	movs	r0, #0
 8003ac4:	6020      	str	r0, [r4, #0]
 8003ac6:	bd70      	pop	{r4, r5, r6, pc}
 8003ac8:	20001758 	andcs	r1, r0, r8, asr r7
 8003acc:	20001754 	andcs	r1, r0, r4, asr r7
 8003ad0:	20001760 	andcs	r1, r0, r0, ror #14
 8003ad4:	20001764 	andcs	r1, r0, r4, ror #14
 8003ad8:	40022000 	andmi	r2, r2, r0

08003adc <Network::Network()>:
 8003adc:	4b05      	ldr	r3, [pc, #20]	; (8003af4 <Network::Network()+0x18>)
 8003ade:	4906      	ldr	r1, [pc, #24]	; (8003af8 <Network::Network()+0x1c>)
 8003ae0:	6018      	str	r0, [r3, #0]
 8003ae2:	1e42      	subs	r2, r0, #1
 8003ae4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003ae8:	f802 3f01 	strb.w	r3, [r2, #1]!
 8003aec:	2b00      	cmp	r3, #0
 8003aee:	d1f9      	bne.n	8003ae4 <Network::Network()+0x8>
 8003af0:	4770      	bx	lr
 8003af2:	bf00      	nop
 8003af4:	20001768 	andcs	r1, r0, r8, ror #14
 8003af8:	08005ab1 	stmdaeq	r0, {r0, r4, r5, r7, r9, fp, ip, lr}

08003afc <Network::MacAddressCopyTo(unsigned char*)>:
 8003afc:	4608      	mov	r0, r1
 8003afe:	f000 bf27 	b.w	8004950 <mac_address_get>

08003b02 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8003b02:	e9c0 1200 	strd	r1, r2, [r0]
 8003b06:	4770      	bx	lr

08003b08 <ReadConfigFile::~ReadConfigFile()>:
 8003b08:	4770      	bx	lr

08003b0a <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8003b0a:	b538      	push	{r3, r4, r5, lr}
 8003b0c:	4615      	mov	r5, r2
 8003b0e:	f000 f819 	bl	8003b44 <Sscan::checkName(char const*, char const*)>
 8003b12:	b198      	cbz	r0, 8003b3c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8003b14:	4604      	mov	r4, r0
 8003b16:	2100      	movs	r1, #0
 8003b18:	220a      	movs	r2, #10
 8003b1a:	7823      	ldrb	r3, [r4, #0]
 8003b1c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8003b20:	2809      	cmp	r0, #9
 8003b22:	d80d      	bhi.n	8003b40 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8003b24:	fb02 3101 	mla	r1, r2, r1, r3
 8003b28:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8003b2c:	3930      	subs	r1, #48	; 0x30
 8003b2e:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8003b32:	d1f2      	bne.n	8003b1a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 8003b34:	29ff      	cmp	r1, #255	; 0xff
 8003b36:	d803      	bhi.n	8003b40 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8003b38:	7029      	strb	r1, [r5, #0]
 8003b3a:	bd38      	pop	{r3, r4, r5, pc}
 8003b3c:	2001      	movs	r0, #1
 8003b3e:	e7fc      	b.n	8003b3a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8003b40:	2002      	movs	r0, #2
 8003b42:	e7fa      	b.n	8003b3a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08003b44 <Sscan::checkName(char const*, char const*)>:
 8003b44:	4603      	mov	r3, r0
 8003b46:	b510      	push	{r4, lr}
 8003b48:	3901      	subs	r1, #1
 8003b4a:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8003b4e:	461c      	mov	r4, r3
 8003b50:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003b54:	b120      	cbz	r0, 8003b60 <Sscan::checkName(char const*, char const*)+0x1c>
 8003b56:	b10a      	cbz	r2, 8003b5c <Sscan::checkName(char const*, char const*)+0x18>
 8003b58:	4290      	cmp	r0, r2
 8003b5a:	d0f6      	beq.n	8003b4a <Sscan::checkName(char const*, char const*)+0x6>
 8003b5c:	2000      	movs	r0, #0
 8003b5e:	e006      	b.n	8003b6e <Sscan::checkName(char const*, char const*)+0x2a>
 8003b60:	2a3d      	cmp	r2, #61	; 0x3d
 8003b62:	d104      	bne.n	8003b6e <Sscan::checkName(char const*, char const*)+0x2a>
 8003b64:	7860      	ldrb	r0, [r4, #1]
 8003b66:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8003b6a:	d000      	beq.n	8003b6e <Sscan::checkName(char const*, char const*)+0x2a>
 8003b6c:	1c60      	adds	r0, r4, #1
 8003b6e:	bd10      	pop	{r4, pc}

08003b70 <Display::Detect(DisplayType)>:
 8003b70:	2902      	cmp	r1, #2
 8003b72:	b538      	push	{r3, r4, r5, lr}
 8003b74:	4604      	mov	r4, r0
 8003b76:	d014      	beq.n	8003ba2 <Display::Detect(DisplayType)+0x32>
 8003b78:	2904      	cmp	r1, #4
 8003b7a:	d01b      	beq.n	8003bb4 <Display::Detect(DisplayType)+0x44>
 8003b7c:	6860      	ldr	r0, [r4, #4]
 8003b7e:	b168      	cbz	r0, 8003b9c <Display::Detect(DisplayType)+0x2c>
 8003b80:	6803      	ldr	r3, [r0, #0]
 8003b82:	689b      	ldr	r3, [r3, #8]
 8003b84:	4798      	blx	r3
 8003b86:	4603      	mov	r3, r0
 8003b88:	6860      	ldr	r0, [r4, #4]
 8003b8a:	b9ab      	cbnz	r3, 8003bb8 <Display::Detect(DisplayType)+0x48>
 8003b8c:	b110      	cbz	r0, 8003b94 <Display::Detect(DisplayType)+0x24>
 8003b8e:	6803      	ldr	r3, [r0, #0]
 8003b90:	685b      	ldr	r3, [r3, #4]
 8003b92:	4798      	blx	r3
 8003b94:	2304      	movs	r3, #4
 8003b96:	2200      	movs	r2, #0
 8003b98:	e9c4 3200 	strd	r3, r2, [r4]
 8003b9c:	2300      	movs	r3, #0
 8003b9e:	6123      	str	r3, [r4, #16]
 8003ba0:	e010      	b.n	8003bc4 <Display::Detect(DisplayType)+0x54>
 8003ba2:	2018      	movs	r0, #24
 8003ba4:	f000 faf2 	bl	800418c <operator new(unsigned int)>
 8003ba8:	4605      	mov	r5, r0
 8003baa:	2100      	movs	r1, #0
 8003bac:	f000 f8ea 	bl	8003d84 <Ssd1306::Ssd1306(TOledPanel)>
 8003bb0:	6065      	str	r5, [r4, #4]
 8003bb2:	e7e3      	b.n	8003b7c <Display::Detect(DisplayType)+0xc>
 8003bb4:	6001      	str	r1, [r0, #0]
 8003bb6:	e7e1      	b.n	8003b7c <Display::Detect(DisplayType)+0xc>
 8003bb8:	6803      	ldr	r3, [r0, #0]
 8003bba:	68db      	ldr	r3, [r3, #12]
 8003bbc:	4798      	blx	r3
 8003bbe:	6863      	ldr	r3, [r4, #4]
 8003bc0:	2b00      	cmp	r3, #0
 8003bc2:	d0eb      	beq.n	8003b9c <Display::Detect(DisplayType)+0x2c>
 8003bc4:	bd38      	pop	{r3, r4, r5, pc}
	...

08003bc8 <Display::PrintInfo()>:
 8003bc8:	6840      	ldr	r0, [r0, #4]
 8003bca:	b910      	cbnz	r0, 8003bd2 <Display::PrintInfo()+0xa>
 8003bcc:	4802      	ldr	r0, [pc, #8]	; (8003bd8 <Display::PrintInfo()+0x10>)
 8003bce:	f000 bb7f 	b.w	80042d0 <puts>
 8003bd2:	6803      	ldr	r3, [r0, #0]
 8003bd4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003bd6:	4718      	bx	r3
 8003bd8:	08005ab4 	stmdaeq	r0, {r2, r4, r5, r7, r9, fp, ip, lr}

08003bdc <Display::Display()>:
 8003bdc:	2300      	movs	r3, #0
 8003bde:	2204      	movs	r2, #4
 8003be0:	b510      	push	{r4, lr}
 8003be2:	4604      	mov	r4, r0
 8003be4:	e9c0 2300 	strd	r2, r3, [r0]
 8003be8:	7203      	strb	r3, [r0, #8]
 8003bea:	4b0b      	ldr	r3, [pc, #44]	; (8003c18 <Display::Display()+0x3c>)
 8003bec:	3014      	adds	r0, #20
 8003bee:	681b      	ldr	r3, [r3, #0]
 8003bf0:	f840 3c08 	str.w	r3, [r0, #-8]
 8003bf4:	4b09      	ldr	r3, [pc, #36]	; (8003c1c <Display::Display()+0x40>)
 8003bf6:	f840 3c04 	str.w	r3, [r0, #-4]
 8003bfa:	f000 f831 	bl	8003c60 <Display7Segment::Display7Segment()>
 8003bfe:	4b08      	ldr	r3, [pc, #32]	; (8003c20 <Display::Display()+0x44>)
 8003c00:	601c      	str	r4, [r3, #0]
 8003c02:	6863      	ldr	r3, [r4, #4]
 8003c04:	b91b      	cbnz	r3, 8003c0e <Display::Display()+0x32>
 8003c06:	2102      	movs	r1, #2
 8003c08:	4620      	mov	r0, r4
 8003c0a:	f7ff ffb1 	bl	8003b70 <Display::Detect(DisplayType)>
 8003c0e:	4620      	mov	r0, r4
 8003c10:	f7ff ffda 	bl	8003bc8 <Display::PrintInfo()>
 8003c14:	4620      	mov	r0, r4
 8003c16:	bd10      	pop	{r4, pc}
 8003c18:	20001818 	andcs	r1, r0, r8, lsl r8
 8003c1c:	000493e0 	andeq	r9, r4, r0, ror #7
 8003c20:	2000176c 	andcs	r1, r0, ip, ror #14

08003c24 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8003c24:	b513      	push	{r0, r1, r4, lr}
 8003c26:	4604      	mov	r4, r0
 8003c28:	0a13      	lsrs	r3, r2, #8
 8003c2a:	7800      	ldrb	r0, [r0, #0]
 8003c2c:	f88d 1004 	strb.w	r1, [sp, #4]
 8003c30:	f88d 3005 	strb.w	r3, [sp, #5]
 8003c34:	f88d 2006 	strb.w	r2, [sp, #6]
 8003c38:	f000 fc6e 	bl	8004518 <gd32_i2c_set_address>
 8003c3c:	6860      	ldr	r0, [r4, #4]
 8003c3e:	f000 fc63 	bl	8004508 <gd32_i2c_set_baudrate>
 8003c42:	2103      	movs	r1, #3
 8003c44:	a801      	add	r0, sp, #4
 8003c46:	f000 fc6d 	bl	8004524 <gd32_i2c_write>
 8003c4a:	b002      	add	sp, #8
 8003c4c:	bd10      	pop	{r4, pc}

08003c4e <Display7Segment::Status(Display7SegmentMessage)>:
 8003c4e:	b508      	push	{r3, lr}
 8003c50:	7a03      	ldrb	r3, [r0, #8]
 8003c52:	b123      	cbz	r3, 8003c5e <Display7Segment::Status(Display7SegmentMessage)+0x10>
 8003c54:	43c9      	mvns	r1, r1
 8003c56:	b28a      	uxth	r2, r1
 8003c58:	2112      	movs	r1, #18
 8003c5a:	f7ff ffe3 	bl	8003c24 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8003c5e:	bd08      	pop	{r3, pc}

08003c60 <Display7Segment::Display7Segment()>:
 8003c60:	b570      	push	{r4, r5, r6, lr}
 8003c62:	4604      	mov	r4, r0
 8003c64:	2500      	movs	r5, #0
 8003c66:	2021      	movs	r0, #33	; 0x21
 8003c68:	4e0f      	ldr	r6, [pc, #60]	; (8003ca8 <Display7Segment::Display7Segment()+0x48>)
 8003c6a:	4b10      	ldr	r3, [pc, #64]	; (8003cac <Display7Segment::Display7Segment()+0x4c>)
 8003c6c:	7020      	strb	r0, [r4, #0]
 8003c6e:	6066      	str	r6, [r4, #4]
 8003c70:	7225      	strb	r5, [r4, #8]
 8003c72:	601c      	str	r4, [r3, #0]
 8003c74:	f000 fc50 	bl	8004518 <gd32_i2c_set_address>
 8003c78:	4630      	mov	r0, r6
 8003c7a:	f000 fc45 	bl	8004508 <gd32_i2c_set_baudrate>
 8003c7e:	4629      	mov	r1, r5
 8003c80:	4628      	mov	r0, r5
 8003c82:	f000 fc4f 	bl	8004524 <gd32_i2c_write>
 8003c86:	1e02      	subs	r2, r0, #0
 8003c88:	bf0c      	ite	eq
 8003c8a:	2301      	moveq	r3, #1
 8003c8c:	462b      	movne	r3, r5
 8003c8e:	7223      	strb	r3, [r4, #8]
 8003c90:	d108      	bne.n	8003ca4 <Display7Segment::Display7Segment()+0x44>
 8003c92:	4611      	mov	r1, r2
 8003c94:	4620      	mov	r0, r4
 8003c96:	f7ff ffc5 	bl	8003c24 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8003c9a:	f44f 517c 	mov.w	r1, #16128	; 0x3f00
 8003c9e:	4620      	mov	r0, r4
 8003ca0:	f7ff ffd5 	bl	8003c4e <Display7Segment::Status(Display7SegmentMessage)>
 8003ca4:	4620      	mov	r0, r4
 8003ca6:	bd70      	pop	{r4, r5, r6, pc}
 8003ca8:	00061a80 	andeq	r1, r6, r0, lsl #21
 8003cac:	20001770 	andcs	r1, r0, r0, ror r7

08003cb0 <Ssd1306::~Ssd1306()>:
 8003cb0:	4770      	bx	lr

08003cb2 <Ssd1306::SetCursor(unsigned int)>:
 8003cb2:	4770      	bx	lr

08003cb4 <Ssd1306::PrintInfo()>:
 8003cb4:	b410      	push	{r4}
 8003cb6:	4906      	ldr	r1, [pc, #24]	; (8003cd0 <Ssd1306::PrintInfo()+0x1c>)
 8003cb8:	7c44      	ldrb	r4, [r0, #17]
 8003cba:	7903      	ldrb	r3, [r0, #4]
 8003cbc:	7942      	ldrb	r2, [r0, #5]
 8003cbe:	4805      	ldr	r0, [pc, #20]	; (8003cd4 <Ssd1306::PrintInfo()+0x20>)
 8003cc0:	2c00      	cmp	r4, #0
 8003cc2:	bf08      	it	eq
 8003cc4:	4601      	moveq	r1, r0
 8003cc6:	4804      	ldr	r0, [pc, #16]	; (8003cd8 <Ssd1306::PrintInfo()+0x24>)
 8003cc8:	bc10      	pop	{r4}
 8003cca:	f7fd beb9 	b.w	8001a40 <printf>
 8003cce:	bf00      	nop
 8003cd0:	08005ac5 	stmdaeq	r0, {r0, r2, r6, r7, r9, fp, ip, lr}
 8003cd4:	08005acc 	stmdaeq	r0, {r2, r3, r6, r7, r9, fp, ip, lr}
 8003cd8:	08005ad4 	stmdaeq	r0, {r2, r4, r6, r7, r9, fp, ip, lr}

08003cdc <Ssd1306::~Ssd1306()>:
 8003cdc:	b510      	push	{r4, lr}
 8003cde:	4604      	mov	r4, r0
 8003ce0:	f000 fa52 	bl	8004188 <operator delete(void*)>
 8003ce4:	4620      	mov	r0, r4
 8003ce6:	bd10      	pop	{r4, pc}

08003ce8 <HAL_I2C::Setup()>:
 8003ce8:	b510      	push	{r4, lr}
 8003cea:	4604      	mov	r4, r0
 8003cec:	7800      	ldrb	r0, [r0, #0]
 8003cee:	f000 fc13 	bl	8004518 <gd32_i2c_set_address>
 8003cf2:	6860      	ldr	r0, [r4, #4]
 8003cf4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003cf8:	f000 bc06 	b.w	8004508 <gd32_i2c_set_baudrate>

08003cfc <Ssd1306::PutChar(int)>:
 8003cfc:	b510      	push	{r4, lr}
 8003cfe:	f1a1 0420 	sub.w	r4, r1, #32
 8003d02:	2c5f      	cmp	r4, #95	; 0x5f
 8003d04:	bf88      	it	hi
 8003d06:	2400      	movhi	r4, #0
 8003d08:	3008      	adds	r0, #8
 8003d0a:	f7ff ffed 	bl	8003ce8 <HAL_I2C::Setup()>
 8003d0e:	4804      	ldr	r0, [pc, #16]	; (8003d20 <Ssd1306::PutChar(int)+0x24>)
 8003d10:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8003d14:	4420      	add	r0, r4
 8003d16:	2107      	movs	r1, #7
 8003d18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003d1c:	f000 bc02 	b.w	8004524 <gd32_i2c_write>
 8003d20:	08005ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp, ip, lr}

08003d24 <Ssd1306::PutString(char const*)>:
 8003d24:	b538      	push	{r3, r4, r5, lr}
 8003d26:	4605      	mov	r5, r0
 8003d28:	1e4c      	subs	r4, r1, #1
 8003d2a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8003d2e:	b119      	cbz	r1, 8003d38 <Ssd1306::PutString(char const*)+0x14>
 8003d30:	4628      	mov	r0, r5
 8003d32:	f7ff ffe3 	bl	8003cfc <Ssd1306::PutChar(int)>
 8003d36:	e7f8      	b.n	8003d2a <Ssd1306::PutString(char const*)+0x6>
 8003d38:	bd38      	pop	{r3, r4, r5, pc}

08003d3a <Ssd1306::Text(char const*, unsigned int)>:
 8003d3a:	b570      	push	{r4, r5, r6, lr}
 8003d3c:	7903      	ldrb	r3, [r0, #4]
 8003d3e:	4605      	mov	r5, r0
 8003d40:	460c      	mov	r4, r1
 8003d42:	4293      	cmp	r3, r2
 8003d44:	bf94      	ite	ls
 8003d46:	18ce      	addls	r6, r1, r3
 8003d48:	188e      	addhi	r6, r1, r2
 8003d4a:	42b4      	cmp	r4, r6
 8003d4c:	d005      	beq.n	8003d5a <Ssd1306::Text(char const*, unsigned int)+0x20>
 8003d4e:	4628      	mov	r0, r5
 8003d50:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003d54:	f7ff ffd2 	bl	8003cfc <Ssd1306::PutChar(int)>
 8003d58:	e7f7      	b.n	8003d4a <Ssd1306::Text(char const*, unsigned int)+0x10>
 8003d5a:	bd70      	pop	{r4, r5, r6, pc}

08003d5c <Ssd1306::InitMembers()>:
 8003d5c:	7c03      	ldrb	r3, [r0, #16]
 8003d5e:	b12b      	cbz	r3, 8003d6c <Ssd1306::InitMembers()+0x10>
 8003d60:	3b01      	subs	r3, #1
 8003d62:	2b01      	cmp	r3, #1
 8003d64:	d908      	bls.n	8003d78 <Ssd1306::InitMembers()+0x1c>
 8003d66:	f640 0315 	movw	r3, #2069	; 0x815
 8003d6a:	e007      	b.n	8003d7c <Ssd1306::InitMembers()+0x20>
 8003d6c:	f640 0315 	movw	r3, #2069	; 0x815
 8003d70:	8083      	strh	r3, [r0, #4]
 8003d72:	2308      	movs	r3, #8
 8003d74:	6143      	str	r3, [r0, #20]
 8003d76:	4770      	bx	lr
 8003d78:	f240 4315 	movw	r3, #1045	; 0x415
 8003d7c:	8083      	strh	r3, [r0, #4]
 8003d7e:	2304      	movs	r3, #4
 8003d80:	e7f8      	b.n	8003d74 <Ssd1306::InitMembers()+0x18>
	...

08003d84 <Ssd1306::Ssd1306(TOledPanel)>:
 8003d84:	4a08      	ldr	r2, [pc, #32]	; (8003da8 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8003d86:	b508      	push	{r3, lr}
 8003d88:	6002      	str	r2, [r0, #0]
 8003d8a:	227f      	movs	r2, #127	; 0x7f
 8003d8c:	80c2      	strh	r2, [r0, #6]
 8003d8e:	223c      	movs	r2, #60	; 0x3c
 8003d90:	7202      	strb	r2, [r0, #8]
 8003d92:	4a06      	ldr	r2, [pc, #24]	; (8003dac <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8003d94:	7401      	strb	r1, [r0, #16]
 8003d96:	60c2      	str	r2, [r0, #12]
 8003d98:	2200      	movs	r2, #0
 8003d9a:	7442      	strb	r2, [r0, #17]
 8003d9c:	4a04      	ldr	r2, [pc, #16]	; (8003db0 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8003d9e:	6010      	str	r0, [r2, #0]
 8003da0:	f7ff ffdc 	bl	8003d5c <Ssd1306::InitMembers()>
 8003da4:	bd08      	pop	{r3, pc}
 8003da6:	bf00      	nop
 8003da8:	08005dc0 	stmdaeq	r0, {r6, r7, r8, sl, fp, ip, lr}
 8003dac:	00061a80 	andeq	r1, r6, r0, lsl #21
 8003db0:	200017fc 	strdcs	r1, [r0], -ip

08003db4 <Ssd1306::SendCommand(unsigned char)>:
 8003db4:	2300      	movs	r3, #0
 8003db6:	b507      	push	{r0, r1, r2, lr}
 8003db8:	3008      	adds	r0, #8
 8003dba:	f88d 3004 	strb.w	r3, [sp, #4]
 8003dbe:	f88d 1005 	strb.w	r1, [sp, #5]
 8003dc2:	f7ff ff91 	bl	8003ce8 <HAL_I2C::Setup()>
 8003dc6:	2102      	movs	r1, #2
 8003dc8:	a801      	add	r0, sp, #4
 8003dca:	f000 fbab 	bl	8004524 <gd32_i2c_write>
 8003dce:	b003      	add	sp, #12
 8003dd0:	f85d fb04 	ldr.w	pc, [sp], #4

08003dd4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8003dd4:	2914      	cmp	r1, #20
 8003dd6:	b570      	push	{r4, r5, r6, lr}
 8003dd8:	4605      	mov	r5, r0
 8003dda:	4616      	mov	r6, r2
 8003ddc:	d81c      	bhi.n	8003e18 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8003dde:	7943      	ldrb	r3, [r0, #5]
 8003de0:	4293      	cmp	r3, r2
 8003de2:	d919      	bls.n	8003e18 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8003de4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8003de8:	7c43      	ldrb	r3, [r0, #17]
 8003dea:	004c      	lsls	r4, r1, #1
 8003dec:	b2e4      	uxtb	r4, r4
 8003dee:	b10b      	cbz	r3, 8003df4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8003df0:	3404      	adds	r4, #4
 8003df2:	b2e4      	uxtb	r4, r4
 8003df4:	4628      	mov	r0, r5
 8003df6:	f004 010e 	and.w	r1, r4, #14
 8003dfa:	f7ff ffdb 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003dfe:	0921      	lsrs	r1, r4, #4
 8003e00:	4628      	mov	r0, r5
 8003e02:	f041 0110 	orr.w	r1, r1, #16
 8003e06:	f7ff ffd5 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003e0a:	4628      	mov	r0, r5
 8003e0c:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8003e10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003e14:	f7ff bfce 	b.w	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003e18:	bd70      	pop	{r4, r5, r6, pc}

08003e1a <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8003e1a:	b570      	push	{r4, r5, r6, lr}
 8003e1c:	4604      	mov	r4, r0
 8003e1e:	4615      	mov	r5, r2
 8003e20:	461e      	mov	r6, r3
 8003e22:	b171      	cbz	r1, 8003e42 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8003e24:	7943      	ldrb	r3, [r0, #5]
 8003e26:	428b      	cmp	r3, r1
 8003e28:	d30b      	bcc.n	8003e42 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8003e2a:	3901      	subs	r1, #1
 8003e2c:	b2ca      	uxtb	r2, r1
 8003e2e:	2100      	movs	r1, #0
 8003e30:	f7ff ffd0 	bl	8003dd4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003e34:	4632      	mov	r2, r6
 8003e36:	4629      	mov	r1, r5
 8003e38:	4620      	mov	r0, r4
 8003e3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003e3e:	f7ff bf7c 	b.w	8003d3a <Ssd1306::Text(char const*, unsigned int)>
 8003e42:	bd70      	pop	{r4, r5, r6, pc}

08003e44 <Ssd1306::ClearLine(unsigned char)>:
 8003e44:	b538      	push	{r3, r4, r5, lr}
 8003e46:	4605      	mov	r5, r0
 8003e48:	b1b9      	cbz	r1, 8003e7a <Ssd1306::ClearLine(unsigned char)+0x36>
 8003e4a:	7943      	ldrb	r3, [r0, #5]
 8003e4c:	428b      	cmp	r3, r1
 8003e4e:	d314      	bcc.n	8003e7a <Ssd1306::ClearLine(unsigned char)+0x36>
 8003e50:	3901      	subs	r1, #1
 8003e52:	b2cc      	uxtb	r4, r1
 8003e54:	4622      	mov	r2, r4
 8003e56:	2100      	movs	r1, #0
 8003e58:	f7ff ffbc 	bl	8003dd4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003e5c:	f105 0008 	add.w	r0, r5, #8
 8003e60:	f7ff ff42 	bl	8003ce8 <HAL_I2C::Setup()>
 8003e64:	2181      	movs	r1, #129	; 0x81
 8003e66:	4805      	ldr	r0, [pc, #20]	; (8003e7c <Ssd1306::ClearLine(unsigned char)+0x38>)
 8003e68:	f000 fb5c 	bl	8004524 <gd32_i2c_write>
 8003e6c:	4622      	mov	r2, r4
 8003e6e:	4628      	mov	r0, r5
 8003e70:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003e74:	2100      	movs	r1, #0
 8003e76:	f7ff bfad 	b.w	8003dd4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003e7a:	bd38      	pop	{r3, r4, r5, pc}
 8003e7c:	20001774 	andcs	r1, r0, r4, ror r7

08003e80 <Ssd1306::SetSleep(bool)>:
 8003e80:	b111      	cbz	r1, 8003e88 <Ssd1306::SetSleep(bool)+0x8>
 8003e82:	21ae      	movs	r1, #174	; 0xae
 8003e84:	f7ff bf96 	b.w	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003e88:	21af      	movs	r1, #175	; 0xaf
 8003e8a:	e7fb      	b.n	8003e84 <Ssd1306::SetSleep(bool)+0x4>

08003e8c <Ssd1306::SetContrast(unsigned char)>:
 8003e8c:	b538      	push	{r3, r4, r5, lr}
 8003e8e:	4604      	mov	r4, r0
 8003e90:	460d      	mov	r5, r1
 8003e92:	7181      	strb	r1, [r0, #6]
 8003e94:	2181      	movs	r1, #129	; 0x81
 8003e96:	f7ff ff8d 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003e9a:	4629      	mov	r1, r5
 8003e9c:	4620      	mov	r0, r4
 8003e9e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003ea2:	f7ff bf87 	b.w	8003db4 <Ssd1306::SendCommand(unsigned char)>

08003ea6 <Ssd1306::SetFlipVertically(bool)>:
 8003ea6:	b510      	push	{r4, lr}
 8003ea8:	4604      	mov	r4, r0
 8003eaa:	71c1      	strb	r1, [r0, #7]
 8003eac:	b141      	cbz	r1, 8003ec0 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8003eae:	21c0      	movs	r1, #192	; 0xc0
 8003eb0:	f7ff ff80 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003eb4:	21a0      	movs	r1, #160	; 0xa0
 8003eb6:	4620      	mov	r0, r4
 8003eb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003ebc:	f7ff bf7a 	b.w	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003ec0:	21c8      	movs	r1, #200	; 0xc8
 8003ec2:	f7ff ff77 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003ec6:	21a1      	movs	r1, #161	; 0xa1
 8003ec8:	e7f5      	b.n	8003eb6 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08003ecc <Ssd1306::CheckSH1106()>:
 8003ecc:	b570      	push	{r4, r5, r6, lr}
 8003ece:	4604      	mov	r4, r0
 8003ed0:	b086      	sub	sp, #24
 8003ed2:	2100      	movs	r1, #0
 8003ed4:	f7ff ff6e 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003ed8:	2190      	movs	r1, #144	; 0x90
 8003eda:	4620      	mov	r0, r4
 8003edc:	f7ff ff6a 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003ee0:	21b0      	movs	r1, #176	; 0xb0
 8003ee2:	4620      	mov	r0, r4
 8003ee4:	f7ff ff66 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003ee8:	4b22      	ldr	r3, [pc, #136]	; (8003f74 <Ssd1306::CheckSH1106()+0xa8>)
 8003eea:	f104 0608 	add.w	r6, r4, #8
 8003eee:	6818      	ldr	r0, [r3, #0]
 8003ef0:	791b      	ldrb	r3, [r3, #4]
 8003ef2:	ad02      	add	r5, sp, #8
 8003ef4:	9002      	str	r0, [sp, #8]
 8003ef6:	4630      	mov	r0, r6
 8003ef8:	712b      	strb	r3, [r5, #4]
 8003efa:	f7ff fef5 	bl	8003ce8 <HAL_I2C::Setup()>
 8003efe:	2105      	movs	r1, #5
 8003f00:	4628      	mov	r0, r5
 8003f02:	f000 fb0f 	bl	8004524 <gd32_i2c_write>
 8003f06:	2100      	movs	r1, #0
 8003f08:	4620      	mov	r0, r4
 8003f0a:	f7ff ff53 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003f0e:	2190      	movs	r1, #144	; 0x90
 8003f10:	4620      	mov	r0, r4
 8003f12:	f7ff ff4f 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003f16:	21b0      	movs	r1, #176	; 0xb0
 8003f18:	4620      	mov	r0, r4
 8003f1a:	f7ff ff4b 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003f1e:	2300      	movs	r3, #0
 8003f20:	9304      	str	r3, [sp, #16]
 8003f22:	f88d 3014 	strb.w	r3, [sp, #20]
 8003f26:	2340      	movs	r3, #64	; 0x40
 8003f28:	4630      	mov	r0, r6
 8003f2a:	f88d 3007 	strb.w	r3, [sp, #7]
 8003f2e:	f7ff fedb 	bl	8003ce8 <HAL_I2C::Setup()>
 8003f32:	2101      	movs	r1, #1
 8003f34:	f10d 0007 	add.w	r0, sp, #7
 8003f38:	f000 faf4 	bl	8004524 <gd32_i2c_write>
 8003f3c:	4630      	mov	r0, r6
 8003f3e:	f7ff fed3 	bl	8003ce8 <HAL_I2C::Setup()>
 8003f42:	2105      	movs	r1, #5
 8003f44:	a804      	add	r0, sp, #16
 8003f46:	f000 fb51 	bl	80045ec <gd32_i2c_read>
 8003f4a:	2201      	movs	r2, #1
 8003f4c:	5cab      	ldrb	r3, [r5, r2]
 8003f4e:	a904      	add	r1, sp, #16
 8003f50:	3201      	adds	r2, #1
 8003f52:	4411      	add	r1, r2
 8003f54:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 8003f58:	428b      	cmp	r3, r1
 8003f5a:	d006      	beq.n	8003f6a <Ssd1306::CheckSH1106()+0x9e>
 8003f5c:	1a5b      	subs	r3, r3, r1
 8003f5e:	fab3 f383 	clz	r3, r3
 8003f62:	095b      	lsrs	r3, r3, #5
 8003f64:	7463      	strb	r3, [r4, #17]
 8003f66:	b006      	add	sp, #24
 8003f68:	bd70      	pop	{r4, r5, r6, pc}
 8003f6a:	2a05      	cmp	r2, #5
 8003f6c:	d1ee      	bne.n	8003f4c <Ssd1306::CheckSH1106()+0x80>
 8003f6e:	2300      	movs	r3, #0
 8003f70:	e7f5      	b.n	8003f5e <Ssd1306::CheckSH1106()+0x92>
 8003f72:	bf00      	nop
 8003f74:	08005ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp, ip, lr}

08003f78 <Ssd1306::Cls()>:
 8003f78:	7c43      	ldrb	r3, [r0, #17]
 8003f7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003f7e:	2b00      	cmp	r3, #0
 8003f80:	bf0c      	ite	eq
 8003f82:	2500      	moveq	r5, #0
 8003f84:	2504      	movne	r5, #4
 8003f86:	4604      	mov	r4, r0
 8003f88:	2600      	movs	r6, #0
 8003f8a:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8003f8e:	f045 0810 	orr.w	r8, r5, #16
 8003f92:	b2ff      	uxtb	r7, r7
 8003f94:	6963      	ldr	r3, [r4, #20]
 8003f96:	4629      	mov	r1, r5
 8003f98:	42b3      	cmp	r3, r6
 8003f9a:	4620      	mov	r0, r4
 8003f9c:	d91b      	bls.n	8003fd6 <Ssd1306::Cls()+0x5e>
 8003f9e:	f7ff ff09 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003fa2:	4641      	mov	r1, r8
 8003fa4:	4620      	mov	r0, r4
 8003fa6:	f7ff ff05 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003faa:	f066 014f 	orn	r1, r6, #79	; 0x4f
 8003fae:	4620      	mov	r0, r4
 8003fb0:	b2c9      	uxtb	r1, r1
 8003fb2:	f7ff feff 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003fb6:	7c23      	ldrb	r3, [r4, #16]
 8003fb8:	b123      	cbz	r3, 8003fc4 <Ssd1306::Cls()+0x4c>
 8003fba:	3b01      	subs	r3, #1
 8003fbc:	2b01      	cmp	r3, #1
 8003fbe:	d901      	bls.n	8003fc4 <Ssd1306::Cls()+0x4c>
 8003fc0:	3601      	adds	r6, #1
 8003fc2:	e7e7      	b.n	8003f94 <Ssd1306::Cls()+0x1c>
 8003fc4:	f104 0008 	add.w	r0, r4, #8
 8003fc8:	f7ff fe8e 	bl	8003ce8 <HAL_I2C::Setup()>
 8003fcc:	4639      	mov	r1, r7
 8003fce:	4808      	ldr	r0, [pc, #32]	; (8003ff0 <Ssd1306::Cls()+0x78>)
 8003fd0:	f000 faa8 	bl	8004524 <gd32_i2c_write>
 8003fd4:	e7f4      	b.n	8003fc0 <Ssd1306::Cls()+0x48>
 8003fd6:	f7ff feed 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003fda:	4641      	mov	r1, r8
 8003fdc:	4620      	mov	r0, r4
 8003fde:	f7ff fee9 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003fe2:	4620      	mov	r0, r4
 8003fe4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003fe8:	21b0      	movs	r1, #176	; 0xb0
 8003fea:	f7ff bee3 	b.w	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8003fee:	bf00      	nop
 8003ff0:	20001774 	andcs	r1, r0, r4, ror r7

08003ff4 <Ssd1306::Start()>:
 8003ff4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003ff6:	7a04      	ldrb	r4, [r0, #8]
 8003ff8:	68c6      	ldr	r6, [r0, #12]
 8003ffa:	4605      	mov	r5, r0
 8003ffc:	4620      	mov	r0, r4
 8003ffe:	f000 fa8b 	bl	8004518 <gd32_i2c_set_address>
 8004002:	4630      	mov	r0, r6
 8004004:	f000 fa80 	bl	8004508 <gd32_i2c_set_baudrate>
 8004008:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800400c:	2b07      	cmp	r3, #7
 800400e:	d902      	bls.n	8004016 <Ssd1306::Start()+0x22>
 8004010:	3c50      	subs	r4, #80	; 0x50
 8004012:	2c0f      	cmp	r4, #15
 8004014:	d80f      	bhi.n	8004036 <Ssd1306::Start()+0x42>
 8004016:	2101      	movs	r1, #1
 8004018:	f10d 0007 	add.w	r0, sp, #7
 800401c:	f000 fae6 	bl	80045ec <gd32_i2c_read>
 8004020:	fab0 f480 	clz	r4, r0
 8004024:	0964      	lsrs	r4, r4, #5
 8004026:	b35c      	cbz	r4, 8004080 <Ssd1306::Start()+0x8c>
 8004028:	7c2e      	ldrb	r6, [r5, #16]
 800402a:	b14e      	cbz	r6, 8004040 <Ssd1306::Start()+0x4c>
 800402c:	3e01      	subs	r6, #1
 800402e:	2e01      	cmp	r6, #1
 8004030:	d929      	bls.n	8004086 <Ssd1306::Start()+0x92>
 8004032:	2400      	movs	r4, #0
 8004034:	e024      	b.n	8004080 <Ssd1306::Start()+0x8c>
 8004036:	2100      	movs	r1, #0
 8004038:	4608      	mov	r0, r1
 800403a:	f000 fa73 	bl	8004524 <gd32_i2c_write>
 800403e:	e7ef      	b.n	8004020 <Ssd1306::Start()+0x2c>
 8004040:	4f16      	ldr	r7, [pc, #88]	; (800409c <Ssd1306::Start()+0xa8>)
 8004042:	4628      	mov	r0, r5
 8004044:	f817 1b01 	ldrb.w	r1, [r7], #1
 8004048:	3601      	adds	r6, #1
 800404a:	f7ff feb3 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 800404e:	2e18      	cmp	r6, #24
 8004050:	d1f7      	bne.n	8004042 <Ssd1306::Start()+0x4e>
 8004052:	2300      	movs	r3, #0
 8004054:	4a12      	ldr	r2, [pc, #72]	; (80040a0 <Ssd1306::Start()+0xac>)
 8004056:	4618      	mov	r0, r3
 8004058:	4611      	mov	r1, r2
 800405a:	3301      	adds	r3, #1
 800405c:	2b86      	cmp	r3, #134	; 0x86
 800405e:	f802 0b01 	strb.w	r0, [r2], #1
 8004062:	d1fa      	bne.n	800405a <Ssd1306::Start()+0x66>
 8004064:	2340      	movs	r3, #64	; 0x40
 8004066:	4628      	mov	r0, r5
 8004068:	700b      	strb	r3, [r1, #0]
 800406a:	f7ff ff2f 	bl	8003ecc <Ssd1306::CheckSH1106()>
 800406e:	4628      	mov	r0, r5
 8004070:	f7ff ff82 	bl	8003f78 <Ssd1306::Cls()>
 8004074:	21af      	movs	r1, #175	; 0xaf
 8004076:	4628      	mov	r0, r5
 8004078:	f7ff fe9c 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 800407c:	2301      	movs	r3, #1
 800407e:	71eb      	strb	r3, [r5, #7]
 8004080:	4620      	mov	r0, r4
 8004082:	b003      	add	sp, #12
 8004084:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004086:	2600      	movs	r6, #0
 8004088:	4f06      	ldr	r7, [pc, #24]	; (80040a4 <Ssd1306::Start()+0xb0>)
 800408a:	4628      	mov	r0, r5
 800408c:	f817 1b01 	ldrb.w	r1, [r7], #1
 8004090:	3601      	adds	r6, #1
 8004092:	f7ff fe8f 	bl	8003db4 <Ssd1306::SendCommand(unsigned char)>
 8004096:	2e18      	cmp	r6, #24
 8004098:	d1f7      	bne.n	800408a <Ssd1306::Start()+0x96>
 800409a:	e7da      	b.n	8004052 <Ssd1306::Start()+0x5e>
 800409c:	08005da0 	stmdaeq	r0, {r5, r7, r8, sl, fp, ip, lr}
 80040a0:	20001774 	andcs	r1, r0, r4, ror r7
 80040a4:	08005d88 	stmdaeq	r0, {r3, r7, r8, sl, fp, ip, lr}

080040a8 <console_putc>:
 80040a8:	280a      	cmp	r0, #10
 80040aa:	b510      	push	{r4, lr}
 80040ac:	4604      	mov	r4, r0
 80040ae:	d102      	bne.n	80040b6 <console_putc+0xe>
 80040b0:	200d      	movs	r0, #13
 80040b2:	f000 fc1d 	bl	80048f0 <uart0_putc>
 80040b6:	4620      	mov	r0, r4
 80040b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80040bc:	f000 bc18 	b.w	80048f0 <uart0_putc>

080040c0 <console_puts>:
 80040c0:	f000 bc36 	b.w	8004930 <uart0_puts>

080040c4 <LedBlink::LedBlink()>:
 80040c4:	2200      	movs	r2, #0
 80040c6:	2105      	movs	r1, #5
 80040c8:	e9c0 2100 	strd	r2, r1, [r0]
 80040cc:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 80040d0:	6082      	str	r2, [r0, #8]
 80040d2:	e9c0 1203 	strd	r1, r2, [r0, #12]
 80040d6:	6142      	str	r2, [r0, #20]
 80040d8:	4a01      	ldr	r2, [pc, #4]	; (80040e0 <LedBlink::LedBlink()+0x1c>)
 80040da:	6010      	str	r0, [r2, #0]
 80040dc:	4770      	bx	lr
 80040de:	bf00      	nop
 80040e0:	20001800 	andcs	r1, r0, r0, lsl #16

080040e4 <Hardware::Hardware()>:
 80040e4:	b570      	push	{r4, r5, r6, lr}
 80040e6:	2400      	movs	r4, #0
 80040e8:	4b25      	ldr	r3, [pc, #148]	; (8004180 <Hardware::Hardware()+0x9c>)
 80040ea:	4e26      	ldr	r6, [pc, #152]	; (8004184 <Hardware::Hardware()+0xa0>)
 80040ec:	b090      	sub	sp, #64	; 0x40
 80040ee:	4605      	mov	r5, r0
 80040f0:	6004      	str	r4, [r0, #0]
 80040f2:	7104      	strb	r4, [r0, #4]
 80040f4:	6018      	str	r0, [r3, #0]
 80040f6:	f240 6004 	movw	r0, #1540	; 0x604
 80040fa:	f000 fffb 	bl	80050f4 <rcu_periph_clock_enable>
 80040fe:	2203      	movs	r2, #3
 8004100:	2110      	movs	r1, #16
 8004102:	4630      	mov	r0, r6
 8004104:	2301      	movs	r3, #1
 8004106:	f000 feb9 	bl	8004e7c <gpio_init>
 800410a:	2301      	movs	r3, #1
 800410c:	6173      	str	r3, [r6, #20]
 800410e:	f000 fbdf 	bl	80048d0 <uart0_init>
 8004112:	f5a6 3680 	sub.w	r6, r6, #65536	; 0x10000
 8004116:	f000 fc31 	bl	800497c <systick_config>
 800411a:	f000 fc55 	bl	80049c8 <udelay_init>
 800411e:	f000 fc2b 	bl	8004978 <micros_init>
 8004122:	f240 7004 	movw	r0, #1796	; 0x704
 8004126:	f000 ffe5 	bl	80050f4 <rcu_periph_clock_enable>
 800412a:	4630      	mov	r0, r6
 800412c:	f001 f888 	bl	8005240 <timer_deinit>
 8004130:	2377      	movs	r3, #119	; 0x77
 8004132:	f8ad 300c 	strh.w	r3, [sp, #12]
 8004136:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800413a:	a903      	add	r1, sp, #12
 800413c:	4630      	mov	r0, r6
 800413e:	9305      	str	r3, [sp, #20]
 8004140:	f001 f8e0 	bl	8005304 <timer_init>
 8004144:	4630      	mov	r0, r6
 8004146:	f001 f935 	bl	80053b4 <timer_enable>
 800414a:	f000 f953 	bl	80043f4 <gd32_adc_init>
 800414e:	2211      	movs	r2, #17
 8004150:	230b      	movs	r3, #11
 8004152:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8004156:	2379      	movs	r3, #121	; 0x79
 8004158:	a807      	add	r0, sp, #28
 800415a:	930c      	str	r3, [sp, #48]	; 0x30
 800415c:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8004160:	9407      	str	r4, [sp, #28]
 8004162:	940f      	str	r4, [sp, #60]	; 0x3c
 8004164:	f000 f8e2 	bl	800432c <mktime>
 8004168:	4621      	mov	r1, r4
 800416a:	e9cd 0401 	strd	r0, r4, [sp, #4]
 800416e:	a801      	add	r0, sp, #4
 8004170:	f000 f928 	bl	80043c4 <settimeofday>
 8004174:	f000 f99a 	bl	80044ac <gd32_i2c_begin>
 8004178:	4628      	mov	r0, r5
 800417a:	b010      	add	sp, #64	; 0x40
 800417c:	bd70      	pop	{r4, r5, r6, pc}
 800417e:	bf00      	nop
 8004180:	20001804 	andcs	r1, r0, r4, lsl #16
 8004184:	40011000 	andmi	r1, r1, r0

08004188 <operator delete(void*)>:
 8004188:	f000 b84c 	b.w	8004224 <free>

0800418c <operator new(unsigned int)>:
 800418c:	f000 b800 	b.w	8004190 <malloc>

08004190 <malloc>:
 8004190:	b538      	push	{r3, r4, r5, lr}
 8004192:	4604      	mov	r4, r0
 8004194:	4601      	mov	r1, r0
 8004196:	481c      	ldr	r0, [pc, #112]	; (8004208 <malloc+0x78>)
 8004198:	f7fd fc52 	bl	8001a40 <printf>
 800419c:	b17c      	cbz	r4, 80041be <malloc+0x2e>
 800419e:	4b1b      	ldr	r3, [pc, #108]	; (800420c <malloc+0x7c>)
 80041a0:	6818      	ldr	r0, [r3, #0]
 80041a2:	b978      	cbnz	r0, 80041c4 <malloc+0x34>
 80041a4:	4a1a      	ldr	r2, [pc, #104]	; (8004210 <malloc+0x80>)
 80041a6:	f104 031b 	add.w	r3, r4, #27
 80041aa:	6811      	ldr	r1, [r2, #0]
 80041ac:	4819      	ldr	r0, [pc, #100]	; (8004214 <malloc+0x84>)
 80041ae:	f023 030f 	bic.w	r3, r3, #15
 80041b2:	440b      	add	r3, r1
 80041b4:	4283      	cmp	r3, r0
 80041b6:	d921      	bls.n	80041fc <malloc+0x6c>
 80041b8:	4817      	ldr	r0, [pc, #92]	; (8004218 <malloc+0x88>)
 80041ba:	f7fd fc41 	bl	8001a40 <printf>
 80041be:	2500      	movs	r5, #0
 80041c0:	4628      	mov	r0, r5
 80041c2:	bd38      	pop	{r3, r4, r5, pc}
 80041c4:	4284      	cmp	r4, r0
 80041c6:	d80a      	bhi.n	80041de <malloc+0x4e>
 80041c8:	685a      	ldr	r2, [r3, #4]
 80041ca:	6899      	ldr	r1, [r3, #8]
 80041cc:	3201      	adds	r2, #1
 80041ce:	428a      	cmp	r2, r1
 80041d0:	605a      	str	r2, [r3, #4]
 80041d2:	d900      	bls.n	80041d6 <malloc+0x46>
 80041d4:	609a      	str	r2, [r3, #8]
 80041d6:	68d9      	ldr	r1, [r3, #12]
 80041d8:	b919      	cbnz	r1, 80041e2 <malloc+0x52>
 80041da:	4604      	mov	r4, r0
 80041dc:	e7e2      	b.n	80041a4 <malloc+0x14>
 80041de:	3310      	adds	r3, #16
 80041e0:	e7de      	b.n	80041a0 <malloc+0x10>
 80041e2:	4604      	mov	r4, r0
 80041e4:	688a      	ldr	r2, [r1, #8]
 80041e6:	60da      	str	r2, [r3, #12]
 80041e8:	2300      	movs	r3, #0
 80041ea:	f101 050c 	add.w	r5, r1, #12
 80041ee:	608b      	str	r3, [r1, #8]
 80041f0:	4622      	mov	r2, r4
 80041f2:	462b      	mov	r3, r5
 80041f4:	4809      	ldr	r0, [pc, #36]	; (800421c <malloc+0x8c>)
 80041f6:	f7fd fc23 	bl	8001a40 <printf>
 80041fa:	e7e1      	b.n	80041c0 <malloc+0x30>
 80041fc:	6013      	str	r3, [r2, #0]
 80041fe:	4b08      	ldr	r3, [pc, #32]	; (8004220 <malloc+0x90>)
 8004200:	e9c1 3400 	strd	r3, r4, [r1]
 8004204:	e7f0      	b.n	80041e8 <malloc+0x58>
 8004206:	bf00      	nop
 8004208:	08005df8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl, fp, ip, lr}
 800420c:	20000018 	andcs	r0, r0, r8, lsl r0
 8004210:	20000014 	andcs	r0, r0, r4, lsl r0
 8004214:	2000b000 	andcs	fp, r0, r0
 8004218:	08005e04 	stmdaeq	r0, {r2, r9, sl, fp, ip, lr}
 800421c:	08005e20 	stmdaeq	r0, {r5, r9, sl, fp, ip, lr}
 8004220:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08004224 <free>:
 8004224:	b538      	push	{r3, r4, r5, lr}
 8004226:	4604      	mov	r4, r0
 8004228:	b1c8      	cbz	r0, 800425e <free+0x3a>
 800422a:	f1a0 050c 	sub.w	r5, r0, #12
 800422e:	4602      	mov	r2, r0
 8004230:	4629      	mov	r1, r5
 8004232:	480c      	ldr	r0, [pc, #48]	; (8004264 <free+0x40>)
 8004234:	f7fd fc04 	bl	8001a40 <printf>
 8004238:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800423c:	4b0a      	ldr	r3, [pc, #40]	; (8004268 <free+0x44>)
 800423e:	429a      	cmp	r2, r3
 8004240:	d10d      	bne.n	800425e <free+0x3a>
 8004242:	4b0a      	ldr	r3, [pc, #40]	; (800426c <free+0x48>)
 8004244:	681a      	ldr	r2, [r3, #0]
 8004246:	b152      	cbz	r2, 800425e <free+0x3a>
 8004248:	f854 1c08 	ldr.w	r1, [r4, #-8]
 800424c:	4291      	cmp	r1, r2
 800424e:	d107      	bne.n	8004260 <free+0x3c>
 8004250:	68da      	ldr	r2, [r3, #12]
 8004252:	f844 2c04 	str.w	r2, [r4, #-4]
 8004256:	685a      	ldr	r2, [r3, #4]
 8004258:	60dd      	str	r5, [r3, #12]
 800425a:	3a01      	subs	r2, #1
 800425c:	605a      	str	r2, [r3, #4]
 800425e:	bd38      	pop	{r3, r4, r5, pc}
 8004260:	3310      	adds	r3, #16
 8004262:	e7ef      	b.n	8004244 <free+0x20>
 8004264:	08005e4b 	stmdaeq	r0, {r0, r1, r3, r6, r9, sl, fp, ip, lr}
 8004268:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 800426c:	20000018 	andcs	r0, r0, r8, lsl r0

08004270 <memcpy>:
 8004270:	b510      	push	{r4, lr}
 8004272:	1e43      	subs	r3, r0, #1
 8004274:	440a      	add	r2, r1
 8004276:	4291      	cmp	r1, r2
 8004278:	d100      	bne.n	800427c <memcpy+0xc>
 800427a:	bd10      	pop	{r4, pc}
 800427c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004280:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004284:	e7f7      	b.n	8004276 <memcpy+0x6>

08004286 <memset>:
 8004286:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004288:	b1e2      	cbz	r2, 80042c4 <memset+0x3e>
 800428a:	4603      	mov	r3, r0
 800428c:	b2c9      	uxtb	r1, r1
 800428e:	075c      	lsls	r4, r3, #29
 8004290:	d114      	bne.n	80042bc <memset+0x36>
 8004292:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8004296:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 800429a:	463d      	mov	r5, r7
 800429c:	f022 0407 	bic.w	r4, r2, #7
 80042a0:	08d6      	lsrs	r6, r2, #3
 80042a2:	441c      	add	r4, r3
 80042a4:	42a3      	cmp	r3, r4
 80042a6:	d10e      	bne.n	80042c6 <memset+0x40>
 80042a8:	f06f 0307 	mvn.w	r3, #7
 80042ac:	fb03 2206 	mla	r2, r3, r6, r2
 80042b0:	4422      	add	r2, r4
 80042b2:	4294      	cmp	r4, r2
 80042b4:	d006      	beq.n	80042c4 <memset+0x3e>
 80042b6:	f804 1b01 	strb.w	r1, [r4], #1
 80042ba:	e7fa      	b.n	80042b2 <memset+0x2c>
 80042bc:	3a01      	subs	r2, #1
 80042be:	f803 1b01 	strb.w	r1, [r3], #1
 80042c2:	d1e4      	bne.n	800428e <memset+0x8>
 80042c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80042c6:	f843 7b08 	str.w	r7, [r3], #8
 80042ca:	f843 5c04 	str.w	r5, [r3, #-4]
 80042ce:	e7e9      	b.n	80042a4 <memset+0x1e>

080042d0 <puts>:
 80042d0:	b508      	push	{r3, lr}
 80042d2:	f7ff fef5 	bl	80040c0 <console_puts>
 80042d6:	200a      	movs	r0, #10
 80042d8:	f7ff fee6 	bl	80040a8 <console_putc>
 80042dc:	2001      	movs	r0, #1
 80042de:	bd08      	pop	{r3, pc}

080042e0 <isleapyear>:
 80042e0:	2264      	movs	r2, #100	; 0x64
 80042e2:	fb90 f3f2 	sdiv	r3, r0, r2
 80042e6:	fb02 0313 	mls	r3, r2, r3, r0
 80042ea:	b94b      	cbnz	r3, 8004300 <isleapyear+0x20>
 80042ec:	f44f 73c8 	mov.w	r3, #400	; 0x190
 80042f0:	fb90 f2f3 	sdiv	r2, r0, r3
 80042f4:	fb03 0012 	mls	r0, r3, r2, r0
 80042f8:	fab0 f080 	clz	r0, r0
 80042fc:	0940      	lsrs	r0, r0, #5
 80042fe:	4770      	bx	lr
 8004300:	f010 0f03 	tst.w	r0, #3
 8004304:	bf0c      	ite	eq
 8004306:	2001      	moveq	r0, #1
 8004308:	2000      	movne	r0, #0
 800430a:	4770      	bx	lr

0800430c <getdaysofmonth>:
 800430c:	b510      	push	{r4, lr}
 800430e:	4604      	mov	r4, r0
 8004310:	2c01      	cmp	r4, #1
 8004312:	4608      	mov	r0, r1
 8004314:	d102      	bne.n	800431c <getdaysofmonth+0x10>
 8004316:	f7ff ffe3 	bl	80042e0 <isleapyear>
 800431a:	b918      	cbnz	r0, 8004324 <getdaysofmonth+0x18>
 800431c:	4b02      	ldr	r3, [pc, #8]	; (8004328 <getdaysofmonth+0x1c>)
 800431e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8004322:	bd10      	pop	{r4, pc}
 8004324:	201d      	movs	r0, #29
 8004326:	e7fc      	b.n	8004322 <getdaysofmonth+0x16>
 8004328:	08005e74 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl, fp, ip, lr}

0800432c <mktime>:
 800432c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004330:	4604      	mov	r4, r0
 8004332:	2800      	cmp	r0, #0
 8004334:	d042      	beq.n	80043bc <mktime+0x90>
 8004336:	6941      	ldr	r1, [r0, #20]
 8004338:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 800433c:	2b45      	cmp	r3, #69	; 0x45
 800433e:	d83d      	bhi.n	80043bc <mktime+0x90>
 8004340:	2600      	movs	r6, #0
 8004342:	f240 75b2 	movw	r5, #1970	; 0x7b2
 8004346:	f240 186d 	movw	r8, #365	; 0x16d
 800434a:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 800434e:	42af      	cmp	r7, r5
 8004350:	da23      	bge.n	800439a <mktime+0x6e>
 8004352:	6927      	ldr	r7, [r4, #16]
 8004354:	2f0b      	cmp	r7, #11
 8004356:	d831      	bhi.n	80043bc <mktime+0x90>
 8004358:	2500      	movs	r5, #0
 800435a:	42af      	cmp	r7, r5
 800435c:	d128      	bne.n	80043b0 <mktime+0x84>
 800435e:	68e5      	ldr	r5, [r4, #12]
 8004360:	2d00      	cmp	r5, #0
 8004362:	dd2b      	ble.n	80043bc <mktime+0x90>
 8004364:	4638      	mov	r0, r7
 8004366:	f7ff ffd1 	bl	800430c <getdaysofmonth>
 800436a:	4285      	cmp	r5, r0
 800436c:	dc26      	bgt.n	80043bc <mktime+0x90>
 800436e:	2318      	movs	r3, #24
 8004370:	3d01      	subs	r5, #1
 8004372:	4435      	add	r5, r6
 8004374:	435d      	muls	r5, r3
 8004376:	68a3      	ldr	r3, [r4, #8]
 8004378:	2b17      	cmp	r3, #23
 800437a:	d81f      	bhi.n	80043bc <mktime+0x90>
 800437c:	203c      	movs	r0, #60	; 0x3c
 800437e:	442b      	add	r3, r5
 8004380:	fb00 f503 	mul.w	r5, r0, r3
 8004384:	6863      	ldr	r3, [r4, #4]
 8004386:	2b3b      	cmp	r3, #59	; 0x3b
 8004388:	d818      	bhi.n	80043bc <mktime+0x90>
 800438a:	442b      	add	r3, r5
 800438c:	4343      	muls	r3, r0
 800438e:	6820      	ldr	r0, [r4, #0]
 8004390:	283b      	cmp	r0, #59	; 0x3b
 8004392:	d813      	bhi.n	80043bc <mktime+0x90>
 8004394:	4418      	add	r0, r3
 8004396:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800439a:	4628      	mov	r0, r5
 800439c:	f7ff ffa0 	bl	80042e0 <isleapyear>
 80043a0:	2800      	cmp	r0, #0
 80043a2:	bf14      	ite	ne
 80043a4:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 80043a8:	4643      	moveq	r3, r8
 80043aa:	3501      	adds	r5, #1
 80043ac:	441e      	add	r6, r3
 80043ae:	e7ce      	b.n	800434e <mktime+0x22>
 80043b0:	4628      	mov	r0, r5
 80043b2:	f7ff ffab 	bl	800430c <getdaysofmonth>
 80043b6:	3501      	adds	r5, #1
 80043b8:	4406      	add	r6, r0
 80043ba:	e7ce      	b.n	800435a <mktime+0x2e>
 80043bc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80043c0:	e7e9      	b.n	8004396 <mktime+0x6a>
	...

080043c4 <settimeofday>:
 80043c4:	4b07      	ldr	r3, [pc, #28]	; (80043e4 <settimeofday+0x20>)
 80043c6:	b510      	push	{r4, lr}
 80043c8:	681a      	ldr	r2, [r3, #0]
 80043ca:	4b07      	ldr	r3, [pc, #28]	; (80043e8 <settimeofday+0x24>)
 80043cc:	6804      	ldr	r4, [r0, #0]
 80043ce:	601a      	str	r2, [r3, #0]
 80043d0:	6843      	ldr	r3, [r0, #4]
 80043d2:	4806      	ldr	r0, [pc, #24]	; (80043ec <settimeofday+0x28>)
 80043d4:	17da      	asrs	r2, r3, #31
 80043d6:	fbc4 3200 	smlal	r3, r2, r4, r0
 80043da:	4905      	ldr	r1, [pc, #20]	; (80043f0 <settimeofday+0x2c>)
 80043dc:	2000      	movs	r0, #0
 80043de:	e9c1 3200 	strd	r3, r2, [r1]
 80043e2:	bd10      	pop	{r4, pc}
 80043e4:	20001818 	andcs	r1, r0, r8, lsl r8
 80043e8:	20001810 	andcs	r1, r0, r0, lsl r8
 80043ec:	000f4240 	andeq	r4, pc, r0, asr #4
 80043f0:	20001808 	andcs	r1, r0, r8, lsl #16

080043f4 <gd32_adc_init>:
 80043f4:	b510      	push	{r4, lr}
 80043f6:	f240 6009 	movw	r0, #1545	; 0x609
 80043fa:	4c20      	ldr	r4, [pc, #128]	; (800447c <gd32_adc_init+0x88>)
 80043fc:	f000 fe7a 	bl	80050f4 <rcu_periph_clock_enable>
 8004400:	2005      	movs	r0, #5
 8004402:	f000 fe99 	bl	8005138 <rcu_adc_clock_config>
 8004406:	4620      	mov	r0, r4
 8004408:	2201      	movs	r2, #1
 800440a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800440e:	f000 fb81 	bl	8004b14 <adc_special_function_config>
 8004412:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8004416:	4620      	mov	r0, r4
 8004418:	2102      	movs	r1, #2
 800441a:	f000 fc1b 	bl	8004c54 <adc_external_trigger_source_config>
 800441e:	2100      	movs	r1, #0
 8004420:	4620      	mov	r0, r4
 8004422:	f000 fb9f 	bl	8004b64 <adc_data_alignment_config>
 8004426:	2000      	movs	r0, #0
 8004428:	f000 fb64 	bl	8004af4 <adc_mode_config>
 800442c:	2202      	movs	r2, #2
 800442e:	4620      	mov	r0, r4
 8004430:	4611      	mov	r1, r2
 8004432:	f000 fbc3 	bl	8004bbc <adc_channel_length_config>
 8004436:	4620      	mov	r0, r4
 8004438:	2307      	movs	r3, #7
 800443a:	2210      	movs	r2, #16
 800443c:	2100      	movs	r1, #0
 800443e:	f000 fbda 	bl	8004bf6 <adc_inserted_channel_config>
 8004442:	2307      	movs	r3, #7
 8004444:	4620      	mov	r0, r4
 8004446:	2211      	movs	r2, #17
 8004448:	2101      	movs	r1, #1
 800444a:	f000 fbd4 	bl	8004bf6 <adc_inserted_channel_config>
 800444e:	2102      	movs	r1, #2
 8004450:	2201      	movs	r2, #1
 8004452:	4620      	mov	r0, r4
 8004454:	f000 fc0f 	bl	8004c76 <adc_external_trigger_config>
 8004458:	f000 fba6 	bl	8004ba8 <adc_tempsensor_vrefint_enable>
 800445c:	4620      	mov	r0, r4
 800445e:	f000 fb8a 	bl	8004b76 <adc_enable>
 8004462:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004466:	f000 fac3 	bl	80049f0 <udelay>
 800446a:	4620      	mov	r0, r4
 800446c:	f000 fb8b 	bl	8004b86 <adc_calibration_enable>
 8004470:	4620      	mov	r0, r4
 8004472:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004476:	2102      	movs	r1, #2
 8004478:	f000 bc18 	b.w	8004cac <adc_software_trigger_enable>
 800447c:	40012400 	andmi	r2, r1, r0, lsl #8

08004480 <_stop>:
 8004480:	b508      	push	{r3, lr}
 8004482:	4808      	ldr	r0, [pc, #32]	; (80044a4 <_stop+0x24>)
 8004484:	f000 fe06 	bl	8005094 <i2c_stop_on_bus>
 8004488:	f640 73ff 	movw	r3, #4095	; 0xfff
 800448c:	4a06      	ldr	r2, [pc, #24]	; (80044a8 <_stop+0x28>)
 800448e:	f8d2 0400 	ldr.w	r0, [r2, #1024]	; 0x400
 8004492:	f410 7000 	ands.w	r0, r0, #512	; 0x200
 8004496:	d100      	bne.n	800449a <_stop+0x1a>
 8004498:	bd08      	pop	{r3, pc}
 800449a:	3b01      	subs	r3, #1
 800449c:	d1f7      	bne.n	800448e <_stop+0xe>
 800449e:	f06f 0003 	mvn.w	r0, #3
 80044a2:	e7f9      	b.n	8004498 <_stop+0x18>
 80044a4:	40005400 	andmi	r5, r0, r0, lsl #8
 80044a8:	40005000 	andmi	r5, r0, r0

080044ac <gd32_i2c_begin>:
 80044ac:	b510      	push	{r4, lr}
 80044ae:	f240 7015 	movw	r0, #1813	; 0x715
 80044b2:	f000 fe1f 	bl	80050f4 <rcu_periph_clock_enable>
 80044b6:	4c12      	ldr	r4, [pc, #72]	; (8004500 <gd32_i2c_begin+0x54>)
 80044b8:	f240 6003 	movw	r0, #1539	; 0x603
 80044bc:	f000 fe1a 	bl	80050f4 <rcu_periph_clock_enable>
 80044c0:	f240 6003 	movw	r0, #1539	; 0x603
 80044c4:	f000 fe16 	bl	80050f4 <rcu_periph_clock_enable>
 80044c8:	4620      	mov	r0, r4
 80044ca:	2340      	movs	r3, #64	; 0x40
 80044cc:	2203      	movs	r2, #3
 80044ce:	211c      	movs	r1, #28
 80044d0:	f000 fcd4 	bl	8004e7c <gpio_init>
 80044d4:	2380      	movs	r3, #128	; 0x80
 80044d6:	4620      	mov	r0, r4
 80044d8:	2203      	movs	r2, #3
 80044da:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 80044de:	211c      	movs	r1, #28
 80044e0:	f000 fccc 	bl	8004e7c <gpio_init>
 80044e4:	4620      	mov	r0, r4
 80044e6:	4907      	ldr	r1, [pc, #28]	; (8004504 <gd32_i2c_begin+0x58>)
 80044e8:	2200      	movs	r2, #0
 80044ea:	f000 fd51 	bl	8004f90 <i2c_clock_config>
 80044ee:	4620      	mov	r0, r4
 80044f0:	f000 fdc6 	bl	8005080 <i2c_enable>
 80044f4:	4620      	mov	r0, r4
 80044f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80044fa:	2101      	movs	r1, #1
 80044fc:	f000 bda6 	b.w	800504c <i2c_ack_config>
 8004500:	40010c00 	andmi	r0, r1, r0, lsl #24
 8004504:	00061a80 	andeq	r1, r6, r0, lsl #21

08004508 <gd32_i2c_set_baudrate>:
 8004508:	4601      	mov	r1, r0
 800450a:	2200      	movs	r2, #0
 800450c:	4801      	ldr	r0, [pc, #4]	; (8004514 <gd32_i2c_set_baudrate+0xc>)
 800450e:	f000 bd3f 	b.w	8004f90 <i2c_clock_config>
 8004512:	bf00      	nop
 8004514:	40005400 	andmi	r5, r0, r0, lsl #8

08004518 <gd32_i2c_set_address>:
 8004518:	4b01      	ldr	r3, [pc, #4]	; (8004520 <gd32_i2c_set_address+0x8>)
 800451a:	0040      	lsls	r0, r0, #1
 800451c:	7018      	strb	r0, [r3, #0]
 800451e:	4770      	bx	lr
 8004520:	20001814 	andcs	r1, r0, r4, lsl r8

08004524 <gd32_i2c_write>:
 8004524:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004526:	4604      	mov	r4, r0
 8004528:	460f      	mov	r7, r1
 800452a:	f640 75ff 	movw	r5, #4095	; 0xfff
 800452e:	4e2d      	ldr	r6, [pc, #180]	; (80045e4 <gd32_i2c_write+0xc0>)
 8004530:	f240 6101 	movw	r1, #1537	; 0x601
 8004534:	4630      	mov	r0, r6
 8004536:	f000 fdb7 	bl	80050a8 <i2c_flag_get>
 800453a:	b9b0      	cbnz	r0, 800456a <gd32_i2c_write+0x46>
 800453c:	4829      	ldr	r0, [pc, #164]	; (80045e4 <gd32_i2c_write+0xc0>)
 800453e:	f000 fda4 	bl	800508a <i2c_start_on_bus>
 8004542:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004546:	4e27      	ldr	r6, [pc, #156]	; (80045e4 <gd32_i2c_write+0xc0>)
 8004548:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 800454c:	4630      	mov	r0, r6
 800454e:	f000 fdab 	bl	80050a8 <i2c_flag_get>
 8004552:	b190      	cbz	r0, 800457a <gd32_i2c_write+0x56>
 8004554:	4b24      	ldr	r3, [pc, #144]	; (80045e8 <gd32_i2c_write+0xc4>)
 8004556:	f06f 0201 	mvn.w	r2, #1
 800455a:	7819      	ldrb	r1, [r3, #0]
 800455c:	4821      	ldr	r0, [pc, #132]	; (80045e4 <gd32_i2c_write+0xc0>)
 800455e:	f000 fd87 	bl	8005070 <i2c_master_addressing>
 8004562:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004566:	4e1f      	ldr	r6, [pc, #124]	; (80045e4 <gd32_i2c_write+0xc0>)
 8004568:	e00c      	b.n	8004584 <gd32_i2c_write+0x60>
 800456a:	3d01      	subs	r5, #1
 800456c:	d1e0      	bne.n	8004530 <gd32_i2c_write+0xc>
 800456e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8004572:	f7ff ff85 	bl	8004480 <_stop>
 8004576:	4260      	negs	r0, r4
 8004578:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800457a:	3d01      	subs	r5, #1
 800457c:	d1e4      	bne.n	8004548 <gd32_i2c_write+0x24>
 800457e:	e7f6      	b.n	800456e <gd32_i2c_write+0x4a>
 8004580:	3d01      	subs	r5, #1
 8004582:	d0f4      	beq.n	800456e <gd32_i2c_write+0x4a>
 8004584:	f240 5101 	movw	r1, #1281	; 0x501
 8004588:	4630      	mov	r0, r6
 800458a:	f000 fd8d 	bl	80050a8 <i2c_flag_get>
 800458e:	2800      	cmp	r0, #0
 8004590:	d0f6      	beq.n	8004580 <gd32_i2c_write+0x5c>
 8004592:	f240 5101 	movw	r1, #1281	; 0x501
 8004596:	4813      	ldr	r0, [pc, #76]	; (80045e4 <gd32_i2c_write+0xc0>)
 8004598:	f000 fd8e 	bl	80050b8 <i2c_flag_clear>
 800459c:	f640 75ff 	movw	r5, #4095	; 0xfff
 80045a0:	4e10      	ldr	r6, [pc, #64]	; (80045e4 <gd32_i2c_write+0xc0>)
 80045a2:	f240 5107 	movw	r1, #1287	; 0x507
 80045a6:	4630      	mov	r0, r6
 80045a8:	f000 fd7e 	bl	80050a8 <i2c_flag_get>
 80045ac:	2801      	cmp	r0, #1
 80045ae:	d105      	bne.n	80045bc <gd32_i2c_write+0x98>
 80045b0:	4e0c      	ldr	r6, [pc, #48]	; (80045e4 <gd32_i2c_write+0xc0>)
 80045b2:	4427      	add	r7, r4
 80045b4:	42a7      	cmp	r7, r4
 80045b6:	d104      	bne.n	80045c2 <gd32_i2c_write+0x9e>
 80045b8:	2400      	movs	r4, #0
 80045ba:	e7da      	b.n	8004572 <gd32_i2c_write+0x4e>
 80045bc:	3d01      	subs	r5, #1
 80045be:	d1f0      	bne.n	80045a2 <gd32_i2c_write+0x7e>
 80045c0:	e7d5      	b.n	800456e <gd32_i2c_write+0x4a>
 80045c2:	4630      	mov	r0, r6
 80045c4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80045c8:	f000 fd69 	bl	800509e <i2c_data_transmit>
 80045cc:	f640 75ff 	movw	r5, #4095	; 0xfff
 80045d0:	f240 5102 	movw	r1, #1282	; 0x502
 80045d4:	4630      	mov	r0, r6
 80045d6:	f000 fd67 	bl	80050a8 <i2c_flag_get>
 80045da:	2800      	cmp	r0, #0
 80045dc:	d1ea      	bne.n	80045b4 <gd32_i2c_write+0x90>
 80045de:	3d01      	subs	r5, #1
 80045e0:	d1f6      	bne.n	80045d0 <gd32_i2c_write+0xac>
 80045e2:	e7c4      	b.n	800456e <gd32_i2c_write+0x4a>
 80045e4:	40005400 	andmi	r5, r0, r0, lsl #8
 80045e8:	20001814 	andcs	r1, r0, r4, lsl r8

080045ec <gd32_i2c_read>:
 80045ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80045f0:	4680      	mov	r8, r0
 80045f2:	460c      	mov	r4, r1
 80045f4:	f640 76ff 	movw	r6, #4095	; 0xfff
 80045f8:	4f4b      	ldr	r7, [pc, #300]	; (8004728 <gd32_i2c_read+0x13c>)
 80045fa:	f240 6101 	movw	r1, #1537	; 0x601
 80045fe:	4638      	mov	r0, r7
 8004600:	f000 fd52 	bl	80050a8 <i2c_flag_get>
 8004604:	4605      	mov	r5, r0
 8004606:	bb08      	cbnz	r0, 800464c <gd32_i2c_read+0x60>
 8004608:	2c02      	cmp	r4, #2
 800460a:	d103      	bne.n	8004614 <gd32_i2c_read+0x28>
 800460c:	4601      	mov	r1, r0
 800460e:	4846      	ldr	r0, [pc, #280]	; (8004728 <gd32_i2c_read+0x13c>)
 8004610:	f000 fd25 	bl	800505e <i2c_ackpos_config>
 8004614:	4844      	ldr	r0, [pc, #272]	; (8004728 <gd32_i2c_read+0x13c>)
 8004616:	f000 fd38 	bl	800508a <i2c_start_on_bus>
 800461a:	f640 76ff 	movw	r6, #4095	; 0xfff
 800461e:	4f42      	ldr	r7, [pc, #264]	; (8004728 <gd32_i2c_read+0x13c>)
 8004620:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8004624:	4638      	mov	r0, r7
 8004626:	f000 fd3f 	bl	80050a8 <i2c_flag_get>
 800462a:	b1a0      	cbz	r0, 8004656 <gd32_i2c_read+0x6a>
 800462c:	4b3f      	ldr	r3, [pc, #252]	; (800472c <gd32_i2c_read+0x140>)
 800462e:	2201      	movs	r2, #1
 8004630:	7819      	ldrb	r1, [r3, #0]
 8004632:	483d      	ldr	r0, [pc, #244]	; (8004728 <gd32_i2c_read+0x13c>)
 8004634:	f000 fd1c 	bl	8005070 <i2c_master_addressing>
 8004638:	2c02      	cmp	r4, #2
 800463a:	d803      	bhi.n	8004644 <gd32_i2c_read+0x58>
 800463c:	2100      	movs	r1, #0
 800463e:	483a      	ldr	r0, [pc, #232]	; (8004728 <gd32_i2c_read+0x13c>)
 8004640:	f000 fd04 	bl	800504c <i2c_ack_config>
 8004644:	f640 76ff 	movw	r6, #4095	; 0xfff
 8004648:	4f37      	ldr	r7, [pc, #220]	; (8004728 <gd32_i2c_read+0x13c>)
 800464a:	e009      	b.n	8004660 <gd32_i2c_read+0x74>
 800464c:	3e01      	subs	r6, #1
 800464e:	d1d4      	bne.n	80045fa <gd32_i2c_read+0xe>
 8004650:	f7ff ff16 	bl	8004480 <_stop>
 8004654:	e066      	b.n	8004724 <gd32_i2c_read+0x138>
 8004656:	3e01      	subs	r6, #1
 8004658:	d1e2      	bne.n	8004620 <gd32_i2c_read+0x34>
 800465a:	e7f9      	b.n	8004650 <gd32_i2c_read+0x64>
 800465c:	3e01      	subs	r6, #1
 800465e:	d0f7      	beq.n	8004650 <gd32_i2c_read+0x64>
 8004660:	f240 5101 	movw	r1, #1281	; 0x501
 8004664:	4638      	mov	r0, r7
 8004666:	f000 fd1f 	bl	80050a8 <i2c_flag_get>
 800466a:	2800      	cmp	r0, #0
 800466c:	d0f6      	beq.n	800465c <gd32_i2c_read+0x70>
 800466e:	f240 5101 	movw	r1, #1281	; 0x501
 8004672:	482d      	ldr	r0, [pc, #180]	; (8004728 <gd32_i2c_read+0x13c>)
 8004674:	f000 fd20 	bl	80050b8 <i2c_flag_clear>
 8004678:	2c01      	cmp	r4, #1
 800467a:	d102      	bne.n	8004682 <gd32_i2c_read+0x96>
 800467c:	482a      	ldr	r0, [pc, #168]	; (8004728 <gd32_i2c_read+0x13c>)
 800467e:	f000 fd09 	bl	8005094 <i2c_stop_on_bus>
 8004682:	f640 77ff 	movw	r7, #4095	; 0xfff
 8004686:	4e28      	ldr	r6, [pc, #160]	; (8004728 <gd32_i2c_read+0x13c>)
 8004688:	e023      	b.n	80046d2 <gd32_i2c_read+0xe6>
 800468a:	2c03      	cmp	r4, #3
 800468c:	d135      	bne.n	80046fa <gd32_i2c_read+0x10e>
 800468e:	f640 79ff 	movw	r9, #4095	; 0xfff
 8004692:	e002      	b.n	800469a <gd32_i2c_read+0xae>
 8004694:	f1b9 0901 	subs.w	r9, r9, #1
 8004698:	d0da      	beq.n	8004650 <gd32_i2c_read+0x64>
 800469a:	f240 5102 	movw	r1, #1282	; 0x502
 800469e:	4630      	mov	r0, r6
 80046a0:	f000 fd02 	bl	80050a8 <i2c_flag_get>
 80046a4:	2800      	cmp	r0, #0
 80046a6:	d0f5      	beq.n	8004694 <gd32_i2c_read+0xa8>
 80046a8:	2100      	movs	r1, #0
 80046aa:	4630      	mov	r0, r6
 80046ac:	f000 fcce 	bl	800504c <i2c_ack_config>
 80046b0:	f240 5106 	movw	r1, #1286	; 0x506
 80046b4:	4630      	mov	r0, r6
 80046b6:	f000 fcf7 	bl	80050a8 <i2c_flag_get>
 80046ba:	b138      	cbz	r0, 80046cc <gd32_i2c_read+0xe0>
 80046bc:	4630      	mov	r0, r6
 80046be:	f000 fcf0 	bl	80050a2 <i2c_data_receive>
 80046c2:	f640 77ff 	movw	r7, #4095	; 0xfff
 80046c6:	f808 0b01 	strb.w	r0, [r8], #1
 80046ca:	3c01      	subs	r4, #1
 80046cc:	3f01      	subs	r7, #1
 80046ce:	2f00      	cmp	r7, #0
 80046d0:	ddbe      	ble.n	8004650 <gd32_i2c_read+0x64>
 80046d2:	2c00      	cmp	r4, #0
 80046d4:	d1d9      	bne.n	800468a <gd32_i2c_read+0x9e>
 80046d6:	f640 73ff 	movw	r3, #4095	; 0xfff
 80046da:	4915      	ldr	r1, [pc, #84]	; (8004730 <gd32_i2c_read+0x144>)
 80046dc:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 80046e0:	0592      	lsls	r2, r2, #22
 80046e2:	d41d      	bmi.n	8004720 <gd32_i2c_read+0x134>
 80046e4:	2101      	movs	r1, #1
 80046e6:	4810      	ldr	r0, [pc, #64]	; (8004728 <gd32_i2c_read+0x13c>)
 80046e8:	f000 fcb0 	bl	800504c <i2c_ack_config>
 80046ec:	2101      	movs	r1, #1
 80046ee:	480e      	ldr	r0, [pc, #56]	; (8004728 <gd32_i2c_read+0x13c>)
 80046f0:	f000 fcb5 	bl	800505e <i2c_ackpos_config>
 80046f4:	4628      	mov	r0, r5
 80046f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80046fa:	2c02      	cmp	r4, #2
 80046fc:	d1d8      	bne.n	80046b0 <gd32_i2c_read+0xc4>
 80046fe:	f640 79ff 	movw	r9, #4095	; 0xfff
 8004702:	e002      	b.n	800470a <gd32_i2c_read+0x11e>
 8004704:	f1b9 0901 	subs.w	r9, r9, #1
 8004708:	d0a2      	beq.n	8004650 <gd32_i2c_read+0x64>
 800470a:	f240 5102 	movw	r1, #1282	; 0x502
 800470e:	4630      	mov	r0, r6
 8004710:	f000 fcca 	bl	80050a8 <i2c_flag_get>
 8004714:	2800      	cmp	r0, #0
 8004716:	d0f5      	beq.n	8004704 <gd32_i2c_read+0x118>
 8004718:	4630      	mov	r0, r6
 800471a:	f000 fcbb 	bl	8005094 <i2c_stop_on_bus>
 800471e:	e7c7      	b.n	80046b0 <gd32_i2c_read+0xc4>
 8004720:	3b01      	subs	r3, #1
 8004722:	d1db      	bne.n	80046dc <gd32_i2c_read+0xf0>
 8004724:	2504      	movs	r5, #4
 8004726:	e7e5      	b.n	80046f4 <gd32_i2c_read+0x108>
 8004728:	40005400 	andmi	r5, r0, r0, lsl #8
 800472c:	20001814 	andcs	r1, r0, r4, lsl r8
 8004730:	40005000 	andmi	r5, r0, r0

08004734 <gd32_uart_begin>:
 8004734:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004736:	4604      	mov	r4, r0
 8004738:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 800473c:	461d      	mov	r5, r3
 800473e:	460f      	mov	r7, r1
 8004740:	4616      	mov	r6, r2
 8004742:	f000 fcd7 	bl	80050f4 <rcu_periph_clock_enable>
 8004746:	4b5c      	ldr	r3, [pc, #368]	; (80048b8 <gd32_uart_begin+0x184>)
 8004748:	429c      	cmp	r4, r3
 800474a:	f000 8083 	beq.w	8004854 <gd32_uart_begin+0x120>
 800474e:	d857      	bhi.n	8004800 <gd32_uart_begin+0xcc>
 8004750:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004754:	429c      	cmp	r4, r3
 8004756:	d06d      	beq.n	8004834 <gd32_uart_begin+0x100>
 8004758:	f240 7012 	movw	r0, #1810	; 0x712
 800475c:	f000 fcca 	bl	80050f4 <rcu_periph_clock_enable>
 8004760:	f240 6004 	movw	r0, #1540	; 0x604
 8004764:	f000 fcc6 	bl	80050f4 <rcu_periph_clock_enable>
 8004768:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800476c:	2203      	movs	r2, #3
 800476e:	2118      	movs	r1, #24
 8004770:	4852      	ldr	r0, [pc, #328]	; (80048bc <gd32_uart_begin+0x188>)
 8004772:	f000 fb83 	bl	8004e7c <gpio_init>
 8004776:	2104      	movs	r1, #4
 8004778:	4850      	ldr	r0, [pc, #320]	; (80048bc <gd32_uart_begin+0x188>)
 800477a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800477e:	2203      	movs	r2, #3
 8004780:	f000 fb7c 	bl	8004e7c <gpio_init>
 8004784:	2101      	movs	r1, #1
 8004786:	484e      	ldr	r0, [pc, #312]	; (80048c0 <gd32_uart_begin+0x18c>)
 8004788:	f000 fbd2 	bl	8004f30 <gpio_pin_remap_config>
 800478c:	4620      	mov	r0, r4
 800478e:	f000 fe55 	bl	800543c <usart_deinit>
 8004792:	68e3      	ldr	r3, [r4, #12]
 8004794:	4639      	mov	r1, r7
 8004796:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800479a:	60e3      	str	r3, [r4, #12]
 800479c:	4620      	mov	r0, r4
 800479e:	f000 fe8d 	bl	80054bc <usart_baudrate_set>
 80047a2:	2e09      	cmp	r6, #9
 80047a4:	bf0c      	ite	eq
 80047a6:	f44f 5180 	moveq.w	r1, #4096	; 0x1000
 80047aa:	2100      	movne	r1, #0
 80047ac:	4620      	mov	r0, r4
 80047ae:	f000 feb5 	bl	800551c <usart_word_length_set>
 80047b2:	9b06      	ldr	r3, [sp, #24]
 80047b4:	4620      	mov	r0, r4
 80047b6:	2b02      	cmp	r3, #2
 80047b8:	bf0c      	ite	eq
 80047ba:	f44f 5100 	moveq.w	r1, #8192	; 0x2000
 80047be:	2100      	movne	r1, #0
 80047c0:	f000 feb4 	bl	800552c <usart_stop_bit_set>
 80047c4:	2d01      	cmp	r5, #1
 80047c6:	d072      	beq.n	80048ae <gd32_uart_begin+0x17a>
 80047c8:	2d02      	cmp	r5, #2
 80047ca:	d173      	bne.n	80048b4 <gd32_uart_begin+0x180>
 80047cc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80047d0:	4620      	mov	r0, r4
 80047d2:	f000 fe9b 	bl	800550c <usart_parity_config>
 80047d6:	2100      	movs	r1, #0
 80047d8:	4620      	mov	r0, r4
 80047da:	f000 febb 	bl	8005554 <usart_hardware_flow_rts_config>
 80047de:	2100      	movs	r1, #0
 80047e0:	4620      	mov	r0, r4
 80047e2:	f000 febd 	bl	8005560 <usart_hardware_flow_cts_config>
 80047e6:	2104      	movs	r1, #4
 80047e8:	4620      	mov	r0, r4
 80047ea:	f000 fead 	bl	8005548 <usart_receive_config>
 80047ee:	2108      	movs	r1, #8
 80047f0:	4620      	mov	r0, r4
 80047f2:	f000 fea3 	bl	800553c <usart_transmit_config>
 80047f6:	68e3      	ldr	r3, [r4, #12]
 80047f8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80047fc:	60e3      	str	r3, [r4, #12]
 80047fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004800:	4b30      	ldr	r3, [pc, #192]	; (80048c4 <gd32_uart_begin+0x190>)
 8004802:	429c      	cmp	r4, r3
 8004804:	d03b      	beq.n	800487e <gd32_uart_begin+0x14a>
 8004806:	f240 600e 	movw	r0, #1550	; 0x60e
 800480a:	f000 fc73 	bl	80050f4 <rcu_periph_clock_enable>
 800480e:	f240 6002 	movw	r0, #1538	; 0x602
 8004812:	f000 fc6f 	bl	80050f4 <rcu_periph_clock_enable>
 8004816:	f44f 7300 	mov.w	r3, #512	; 0x200
 800481a:	2203      	movs	r2, #3
 800481c:	2118      	movs	r1, #24
 800481e:	482a      	ldr	r0, [pc, #168]	; (80048c8 <gd32_uart_begin+0x194>)
 8004820:	f000 fb2c 	bl	8004e7c <gpio_init>
 8004824:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004828:	2203      	movs	r2, #3
 800482a:	2104      	movs	r1, #4
 800482c:	4826      	ldr	r0, [pc, #152]	; (80048c8 <gd32_uart_begin+0x194>)
 800482e:	f000 fb25 	bl	8004e7c <gpio_init>
 8004832:	e7ab      	b.n	800478c <gd32_uart_begin+0x58>
 8004834:	f240 7011 	movw	r0, #1809	; 0x711
 8004838:	f000 fc5c 	bl	80050f4 <rcu_periph_clock_enable>
 800483c:	f240 6002 	movw	r0, #1538	; 0x602
 8004840:	f000 fc58 	bl	80050f4 <rcu_periph_clock_enable>
 8004844:	2304      	movs	r3, #4
 8004846:	2203      	movs	r2, #3
 8004848:	2118      	movs	r1, #24
 800484a:	481f      	ldr	r0, [pc, #124]	; (80048c8 <gd32_uart_begin+0x194>)
 800484c:	f000 fb16 	bl	8004e7c <gpio_init>
 8004850:	2308      	movs	r3, #8
 8004852:	e7e9      	b.n	8004828 <gd32_uart_begin+0xf4>
 8004854:	f240 7013 	movw	r0, #1811	; 0x713
 8004858:	f000 fc4c 	bl	80050f4 <rcu_periph_clock_enable>
 800485c:	f240 6004 	movw	r0, #1540	; 0x604
 8004860:	f000 fc48 	bl	80050f4 <rcu_periph_clock_enable>
 8004864:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004868:	2203      	movs	r2, #3
 800486a:	2118      	movs	r1, #24
 800486c:	4813      	ldr	r0, [pc, #76]	; (80048bc <gd32_uart_begin+0x188>)
 800486e:	f000 fb05 	bl	8004e7c <gpio_init>
 8004872:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8004876:	2203      	movs	r2, #3
 8004878:	2104      	movs	r1, #4
 800487a:	4810      	ldr	r0, [pc, #64]	; (80048bc <gd32_uart_begin+0x188>)
 800487c:	e7d7      	b.n	800482e <gd32_uart_begin+0xfa>
 800487e:	f240 7014 	movw	r0, #1812	; 0x714
 8004882:	f000 fc37 	bl	80050f4 <rcu_periph_clock_enable>
 8004886:	f240 6004 	movw	r0, #1540	; 0x604
 800488a:	f000 fc33 	bl	80050f4 <rcu_periph_clock_enable>
 800488e:	f240 6005 	movw	r0, #1541	; 0x605
 8004892:	f000 fc2f 	bl	80050f4 <rcu_periph_clock_enable>
 8004896:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800489a:	2203      	movs	r2, #3
 800489c:	2118      	movs	r1, #24
 800489e:	4807      	ldr	r0, [pc, #28]	; (80048bc <gd32_uart_begin+0x188>)
 80048a0:	f000 faec 	bl	8004e7c <gpio_init>
 80048a4:	2304      	movs	r3, #4
 80048a6:	2203      	movs	r2, #3
 80048a8:	4619      	mov	r1, r3
 80048aa:	4808      	ldr	r0, [pc, #32]	; (80048cc <gd32_uart_begin+0x198>)
 80048ac:	e7bf      	b.n	800482e <gd32_uart_begin+0xfa>
 80048ae:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80048b2:	e78d      	b.n	80047d0 <gd32_uart_begin+0x9c>
 80048b4:	2100      	movs	r1, #0
 80048b6:	e78b      	b.n	80047d0 <gd32_uart_begin+0x9c>
 80048b8:	40004c00 	andmi	r4, r0, r0, lsl #24
 80048bc:	40011000 	andmi	r1, r1, r0
 80048c0:	00140010 	andseq	r0, r4, r0, lsl r0
 80048c4:	40005000 	andmi	r5, r0, r0
 80048c8:	40010800 	andmi	r0, r1, r0, lsl #16
 80048cc:	40011400 	andmi	r1, r1, r0, lsl #8

080048d0 <uart0_init>:
 80048d0:	2301      	movs	r3, #1
 80048d2:	b507      	push	{r0, r1, r2, lr}
 80048d4:	2208      	movs	r2, #8
 80048d6:	9300      	str	r3, [sp, #0]
 80048d8:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80048dc:	2300      	movs	r3, #0
 80048de:	4803      	ldr	r0, [pc, #12]	; (80048ec <uart0_init+0x1c>)
 80048e0:	f7ff ff28 	bl	8004734 <gd32_uart_begin>
 80048e4:	b003      	add	sp, #12
 80048e6:	f85d fb04 	ldr.w	pc, [sp], #4
 80048ea:	bf00      	nop
 80048ec:	40013800 	andmi	r3, r1, r0, lsl #16

080048f0 <uart0_putc>:
 80048f0:	280a      	cmp	r0, #10
 80048f2:	b538      	push	{r3, r4, r5, lr}
 80048f4:	4604      	mov	r4, r0
 80048f6:	d10a      	bne.n	800490e <uart0_putc+0x1e>
 80048f8:	4d0b      	ldr	r5, [pc, #44]	; (8004928 <uart0_putc+0x38>)
 80048fa:	2107      	movs	r1, #7
 80048fc:	4628      	mov	r0, r5
 80048fe:	f000 fe3b 	bl	8005578 <usart_flag_get>
 8004902:	2800      	cmp	r0, #0
 8004904:	d0f9      	beq.n	80048fa <uart0_putc+0xa>
 8004906:	220d      	movs	r2, #13
 8004908:	4b08      	ldr	r3, [pc, #32]	; (800492c <uart0_putc+0x3c>)
 800490a:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 800490e:	4d06      	ldr	r5, [pc, #24]	; (8004928 <uart0_putc+0x38>)
 8004910:	2107      	movs	r1, #7
 8004912:	4628      	mov	r0, r5
 8004914:	f000 fe30 	bl	8005578 <usart_flag_get>
 8004918:	2800      	cmp	r0, #0
 800491a:	d0f9      	beq.n	8004910 <uart0_putc+0x20>
 800491c:	4b03      	ldr	r3, [pc, #12]	; (800492c <uart0_putc+0x3c>)
 800491e:	b2e4      	uxtb	r4, r4
 8004920:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8004924:	bd38      	pop	{r3, r4, r5, pc}
 8004926:	bf00      	nop
 8004928:	40013800 	andmi	r3, r1, r0, lsl #16
 800492c:	40013000 	andmi	r3, r1, r0

08004930 <uart0_puts>:
 8004930:	b510      	push	{r4, lr}
 8004932:	1e44      	subs	r4, r0, #1
 8004934:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8004938:	b903      	cbnz	r3, 800493c <uart0_puts+0xc>
 800493a:	bd10      	pop	{r4, pc}
 800493c:	2b0a      	cmp	r3, #10
 800493e:	d102      	bne.n	8004946 <uart0_puts+0x16>
 8004940:	200d      	movs	r0, #13
 8004942:	f7ff ffd5 	bl	80048f0 <uart0_putc>
 8004946:	7820      	ldrb	r0, [r4, #0]
 8004948:	f7ff ffd2 	bl	80048f0 <uart0_putc>
 800494c:	e7f2      	b.n	8004934 <uart0_puts+0x4>
	...

08004950 <mac_address_get>:
 8004950:	2102      	movs	r1, #2
 8004952:	4a08      	ldr	r2, [pc, #32]	; (8004974 <mac_address_get+0x24>)
 8004954:	f8d2 37ec 	ldr.w	r3, [r2, #2028]	; 0x7ec
 8004958:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 800495c:	7001      	strb	r1, [r0, #0]
 800495e:	0a19      	lsrs	r1, r3, #8
 8004960:	7041      	strb	r1, [r0, #1]
 8004962:	7102      	strb	r2, [r0, #4]
 8004964:	0c19      	lsrs	r1, r3, #16
 8004966:	0a12      	lsrs	r2, r2, #8
 8004968:	0e1b      	lsrs	r3, r3, #24
 800496a:	7081      	strb	r1, [r0, #2]
 800496c:	70c3      	strb	r3, [r0, #3]
 800496e:	7142      	strb	r2, [r0, #5]
 8004970:	4770      	bx	lr
 8004972:	bf00      	nop
 8004974:	1ffff000 	svcne	0x00fff000

08004978 <micros_init>:
 8004978:	4770      	bx	lr
	...

0800497c <systick_config>:
 800497c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004980:	4b0b      	ldr	r3, [pc, #44]	; (80049b0 <systick_config+0x34>)
 8004982:	681b      	ldr	r3, [r3, #0]
 8004984:	fbb3 f3f2 	udiv	r3, r3, r2
 8004988:	3b01      	subs	r3, #1
 800498a:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800498e:	d20d      	bcs.n	80049ac <systick_config+0x30>
 8004990:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8004994:	21f0      	movs	r1, #240	; 0xf0
 8004996:	6153      	str	r3, [r2, #20]
 8004998:	4b06      	ldr	r3, [pc, #24]	; (80049b4 <systick_config+0x38>)
 800499a:	2007      	movs	r0, #7
 800499c:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80049a0:	2100      	movs	r1, #0
 80049a2:	6191      	str	r1, [r2, #24]
 80049a4:	6110      	str	r0, [r2, #16]
 80049a6:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80049aa:	4770      	bx	lr
 80049ac:	e7fe      	b.n	80049ac <systick_config+0x30>
 80049ae:	bf00      	nop
 80049b0:	200000e8 	andcs	r0, r0, r8, ror #1
 80049b4:	e000ed00 	and	lr, r0, r0, lsl #26

080049b8 <SysTick_Handler>:
 80049b8:	4a02      	ldr	r2, [pc, #8]	; (80049c4 <SysTick_Handler+0xc>)
 80049ba:	6813      	ldr	r3, [r2, #0]
 80049bc:	3301      	adds	r3, #1
 80049be:	6013      	str	r3, [r2, #0]
 80049c0:	4770      	bx	lr
 80049c2:	bf00      	nop
 80049c4:	20001818 	andcs	r1, r0, r8, lsl r8

080049c8 <udelay_init>:
 80049c8:	4a07      	ldr	r2, [pc, #28]	; (80049e8 <udelay_init+0x20>)
 80049ca:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 80049ce:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80049d2:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 80049d6:	2200      	movs	r2, #0
 80049d8:	4b04      	ldr	r3, [pc, #16]	; (80049ec <udelay_init+0x24>)
 80049da:	605a      	str	r2, [r3, #4]
 80049dc:	681a      	ldr	r2, [r3, #0]
 80049de:	f042 0201 	orr.w	r2, r2, #1
 80049e2:	601a      	str	r2, [r3, #0]
 80049e4:	4770      	bx	lr
 80049e6:	bf00      	nop
 80049e8:	e000ed00 	and	lr, r0, r0, lsl #26
 80049ec:	e0001000 	and	r1, r0, r0

080049f0 <udelay>:
 80049f0:	236c      	movs	r3, #108	; 0x6c
 80049f2:	4358      	muls	r0, r3
 80049f4:	2300      	movs	r3, #0
 80049f6:	b510      	push	{r4, lr}
 80049f8:	4c07      	ldr	r4, [pc, #28]	; (8004a18 <udelay+0x28>)
 80049fa:	6861      	ldr	r1, [r4, #4]
 80049fc:	6862      	ldr	r2, [r4, #4]
 80049fe:	4291      	cmp	r1, r2
 8004a00:	d0fc      	beq.n	80049fc <udelay+0xc>
 8004a02:	bf28      	it	cs
 8004a04:	f103 33ff 	addcs.w	r3, r3, #4294967295	; 0xffffffff
 8004a08:	1a5b      	subs	r3, r3, r1
 8004a0a:	4413      	add	r3, r2
 8004a0c:	4283      	cmp	r3, r0
 8004a0e:	d300      	bcc.n	8004a12 <udelay+0x22>
 8004a10:	bd10      	pop	{r4, pc}
 8004a12:	4611      	mov	r1, r2
 8004a14:	e7f2      	b.n	80049fc <udelay+0xc>
 8004a16:	bf00      	nop
 8004a18:	e0001000 	and	r1, r0, r0

08004a1c <SystemInit>:
 8004a1c:	4b32      	ldr	r3, [pc, #200]	; (8004ae8 <SystemInit+0xcc>)
 8004a1e:	4933      	ldr	r1, [pc, #204]	; (8004aec <SystemInit+0xd0>)
 8004a20:	681a      	ldr	r2, [r3, #0]
 8004a22:	f042 0201 	orr.w	r2, r2, #1
 8004a26:	601a      	str	r2, [r3, #0]
 8004a28:	685a      	ldr	r2, [r3, #4]
 8004a2a:	f022 0203 	bic.w	r2, r2, #3
 8004a2e:	605a      	str	r2, [r3, #4]
 8004a30:	681a      	ldr	r2, [r3, #0]
 8004a32:	400a      	ands	r2, r1
 8004a34:	601a      	str	r2, [r3, #0]
 8004a36:	6858      	ldr	r0, [r3, #4]
 8004a38:	4a2d      	ldr	r2, [pc, #180]	; (8004af0 <SystemInit+0xd4>)
 8004a3a:	4002      	ands	r2, r0
 8004a3c:	605a      	str	r2, [r3, #4]
 8004a3e:	681a      	ldr	r2, [r3, #0]
 8004a40:	400a      	ands	r2, r1
 8004a42:	601a      	str	r2, [r3, #0]
 8004a44:	681a      	ldr	r2, [r3, #0]
 8004a46:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004a4a:	601a      	str	r2, [r3, #0]
 8004a4c:	685a      	ldr	r2, [r3, #4]
 8004a4e:	f022 620f 	bic.w	r2, r2, #149946368	; 0x8f00000
 8004a52:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8004a56:	605a      	str	r2, [r3, #4]
 8004a58:	681a      	ldr	r2, [r3, #0]
 8004a5a:	400a      	ands	r2, r1
 8004a5c:	601a      	str	r2, [r3, #0]
 8004a5e:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 8004a62:	609a      	str	r2, [r3, #8]
 8004a64:	681a      	ldr	r2, [r3, #0]
 8004a66:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8004a6a:	601a      	str	r2, [r3, #0]
 8004a6c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004a70:	6819      	ldr	r1, [r3, #0]
 8004a72:	0389      	lsls	r1, r1, #14
 8004a74:	d401      	bmi.n	8004a7a <SystemInit+0x5e>
 8004a76:	3a01      	subs	r2, #1
 8004a78:	d1fa      	bne.n	8004a70 <SystemInit+0x54>
 8004a7a:	681a      	ldr	r2, [r3, #0]
 8004a7c:	0390      	lsls	r0, r2, #14
 8004a7e:	d400      	bmi.n	8004a82 <SystemInit+0x66>
 8004a80:	e7fe      	b.n	8004a80 <SystemInit+0x64>
 8004a82:	685a      	ldr	r2, [r3, #4]
 8004a84:	605a      	str	r2, [r3, #4]
 8004a86:	685a      	ldr	r2, [r3, #4]
 8004a88:	605a      	str	r2, [r3, #4]
 8004a8a:	685a      	ldr	r2, [r3, #4]
 8004a8c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004a90:	605a      	str	r2, [r3, #4]
 8004a92:	685a      	ldr	r2, [r3, #4]
 8004a94:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8004a98:	605a      	str	r2, [r3, #4]
 8004a9a:	685a      	ldr	r2, [r3, #4]
 8004a9c:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8004aa0:	605a      	str	r2, [r3, #4]
 8004aa2:	685a      	ldr	r2, [r3, #4]
 8004aa4:	f022 6203 	bic.w	r2, r2, #137363456	; 0x8300000
 8004aa8:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8004aac:	605a      	str	r2, [r3, #4]
 8004aae:	685a      	ldr	r2, [r3, #4]
 8004ab0:	f042 6202 	orr.w	r2, r2, #136314880	; 0x8200000
 8004ab4:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8004ab8:	605a      	str	r2, [r3, #4]
 8004aba:	681a      	ldr	r2, [r3, #0]
 8004abc:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8004ac0:	601a      	str	r2, [r3, #0]
 8004ac2:	681a      	ldr	r2, [r3, #0]
 8004ac4:	0191      	lsls	r1, r2, #6
 8004ac6:	d5fc      	bpl.n	8004ac2 <SystemInit+0xa6>
 8004ac8:	685a      	ldr	r2, [r3, #4]
 8004aca:	f022 0203 	bic.w	r2, r2, #3
 8004ace:	605a      	str	r2, [r3, #4]
 8004ad0:	685a      	ldr	r2, [r3, #4]
 8004ad2:	f042 0202 	orr.w	r2, r2, #2
 8004ad6:	605a      	str	r2, [r3, #4]
 8004ad8:	685a      	ldr	r2, [r3, #4]
 8004ada:	0712      	lsls	r2, r2, #28
 8004adc:	d5fc      	bpl.n	8004ad8 <SystemInit+0xbc>
 8004ade:	2100      	movs	r1, #0
 8004ae0:	f04f 6000 	mov.w	r0, #134217728	; 0x8000000
 8004ae4:	f000 bafc 	b.w	80050e0 <nvic_vector_table_set>
 8004ae8:	40021000 	andmi	r1, r2, r0
 8004aec:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 8004af0:	e8ff000c 	ldm	pc!, {r2, r3}^	; <UNPREDICTABLE>

08004af4 <adc_mode_config>:
 8004af4:	4b06      	ldr	r3, [pc, #24]	; (8004b10 <adc_mode_config+0x1c>)
 8004af6:	f8d3 1404 	ldr.w	r1, [r3, #1028]	; 0x404
 8004afa:	f421 2170 	bic.w	r1, r1, #983040	; 0xf0000
 8004afe:	f8c3 1404 	str.w	r1, [r3, #1028]	; 0x404
 8004b02:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8004b06:	4302      	orrs	r2, r0
 8004b08:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8004b0c:	4770      	bx	lr
 8004b0e:	bf00      	nop
 8004b10:	40012000 	andmi	r2, r1, r0

08004b14 <adc_special_function_config>:
 8004b14:	b510      	push	{r4, lr}
 8004b16:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8004b1a:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8004b1e:	f001 0102 	and.w	r1, r1, #2
 8004b22:	b17a      	cbz	r2, 8004b44 <adc_special_function_config+0x30>
 8004b24:	b11b      	cbz	r3, 8004b2e <adc_special_function_config+0x1a>
 8004b26:	6843      	ldr	r3, [r0, #4]
 8004b28:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004b2c:	6043      	str	r3, [r0, #4]
 8004b2e:	b11c      	cbz	r4, 8004b38 <adc_special_function_config+0x24>
 8004b30:	6843      	ldr	r3, [r0, #4]
 8004b32:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8004b36:	6043      	str	r3, [r0, #4]
 8004b38:	b119      	cbz	r1, 8004b42 <adc_special_function_config+0x2e>
 8004b3a:	6883      	ldr	r3, [r0, #8]
 8004b3c:	f043 0302 	orr.w	r3, r3, #2
 8004b40:	6083      	str	r3, [r0, #8]
 8004b42:	bd10      	pop	{r4, pc}
 8004b44:	b11b      	cbz	r3, 8004b4e <adc_special_function_config+0x3a>
 8004b46:	6843      	ldr	r3, [r0, #4]
 8004b48:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004b4c:	6043      	str	r3, [r0, #4]
 8004b4e:	b11c      	cbz	r4, 8004b58 <adc_special_function_config+0x44>
 8004b50:	6843      	ldr	r3, [r0, #4]
 8004b52:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8004b56:	6043      	str	r3, [r0, #4]
 8004b58:	2900      	cmp	r1, #0
 8004b5a:	d0f2      	beq.n	8004b42 <adc_special_function_config+0x2e>
 8004b5c:	6883      	ldr	r3, [r0, #8]
 8004b5e:	f023 0302 	bic.w	r3, r3, #2
 8004b62:	e7ed      	b.n	8004b40 <adc_special_function_config+0x2c>

08004b64 <adc_data_alignment_config>:
 8004b64:	6883      	ldr	r3, [r0, #8]
 8004b66:	b119      	cbz	r1, 8004b70 <adc_data_alignment_config+0xc>
 8004b68:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8004b6c:	6083      	str	r3, [r0, #8]
 8004b6e:	4770      	bx	lr
 8004b70:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004b74:	e7fa      	b.n	8004b6c <adc_data_alignment_config+0x8>

08004b76 <adc_enable>:
 8004b76:	6883      	ldr	r3, [r0, #8]
 8004b78:	07db      	lsls	r3, r3, #31
 8004b7a:	bf5e      	ittt	pl
 8004b7c:	6883      	ldrpl	r3, [r0, #8]
 8004b7e:	f043 0301 	orrpl.w	r3, r3, #1
 8004b82:	6083      	strpl	r3, [r0, #8]
 8004b84:	4770      	bx	lr

08004b86 <adc_calibration_enable>:
 8004b86:	6883      	ldr	r3, [r0, #8]
 8004b88:	f100 0208 	add.w	r2, r0, #8
 8004b8c:	f043 0308 	orr.w	r3, r3, #8
 8004b90:	6083      	str	r3, [r0, #8]
 8004b92:	6813      	ldr	r3, [r2, #0]
 8004b94:	0719      	lsls	r1, r3, #28
 8004b96:	d4fc      	bmi.n	8004b92 <adc_calibration_enable+0xc>
 8004b98:	6883      	ldr	r3, [r0, #8]
 8004b9a:	f043 0304 	orr.w	r3, r3, #4
 8004b9e:	6083      	str	r3, [r0, #8]
 8004ba0:	6813      	ldr	r3, [r2, #0]
 8004ba2:	075b      	lsls	r3, r3, #29
 8004ba4:	d4fc      	bmi.n	8004ba0 <adc_calibration_enable+0x1a>
 8004ba6:	4770      	bx	lr

08004ba8 <adc_tempsensor_vrefint_enable>:
 8004ba8:	4a03      	ldr	r2, [pc, #12]	; (8004bb8 <adc_tempsensor_vrefint_enable+0x10>)
 8004baa:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8004bae:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8004bb2:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8004bb6:	4770      	bx	lr
 8004bb8:	40012000 	andmi	r2, r1, r0

08004bbc <adc_channel_length_config>:
 8004bbc:	2901      	cmp	r1, #1
 8004bbe:	d002      	beq.n	8004bc6 <adc_channel_length_config+0xa>
 8004bc0:	2902      	cmp	r1, #2
 8004bc2:	d00c      	beq.n	8004bde <adc_channel_length_config+0x22>
 8004bc4:	4770      	bx	lr
 8004bc6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8004bc8:	3a01      	subs	r2, #1
 8004bca:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8004bce:	62c3      	str	r3, [r0, #44]	; 0x2c
 8004bd0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8004bd2:	0512      	lsls	r2, r2, #20
 8004bd4:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8004bd8:	431a      	orrs	r2, r3
 8004bda:	62c2      	str	r2, [r0, #44]	; 0x2c
 8004bdc:	4770      	bx	lr
 8004bde:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8004be0:	3a01      	subs	r2, #1
 8004be2:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8004be6:	6383      	str	r3, [r0, #56]	; 0x38
 8004be8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8004bea:	0512      	lsls	r2, r2, #20
 8004bec:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8004bf0:	431a      	orrs	r2, r3
 8004bf2:	6382      	str	r2, [r0, #56]	; 0x38
 8004bf4:	4770      	bx	lr

08004bf6 <adc_inserted_channel_config>:
 8004bf6:	b530      	push	{r4, r5, lr}
 8004bf8:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8004bfa:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8004bfc:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8004c00:	1a61      	subs	r1, r4, r1
 8004c02:	f06f 0404 	mvn.w	r4, #4
 8004c06:	4361      	muls	r1, r4
 8004c08:	241f      	movs	r4, #31
 8004c0a:	310f      	adds	r1, #15
 8004c0c:	408c      	lsls	r4, r1
 8004c0e:	ea25 0504 	bic.w	r5, r5, r4
 8004c12:	fa02 f101 	lsl.w	r1, r2, r1
 8004c16:	4329      	orrs	r1, r5
 8004c18:	2a09      	cmp	r2, #9
 8004c1a:	6381      	str	r1, [r0, #56]	; 0x38
 8004c1c:	d80b      	bhi.n	8004c36 <adc_inserted_channel_config+0x40>
 8004c1e:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 8004c22:	2207      	movs	r2, #7
 8004c24:	6904      	ldr	r4, [r0, #16]
 8004c26:	408a      	lsls	r2, r1
 8004c28:	ea24 0402 	bic.w	r4, r4, r2
 8004c2c:	fa03 f201 	lsl.w	r2, r3, r1
 8004c30:	4322      	orrs	r2, r4
 8004c32:	6102      	str	r2, [r0, #16]
 8004c34:	bd30      	pop	{r4, r5, pc}
 8004c36:	2a11      	cmp	r2, #17
 8004c38:	d8fc      	bhi.n	8004c34 <adc_inserted_channel_config+0x3e>
 8004c3a:	2407      	movs	r4, #7
 8004c3c:	3a0a      	subs	r2, #10
 8004c3e:	68c1      	ldr	r1, [r0, #12]
 8004c40:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8004c44:	4094      	lsls	r4, r2
 8004c46:	ea21 0104 	bic.w	r1, r1, r4
 8004c4a:	fa03 f202 	lsl.w	r2, r3, r2
 8004c4e:	430a      	orrs	r2, r1
 8004c50:	60c2      	str	r2, [r0, #12]
 8004c52:	e7ef      	b.n	8004c34 <adc_inserted_channel_config+0x3e>

08004c54 <adc_external_trigger_source_config>:
 8004c54:	2901      	cmp	r1, #1
 8004c56:	d002      	beq.n	8004c5e <adc_external_trigger_source_config+0xa>
 8004c58:	2902      	cmp	r1, #2
 8004c5a:	d008      	beq.n	8004c6e <adc_external_trigger_source_config+0x1a>
 8004c5c:	4770      	bx	lr
 8004c5e:	6883      	ldr	r3, [r0, #8]
 8004c60:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8004c64:	6083      	str	r3, [r0, #8]
 8004c66:	6883      	ldr	r3, [r0, #8]
 8004c68:	431a      	orrs	r2, r3
 8004c6a:	6082      	str	r2, [r0, #8]
 8004c6c:	4770      	bx	lr
 8004c6e:	6883      	ldr	r3, [r0, #8]
 8004c70:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004c74:	e7f6      	b.n	8004c64 <adc_external_trigger_source_config+0x10>

08004c76 <adc_external_trigger_config>:
 8004c76:	f001 0301 	and.w	r3, r1, #1
 8004c7a:	f001 0102 	and.w	r1, r1, #2
 8004c7e:	b152      	cbz	r2, 8004c96 <adc_external_trigger_config+0x20>
 8004c80:	b11b      	cbz	r3, 8004c8a <adc_external_trigger_config+0x14>
 8004c82:	6883      	ldr	r3, [r0, #8]
 8004c84:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004c88:	6083      	str	r3, [r0, #8]
 8004c8a:	b119      	cbz	r1, 8004c94 <adc_external_trigger_config+0x1e>
 8004c8c:	6883      	ldr	r3, [r0, #8]
 8004c8e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004c92:	6083      	str	r3, [r0, #8]
 8004c94:	4770      	bx	lr
 8004c96:	b11b      	cbz	r3, 8004ca0 <adc_external_trigger_config+0x2a>
 8004c98:	6883      	ldr	r3, [r0, #8]
 8004c9a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8004c9e:	6083      	str	r3, [r0, #8]
 8004ca0:	2900      	cmp	r1, #0
 8004ca2:	d0f7      	beq.n	8004c94 <adc_external_trigger_config+0x1e>
 8004ca4:	6883      	ldr	r3, [r0, #8]
 8004ca6:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8004caa:	e7f2      	b.n	8004c92 <adc_external_trigger_config+0x1c>

08004cac <adc_software_trigger_enable>:
 8004cac:	07ca      	lsls	r2, r1, #31
 8004cae:	bf42      	ittt	mi
 8004cb0:	6883      	ldrmi	r3, [r0, #8]
 8004cb2:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8004cb6:	6083      	strmi	r3, [r0, #8]
 8004cb8:	078b      	lsls	r3, r1, #30
 8004cba:	bf42      	ittt	mi
 8004cbc:	6883      	ldrmi	r3, [r0, #8]
 8004cbe:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8004cc2:	6083      	strmi	r3, [r0, #8]
 8004cc4:	4770      	bx	lr
	...

08004cc8 <dma_deinit>:
 8004cc8:	4b0c      	ldr	r3, [pc, #48]	; (8004cfc <dma_deinit+0x34>)
 8004cca:	4298      	cmp	r0, r3
 8004ccc:	d102      	bne.n	8004cd4 <dma_deinit+0xc>
 8004cce:	2904      	cmp	r1, #4
 8004cd0:	d900      	bls.n	8004cd4 <dma_deinit+0xc>
 8004cd2:	e7fe      	b.n	8004cd2 <dma_deinit+0xa>
 8004cd4:	2314      	movs	r3, #20
 8004cd6:	fb03 0301 	mla	r3, r3, r1, r0
 8004cda:	689a      	ldr	r2, [r3, #8]
 8004cdc:	0089      	lsls	r1, r1, #2
 8004cde:	f022 0201 	bic.w	r2, r2, #1
 8004ce2:	609a      	str	r2, [r3, #8]
 8004ce4:	2200      	movs	r2, #0
 8004ce6:	609a      	str	r2, [r3, #8]
 8004ce8:	60da      	str	r2, [r3, #12]
 8004cea:	611a      	str	r2, [r3, #16]
 8004cec:	615a      	str	r2, [r3, #20]
 8004cee:	230f      	movs	r3, #15
 8004cf0:	6842      	ldr	r2, [r0, #4]
 8004cf2:	fa03 f101 	lsl.w	r1, r3, r1
 8004cf6:	4311      	orrs	r1, r2
 8004cf8:	6041      	str	r1, [r0, #4]
 8004cfa:	4770      	bx	lr
 8004cfc:	40020400 	andmi	r0, r2, r0, lsl #8

08004d00 <dma_init>:
 8004d00:	4b1b      	ldr	r3, [pc, #108]	; (8004d70 <dma_init+0x70>)
 8004d02:	b510      	push	{r4, lr}
 8004d04:	4298      	cmp	r0, r3
 8004d06:	d102      	bne.n	8004d0e <dma_init+0xe>
 8004d08:	2904      	cmp	r1, #4
 8004d0a:	d900      	bls.n	8004d0e <dma_init+0xe>
 8004d0c:	e7fe      	b.n	8004d0c <dma_init+0xc>
 8004d0e:	2314      	movs	r3, #20
 8004d10:	fb03 0101 	mla	r1, r3, r1, r0
 8004d14:	6813      	ldr	r3, [r2, #0]
 8004d16:	610b      	str	r3, [r1, #16]
 8004d18:	6893      	ldr	r3, [r2, #8]
 8004d1a:	614b      	str	r3, [r1, #20]
 8004d1c:	8a13      	ldrh	r3, [r2, #16]
 8004d1e:	60cb      	str	r3, [r1, #12]
 8004d20:	68d4      	ldr	r4, [r2, #12]
 8004d22:	6853      	ldr	r3, [r2, #4]
 8004d24:	6888      	ldr	r0, [r1, #8]
 8004d26:	4323      	orrs	r3, r4
 8004d28:	6954      	ldr	r4, [r2, #20]
 8004d2a:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8004d2e:	4323      	orrs	r3, r4
 8004d30:	4303      	orrs	r3, r0
 8004d32:	608b      	str	r3, [r1, #8]
 8004d34:	7e13      	ldrb	r3, [r2, #24]
 8004d36:	2b01      	cmp	r3, #1
 8004d38:	688b      	ldr	r3, [r1, #8]
 8004d3a:	bf0c      	ite	eq
 8004d3c:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8004d40:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8004d44:	608b      	str	r3, [r1, #8]
 8004d46:	7e53      	ldrb	r3, [r2, #25]
 8004d48:	2b01      	cmp	r3, #1
 8004d4a:	688b      	ldr	r3, [r1, #8]
 8004d4c:	bf0c      	ite	eq
 8004d4e:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8004d52:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8004d56:	608b      	str	r3, [r1, #8]
 8004d58:	7e93      	ldrb	r3, [r2, #26]
 8004d5a:	b923      	cbnz	r3, 8004d66 <dma_init+0x66>
 8004d5c:	688b      	ldr	r3, [r1, #8]
 8004d5e:	f023 0310 	bic.w	r3, r3, #16
 8004d62:	608b      	str	r3, [r1, #8]
 8004d64:	bd10      	pop	{r4, pc}
 8004d66:	688b      	ldr	r3, [r1, #8]
 8004d68:	f043 0310 	orr.w	r3, r3, #16
 8004d6c:	e7f9      	b.n	8004d62 <dma_init+0x62>
 8004d6e:	bf00      	nop
 8004d70:	40020400 	andmi	r0, r2, r0, lsl #8

08004d74 <dma_circulation_disable>:
 8004d74:	4b06      	ldr	r3, [pc, #24]	; (8004d90 <dma_circulation_disable+0x1c>)
 8004d76:	4298      	cmp	r0, r3
 8004d78:	d102      	bne.n	8004d80 <dma_circulation_disable+0xc>
 8004d7a:	2904      	cmp	r1, #4
 8004d7c:	d900      	bls.n	8004d80 <dma_circulation_disable+0xc>
 8004d7e:	e7fe      	b.n	8004d7e <dma_circulation_disable+0xa>
 8004d80:	2314      	movs	r3, #20
 8004d82:	4359      	muls	r1, r3
 8004d84:	3008      	adds	r0, #8
 8004d86:	580b      	ldr	r3, [r1, r0]
 8004d88:	f023 0320 	bic.w	r3, r3, #32
 8004d8c:	500b      	str	r3, [r1, r0]
 8004d8e:	4770      	bx	lr
 8004d90:	40020400 	andmi	r0, r2, r0, lsl #8

08004d94 <dma_memory_to_memory_disable>:
 8004d94:	4b06      	ldr	r3, [pc, #24]	; (8004db0 <dma_memory_to_memory_disable+0x1c>)
 8004d96:	4298      	cmp	r0, r3
 8004d98:	d102      	bne.n	8004da0 <dma_memory_to_memory_disable+0xc>
 8004d9a:	2904      	cmp	r1, #4
 8004d9c:	d900      	bls.n	8004da0 <dma_memory_to_memory_disable+0xc>
 8004d9e:	e7fe      	b.n	8004d9e <dma_memory_to_memory_disable+0xa>
 8004da0:	2314      	movs	r3, #20
 8004da2:	4359      	muls	r1, r3
 8004da4:	3008      	adds	r0, #8
 8004da6:	580b      	ldr	r3, [r1, r0]
 8004da8:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8004dac:	500b      	str	r3, [r1, r0]
 8004dae:	4770      	bx	lr
 8004db0:	40020400 	andmi	r0, r2, r0, lsl #8

08004db4 <fmc_bank0_unlock>:
 8004db4:	4b04      	ldr	r3, [pc, #16]	; (8004dc8 <fmc_bank0_unlock+0x14>)
 8004db6:	691a      	ldr	r2, [r3, #16]
 8004db8:	0612      	lsls	r2, r2, #24
 8004dba:	bf41      	itttt	mi
 8004dbc:	4a03      	ldrmi	r2, [pc, #12]	; (8004dcc <fmc_bank0_unlock+0x18>)
 8004dbe:	605a      	strmi	r2, [r3, #4]
 8004dc0:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8004dc4:	605a      	strmi	r2, [r3, #4]
 8004dc6:	4770      	bx	lr
 8004dc8:	40022000 	andmi	r2, r2, r0
 8004dcc:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08004dd0 <fmc_bank0_lock>:
 8004dd0:	4a02      	ldr	r2, [pc, #8]	; (8004ddc <fmc_bank0_lock+0xc>)
 8004dd2:	6913      	ldr	r3, [r2, #16]
 8004dd4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004dd8:	6113      	str	r3, [r2, #16]
 8004dda:	4770      	bx	lr
 8004ddc:	40022000 	andmi	r2, r2, r0

08004de0 <fmc_bank0_state_get>:
 8004de0:	4b08      	ldr	r3, [pc, #32]	; (8004e04 <fmc_bank0_state_get+0x24>)
 8004de2:	68da      	ldr	r2, [r3, #12]
 8004de4:	07d1      	lsls	r1, r2, #31
 8004de6:	d409      	bmi.n	8004dfc <fmc_bank0_state_get+0x1c>
 8004de8:	68da      	ldr	r2, [r3, #12]
 8004dea:	06d2      	lsls	r2, r2, #27
 8004dec:	d408      	bmi.n	8004e00 <fmc_bank0_state_get+0x20>
 8004dee:	68db      	ldr	r3, [r3, #12]
 8004df0:	f013 0f04 	tst.w	r3, #4
 8004df4:	bf0c      	ite	eq
 8004df6:	2000      	moveq	r0, #0
 8004df8:	2002      	movne	r0, #2
 8004dfa:	4770      	bx	lr
 8004dfc:	2001      	movs	r0, #1
 8004dfe:	4770      	bx	lr
 8004e00:	2003      	movs	r0, #3
 8004e02:	4770      	bx	lr
 8004e04:	40022000 	andmi	r2, r2, r0

08004e08 <fwdgt_enable>:
 8004e08:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8004e0c:	4b01      	ldr	r3, [pc, #4]	; (8004e14 <fwdgt_enable+0xc>)
 8004e0e:	601a      	str	r2, [r3, #0]
 8004e10:	4770      	bx	lr
 8004e12:	bf00      	nop
 8004e14:	40003000 	andmi	r3, r0, r0

08004e18 <fwdgt_counter_reload>:
 8004e18:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8004e1c:	4b01      	ldr	r3, [pc, #4]	; (8004e24 <fwdgt_counter_reload+0xc>)
 8004e1e:	601a      	str	r2, [r3, #0]
 8004e20:	4770      	bx	lr
 8004e22:	bf00      	nop
 8004e24:	40003000 	andmi	r3, r0, r0

08004e28 <fwdgt_config>:
 8004e28:	f245 5355 	movw	r3, #21845	; 0x5555
 8004e2c:	4a11      	ldr	r2, [pc, #68]	; (8004e74 <fwdgt_config+0x4c>)
 8004e2e:	b510      	push	{r4, lr}
 8004e30:	4c11      	ldr	r4, [pc, #68]	; (8004e78 <fwdgt_config+0x50>)
 8004e32:	6013      	str	r3, [r2, #0]
 8004e34:	68d3      	ldr	r3, [r2, #12]
 8004e36:	3c01      	subs	r4, #1
 8004e38:	f003 0301 	and.w	r3, r3, #1
 8004e3c:	d013      	beq.n	8004e66 <fwdgt_config+0x3e>
 8004e3e:	2b00      	cmp	r3, #0
 8004e40:	d1f8      	bne.n	8004e34 <fwdgt_config+0xc>
 8004e42:	6051      	str	r1, [r2, #4]
 8004e44:	490c      	ldr	r1, [pc, #48]	; (8004e78 <fwdgt_config+0x50>)
 8004e46:	4a0b      	ldr	r2, [pc, #44]	; (8004e74 <fwdgt_config+0x4c>)
 8004e48:	68d3      	ldr	r3, [r2, #12]
 8004e4a:	3901      	subs	r1, #1
 8004e4c:	f003 0302 	and.w	r3, r3, #2
 8004e50:	d00d      	beq.n	8004e6e <fwdgt_config+0x46>
 8004e52:	2b00      	cmp	r3, #0
 8004e54:	d1f8      	bne.n	8004e48 <fwdgt_config+0x20>
 8004e56:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8004e5a:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8004e5e:	6090      	str	r0, [r2, #8]
 8004e60:	2001      	movs	r0, #1
 8004e62:	6013      	str	r3, [r2, #0]
 8004e64:	e002      	b.n	8004e6c <fwdgt_config+0x44>
 8004e66:	2b00      	cmp	r3, #0
 8004e68:	d0eb      	beq.n	8004e42 <fwdgt_config+0x1a>
 8004e6a:	2000      	movs	r0, #0
 8004e6c:	bd10      	pop	{r4, pc}
 8004e6e:	2b00      	cmp	r3, #0
 8004e70:	d1fb      	bne.n	8004e6a <fwdgt_config+0x42>
 8004e72:	e7f0      	b.n	8004e56 <fwdgt_config+0x2e>
 8004e74:	40003000 	andmi	r3, r0, r0
 8004e78:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08004e7c <gpio_init>:
 8004e7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e80:	f04f 0c0f 	mov.w	ip, #15
 8004e84:	06cf      	lsls	r7, r1, #27
 8004e86:	f04f 0400 	mov.w	r4, #0
 8004e8a:	f04f 0701 	mov.w	r7, #1
 8004e8e:	f001 050f 	and.w	r5, r1, #15
 8004e92:	bf48      	it	mi
 8004e94:	4315      	orrmi	r5, r2
 8004e96:	fa23 f204 	lsr.w	r2, r3, r4
 8004e9a:	07d6      	lsls	r6, r2, #31
 8004e9c:	d510      	bpl.n	8004ec0 <gpio_init+0x44>
 8004e9e:	00a2      	lsls	r2, r4, #2
 8004ea0:	6806      	ldr	r6, [r0, #0]
 8004ea2:	fa0c fe02 	lsl.w	lr, ip, r2
 8004ea6:	ea26 060e 	bic.w	r6, r6, lr
 8004eaa:	fa05 f202 	lsl.w	r2, r5, r2
 8004eae:	2928      	cmp	r1, #40	; 0x28
 8004eb0:	ea42 0206 	orr.w	r2, r2, r6
 8004eb4:	d128      	bne.n	8004f08 <gpio_init+0x8c>
 8004eb6:	fa07 f604 	lsl.w	r6, r7, r4
 8004eba:	401e      	ands	r6, r3
 8004ebc:	6146      	str	r6, [r0, #20]
 8004ebe:	6002      	str	r2, [r0, #0]
 8004ec0:	3401      	adds	r4, #1
 8004ec2:	2c08      	cmp	r4, #8
 8004ec4:	d1e7      	bne.n	8004e96 <gpio_init+0x1a>
 8004ec6:	2600      	movs	r6, #0
 8004ec8:	f04f 0c0f 	mov.w	ip, #15
 8004ecc:	2701      	movs	r7, #1
 8004ece:	f106 0208 	add.w	r2, r6, #8
 8004ed2:	fa23 f402 	lsr.w	r4, r3, r2
 8004ed6:	07e4      	lsls	r4, r4, #31
 8004ed8:	d511      	bpl.n	8004efe <gpio_init+0x82>
 8004eda:	00b4      	lsls	r4, r6, #2
 8004edc:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8004ee0:	fa0c f804 	lsl.w	r8, ip, r4
 8004ee4:	ea2e 0e08 	bic.w	lr, lr, r8
 8004ee8:	fa05 f404 	lsl.w	r4, r5, r4
 8004eec:	2928      	cmp	r1, #40	; 0x28
 8004eee:	ea44 040e 	orr.w	r4, r4, lr
 8004ef2:	d110      	bne.n	8004f16 <gpio_init+0x9a>
 8004ef4:	fa07 f202 	lsl.w	r2, r7, r2
 8004ef8:	401a      	ands	r2, r3
 8004efa:	6142      	str	r2, [r0, #20]
 8004efc:	6044      	str	r4, [r0, #4]
 8004efe:	3601      	adds	r6, #1
 8004f00:	2e08      	cmp	r6, #8
 8004f02:	d1e4      	bne.n	8004ece <gpio_init+0x52>
 8004f04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004f08:	2948      	cmp	r1, #72	; 0x48
 8004f0a:	bf02      	ittt	eq
 8004f0c:	fa07 f604 	lsleq.w	r6, r7, r4
 8004f10:	401e      	andeq	r6, r3
 8004f12:	6106      	streq	r6, [r0, #16]
 8004f14:	e7d3      	b.n	8004ebe <gpio_init+0x42>
 8004f16:	2948      	cmp	r1, #72	; 0x48
 8004f18:	bf02      	ittt	eq
 8004f1a:	fa07 f202 	lsleq.w	r2, r7, r2
 8004f1e:	401a      	andeq	r2, r3
 8004f20:	6102      	streq	r2, [r0, #16]
 8004f22:	e7eb      	b.n	8004efc <gpio_init+0x80>

08004f24 <gpio_input_bit_get>:
 8004f24:	6883      	ldr	r3, [r0, #8]
 8004f26:	420b      	tst	r3, r1
 8004f28:	bf14      	ite	ne
 8004f2a:	2001      	movne	r0, #1
 8004f2c:	2000      	moveq	r0, #0
 8004f2e:	4770      	bx	lr

08004f30 <gpio_pin_remap_config>:
 8004f30:	2800      	cmp	r0, #0
 8004f32:	4a16      	ldr	r2, [pc, #88]	; (8004f8c <gpio_pin_remap_config+0x5c>)
 8004f34:	b530      	push	{r4, r5, lr}
 8004f36:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8004f3a:	bfb4      	ite	lt
 8004f3c:	69d3      	ldrlt	r3, [r2, #28]
 8004f3e:	6853      	ldrge	r3, [r2, #4]
 8004f40:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8004f44:	b284      	uxth	r4, r0
 8004f46:	d110      	bne.n	8004f6a <gpio_pin_remap_config+0x3a>
 8004f48:	6855      	ldr	r5, [r2, #4]
 8004f4a:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8004f4e:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 8004f52:	6055      	str	r5, [r2, #4]
 8004f54:	b119      	cbz	r1, 8004f5e <gpio_pin_remap_config+0x2e>
 8004f56:	0d42      	lsrs	r2, r0, #21
 8004f58:	0112      	lsls	r2, r2, #4
 8004f5a:	4094      	lsls	r4, r2
 8004f5c:	4323      	orrs	r3, r4
 8004f5e:	4a0b      	ldr	r2, [pc, #44]	; (8004f8c <gpio_pin_remap_config+0x5c>)
 8004f60:	2800      	cmp	r0, #0
 8004f62:	bfb4      	ite	lt
 8004f64:	61d3      	strlt	r3, [r2, #28]
 8004f66:	6053      	strge	r3, [r2, #4]
 8004f68:	bd30      	pop	{r4, r5, pc}
 8004f6a:	02c2      	lsls	r2, r0, #11
 8004f6c:	bf4d      	iteet	mi
 8004f6e:	2203      	movmi	r2, #3
 8004f70:	0d42      	lsrpl	r2, r0, #21
 8004f72:	0112      	lslpl	r2, r2, #4
 8004f74:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8004f78:	bf4c      	ite	mi
 8004f7a:	40aa      	lslmi	r2, r5
 8004f7c:	fa04 f202 	lslpl.w	r2, r4, r2
 8004f80:	ea23 0302 	bic.w	r3, r3, r2
 8004f84:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8004f88:	e7e4      	b.n	8004f54 <gpio_pin_remap_config+0x24>
 8004f8a:	bf00      	nop
 8004f8c:	40010000 	andmi	r0, r1, r0

08004f90 <i2c_clock_config>:
 8004f90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004f92:	4605      	mov	r5, r0
 8004f94:	2002      	movs	r0, #2
 8004f96:	460c      	mov	r4, r1
 8004f98:	4617      	mov	r7, r2
 8004f9a:	f000 f8eb 	bl	8005174 <rcu_clock_freq_get>
 8004f9e:	4927      	ldr	r1, [pc, #156]	; (800503c <i2c_clock_config+0xac>)
 8004fa0:	4a27      	ldr	r2, [pc, #156]	; (8005040 <i2c_clock_config+0xb0>)
 8004fa2:	fbb0 f1f1 	udiv	r1, r0, r1
 8004fa6:	4290      	cmp	r0, r2
 8004fa8:	bf34      	ite	cc
 8004faa:	460b      	movcc	r3, r1
 8004fac:	2336      	movcs	r3, #54	; 0x36
 8004fae:	686e      	ldr	r6, [r5, #4]
 8004fb0:	4a24      	ldr	r2, [pc, #144]	; (8005044 <i2c_clock_config+0xb4>)
 8004fb2:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8004fb6:	431e      	orrs	r6, r3
 8004fb8:	4294      	cmp	r4, r2
 8004fba:	606e      	str	r6, [r5, #4]
 8004fbc:	d816      	bhi.n	8004fec <i2c_clock_config+0x5c>
 8004fbe:	3101      	adds	r1, #1
 8004fc0:	2935      	cmp	r1, #53	; 0x35
 8004fc2:	d90d      	bls.n	8004fe0 <i2c_clock_config+0x50>
 8004fc4:	2336      	movs	r3, #54	; 0x36
 8004fc6:	622b      	str	r3, [r5, #32]
 8004fc8:	0064      	lsls	r4, r4, #1
 8004fca:	fbb0 f4f4 	udiv	r4, r0, r4
 8004fce:	2c04      	cmp	r4, #4
 8004fd0:	bf38      	it	cc
 8004fd2:	2404      	movcc	r4, #4
 8004fd4:	69e8      	ldr	r0, [r5, #28]
 8004fd6:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8004fda:	4304      	orrs	r4, r0
 8004fdc:	61ec      	str	r4, [r5, #28]
 8004fde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004fe0:	2902      	cmp	r1, #2
 8004fe2:	d801      	bhi.n	8004fe8 <i2c_clock_config+0x58>
 8004fe4:	2302      	movs	r3, #2
 8004fe6:	e7ee      	b.n	8004fc6 <i2c_clock_config+0x36>
 8004fe8:	6229      	str	r1, [r5, #32]
 8004fea:	e7ed      	b.n	8004fc8 <i2c_clock_config+0x38>
 8004fec:	4a16      	ldr	r2, [pc, #88]	; (8005048 <i2c_clock_config+0xb8>)
 8004fee:	4294      	cmp	r4, r2
 8004ff0:	d8f5      	bhi.n	8004fde <i2c_clock_config+0x4e>
 8004ff2:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8004ff6:	4353      	muls	r3, r2
 8004ff8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004ffc:	fbb3 f3f2 	udiv	r3, r3, r2
 8005000:	3301      	adds	r3, #1
 8005002:	622b      	str	r3, [r5, #32]
 8005004:	b997      	cbnz	r7, 800502c <i2c_clock_config+0x9c>
 8005006:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800500a:	fbb0 f4f4 	udiv	r4, r0, r4
 800500e:	69eb      	ldr	r3, [r5, #28]
 8005010:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8005014:	61eb      	str	r3, [r5, #28]
 8005016:	f3c4 030b 	ubfx	r3, r4, #0, #12
 800501a:	b90b      	cbnz	r3, 8005020 <i2c_clock_config+0x90>
 800501c:	f044 0401 	orr.w	r4, r4, #1
 8005020:	69eb      	ldr	r3, [r5, #28]
 8005022:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005026:	61eb      	str	r3, [r5, #28]
 8005028:	69e8      	ldr	r0, [r5, #28]
 800502a:	e7d6      	b.n	8004fda <i2c_clock_config+0x4a>
 800502c:	2119      	movs	r1, #25
 800502e:	434c      	muls	r4, r1
 8005030:	69eb      	ldr	r3, [r5, #28]
 8005032:	fbb0 f4f4 	udiv	r4, r0, r4
 8005036:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800503a:	e7eb      	b.n	8005014 <i2c_clock_config+0x84>
 800503c:	000f4240 	andeq	r4, pc, r0, asr #4
 8005040:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8005044:	000186a0 	andeq	r8, r1, r0, lsr #13
 8005048:	00061a80 	andeq	r1, r6, r0, lsl #21

0800504c <i2c_ack_config>:
 800504c:	6803      	ldr	r3, [r0, #0]
 800504e:	2901      	cmp	r1, #1
 8005050:	bf0c      	ite	eq
 8005052:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8005056:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 800505a:	6003      	str	r3, [r0, #0]
 800505c:	4770      	bx	lr

0800505e <i2c_ackpos_config>:
 800505e:	6803      	ldr	r3, [r0, #0]
 8005060:	b919      	cbnz	r1, 800506a <i2c_ackpos_config+0xc>
 8005062:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8005066:	6003      	str	r3, [r0, #0]
 8005068:	4770      	bx	lr
 800506a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800506e:	e7fa      	b.n	8005066 <i2c_ackpos_config+0x8>

08005070 <i2c_master_addressing>:
 8005070:	3202      	adds	r2, #2
 8005072:	bf0c      	ite	eq
 8005074:	f021 0101 	biceq.w	r1, r1, #1
 8005078:	f041 0101 	orrne.w	r1, r1, #1
 800507c:	6101      	str	r1, [r0, #16]
 800507e:	4770      	bx	lr

08005080 <i2c_enable>:
 8005080:	6803      	ldr	r3, [r0, #0]
 8005082:	f043 0301 	orr.w	r3, r3, #1
 8005086:	6003      	str	r3, [r0, #0]
 8005088:	4770      	bx	lr

0800508a <i2c_start_on_bus>:
 800508a:	6803      	ldr	r3, [r0, #0]
 800508c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005090:	6003      	str	r3, [r0, #0]
 8005092:	4770      	bx	lr

08005094 <i2c_stop_on_bus>:
 8005094:	6803      	ldr	r3, [r0, #0]
 8005096:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800509a:	6003      	str	r3, [r0, #0]
 800509c:	4770      	bx	lr

0800509e <i2c_data_transmit>:
 800509e:	6101      	str	r1, [r0, #16]
 80050a0:	4770      	bx	lr

080050a2 <i2c_data_receive>:
 80050a2:	6900      	ldr	r0, [r0, #16]
 80050a4:	b2c0      	uxtb	r0, r0
 80050a6:	4770      	bx	lr

080050a8 <i2c_flag_get>:
 80050a8:	098b      	lsrs	r3, r1, #6
 80050aa:	5818      	ldr	r0, [r3, r0]
 80050ac:	f001 011f 	and.w	r1, r1, #31
 80050b0:	40c8      	lsrs	r0, r1
 80050b2:	f000 0001 	and.w	r0, r0, #1
 80050b6:	4770      	bx	lr

080050b8 <i2c_flag_clear>:
 80050b8:	f240 5301 	movw	r3, #1281	; 0x501
 80050bc:	4299      	cmp	r1, r3
 80050be:	b510      	push	{r4, lr}
 80050c0:	d102      	bne.n	80050c8 <i2c_flag_clear+0x10>
 80050c2:	6943      	ldr	r3, [r0, #20]
 80050c4:	6983      	ldr	r3, [r0, #24]
 80050c6:	bd10      	pop	{r4, pc}
 80050c8:	2201      	movs	r2, #1
 80050ca:	098c      	lsrs	r4, r1, #6
 80050cc:	5823      	ldr	r3, [r4, r0]
 80050ce:	f001 011f 	and.w	r1, r1, #31
 80050d2:	fa02 f101 	lsl.w	r1, r2, r1
 80050d6:	ea23 0101 	bic.w	r1, r3, r1
 80050da:	5021      	str	r1, [r4, r0]
 80050dc:	e7f3      	b.n	80050c6 <i2c_flag_clear+0xe>
	...

080050e0 <nvic_vector_table_set>:
 80050e0:	f021 4160 	bic.w	r1, r1, #3758096384	; 0xe0000000
 80050e4:	4b02      	ldr	r3, [pc, #8]	; (80050f0 <nvic_vector_table_set+0x10>)
 80050e6:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 80050ea:	4301      	orrs	r1, r0
 80050ec:	6099      	str	r1, [r3, #8]
 80050ee:	4770      	bx	lr
 80050f0:	e000ed00 	and	lr, r0, r0, lsl #26

080050f4 <rcu_periph_clock_enable>:
 80050f4:	2201      	movs	r2, #1
 80050f6:	0983      	lsrs	r3, r0, #6
 80050f8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80050fc:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8005100:	6819      	ldr	r1, [r3, #0]
 8005102:	f000 001f 	and.w	r0, r0, #31
 8005106:	fa02 f000 	lsl.w	r0, r2, r0
 800510a:	4308      	orrs	r0, r1
 800510c:	6018      	str	r0, [r3, #0]
 800510e:	4770      	bx	lr

08005110 <rcu_periph_clock_disable>:
 8005110:	2101      	movs	r1, #1
 8005112:	0983      	lsrs	r3, r0, #6
 8005114:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8005118:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800511c:	681a      	ldr	r2, [r3, #0]
 800511e:	f000 001f 	and.w	r0, r0, #31
 8005122:	fa01 f000 	lsl.w	r0, r1, r0
 8005126:	ea22 0000 	bic.w	r0, r2, r0
 800512a:	6018      	str	r0, [r3, #0]
 800512c:	4770      	bx	lr

0800512e <rcu_periph_reset_enable>:
 800512e:	f7ff bfe1 	b.w	80050f4 <rcu_periph_clock_enable>

08005132 <rcu_periph_reset_disable>:
 8005132:	f7ff bfed 	b.w	8005110 <rcu_periph_clock_disable>
	...

08005138 <rcu_adc_clock_config>:
 8005138:	490c      	ldr	r1, [pc, #48]	; (800516c <rcu_adc_clock_config+0x34>)
 800513a:	2805      	cmp	r0, #5
 800513c:	684b      	ldr	r3, [r1, #4]
 800513e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005142:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8005146:	d006      	beq.n	8005156 <rcu_adc_clock_config+0x1e>
 8005148:	d803      	bhi.n	8005152 <rcu_adc_clock_config+0x1a>
 800514a:	2804      	cmp	r0, #4
 800514c:	d10a      	bne.n	8005164 <rcu_adc_clock_config+0x2c>
 800514e:	604b      	str	r3, [r1, #4]
 8005150:	4770      	bx	lr
 8005152:	2807      	cmp	r0, #7
 8005154:	d1fb      	bne.n	800514e <rcu_adc_clock_config+0x16>
 8005156:	4a06      	ldr	r2, [pc, #24]	; (8005170 <rcu_adc_clock_config+0x38>)
 8005158:	ea02 3080 	and.w	r0, r2, r0, lsl #14
 800515c:	4303      	orrs	r3, r0
 800515e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005162:	e7f4      	b.n	800514e <rcu_adc_clock_config+0x16>
 8005164:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8005168:	e7f1      	b.n	800514e <rcu_adc_clock_config+0x16>
 800516a:	bf00      	nop
 800516c:	40021000 	andmi	r1, r2, r0
 8005170:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08005174 <rcu_clock_freq_get>:
 8005174:	4b2e      	ldr	r3, [pc, #184]	; (8005230 <rcu_clock_freq_get+0xbc>)
 8005176:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005178:	4604      	mov	r4, r0
 800517a:	461f      	mov	r7, r3
 800517c:	b089      	sub	sp, #36	; 0x24
 800517e:	ad04      	add	r5, sp, #16
 8005180:	f103 0610 	add.w	r6, r3, #16
 8005184:	462a      	mov	r2, r5
 8005186:	6818      	ldr	r0, [r3, #0]
 8005188:	6859      	ldr	r1, [r3, #4]
 800518a:	3308      	adds	r3, #8
 800518c:	c203      	stmia	r2!, {r0, r1}
 800518e:	42b3      	cmp	r3, r6
 8005190:	4615      	mov	r5, r2
 8005192:	d1f7      	bne.n	8005184 <rcu_clock_freq_get+0x10>
 8005194:	466b      	mov	r3, sp
 8005196:	6871      	ldr	r1, [r6, #4]
 8005198:	6938      	ldr	r0, [r7, #16]
 800519a:	c303      	stmia	r3!, {r0, r1}
 800519c:	c303      	stmia	r3!, {r0, r1}
 800519e:	4925      	ldr	r1, [pc, #148]	; (8005234 <rcu_clock_freq_get+0xc0>)
 80051a0:	684b      	ldr	r3, [r1, #4]
 80051a2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80051a6:	2b02      	cmp	r3, #2
 80051a8:	d136      	bne.n	8005218 <rcu_clock_freq_get+0xa4>
 80051aa:	684b      	ldr	r3, [r1, #4]
 80051ac:	03dd      	lsls	r5, r3, #15
 80051ae:	d510      	bpl.n	80051d2 <rcu_clock_freq_get+0x5e>
 80051b0:	684b      	ldr	r3, [r1, #4]
 80051b2:	4a21      	ldr	r2, [pc, #132]	; (8005238 <rcu_clock_freq_get+0xc4>)
 80051b4:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80051b8:	4b20      	ldr	r3, [pc, #128]	; (800523c <rcu_clock_freq_get+0xc8>)
 80051ba:	bf18      	it	ne
 80051bc:	461a      	movne	r2, r3
 80051be:	684b      	ldr	r3, [r1, #4]
 80051c0:	6848      	ldr	r0, [r1, #4]
 80051c2:	f3c3 4383 	ubfx	r3, r3, #18, #4
 80051c6:	0100      	lsls	r0, r0, #4
 80051c8:	d505      	bpl.n	80051d6 <rcu_clock_freq_get+0x62>
 80051ca:	f043 0310 	orr.w	r3, r3, #16
 80051ce:	3301      	adds	r3, #1
 80051d0:	e004      	b.n	80051dc <rcu_clock_freq_get+0x68>
 80051d2:	4a1a      	ldr	r2, [pc, #104]	; (800523c <rcu_clock_freq_get+0xc8>)
 80051d4:	e7f3      	b.n	80051be <rcu_clock_freq_get+0x4a>
 80051d6:	2b0f      	cmp	r3, #15
 80051d8:	d0f9      	beq.n	80051ce <rcu_clock_freq_get+0x5a>
 80051da:	3302      	adds	r3, #2
 80051dc:	4353      	muls	r3, r2
 80051de:	684a      	ldr	r2, [r1, #4]
 80051e0:	f3c2 1203 	ubfx	r2, r2, #4, #4
 80051e4:	3220      	adds	r2, #32
 80051e6:	446a      	add	r2, sp
 80051e8:	f812 2c10 	ldrb.w	r2, [r2, #-16]
 80051ec:	fa23 f002 	lsr.w	r0, r3, r2
 80051f0:	684a      	ldr	r2, [r1, #4]
 80051f2:	f3c2 2202 	ubfx	r2, r2, #8, #3
 80051f6:	3220      	adds	r2, #32
 80051f8:	446a      	add	r2, sp
 80051fa:	f812 5c20 	ldrb.w	r5, [r2, #-32]
 80051fe:	684a      	ldr	r2, [r1, #4]
 8005200:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8005204:	3220      	adds	r2, #32
 8005206:	446a      	add	r2, sp
 8005208:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 800520c:	2c03      	cmp	r4, #3
 800520e:	d80c      	bhi.n	800522a <rcu_clock_freq_get+0xb6>
 8005210:	e8df f004 	tbb	[pc, r4]
 8005214:	09070504 	stmdbeq	r7, {r2, r8, sl}
 8005218:	4b07      	ldr	r3, [pc, #28]	; (8005238 <rcu_clock_freq_get+0xc4>)
 800521a:	e7e0      	b.n	80051de <rcu_clock_freq_get+0x6a>
 800521c:	4618      	mov	r0, r3
 800521e:	b009      	add	sp, #36	; 0x24
 8005220:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005222:	40e8      	lsrs	r0, r5
 8005224:	e7fb      	b.n	800521e <rcu_clock_freq_get+0xaa>
 8005226:	40d0      	lsrs	r0, r2
 8005228:	e7f9      	b.n	800521e <rcu_clock_freq_get+0xaa>
 800522a:	2000      	movs	r0, #0
 800522c:	e7f7      	b.n	800521e <rcu_clock_freq_get+0xaa>
 800522e:	bf00      	nop
 8005230:	080055d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, ip, lr}
 8005234:	40021000 	andmi	r1, r2, r0
 8005238:	007a1200 	rsbseq	r1, sl, r0, lsl #4
 800523c:	003d0900 	eorseq	r0, sp, r0, lsl #18

08005240 <timer_deinit>:
 8005240:	b508      	push	{r3, lr}
 8005242:	4b2d      	ldr	r3, [pc, #180]	; (80052f8 <timer_deinit+0xb8>)
 8005244:	4298      	cmp	r0, r3
 8005246:	d048      	beq.n	80052da <timer_deinit+0x9a>
 8005248:	d816      	bhi.n	8005278 <timer_deinit+0x38>
 800524a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800524e:	4298      	cmp	r0, r3
 8005250:	d03c      	beq.n	80052cc <timer_deinit+0x8c>
 8005252:	d807      	bhi.n	8005264 <timer_deinit+0x24>
 8005254:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8005258:	d02a      	beq.n	80052b0 <timer_deinit+0x70>
 800525a:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800525e:	4298      	cmp	r0, r3
 8005260:	d02d      	beq.n	80052be <timer_deinit+0x7e>
 8005262:	bd08      	pop	{r3, pc}
 8005264:	4b25      	ldr	r3, [pc, #148]	; (80052fc <timer_deinit+0xbc>)
 8005266:	4298      	cmp	r0, r3
 8005268:	d1fb      	bne.n	8005262 <timer_deinit+0x22>
 800526a:	f240 4003 	movw	r0, #1027	; 0x403
 800526e:	f7ff ff5e 	bl	800512e <rcu_periph_reset_enable>
 8005272:	f240 4003 	movw	r0, #1027	; 0x403
 8005276:	e017      	b.n	80052a8 <timer_deinit+0x68>
 8005278:	4b21      	ldr	r3, [pc, #132]	; (8005300 <timer_deinit+0xc0>)
 800527a:	4298      	cmp	r0, r3
 800527c:	d00e      	beq.n	800529c <timer_deinit+0x5c>
 800527e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005282:	4298      	cmp	r0, r3
 8005284:	d030      	beq.n	80052e8 <timer_deinit+0xa8>
 8005286:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 800528a:	4298      	cmp	r0, r3
 800528c:	d1e9      	bne.n	8005262 <timer_deinit+0x22>
 800528e:	f240 4005 	movw	r0, #1029	; 0x405
 8005292:	f7ff ff4c 	bl	800512e <rcu_periph_reset_enable>
 8005296:	f240 4005 	movw	r0, #1029	; 0x405
 800529a:	e005      	b.n	80052a8 <timer_deinit+0x68>
 800529c:	f240 300b 	movw	r0, #779	; 0x30b
 80052a0:	f7ff ff45 	bl	800512e <rcu_periph_reset_enable>
 80052a4:	f240 300b 	movw	r0, #779	; 0x30b
 80052a8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80052ac:	f7ff bf41 	b.w	8005132 <rcu_periph_reset_disable>
 80052b0:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80052b4:	f7ff ff3b 	bl	800512e <rcu_periph_reset_enable>
 80052b8:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80052bc:	e7f4      	b.n	80052a8 <timer_deinit+0x68>
 80052be:	f240 4001 	movw	r0, #1025	; 0x401
 80052c2:	f7ff ff34 	bl	800512e <rcu_periph_reset_enable>
 80052c6:	f240 4001 	movw	r0, #1025	; 0x401
 80052ca:	e7ed      	b.n	80052a8 <timer_deinit+0x68>
 80052cc:	f240 4002 	movw	r0, #1026	; 0x402
 80052d0:	f7ff ff2d 	bl	800512e <rcu_periph_reset_enable>
 80052d4:	f240 4002 	movw	r0, #1026	; 0x402
 80052d8:	e7e6      	b.n	80052a8 <timer_deinit+0x68>
 80052da:	f240 4004 	movw	r0, #1028	; 0x404
 80052de:	f7ff ff26 	bl	800512e <rcu_periph_reset_enable>
 80052e2:	f240 4004 	movw	r0, #1028	; 0x404
 80052e6:	e7df      	b.n	80052a8 <timer_deinit+0x68>
 80052e8:	f240 300d 	movw	r0, #781	; 0x30d
 80052ec:	f7ff ff1f 	bl	800512e <rcu_periph_reset_enable>
 80052f0:	f240 300d 	movw	r0, #781	; 0x30d
 80052f4:	e7d8      	b.n	80052a8 <timer_deinit+0x68>
 80052f6:	bf00      	nop
 80052f8:	40001000 	andmi	r1, r0, r0
 80052fc:	40000c00 	andmi	r0, r0, r0, lsl #24
 8005300:	40012c00 	andmi	r2, r1, r0, lsl #24

08005304 <timer_init>:
 8005304:	880b      	ldrh	r3, [r1, #0]
 8005306:	6283      	str	r3, [r0, #40]	; 0x28
 8005308:	4b26      	ldr	r3, [pc, #152]	; (80053a4 <timer_init+0xa0>)
 800530a:	4298      	cmp	r0, r3
 800530c:	d018      	beq.n	8005340 <timer_init+0x3c>
 800530e:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8005312:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8005316:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 800531a:	d011      	beq.n	8005340 <timer_init+0x3c>
 800531c:	4a22      	ldr	r2, [pc, #136]	; (80053a8 <timer_init+0xa4>)
 800531e:	4290      	cmp	r0, r2
 8005320:	d00e      	beq.n	8005340 <timer_init+0x3c>
 8005322:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8005326:	4290      	cmp	r0, r2
 8005328:	d00a      	beq.n	8005340 <timer_init+0x3c>
 800532a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800532e:	4293      	cmp	r3, r2
 8005330:	d006      	beq.n	8005340 <timer_init+0x3c>
 8005332:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 8005336:	4293      	cmp	r3, r2
 8005338:	d002      	beq.n	8005340 <timer_init+0x3c>
 800533a:	4b1c      	ldr	r3, [pc, #112]	; (80053ac <timer_init+0xa8>)
 800533c:	4298      	cmp	r0, r3
 800533e:	d10f      	bne.n	8005360 <timer_init+0x5c>
 8005340:	6803      	ldr	r3, [r0, #0]
 8005342:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005346:	6003      	str	r3, [r0, #0]
 8005348:	884b      	ldrh	r3, [r1, #2]
 800534a:	6802      	ldr	r2, [r0, #0]
 800534c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8005350:	4313      	orrs	r3, r2
 8005352:	6003      	str	r3, [r0, #0]
 8005354:	888b      	ldrh	r3, [r1, #4]
 8005356:	6802      	ldr	r2, [r0, #0]
 8005358:	f003 0310 	and.w	r3, r3, #16
 800535c:	4313      	orrs	r3, r2
 800535e:	6003      	str	r3, [r0, #0]
 8005360:	688b      	ldr	r3, [r1, #8]
 8005362:	62c3      	str	r3, [r0, #44]	; 0x2c
 8005364:	4b12      	ldr	r3, [pc, #72]	; (80053b0 <timer_init+0xac>)
 8005366:	4298      	cmp	r0, r3
 8005368:	d003      	beq.n	8005372 <timer_init+0x6e>
 800536a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800536e:	4298      	cmp	r0, r3
 8005370:	d104      	bne.n	800537c <timer_init+0x78>
 8005372:	6943      	ldr	r3, [r0, #20]
 8005374:	f043 0301 	orr.w	r3, r3, #1
 8005378:	6143      	str	r3, [r0, #20]
 800537a:	4770      	bx	lr
 800537c:	6803      	ldr	r3, [r0, #0]
 800537e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005382:	6003      	str	r3, [r0, #0]
 8005384:	898b      	ldrh	r3, [r1, #12]
 8005386:	6802      	ldr	r2, [r0, #0]
 8005388:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800538c:	4313      	orrs	r3, r2
 800538e:	6003      	str	r3, [r0, #0]
 8005390:	4b04      	ldr	r3, [pc, #16]	; (80053a4 <timer_init+0xa0>)
 8005392:	4298      	cmp	r0, r3
 8005394:	d002      	beq.n	800539c <timer_init+0x98>
 8005396:	4b04      	ldr	r3, [pc, #16]	; (80053a8 <timer_init+0xa4>)
 8005398:	4298      	cmp	r0, r3
 800539a:	d1ea      	bne.n	8005372 <timer_init+0x6e>
 800539c:	7b8b      	ldrb	r3, [r1, #14]
 800539e:	6303      	str	r3, [r0, #48]	; 0x30
 80053a0:	e7e7      	b.n	8005372 <timer_init+0x6e>
 80053a2:	bf00      	nop
 80053a4:	40012c00 	andmi	r2, r1, r0, lsl #24
 80053a8:	40013400 	andmi	r3, r1, r0, lsl #8
 80053ac:	40002000 	andmi	r2, r0, r0
 80053b0:	40001000 	andmi	r1, r0, r0

080053b4 <timer_enable>:
 80053b4:	6803      	ldr	r3, [r0, #0]
 80053b6:	f043 0301 	orr.w	r3, r3, #1
 80053ba:	6003      	str	r3, [r0, #0]
 80053bc:	4770      	bx	lr

080053be <timer_channel_output_mode_config>:
 80053be:	2903      	cmp	r1, #3
 80053c0:	d81a      	bhi.n	80053f8 <timer_channel_output_mode_config+0x3a>
 80053c2:	e8df f001 	tbb	[pc, r1]
 80053c6:	1a120a02 	bne	8487bd6 <__exidx_end+0x481d2a>
 80053ca:	6983      	ldr	r3, [r0, #24]
 80053cc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80053d0:	6183      	str	r3, [r0, #24]
 80053d2:	6983      	ldr	r3, [r0, #24]
 80053d4:	431a      	orrs	r2, r3
 80053d6:	6182      	str	r2, [r0, #24]
 80053d8:	4770      	bx	lr
 80053da:	6983      	ldr	r3, [r0, #24]
 80053dc:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80053e0:	6183      	str	r3, [r0, #24]
 80053e2:	6983      	ldr	r3, [r0, #24]
 80053e4:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 80053e8:	e7f5      	b.n	80053d6 <timer_channel_output_mode_config+0x18>
 80053ea:	69c3      	ldr	r3, [r0, #28]
 80053ec:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80053f0:	61c3      	str	r3, [r0, #28]
 80053f2:	69c3      	ldr	r3, [r0, #28]
 80053f4:	431a      	orrs	r2, r3
 80053f6:	61c2      	str	r2, [r0, #28]
 80053f8:	4770      	bx	lr
 80053fa:	69c3      	ldr	r3, [r0, #28]
 80053fc:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005400:	61c3      	str	r3, [r0, #28]
 8005402:	69c3      	ldr	r3, [r0, #28]
 8005404:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8005408:	e7f5      	b.n	80053f6 <timer_channel_output_mode_config+0x38>

0800540a <timer_channel_output_pulse_value_config>:
 800540a:	2903      	cmp	r1, #3
 800540c:	d80a      	bhi.n	8005424 <timer_channel_output_pulse_value_config+0x1a>
 800540e:	e8df f001 	tbb	[pc, r1]
 8005412:	08060402 	stmdaeq	r6, {r1, sl}
 8005416:	6342      	str	r2, [r0, #52]	; 0x34
 8005418:	4770      	bx	lr
 800541a:	6382      	str	r2, [r0, #56]	; 0x38
 800541c:	4770      	bx	lr
 800541e:	63c2      	str	r2, [r0, #60]	; 0x3c
 8005420:	4770      	bx	lr
 8005422:	6402      	str	r2, [r0, #64]	; 0x40
 8005424:	4770      	bx	lr

08005426 <timer_interrupt_enable>:
 8005426:	68c3      	ldr	r3, [r0, #12]
 8005428:	430b      	orrs	r3, r1
 800542a:	60c3      	str	r3, [r0, #12]
 800542c:	4770      	bx	lr

0800542e <timer_interrupt_flag_clear>:
 800542e:	43c9      	mvns	r1, r1
 8005430:	6101      	str	r1, [r0, #16]
 8005432:	4770      	bx	lr

08005434 <timer_flag_clear>:
 8005434:	43c9      	mvns	r1, r1
 8005436:	6101      	str	r1, [r0, #16]
 8005438:	4770      	bx	lr
	...

0800543c <usart_deinit>:
 800543c:	b508      	push	{r3, lr}
 800543e:	4b1d      	ldr	r3, [pc, #116]	; (80054b4 <usart_deinit+0x78>)
 8005440:	4298      	cmp	r0, r3
 8005442:	d028      	beq.n	8005496 <usart_deinit+0x5a>
 8005444:	d808      	bhi.n	8005458 <usart_deinit+0x1c>
 8005446:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800544a:	4298      	cmp	r0, r3
 800544c:	d015      	beq.n	800547a <usart_deinit+0x3e>
 800544e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005452:	4298      	cmp	r0, r3
 8005454:	d018      	beq.n	8005488 <usart_deinit+0x4c>
 8005456:	bd08      	pop	{r3, pc}
 8005458:	4b17      	ldr	r3, [pc, #92]	; (80054b8 <usart_deinit+0x7c>)
 800545a:	4298      	cmp	r0, r3
 800545c:	d022      	beq.n	80054a4 <usart_deinit+0x68>
 800545e:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8005462:	4298      	cmp	r0, r3
 8005464:	d1f7      	bne.n	8005456 <usart_deinit+0x1a>
 8005466:	f240 300e 	movw	r0, #782	; 0x30e
 800546a:	f7ff fe60 	bl	800512e <rcu_periph_reset_enable>
 800546e:	f240 300e 	movw	r0, #782	; 0x30e
 8005472:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005476:	f7ff be5c 	b.w	8005132 <rcu_periph_reset_disable>
 800547a:	f240 4011 	movw	r0, #1041	; 0x411
 800547e:	f7ff fe56 	bl	800512e <rcu_periph_reset_enable>
 8005482:	f240 4011 	movw	r0, #1041	; 0x411
 8005486:	e7f4      	b.n	8005472 <usart_deinit+0x36>
 8005488:	f240 4012 	movw	r0, #1042	; 0x412
 800548c:	f7ff fe4f 	bl	800512e <rcu_periph_reset_enable>
 8005490:	f240 4012 	movw	r0, #1042	; 0x412
 8005494:	e7ed      	b.n	8005472 <usart_deinit+0x36>
 8005496:	f240 4013 	movw	r0, #1043	; 0x413
 800549a:	f7ff fe48 	bl	800512e <rcu_periph_reset_enable>
 800549e:	f240 4013 	movw	r0, #1043	; 0x413
 80054a2:	e7e6      	b.n	8005472 <usart_deinit+0x36>
 80054a4:	f240 4014 	movw	r0, #1044	; 0x414
 80054a8:	f7ff fe41 	bl	800512e <rcu_periph_reset_enable>
 80054ac:	f240 4014 	movw	r0, #1044	; 0x414
 80054b0:	e7df      	b.n	8005472 <usart_deinit+0x36>
 80054b2:	bf00      	nop
 80054b4:	40004c00 	andmi	r4, r0, r0, lsl #24
 80054b8:	40005000 	andmi	r5, r0, r0

080054bc <usart_baudrate_set>:
 80054bc:	b538      	push	{r3, r4, r5, lr}
 80054be:	4b11      	ldr	r3, [pc, #68]	; (8005504 <usart_baudrate_set+0x48>)
 80054c0:	4604      	mov	r4, r0
 80054c2:	4298      	cmp	r0, r3
 80054c4:	460d      	mov	r5, r1
 80054c6:	d01b      	beq.n	8005500 <usart_baudrate_set+0x44>
 80054c8:	d809      	bhi.n	80054de <usart_baudrate_set+0x22>
 80054ca:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80054ce:	4298      	cmp	r0, r3
 80054d0:	d016      	beq.n	8005500 <usart_baudrate_set+0x44>
 80054d2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80054d6:	4298      	cmp	r0, r3
 80054d8:	d012      	beq.n	8005500 <usart_baudrate_set+0x44>
 80054da:	2000      	movs	r0, #0
 80054dc:	e009      	b.n	80054f2 <usart_baudrate_set+0x36>
 80054de:	4b0a      	ldr	r3, [pc, #40]	; (8005508 <usart_baudrate_set+0x4c>)
 80054e0:	4298      	cmp	r0, r3
 80054e2:	d00d      	beq.n	8005500 <usart_baudrate_set+0x44>
 80054e4:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 80054e8:	4298      	cmp	r0, r3
 80054ea:	d1f6      	bne.n	80054da <usart_baudrate_set+0x1e>
 80054ec:	2003      	movs	r0, #3
 80054ee:	f7ff fe41 	bl	8005174 <rcu_clock_freq_get>
 80054f2:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 80054f6:	fbb3 f1f5 	udiv	r1, r3, r5
 80054fa:	b289      	uxth	r1, r1
 80054fc:	60a1      	str	r1, [r4, #8]
 80054fe:	bd38      	pop	{r3, r4, r5, pc}
 8005500:	2002      	movs	r0, #2
 8005502:	e7f4      	b.n	80054ee <usart_baudrate_set+0x32>
 8005504:	40004c00 	andmi	r4, r0, r0, lsl #24
 8005508:	40005000 	andmi	r5, r0, r0

0800550c <usart_parity_config>:
 800550c:	68c2      	ldr	r2, [r0, #12]
 800550e:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 8005512:	60c2      	str	r2, [r0, #12]
 8005514:	68c3      	ldr	r3, [r0, #12]
 8005516:	430b      	orrs	r3, r1
 8005518:	60c3      	str	r3, [r0, #12]
 800551a:	4770      	bx	lr

0800551c <usart_word_length_set>:
 800551c:	68c2      	ldr	r2, [r0, #12]
 800551e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8005522:	60c2      	str	r2, [r0, #12]
 8005524:	68c3      	ldr	r3, [r0, #12]
 8005526:	430b      	orrs	r3, r1
 8005528:	60c3      	str	r3, [r0, #12]
 800552a:	4770      	bx	lr

0800552c <usart_stop_bit_set>:
 800552c:	6902      	ldr	r2, [r0, #16]
 800552e:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8005532:	6102      	str	r2, [r0, #16]
 8005534:	6903      	ldr	r3, [r0, #16]
 8005536:	430b      	orrs	r3, r1
 8005538:	6103      	str	r3, [r0, #16]
 800553a:	4770      	bx	lr

0800553c <usart_transmit_config>:
 800553c:	68c3      	ldr	r3, [r0, #12]
 800553e:	f023 0308 	bic.w	r3, r3, #8
 8005542:	430b      	orrs	r3, r1
 8005544:	60c3      	str	r3, [r0, #12]
 8005546:	4770      	bx	lr

08005548 <usart_receive_config>:
 8005548:	68c3      	ldr	r3, [r0, #12]
 800554a:	f023 0304 	bic.w	r3, r3, #4
 800554e:	430b      	orrs	r3, r1
 8005550:	60c3      	str	r3, [r0, #12]
 8005552:	4770      	bx	lr

08005554 <usart_hardware_flow_rts_config>:
 8005554:	6943      	ldr	r3, [r0, #20]
 8005556:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800555a:	430b      	orrs	r3, r1
 800555c:	6143      	str	r3, [r0, #20]
 800555e:	4770      	bx	lr

08005560 <usart_hardware_flow_cts_config>:
 8005560:	6943      	ldr	r3, [r0, #20]
 8005562:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8005566:	430b      	orrs	r3, r1
 8005568:	6143      	str	r3, [r0, #20]
 800556a:	4770      	bx	lr

0800556c <usart_dma_transmit_config>:
 800556c:	6943      	ldr	r3, [r0, #20]
 800556e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005572:	430b      	orrs	r3, r1
 8005574:	6143      	str	r3, [r0, #20]
 8005576:	4770      	bx	lr

08005578 <usart_flag_get>:
 8005578:	098b      	lsrs	r3, r1, #6
 800557a:	5818      	ldr	r0, [r3, r0]
 800557c:	f001 011f 	and.w	r1, r1, #31
 8005580:	40c8      	lsrs	r0, r1
 8005582:	f000 0001 	and.w	r0, r0, #1
 8005586:	4770      	bx	lr

08005588 <usart_interrupt_enable>:
 8005588:	2301      	movs	r3, #1
 800558a:	b510      	push	{r4, lr}
 800558c:	f3c1 1289 	ubfx	r2, r1, #6, #10
 8005590:	5814      	ldr	r4, [r2, r0]
 8005592:	f001 011f 	and.w	r1, r1, #31
 8005596:	fa03 f101 	lsl.w	r1, r3, r1
 800559a:	4321      	orrs	r1, r4
 800559c:	5011      	str	r1, [r2, r0]
 800559e:	bd10      	pop	{r4, pc}

080055a0 <usart_interrupt_disable>:
 80055a0:	2201      	movs	r2, #1
 80055a2:	b510      	push	{r4, lr}
 80055a4:	f3c1 1489 	ubfx	r4, r1, #6, #10
 80055a8:	5823      	ldr	r3, [r4, r0]
 80055aa:	f001 011f 	and.w	r1, r1, #31
 80055ae:	fa02 f101 	lsl.w	r1, r2, r1
 80055b2:	ea23 0101 	bic.w	r1, r3, r1
 80055b6:	5021      	str	r1, [r4, r0]
 80055b8:	bd10      	pop	{r4, pc}

080055ba <usart_interrupt_flag_clear>:
 80055ba:	2201      	movs	r2, #1
 80055bc:	b510      	push	{r4, lr}
 80055be:	0d8c      	lsrs	r4, r1, #22
 80055c0:	5823      	ldr	r3, [r4, r0]
 80055c2:	f3c1 4104 	ubfx	r1, r1, #16, #5
 80055c6:	fa02 f101 	lsl.w	r1, r2, r1
 80055ca:	ea23 0101 	bic.w	r1, r3, r1
 80055ce:	5021      	str	r1, [r4, r0]
 80055d0:	bd10      	pop	{r4, pc}
	...

Disassembly of section .rodata:

080055d4 <deviceLabel-0x100>:
	...
 80055dc:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 80055e0:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 80055e4:	00000000 	andeq	r0, r0, r0
 80055e8:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 80055ec:	20636544 	rsbcs	r6, r3, r4, asr #10
 80055f0:	32203731 	eorcc	r3, r0, #12845056	; 0xc40000
 80055f4:	00313230 	eorseq	r3, r1, r0, lsr r2
 80055f8:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 80055fc:	33303146 	teqcc	r0, #-2147483631	; 0x80000011
 8005600:	565b0052 			; <UNDEFINED> instruction: 0x565b0052
 8005604:	205d7325 	subscs	r7, sp, r5, lsr #6
 8005608:	43207325 			; <UNDEFINED> instruction: 0x43207325
 800560c:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8005610:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8005614:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8005618:	74612073 	strbtvc	r2, [r1], #-115	; 0xffffff8d
 800561c:	0a732520 	beq	9cceaa4 <__exidx_end+0x1cc8bf8>
 8005620:	3a333100 	bcc	8cd1a28 <__exidx_end+0xccbb7c>
 8005624:	303a3633 	eorscc	r3, sl, r3, lsr r6
 8005628:	44520033 	ldrbmi	r0, [r2], #-51	; 0xffffffcd
 800562c:	6f43204d 	svcvs	0x0043204d
 8005630:	6f72746e 	svcvs	0x0072746e
 8005634:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
 8005638:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 800563c:	53552068 	cmppl	r5, #104	; 0x68
 8005640:	435b2042 	cmpmi	fp, #66	; 0x42
 8005644:	61706d6f 	cmnvs	r0, pc, ror #26
 8005648:	6c626974 			; <UNDEFINED> instruction: 0x6c626974
 800564c:	69772065 	ldmdbvs	r7!, {r0, r2, r5, r6, sp}^
 8005650:	45206874 	strmi	r6, [r0, #-2164]!	; 0xfffff78c
 8005654:	6574746e 	ldrbvs	r7, [r4, #-1134]!	; 0xfffffb92
 8005658:	53552063 	cmppl	r5, #99	; 0x63
 800565c:	72502042 	subsvc	r2, r0, #66	; 0x42
 8005660:	7270206f 	rsbsvc	r2, r0, #111	; 0x6f
 8005664:	636f746f 	cmnvs	pc, #1862270976	; 0x6f000000
 8005668:	2c5d6c6f 	mrrccs	12, 6, r6, sp, cr15
 800566c:	64695720 	strbtvs	r5, [r9], #-1824	; 0xfffff8e0
 8005670:	20746567 	rsbscs	r6, r4, r7, ror #10
 8005674:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8005678:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 800567c:	25282064 	strcs	r2, [r8, #-100]!	; 0xffffff9c
 8005680:	000a2973 	andeq	r2, sl, r3, ror r9
 8005684:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8005688:	55206563 	strpl	r6, [r0, #-1379]!	; 0xfffffa9d
 800568c:	20444955 	subcs	r4, r4, r5, asr r9
 8005690:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8005694:	2e257832 	mcrcs	8, 1, r7, cr5, cr2, {1}
 8005698:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 800569c:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 80056a0:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 80056a4:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 80056a8:	2c78322e 	lfmcs	f3, 2, [r8], #-184	; 0xffffff48
 80056ac:	614c0020 	cmpvs	ip, r0, lsr #32
 80056b0:	206c6562 	rsbcs	r6, ip, r2, ror #10
 80056b4:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 80056b8:	000a732a 	andeq	r7, sl, sl, lsr #6
 80056bc:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 80056c0:	33303146 	teqcc	r0, #-2147483631	; 0x80000011
 80056c4:	44204352 	strtmi	r4, [r0], #-850	; 0xfffffcae
 80056c8:	5520584d 	strpl	r5, [r0, #-2125]!	; 0xfffff7b3
 80056cc:	50204253 	eorpl	r4, r0, r3, asr r2
 80056d0:	00006f72 	andeq	r6, r0, r2, ror pc

080056d4 <deviceLabel>:
 80056d4:	080056bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, ip, lr}
 80056d8:	00000016 	andeq	r0, r0, r6, lsl r0

080056dc <SOFTWARE_VERSION>:
 80056dc:	00302e31 	eorseq	r2, r0, r1, lsr lr

080056e0 <widget_mode_names>:
 80056e0:	5f584d44 	svcpl	0x00584d44
 80056e4:	004d4452 	subeq	r4, sp, r2, asr r4
 80056e8:	00000000 	andeq	r0, r0, r0
 80056ec:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 80056f8:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8005704:	5f4d4452 	svcpl	0x004d4452
 8005708:	46494e53 			; <UNDEFINED> instruction: 0x46494e53
 800570c:	00524546 	subseq	r4, r2, r6, asr #10
 8005710:	5f544547 	svcpl	0x00544547
 8005714:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 8005718:	505f5445 	subspl	r5, pc, r5, asr #8
 800571c:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 8005720:	45525f53 	ldrbmi	r5, [r2, #-3923]	; 0xfffff0ad
 8005724:	00594c50 	subseq	r4, r9, r0, asr ip
 8005728:	5f544553 	svcpl	0x00544553
 800572c:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 8005730:	505f5445 	subspl	r5, pc, r5, asr #8
 8005734:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 8005738:	45520053 	ldrbmi	r0, [r2, #-83]	; 0xffffffad
 800573c:	56494543 	strbpl	r4, [r9], -r3, asr #10
 8005740:	445f4445 	ldrbmi	r4, [pc], #-1093	; 8005748 <widget_mode_names+0x68>
 8005744:	505f584d 	subspl	r5, pc, sp, asr #16
 8005748:	454b4341 	strbmi	r4, [fp, #-833]	; 0xfffffcbf
 800574c:	65530054 	ldrbvs	r0, [r3, #-84]	; 0xffffffac
 8005750:	4420646e 	strtmi	r6, [r0], #-1134	; 0xfffffb92
 8005754:	6420584d 	strtvs	r5, [r0], #-2125	; 0xfffff7b3
 8005758:	20617461 	rsbcs	r7, r1, r1, ror #8
 800575c:	48206f74 	stmdami	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}
 8005760:	2c54534f 	mrrccs	3, 4, r5, r4, cr15
 8005764:	00642520 	rsbeq	r2, r4, r0, lsr #10
 8005768:	5054554f 	subspl	r5, r4, pc, asr #10
 800576c:	4f5f5455 	svcmi	0x005f5455
 8005770:	5f594c4e 	svcpl	0x00594c4e
 8005774:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 8005778:	584d445f 	stmdapl	sp, {r0, r1, r2, r3, r4, r6, sl, lr}^
 800577c:	4341505f 	movtmi	r5, #4191	; 0x105f
 8005780:	5f54454b 	svcpl	0x0054454b
 8005784:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 8005788:	00545345 	subseq	r5, r4, r5, asr #6
 800578c:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 8005790:	4d44525f 	sfmmi	f5, 2, [r4, #-380]	; 0xfffffe84
 8005794:	4341505f 	movtmi	r5, #4191	; 0x105f
 8005798:	5f54454b 	svcpl	0x0054454b
 800579c:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 80057a0:	00545345 	subseq	r5, r4, r5, asr #6
 80057a4:	45434552 	strbmi	r4, [r3, #-1362]	; 0xfffffaae
 80057a8:	5f455649 	svcpl	0x00455649
 80057ac:	5f584d44 	svcpl	0x00584d44
 80057b0:	435f4e4f 	cmpmi	pc, #1264	; 0x4f0
 80057b4:	474e4148 	strbmi	r4, [lr, -r8, asr #2]
 80057b8:	45520045 	ldrbmi	r0, [r2, #-69]	; 0xffffffbb
 80057bc:	56494543 	strbpl	r4, [r9], -r3, asr #10
 80057c0:	445f4445 	ldrbmi	r4, [pc], #-1093	; 80057c8 <widget_mode_names+0xe8>
 80057c4:	435f584d 	cmpmi	pc, #5046272	; 0x4d0000
 80057c8:	545f534f 	ldrbpl	r5, [pc], #-847	; 80057d0 <widget_mode_names+0xf0>
 80057cc:	00455059 	subeq	r5, r5, r9, asr r0
 80057d0:	746e6553 	strbtvc	r6, [lr], #-1363	; 0xfffffaad
 80057d4:	61686320 	cmnvs	r8, r0, lsr #6
 80057d8:	6465676e 	strbtvs	r6, [r5], #-1902	; 0xfffff892
 80057dc:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 80057e0:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 80057e4:	6f742061 	svcvs	0x00742061
 80057e8:	534f4820 	movtpl	r4, #63520	; 0xf820
 80057ec:	45530054 	ldrbmi	r0, [r3, #-84]	; 0xffffffac
 80057f0:	525f444e 	subspl	r4, pc, #1308622848	; 0x4e000000
 80057f4:	445f4d44 	ldrbmi	r4, [pc], #-3396	; 80057fc <widget_mode_names+0x11c>
 80057f8:	4f435349 	svcmi	0x00435349
 80057fc:	59524556 	ldmdbpl	r2, {r1, r2, r4, r6, r8, sl, lr}^
 8005800:	5145525f 	cmppl	r5, pc, asr r2
 8005804:	54534555 	ldrbpl	r4, [r3], #-1365	; 0xfffffaab
 8005808:	6e655300 	cdpvs	3, 6, cr5, cr5, cr0, {0}
 800580c:	44522064 	ldrbmi	r2, [r2], #-100	; 0xffffff9c
 8005810:	6164204d 	cmnvs	r4, sp, asr #32
 8005814:	74206174 	strtvc	r6, [r0], #-372	; 0xfffffe8c
 8005818:	4f48206f 	svcmi	0x0048206f
 800581c:	202c5453 	eorcs	r5, ip, r3, asr r4
 8005820:	64253a6c 	strtvs	r3, [r5], #-2668	; 0xfffff594
 8005824:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 8005828:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
 800582c:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
 8005830:	43455200 	movtmi	r5, #20992	; 0x5200
 8005834:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 8005838:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 800583c:	41505f4d 	cmpmi	r0, sp, asr #30
 8005840:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 8005844:	3a435320 	bcc	90da4cc <__exidx_end+0x10d4620>
 8005848:	43437830 	movtmi	r7, #14384	; 0x3830
 800584c:	43455200 	movtmi	r5, #20992	; 0x5200
 8005850:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 8005854:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 8005858:	41505f4d 	cmpmi	r0, sp, asr #30
 800585c:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 8005860:	3a435320 	bcc	90da4e8 <__exidx_end+0x10d463c>
 8005864:	45467830 	strbmi	r7, [r6, #-2096]	; 0xfffff7d0
 8005868:	4e414d00 	cdpmi	13, 4, cr4, cr1, cr0, {0}
 800586c:	43414655 	movtmi	r4, #5717	; 0x1655
 8005870:	45525554 	ldrbmi	r5, [r2, #-1364]	; 0xfffffaac
 8005874:	414c5f52 	cmpmi	ip, r2, asr pc
 8005878:	004c4542 	subeq	r4, ip, r2, asr #10
 800587c:	5f544547 	svcpl	0x00544547
 8005880:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 8005884:	4e5f5445 	cdpmi	4, 5, cr5, cr15, cr5, {2}
 8005888:	5f454d41 	svcpl	0x00454d41
 800588c:	4542414c 	strbmi	r4, [r2, #-332]	; 0xfffffeb4
 8005890:	3a4c004c 	bcc	93059c8 <__exidx_end+0x12ffb1c>
 8005894:	253a6425 	ldrcs	r6, [sl, #-1061]!	; 0xfffffbdb
 8005898:	64252864 	strtvs	r2, [r5], #-2148	; 0xfffff79c
 800589c:	 	ldmdbvs	r7!, {r0, r3, r5}^

0800589e <WidgetParamsConst::WIDGET_MODE>:
 800589e:	67646977 			; <UNDEFINED> instruction: 0x67646977
 80058a2:	6d5f7465 	cfldrdvs	mvd7, [pc, #-404]	; 8005714 <widget_mode_names+0x34>
 80058a6:	0065646f 	rsbeq	r6, r5, pc, ror #8

080058aa <WidgetParamsConst::DMXUSBPRO_MAB_TIME>:
 80058aa:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 80058ae:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 80058b2:	616d5f6f 	cmnvs	sp, pc, ror #30
 80058b6:	69745f62 	ldmdbvs	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 80058ba:	 	strvs	r6, [r0], #-1389	; 0xfffffa93

080058bd <WidgetParamsConst::DMXUSBPRO_BREAK_TIME>:
 80058bd:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 80058c1:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 80058c5:	72625f6f 	rsbvc	r5, r2, #444	; 0x1bc
 80058c9:	5f6b6165 	svcpl	0x006b6165
 80058cd:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

080058d2 <WidgetParamsConst::DMXUSBPRO_REFRESH_RATE>:
 80058d2:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 80058d6:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 80058da:	65725f6f 	ldrbvs	r5, [r2, #-3951]!	; 0xfffff091
 80058de:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 80058e2:	61725f68 	cmnvs	r2, r8, ror #30
 80058e6:	 	strvs	r6, [r0], #-1396	; 0xfffffa8c

080058e9 <WidgetParamsConst::DMX_SEND_TO_HOST_THROTTLE>:
 80058e9:	5f786d64 	svcpl	0x00786d64
 80058ed:	646e6573 	strbtvs	r6, [lr], #-1395	; 0xfffffa8d
 80058f1:	5f6f745f 	svcpl	0x006f745f
 80058f5:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 80058f9:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
 80058fd:	6c74746f 	cfldrdvs	mvd7, [r4], #-444	; 0xfffffe44
 8005901:	46210065 	strtmi	r0, [r1], -r5, rrx
 8005905:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8005909:	43202164 			; <UNDEFINED> instruction: 0x43202164
 800590d:	6f6e6e61 	svcvs	0x006e6e61
 8005911:	65732074 	ldrbvs	r2, [r3, #-116]!	; 0xffffff8c
 8005915:	7420646e 	strtvc	r6, [r0], #-1134	; 0xfffffb92
 8005919:	6f68206f 	svcvs	0x0068206f
 800591d:	53007473 	movwpl	r7, #1139	; 0x473
 8005921:	20646e65 	rsbcs	r6, r4, r5, ror #28
 8005925:	20584d44 	subscs	r4, r8, r4, asr #26
 8005929:	61746164 	cmnvs	r4, r4, ror #2
 800592d:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 8005931:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
 8005935:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8005939:	53006425 	movwpl	r6, #1061	; 0x425
 800593d:	20646e65 	rsbcs	r6, r4, r5, ror #28
 8005941:	204d4452 	subcs	r4, sp, r2, asr r4
 8005945:	61746164 	cmnvs	r4, r4, ror #2
 8005949:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 800594d:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
 8005951:	74746800 	ldrbtvc	r6, [r4], #-2048	; 0xfffff800
 8005955:	2f2f3a70 	svccs	0x002f3a70
 8005959:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 800595d:	786d642d 	stmdavc	sp!, {r0, r2, r3, r5, sl, sp, lr}^
 8005961:	67726f2e 	ldrbvs	r6, [r2, -lr, lsr #30]!
	...

08005966 <DEVICE_LABEL>:
 8005966:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 800596a:	33303146 	teqcc	r0, #-2147483631	; 0x80000011
 800596e:	44522052 	ldrbmi	r2, [r2], #-82	; 0xffffffae
 8005972:	6544204d 	strbvs	r2, [r4, #-77]	; 0xffffffb3
 8005976:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
	...

0800597b <RDMConst::MANUFACTURER_ID>:
 800597b:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

0800597d <RDMConst::MANUFACTURER_NAME>:
 800597d:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8005981:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 8005985:	6f2e7777 	svcvs	0x002e7777
 8005989:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 800598d:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 8005991:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8005995:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8005999:	 	andvs	r0, r0, r0

0800599c <s_aStorSize>:
 800599c:	00000060 	andeq	r0, r0, r0, rrx
 80059a0:	00000090 	muleq	r0, r0, r0
 80059a4:	00000020 	andeq	r0, r0, r0, lsr #32
 80059a8:	00000040 	andeq	r0, r0, r0, asr #32
 80059ac:	00000060 	andeq	r0, r0, r0, rrx
 80059b0:	00000040 	andeq	r0, r0, r0, asr #32
 80059b4:	00000020 	andeq	r0, r0, r0, lsr #32
 80059b8:	00000020 	andeq	r0, r0, r0, lsr #32
 80059bc:	000001e0 	andeq	r0, r0, r0, ror #3
 80059c0:	00000040 	andeq	r0, r0, r0, asr #32
 80059c4:	00000020 	andeq	r0, r0, r0, lsr #32
 80059c8:	00000060 	andeq	r0, r0, r0, rrx
 80059cc:	00000030 	andeq	r0, r0, r0, lsr r0
 80059d0:	00000020 	andeq	r0, r0, r0, lsr #32
 80059d4:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 80059d8:	00000030 	andeq	r0, r0, r0, lsr r0
 80059dc:	00000040 	andeq	r0, r0, r0, asr #32
 80059e0:	00000020 	andeq	r0, r0, r0, lsr #32
 80059e4:	00000060 	andeq	r0, r0, r0, rrx
 80059e8:	00000020 	andeq	r0, r0, r0, lsr #32
 80059ec:	00000400 	andeq	r0, r0, r0, lsl #8
 80059f0:	00000020 	andeq	r0, r0, r0, lsr #32
 80059f4:	00000020 	andeq	r0, r0, r0, lsr #32
 80059f8:	00000040 	andeq	r0, r0, r0, asr #32
 80059fc:	00000060 	andeq	r0, r0, r0, rrx
 8005a00:	00000020 	andeq	r0, r0, r0, lsr #32
 8005a04:	00000020 	andeq	r0, r0, r0, lsr #32
 8005a08:	00000020 	andeq	r0, r0, r0, lsr #32

08005a0c <vtable for StoreRDMDevice>:
	...
 8005a14:	080037cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, sl, ip, sp}
 8005a18:	0800383d 	stmdaeq	r0, {r0, r2, r3, r4, r5, fp, ip, sp}
 8005a1c:	080037d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sl, ip, sp}
 8005a20:	08003851 	stmdaeq	r0, {r0, r4, r6, fp, ip, sp}
 8005a24:	080037f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp}
 8005a28:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8005a2c:	00000000 	andeq	r0, r0, r0
 8005a30:	080037cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, sl, ip, sp}
 8005a34:	08003849 	stmdaeq	r0, {r0, r3, r6, fp, ip, sp}
 8005a38:	08003835 	stmdaeq	r0, {r0, r2, r4, r5, fp, ip, sp}

08005a3c <vtable for StoreWidget>:
	...
 8005a44:	08003889 	stmdaeq	r0, {r0, r3, r7, fp, ip, sp}
 8005a48:	080038b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, fp, ip, sp}
 8005a4c:	08003891 	stmdaeq	r0, {r0, r4, r7, fp, ip, sp}
 8005a50:	080038c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, ip, sp}
 8005a54:	08002585 	stmdaeq	r0, {r0, r2, r7, r8, sl, sp}
 8005a58:	080025b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, sl, sp}
 8005a5c:	080025ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, sl, sp}
 8005a60:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8005a64:	00000000 	andeq	r0, r0, r0
 8005a68:	0800388b 	stmdaeq	r0, {r0, r1, r3, r7, fp, ip, sp}
 8005a6c:	080038c1 	stmdaeq	r0, {r0, r6, r7, fp, ip, sp}
 8005a70:	080025b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, sp}
 8005a74:	080025e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, sl, sp}
 8005a78:	08002619 	stmdaeq	r0, {r0, r3, r4, r9, sl, sp}
 8005a7c:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8005a80:	74654400 	strbtvc	r4, [r5], #-1024	; 0xfffffc00
 8005a84:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8005a88:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8005a8c:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8005a90:	65732068 	ldrbvs	r2, [r3, #-104]!	; 0xffffff98
 8005a94:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8005a98:	7a697320 	bvc	9a62720 <__exidx_end+0x1a5c874>
 8005a9c:	64252065 	strtvs	r2, [r5], #-101	; 0xffffff9b
 8005aa0:	746f7420 	strbtvc	r7, [pc], #-1056	; 8005aa8 <vtable for StoreWidget+0x6c>
 8005aa4:	25206c61 	strcs	r6, [r0, #-3169]!	; 0xfffff39f
 8005aa8:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
 8005aac:	0a736574 	beq	9cdf084 <__exidx_end+0x1cd91d8>
 8005ab0:	006f6c00 	rsbeq	r6, pc, r0, lsl #24
 8005ab4:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 8005ab8:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8005abc:	66207961 	strtvs	r7, [r0], -r1, ror #18
 8005ac0:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8005ac4:	31485300 	mrscc	r5, (UNDEF: 120)
 8005ac8:	00363031 	eorseq	r3, r6, r1, lsr r0
 8005acc:	31445353 	cmpcc	r4, r3, asr r3
 8005ad0:	00363033 	eorseq	r3, r6, r3, lsr r0
 8005ad4:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8005ad8:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8005adc:	000a2964 	andeq	r2, sl, r4, ror #18
 8005ae0:	aaeeaa40 	bge	7bb03e8 <__heap_size+0x7baf3e8>
 8005ae4:	000000ee 	andeq	r0, r0, lr, ror #1

08005ae8 <_OledFont8x6>:
 8005ae8:	00000040 	andeq	r0, r0, r0, asr #32
 8005aec:	40000000 	andmi	r0, r0, r0
 8005af0:	005f0000 	subseq	r0, pc, r0
 8005af4:	00400000 	subeq	r0, r0, r0
 8005af8:	00070007 	andeq	r0, r7, r7
 8005afc:	7f144000 	svcvc	0x00144000
 8005b00:	00147f14 	andseq	r7, r4, r4, lsl pc
 8005b04:	7f2a2440 	svcvc	0x002a2440
 8005b08:	4000122a 	andmi	r1, r0, sl, lsr #4
 8005b0c:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8005b10:	36400062 	strbcc	r0, [r0], -r2, rrx
 8005b14:	50205649 	eorpl	r5, r0, r9, asr #12
 8005b18:	08004000 	stmdaeq	r0, {lr}
 8005b1c:	00000307 	andeq	r0, r0, r7, lsl #6
 8005b20:	221c0040 	andscs	r0, ip, #64	; 0x40
 8005b24:	40000041 	andmi	r0, r0, r1, asr #32
 8005b28:	1c224100 	stfnes	f4, [r2], #-0
 8005b2c:	2a400000 	bcs	9005b34 <__exidx_end+0xfffc88>
 8005b30:	2a1c7f1c 	bcs	87257a8 <__exidx_end+0x71f8fc>
 8005b34:	08084000 	stmdaeq	r8, {lr}
 8005b38:	0008083e 	andeq	r0, r8, lr, lsr r8
 8005b3c:	70800040 	addvc	r0, r0, r0, asr #32
 8005b40:	40000030 	andmi	r0, r0, r0, lsr r0
 8005b44:	08080808 	stmdaeq	r8, {r3, fp}
 8005b48:	00400008 	subeq	r0, r0, r8
 8005b4c:	00606000 	rsbeq	r6, r0, r0
 8005b50:	10204000 	eorne	r4, r0, r0
 8005b54:	00020408 	andeq	r0, r2, r8, lsl #8
 8005b58:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8005b5c:	40003e45 	andmi	r3, r0, r5, asr #28
 8005b60:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8005b64:	72400000 	subvc	r0, r0, #0
 8005b68:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8005b6c:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8005b70:	00334d49 	eorseq	r4, r3, r9, asr #26
 8005b74:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8005b78:	4000107f 	andmi	r1, r0, pc, ror r0
 8005b7c:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8005b80:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8005b84:	3149494a 	cmpcc	r9, sl, asr #18
 8005b88:	21414000 	mrscs	r4, (UNDEF: 65)
 8005b8c:	00070911 	andeq	r0, r7, r1, lsl r9
 8005b90:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8005b94:	40003649 	andmi	r3, r0, r9, asr #12
 8005b98:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8005b9c:	0040001e 	subeq	r0, r0, lr, lsl r0
 8005ba0:	00001400 	andeq	r1, r0, r0, lsl #8
 8005ba4:	40004000 	andmi	r4, r0, r0
 8005ba8:	00000034 	andeq	r0, r0, r4, lsr r0
 8005bac:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8005bb0:	40004122 	andmi	r4, r0, r2, lsr #2
 8005bb4:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8005bb8:	00400014 	subeq	r0, r0, r4, lsl r0
 8005bbc:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8005bc0:	01024000 	mrseq	r4, (UNDEF: 2)
 8005bc4:	00060959 	andeq	r0, r6, r9, asr r9
 8005bc8:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8005bcc:	40004e59 	andmi	r4, r0, r9, asr lr
 8005bd0:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8005bd4:	7f40007c 	svcvc	0x0040007c
 8005bd8:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8005bdc:	413e4000 	teqmi	lr, r0
 8005be0:	00224141 	eoreq	r4, r2, r1, asr #2
 8005be4:	41417f40 	cmpmi	r1, r0, asr #30
 8005be8:	40003e41 	andmi	r3, r0, r1, asr #28
 8005bec:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8005bf0:	7f400041 	svcvc	0x00400041
 8005bf4:	01090909 	tsteq	r9, r9, lsl #18
 8005bf8:	413e4000 	teqmi	lr, r0
 8005bfc:	00735141 	rsbseq	r5, r3, r1, asr #2
 8005c00:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8005c04:	40007f08 	andmi	r7, r0, r8, lsl #30
 8005c08:	417f4100 	cmnmi	pc, r0, lsl #2
 8005c0c:	20400000 	subcs	r0, r0, r0
 8005c10:	013f4140 	teqeq	pc, r0, asr #2
 8005c14:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8005c18:	00412214 	subeq	r2, r1, r4, lsl r2
 8005c1c:	40407f40 	submi	r7, r0, r0, asr #30
 8005c20:	40004040 	andmi	r4, r0, r0, asr #32
 8005c24:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8005c28:	7f40007f 	svcvc	0x0040007f
 8005c2c:	7f100804 	svcvc	0x00100804
 8005c30:	413e4000 	teqmi	lr, r0
 8005c34:	003e4141 	eorseq	r4, lr, r1, asr #2
 8005c38:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8005c3c:	40000609 	andmi	r0, r0, r9, lsl #12
 8005c40:	2151413e 	cmpcs	r1, lr, lsr r1
 8005c44:	7f40005e 	svcvc	0x0040005e
 8005c48:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8005c4c:	49264000 	stmdbmi	r6!, {lr}
 8005c50:	00324949 	eorseq	r4, r2, r9, asr #18
 8005c54:	7f010340 	svcvc	0x00010340
 8005c58:	40000301 	andmi	r0, r0, r1, lsl #6
 8005c5c:	4040403f 	submi	r4, r0, pc, lsr r0
 8005c60:	1f40003f 	svcne	0x0040003f
 8005c64:	1f204020 	svcne	0x00204020
 8005c68:	403f4000 	eorsmi	r4, pc, r0
 8005c6c:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8005c70:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8005c74:	40006314 	andmi	r6, r0, r4, lsl r3
 8005c78:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8005c7c:	61400003 	cmpvs	r0, r3
 8005c80:	434d4959 	movtmi	r4, #55641	; 0xd959
 8005c84:	7f004000 	svcvc	0x00004000
 8005c88:	00414141 	subeq	r4, r1, r1, asr #2
 8005c8c:	08040240 	stmdaeq	r4, {r6, r9}
 8005c90:	40002010 	andmi	r2, r0, r0, lsl r0
 8005c94:	41414100 	mrsmi	r4, (UNDEF: 81)
 8005c98:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8005c9c:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8005ca0:	40404000 	submi	r4, r0, r0
 8005ca4:	00404040 	subeq	r4, r0, r0, asr #32
 8005ca8:	07030040 	streq	r0, [r3, -r0, asr #32]
 8005cac:	40000008 	andmi	r0, r0, r8
 8005cb0:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8005cb4:	7f400040 	svcvc	0x00400040
 8005cb8:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8005cbc:	44384000 	ldrtmi	r4, [r8], #-0
 8005cc0:	00284444 	eoreq	r4, r8, r4, asr #8
 8005cc4:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8005cc8:	40007f28 	andmi	r7, r0, r8, lsr #30
 8005ccc:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8005cd0:	00400018 	subeq	r0, r0, r8, lsl r0
 8005cd4:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8005cd8:	a4184000 	ldrge	r4, [r8], #-0
 8005cdc:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8005ce0:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8005ce4:	40007804 	andmi	r7, r0, r4, lsl #16
 8005ce8:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8005cec:	20400000 	subcs	r0, r0, r0
 8005cf0:	003d4040 	eorseq	r4, sp, r0, asr #32
 8005cf4:	107f4000 	rsbsne	r4, pc, r0
 8005cf8:	00004428 	andeq	r4, r0, r8, lsr #8
 8005cfc:	7f410040 	svcvc	0x00410040
 8005d00:	40000040 	andmi	r0, r0, r0, asr #32
 8005d04:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8005d08:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8005d0c:	78040408 	stmdavc	r4, {r3, sl}
 8005d10:	44384000 	ldrtmi	r4, [r8], #-0
 8005d14:	00384444 	eorseq	r4, r8, r4, asr #8
 8005d18:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8005d1c:	40001824 	andmi	r1, r0, r4, lsr #16
 8005d20:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8005d24:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8005d28:	08040408 	stmdaeq	r4, {r3, sl}
 8005d2c:	54484000 	strbpl	r4, [r8], #-0
 8005d30:	00245454 	eoreq	r5, r4, r4, asr r4
 8005d34:	3f040440 	svccc	0x00040440
 8005d38:	40002444 	andmi	r2, r0, r4, asr #8
 8005d3c:	2040403c 	subcs	r4, r0, ip, lsr r0
 8005d40:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8005d44:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8005d48:	403c4000 	eorsmi	r4, ip, r0
 8005d4c:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8005d50:	10284440 	eorne	r4, r8, r0, asr #8
 8005d54:	40004428 	andmi	r4, r0, r8, lsr #8
 8005d58:	9090904c 	addsls	r9, r0, ip, asr #32
 8005d5c:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8005d60:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8005d64:	08004000 	stmdaeq	r0, {lr}
 8005d68:	00004136 	andeq	r4, r0, r6, lsr r1
 8005d6c:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8005d70:	40000000 	andmi	r0, r0, r0
 8005d74:	08364100 	ldmdaeq	r6!, {r8, lr}
 8005d78:	02400000 	subeq	r0, r0, #0
 8005d7c:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8005d80:	263c4000 	ldrtcs	r4, [ip], -r0
 8005d84:	003c2623 	eorseq	r2, ip, r3, lsr #12

08005d88 <oled_128x32_init>:
 8005d88:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8005d8c:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8005d90:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8005d94:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8005d98:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8005d9c:	a6a440db 	ssatge	r4, #5, fp, asr #1

08005da0 <oled_128x64_init>:
 8005da0:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8005da4:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8005da8:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8005dac:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8005db0:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8005db4:	a6a440db 	ssatge	r4, #5, fp, asr #1

08005db8 <vtable for Ssd1306>:
	...
 8005dc0:	08003cb1 	stmdaeq	r0, {r0, r4, r5, r7, sl, fp, ip, sp}
 8005dc4:	08003cdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, sl, fp, ip, sp}
 8005dc8:	08003ff5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp}
 8005dcc:	08003f79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp}
 8005dd0:	08003e45 	stmdaeq	r0, {r0, r2, r6, r9, sl, fp, ip, sp}
 8005dd4:	08003cfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, fp, ip, sp}
 8005dd8:	08003d25 	stmdaeq	r0, {r0, r2, r5, r8, sl, fp, ip, sp}
 8005ddc:	08003e1b 	stmdaeq	r0, {r0, r1, r3, r4, r9, sl, fp, ip, sp}
 8005de0:	08003dd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, sl, fp, ip, sp}
 8005de4:	08003cb3 	stmdaeq	r0, {r0, r1, r4, r5, r7, sl, fp, ip, sp}
 8005de8:	08003e81 	stmdaeq	r0, {r0, r7, r9, sl, fp, ip, sp}
 8005dec:	08003e8d 	stmdaeq	r0, {r0, r2, r3, r7, r9, sl, fp, ip, sp}
 8005df0:	08003ea7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r9, sl, fp, ip, sp}
 8005df4:	08003cb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, sl, fp, ip, sp}
 8005df8:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005dfc:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005e00:	000a7525 	andeq	r7, sl, r5, lsr #10
 8005e04:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005e08:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005e0c:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8005e10:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8005e14:	6b636f6c 	blvs	98e1bcc <__exidx_end+0x18dbd20>
 8005e18:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8005e1c:	000a7469 	andeq	r7, sl, r9, ror #8
 8005e20:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005e24:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005e28:	6f6c4270 	svcvs	0x006c4270
 8005e2c:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8005e30:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8005e34:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8005e38:	7a697320 	bvc	9a62ac0 <__exidx_end+0x1a5cc14>
 8005e3c:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8005e40:	6164202c 	cmnvs	r4, ip, lsr #32
 8005e44:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8005e48:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8005e4c:	3a656572 	bcc	995f41c <__exidx_end+0x1959570>
 8005e50:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8005e54:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8005e58:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8005e5c:	203d2072 	eorscs	r2, sp, r2, ror r0
 8005e60:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8005e64:	6f6c4270 	svcvs	0x006c4270
 8005e68:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8005e6c:	0a702520 	beq	9c0f2f4 <__exidx_end+0x1c09448>
 8005e70:	00000000 	andeq	r0, r0, r0

08005e74 <days_of_month>:
 8005e74:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005e78:	0000001c 	andeq	r0, r0, ip, lsl r0
 8005e7c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005e80:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005e84:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005e88:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005e8c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005e90:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005e94:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005e98:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005e9c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005ea0:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08005ea4 <__exidx_start>:
 8005ea4:	7fffa818 	svcvc	0x00ffa818
 8005ea8:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08005eac <.ARM.attributes>:
 8005eac:	00002e41 	andeq	r2, r0, r1, asr #28
 8005eb0:	61656100 	cmnvs	r5, r0, lsl #2
 8005eb4:	01006962 	tsteq	r0, r2, ror #18
 8005eb8:	00000024 	andeq	r0, r0, r4, lsr #32
 8005ebc:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8005ec0:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8005ec4:	0600334d 	streq	r3, [r0], -sp, asr #6
 8005ec8:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8005ecc:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8005ed0:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8005ed4:	1a011803 	bne	804bee8 <__exidx_end+0x4603c>
 8005ed8:	Address 0x0000000008005ed8 is out of bounds.


Disassembly of section .data:

20000000 <WidgetConfiguration::s_nMabTime>:
20000000:	 	andeq	r0, r4, #16384	; 0x4000

20000001 <WidgetConfiguration::s_nBreakTime>:
20000001:	 	stmdacs	r2, {r0, r3, sl}

20000002 <WidgetConfiguration::s_nFirmwareLsb>:
20000002:	 			; <UNDEFINED> instruction: 0x01280204

20000003 <WidgetConfiguration::s_nFirmwareMsb>:
20000003:	 	andeq	r2, r1, r2, lsl #16

20000004 <WidgetConfiguration::s_nRefreshRate>:
20000004:	 	andeq	r0, r0, r8, lsr #2

20000005 <WidgetConfiguration::s_aDeviceTypeId>:
20000005:	 	stmdage	r0, {r0}

20000008 <s_nDmxTransmitPeriod>:
20000008:	000061a8 	andeq	r6, r0, r8, lsr #3

2000000c <s_nDmxTransmitMabTime>:
2000000c:	0000000c 	andeq	r0, r0, ip

20000010 <s_nDmxTransmitBreakTime>:
20000010:	0000005c 	andeq	r0, r0, ip, asr r0

20000014 <next_block>:
20000014:	2000a000 	andcs	sl, r0, r0

20000018 <s_block_bucket>:
20000018:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000028:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000038:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000048:	00000060 	andeq	r0, r0, r0, rrx
	...
20000058:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000068:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000078:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000088:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000098:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a8:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b8:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c8:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e8 <SystemCoreClock>:
200000e8:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000f0 <outptr>:
200000f0:	00000000 	andeq	r0, r0, r0

200000f4 <Widget::s_pThis>:
200000f4:	00000000 	andeq	r0, r0, r0

200000f8 <s_RxBuffer>:
	...

20000308 <s_TxBuffer>:
	...

2000050c <sv_PortState>:
2000050c:	00000000 	andeq	r0, r0, r0

20000510 <s_RxDmxPrevious>:
	...

20000712 <s_nUartsSending>:
	...

20000714 <sv_nRxDmxPackets>:
	...

20000724 <Dmx::s_pThis>:
20000724:	00000000 	andeq	r0, r0, r0

20000728 <gv_RdmDataReceiveEnd>:
20000728:	00000000 	andeq	r0, r0, r0

2000072c <SpiFlashStore::s_nWaitMillis>:
2000072c:	00000000 	andeq	r0, r0, r0

20000730 <SpiFlashStore::s_SpiFlashData>:
	...

20001730 <SpiFlashStore::s_nStartAddress>:
20001730:	00000000 	andeq	r0, r0, r0

20001734 <SpiFlashStore::s_bHaveFlashChip>:
20001734:	00000000 	andeq	r0, r0, r0

20001738 <SpiFlashStore::s_nSpiFlashStoreSize>:
20001738:	00000000 	andeq	r0, r0, r0

2000173c <SpiFlashStore::s_State>:
2000173c:	00000000 	andeq	r0, r0, r0

20001740 <SpiFlashStore::s_pThis>:
20001740:	00000000 	andeq	r0, r0, r0

20001744 <SpiFlashStore::s_bIsNew>:
20001744:	00000000 	andeq	r0, r0, r0

20001748 <StoreRDMDevice::s_pThis>:
20001748:	00000000 	andeq	r0, r0, r0

2000174c <StoreWidget::s_pThis>:
2000174c:	00000000 	andeq	r0, r0, r0

20001750 <FlashRom::s_pThis>:
20001750:	00000000 	andeq	r0, r0, r0

20001754 <flashrom::s_nAddress>:
20001754:	00000000 	andeq	r0, r0, r0

20001758 <flashrom::s_State>:
20001758:	00000000 	andeq	r0, r0, r0

2000175c <flashrom::s_nPage>:
2000175c:	00000000 	andeq	r0, r0, r0

20001760 <flashrom::s_pData>:
20001760:	00000000 	andeq	r0, r0, r0

20001764 <flashrom::s_nLength>:
20001764:	00000000 	andeq	r0, r0, r0

20001768 <Network::s_pThis>:
20001768:	00000000 	andeq	r0, r0, r0

2000176c <Display::s_pThis>:
2000176c:	00000000 	andeq	r0, r0, r0

20001770 <Display7Segment::s_pThis>:
20001770:	00000000 	andeq	r0, r0, r0

20001774 <_ClearBuffer>:
	...

200017fc <Ssd1306::s_pThis>:
200017fc:	00000000 	andeq	r0, r0, r0

20001800 <LedBlink::s_pThis>:
20001800:	00000000 	andeq	r0, r0, r0

20001804 <Hardware::s_pThis>:
20001804:	00000000 	andeq	r0, r0, r0

20001808 <s_micros>:
	...

20001810 <set_timer>:
20001810:	00000000 	andeq	r0, r0, r0

20001814 <s_address>:
20001814:	00000000 	andeq	r0, r0, r0

20001818 <s_nSysTickMillis>:
20001818:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

2000a000 <heap_low>:
	...

Disassembly of section .stack:

2000b000 <_sp-0x1000>:
	...
