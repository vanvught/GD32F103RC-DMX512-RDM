
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08000000 <__gVectors>:
 8000000:	2000c000 	andcs	ip, r0, r0
 8000004:	08000d25 	stmdaeq	r0, {r0, r2, r5, r8, sl, fp}
 8000008:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 800000c:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000010:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000014:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000018:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
	...
 800002c:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000030:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 800003c:	080041ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, lr}
 8000040:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000044:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000048:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 800004c:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000050:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000054:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000058:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 800005c:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000060:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000064:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000068:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 800006c:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000070:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000074:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000078:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 800007c:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000080:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000084:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000088:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 800008c:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000090:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000094:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000098:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 800009c:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000a0:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000a4:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000a8:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000ac:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000b0:	0800257d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, sl, sp}
 80000b4:	08002631 	stmdaeq	r0, {r0, r4, r5, r9, sl, sp}
 80000b8:	08002681 	stmdaeq	r0, {r0, r7, r9, sl, sp}
 80000bc:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000c0:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000c4:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000c8:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000cc:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000d0:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000d4:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000d8:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000dc:	08002325 	stmdaeq	r0, {r0, r2, r5, r8, r9, sp}
 80000e0:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000e4:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000e8:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000ec:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000f0:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000f4:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 80000f8:	00000000 	andeq	r0, r0, r0
 80000fc:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000100:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000104:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000108:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 800010c:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000110:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000114:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000118:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 800011c:	080026a1 	stmdaeq	r0, {r0, r5, r7, r9, sl, sp}
 8000120:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000124:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 8000128:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}
 800012c:	08000d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp}

Disassembly of section .text:

08000130 <console_init>:
 8000130:	b508      	push	{r3, lr}
 8000132:	f003 ffcb 	bl	80040cc <uart0_init>
 8000136:	4804      	ldr	r0, [pc, #16]	; (8000148 <console_init+0x18>)
 8000138:	f003 fff8 	bl	800412c <uart0_puts>
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <console_init+0x1c>)
 800013e:	f003 fff5 	bl	800412c <uart0_puts>
 8000142:	2000      	movs	r0, #0
 8000144:	bd08      	pop	{r3, pc}
 8000146:	bf00      	nop
 8000148:	08005b8c 	stmdaeq	r0, {r2, r3, r7, r8, r9, fp, ip, lr}
 800014c:	08005b92 	stmdaeq	r0, {r1, r4, r7, r8, r9, fp, ip, lr}

08000150 <__aeabi_uldivmod>:
 8000150:	b953      	cbnz	r3, 8000168 <__aeabi_uldivmod+0x18>
 8000152:	b94a      	cbnz	r2, 8000168 <__aeabi_uldivmod+0x18>
 8000154:	2900      	cmp	r1, #0
 8000156:	bf08      	it	eq
 8000158:	2800      	cmpeq	r0, #0
 800015a:	bf1c      	itt	ne
 800015c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000160:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000164:	f000 b80c 	b.w	8000180 <__aeabi_idiv0>
 8000168:	f1ad 0c08 	sub.w	ip, sp, #8
 800016c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000170:	f001 f91e 	bl	80013b0 <__udivmoddi4>
 8000174:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000178:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800017c:	b004      	add	sp, #16
 800017e:	4770      	bx	lr

08000180 <__aeabi_idiv0>:
 8000180:	4770      	bx	lr
 8000182:	bf00      	nop

08000184 <__aeabi_fmul>:
 8000184:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000188:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800018c:	bf1e      	ittt	ne
 800018e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000192:	ea92 0f0c 	teqne	r2, ip
 8000196:	ea93 0f0c 	teqne	r3, ip
 800019a:	d06f      	beq.n	800027c <__aeabi_fmul+0xf8>
 800019c:	441a      	add	r2, r3
 800019e:	ea80 0c01 	eor.w	ip, r0, r1
 80001a2:	0240      	lsls	r0, r0, #9
 80001a4:	bf18      	it	ne
 80001a6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 80001aa:	d01e      	beq.n	80001ea <__aeabi_fmul+0x66>
 80001ac:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80001b0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80001b4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80001b8:	fba0 3101 	umull	r3, r1, r0, r1
 80001bc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80001c0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80001c4:	bf3e      	ittt	cc
 80001c6:	0049      	lslcc	r1, r1, #1
 80001c8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80001cc:	005b      	lslcc	r3, r3, #1
 80001ce:	ea40 0001 	orr.w	r0, r0, r1
 80001d2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80001d6:	2afd      	cmp	r2, #253	; 0xfd
 80001d8:	d81d      	bhi.n	8000216 <__aeabi_fmul+0x92>
 80001da:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80001de:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80001e2:	bf08      	it	eq
 80001e4:	f020 0001 	biceq.w	r0, r0, #1
 80001e8:	4770      	bx	lr
 80001ea:	f090 0f00 	teq	r0, #0
 80001ee:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80001f2:	bf08      	it	eq
 80001f4:	0249      	lsleq	r1, r1, #9
 80001f6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80001fa:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80001fe:	3a7f      	subs	r2, #127	; 0x7f
 8000200:	bfc2      	ittt	gt
 8000202:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000206:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 800020a:	4770      	bxgt	lr
 800020c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000210:	f04f 0300 	mov.w	r3, #0
 8000214:	3a01      	subs	r2, #1
 8000216:	dc5d      	bgt.n	80002d4 <__aeabi_fmul+0x150>
 8000218:	f112 0f19 	cmn.w	r2, #25
 800021c:	bfdc      	itt	le
 800021e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000222:	4770      	bxle	lr
 8000224:	f1c2 0200 	rsb	r2, r2, #0
 8000228:	0041      	lsls	r1, r0, #1
 800022a:	fa21 f102 	lsr.w	r1, r1, r2
 800022e:	f1c2 0220 	rsb	r2, r2, #32
 8000232:	fa00 fc02 	lsl.w	ip, r0, r2
 8000236:	ea5f 0031 	movs.w	r0, r1, rrx
 800023a:	f140 0000 	adc.w	r0, r0, #0
 800023e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000242:	bf08      	it	eq
 8000244:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000248:	4770      	bx	lr
 800024a:	f092 0f00 	teq	r2, #0
 800024e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000252:	bf02      	ittt	eq
 8000254:	0040      	lsleq	r0, r0, #1
 8000256:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800025a:	3a01      	subeq	r2, #1
 800025c:	d0f9      	beq.n	8000252 <__aeabi_fmul+0xce>
 800025e:	ea40 000c 	orr.w	r0, r0, ip
 8000262:	f093 0f00 	teq	r3, #0
 8000266:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800026a:	bf02      	ittt	eq
 800026c:	0049      	lsleq	r1, r1, #1
 800026e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000272:	3b01      	subeq	r3, #1
 8000274:	d0f9      	beq.n	800026a <__aeabi_fmul+0xe6>
 8000276:	ea41 010c 	orr.w	r1, r1, ip
 800027a:	e78f      	b.n	800019c <__aeabi_fmul+0x18>
 800027c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000280:	ea92 0f0c 	teq	r2, ip
 8000284:	bf18      	it	ne
 8000286:	ea93 0f0c 	teqne	r3, ip
 800028a:	d00a      	beq.n	80002a2 <__aeabi_fmul+0x11e>
 800028c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000290:	bf18      	it	ne
 8000292:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000296:	d1d8      	bne.n	800024a <__aeabi_fmul+0xc6>
 8000298:	ea80 0001 	eor.w	r0, r0, r1
 800029c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80002a0:	4770      	bx	lr
 80002a2:	f090 0f00 	teq	r0, #0
 80002a6:	bf17      	itett	ne
 80002a8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 80002ac:	4608      	moveq	r0, r1
 80002ae:	f091 0f00 	teqne	r1, #0
 80002b2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 80002b6:	d014      	beq.n	80002e2 <__aeabi_fmul+0x15e>
 80002b8:	ea92 0f0c 	teq	r2, ip
 80002bc:	d101      	bne.n	80002c2 <__aeabi_fmul+0x13e>
 80002be:	0242      	lsls	r2, r0, #9
 80002c0:	d10f      	bne.n	80002e2 <__aeabi_fmul+0x15e>
 80002c2:	ea93 0f0c 	teq	r3, ip
 80002c6:	d103      	bne.n	80002d0 <__aeabi_fmul+0x14c>
 80002c8:	024b      	lsls	r3, r1, #9
 80002ca:	bf18      	it	ne
 80002cc:	4608      	movne	r0, r1
 80002ce:	d108      	bne.n	80002e2 <__aeabi_fmul+0x15e>
 80002d0:	ea80 0001 	eor.w	r0, r0, r1
 80002d4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80002d8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80002dc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80002e0:	4770      	bx	lr
 80002e2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80002e6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80002ea:	4770      	bx	lr

080002ec <__aeabi_drsub>:
 80002ec:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002f0:	e002      	b.n	80002f8 <__adddf3>
 80002f2:	bf00      	nop

080002f4 <__aeabi_dsub>:
 80002f4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002f8 <__adddf3>:
 80002f8:	b530      	push	{r4, r5, lr}
 80002fa:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002fe:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000302:	ea94 0f05 	teq	r4, r5
 8000306:	bf08      	it	eq
 8000308:	ea90 0f02 	teqeq	r0, r2
 800030c:	bf1f      	itttt	ne
 800030e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000312:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000316:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800031a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800031e:	f000 80e2 	beq.w	80004e6 <__adddf3+0x1ee>
 8000322:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000326:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800032a:	bfb8      	it	lt
 800032c:	426d      	neglt	r5, r5
 800032e:	dd0c      	ble.n	800034a <__adddf3+0x52>
 8000330:	442c      	add	r4, r5
 8000332:	ea80 0202 	eor.w	r2, r0, r2
 8000336:	ea81 0303 	eor.w	r3, r1, r3
 800033a:	ea82 0000 	eor.w	r0, r2, r0
 800033e:	ea83 0101 	eor.w	r1, r3, r1
 8000342:	ea80 0202 	eor.w	r2, r0, r2
 8000346:	ea81 0303 	eor.w	r3, r1, r3
 800034a:	2d36      	cmp	r5, #54	; 0x36
 800034c:	bf88      	it	hi
 800034e:	bd30      	pophi	{r4, r5, pc}
 8000350:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000354:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000358:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 800035c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000360:	d002      	beq.n	8000368 <__adddf3+0x70>
 8000362:	4240      	negs	r0, r0
 8000364:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000368:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 800036c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000370:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000374:	d002      	beq.n	800037c <__adddf3+0x84>
 8000376:	4252      	negs	r2, r2
 8000378:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800037c:	ea94 0f05 	teq	r4, r5
 8000380:	f000 80a7 	beq.w	80004d2 <__adddf3+0x1da>
 8000384:	f1a4 0401 	sub.w	r4, r4, #1
 8000388:	f1d5 0e20 	rsbs	lr, r5, #32
 800038c:	db0d      	blt.n	80003aa <__adddf3+0xb2>
 800038e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000392:	fa22 f205 	lsr.w	r2, r2, r5
 8000396:	1880      	adds	r0, r0, r2
 8000398:	f141 0100 	adc.w	r1, r1, #0
 800039c:	fa03 f20e 	lsl.w	r2, r3, lr
 80003a0:	1880      	adds	r0, r0, r2
 80003a2:	fa43 f305 	asr.w	r3, r3, r5
 80003a6:	4159      	adcs	r1, r3
 80003a8:	e00e      	b.n	80003c8 <__adddf3+0xd0>
 80003aa:	f1a5 0520 	sub.w	r5, r5, #32
 80003ae:	f10e 0e20 	add.w	lr, lr, #32
 80003b2:	2a01      	cmp	r2, #1
 80003b4:	fa03 fc0e 	lsl.w	ip, r3, lr
 80003b8:	bf28      	it	cs
 80003ba:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003be:	fa43 f305 	asr.w	r3, r3, r5
 80003c2:	18c0      	adds	r0, r0, r3
 80003c4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003cc:	d507      	bpl.n	80003de <__adddf3+0xe6>
 80003ce:	f04f 0e00 	mov.w	lr, #0
 80003d2:	f1dc 0c00 	rsbs	ip, ip, #0
 80003d6:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003da:	eb6e 0101 	sbc.w	r1, lr, r1
 80003de:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003e2:	d31b      	bcc.n	800041c <__adddf3+0x124>
 80003e4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003e8:	d30c      	bcc.n	8000404 <__adddf3+0x10c>
 80003ea:	0849      	lsrs	r1, r1, #1
 80003ec:	ea5f 0030 	movs.w	r0, r0, rrx
 80003f0:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003f4:	f104 0401 	add.w	r4, r4, #1
 80003f8:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003fc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000400:	f080 809a 	bcs.w	8000538 <__adddf3+0x240>
 8000404:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000408:	bf08      	it	eq
 800040a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800040e:	f150 0000 	adcs.w	r0, r0, #0
 8000412:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000416:	ea41 0105 	orr.w	r1, r1, r5
 800041a:	bd30      	pop	{r4, r5, pc}
 800041c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000420:	4140      	adcs	r0, r0
 8000422:	eb41 0101 	adc.w	r1, r1, r1
 8000426:	3c01      	subs	r4, #1
 8000428:	bf28      	it	cs
 800042a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800042e:	d2e9      	bcs.n	8000404 <__adddf3+0x10c>
 8000430:	f091 0f00 	teq	r1, #0
 8000434:	bf04      	itt	eq
 8000436:	4601      	moveq	r1, r0
 8000438:	2000      	moveq	r0, #0
 800043a:	fab1 f381 	clz	r3, r1
 800043e:	bf08      	it	eq
 8000440:	3320      	addeq	r3, #32
 8000442:	f1a3 030b 	sub.w	r3, r3, #11
 8000446:	f1b3 0220 	subs.w	r2, r3, #32
 800044a:	da0c      	bge.n	8000466 <__adddf3+0x16e>
 800044c:	320c      	adds	r2, #12
 800044e:	dd08      	ble.n	8000462 <__adddf3+0x16a>
 8000450:	f102 0c14 	add.w	ip, r2, #20
 8000454:	f1c2 020c 	rsb	r2, r2, #12
 8000458:	fa01 f00c 	lsl.w	r0, r1, ip
 800045c:	fa21 f102 	lsr.w	r1, r1, r2
 8000460:	e00c      	b.n	800047c <__adddf3+0x184>
 8000462:	f102 0214 	add.w	r2, r2, #20
 8000466:	bfd8      	it	le
 8000468:	f1c2 0c20 	rsble	ip, r2, #32
 800046c:	fa01 f102 	lsl.w	r1, r1, r2
 8000470:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000474:	bfdc      	itt	le
 8000476:	ea41 010c 	orrle.w	r1, r1, ip
 800047a:	4090      	lslle	r0, r2
 800047c:	1ae4      	subs	r4, r4, r3
 800047e:	bfa2      	ittt	ge
 8000480:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000484:	4329      	orrge	r1, r5
 8000486:	bd30      	popge	{r4, r5, pc}
 8000488:	ea6f 0404 	mvn.w	r4, r4
 800048c:	3c1f      	subs	r4, #31
 800048e:	da1c      	bge.n	80004ca <__adddf3+0x1d2>
 8000490:	340c      	adds	r4, #12
 8000492:	dc0e      	bgt.n	80004b2 <__adddf3+0x1ba>
 8000494:	f104 0414 	add.w	r4, r4, #20
 8000498:	f1c4 0220 	rsb	r2, r4, #32
 800049c:	fa20 f004 	lsr.w	r0, r0, r4
 80004a0:	fa01 f302 	lsl.w	r3, r1, r2
 80004a4:	ea40 0003 	orr.w	r0, r0, r3
 80004a8:	fa21 f304 	lsr.w	r3, r1, r4
 80004ac:	ea45 0103 	orr.w	r1, r5, r3
 80004b0:	bd30      	pop	{r4, r5, pc}
 80004b2:	f1c4 040c 	rsb	r4, r4, #12
 80004b6:	f1c4 0220 	rsb	r2, r4, #32
 80004ba:	fa20 f002 	lsr.w	r0, r0, r2
 80004be:	fa01 f304 	lsl.w	r3, r1, r4
 80004c2:	ea40 0003 	orr.w	r0, r0, r3
 80004c6:	4629      	mov	r1, r5
 80004c8:	bd30      	pop	{r4, r5, pc}
 80004ca:	fa21 f004 	lsr.w	r0, r1, r4
 80004ce:	4629      	mov	r1, r5
 80004d0:	bd30      	pop	{r4, r5, pc}
 80004d2:	f094 0f00 	teq	r4, #0
 80004d6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004da:	bf06      	itte	eq
 80004dc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004e0:	3401      	addeq	r4, #1
 80004e2:	3d01      	subne	r5, #1
 80004e4:	e74e      	b.n	8000384 <__adddf3+0x8c>
 80004e6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ea:	bf18      	it	ne
 80004ec:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004f0:	d029      	beq.n	8000546 <__adddf3+0x24e>
 80004f2:	ea94 0f05 	teq	r4, r5
 80004f6:	bf08      	it	eq
 80004f8:	ea90 0f02 	teqeq	r0, r2
 80004fc:	d005      	beq.n	800050a <__adddf3+0x212>
 80004fe:	ea54 0c00 	orrs.w	ip, r4, r0
 8000502:	bf04      	itt	eq
 8000504:	4619      	moveq	r1, r3
 8000506:	4610      	moveq	r0, r2
 8000508:	bd30      	pop	{r4, r5, pc}
 800050a:	ea91 0f03 	teq	r1, r3
 800050e:	bf1e      	ittt	ne
 8000510:	2100      	movne	r1, #0
 8000512:	2000      	movne	r0, #0
 8000514:	bd30      	popne	{r4, r5, pc}
 8000516:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800051a:	d105      	bne.n	8000528 <__adddf3+0x230>
 800051c:	0040      	lsls	r0, r0, #1
 800051e:	4149      	adcs	r1, r1
 8000520:	bf28      	it	cs
 8000522:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000526:	bd30      	pop	{r4, r5, pc}
 8000528:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 800052c:	bf3c      	itt	cc
 800052e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000532:	bd30      	popcc	{r4, r5, pc}
 8000534:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000538:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800053c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000540:	f04f 0000 	mov.w	r0, #0
 8000544:	bd30      	pop	{r4, r5, pc}
 8000546:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800054a:	bf1a      	itte	ne
 800054c:	4619      	movne	r1, r3
 800054e:	4610      	movne	r0, r2
 8000550:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000554:	bf1c      	itt	ne
 8000556:	460b      	movne	r3, r1
 8000558:	4602      	movne	r2, r0
 800055a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800055e:	bf06      	itte	eq
 8000560:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000564:	ea91 0f03 	teqeq	r1, r3
 8000568:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 800056c:	bd30      	pop	{r4, r5, pc}
 800056e:	bf00      	nop

08000570 <__aeabi_ui2d>:
 8000570:	f090 0f00 	teq	r0, #0
 8000574:	bf04      	itt	eq
 8000576:	2100      	moveq	r1, #0
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000580:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000584:	f04f 0500 	mov.w	r5, #0
 8000588:	f04f 0100 	mov.w	r1, #0
 800058c:	e750      	b.n	8000430 <__adddf3+0x138>
 800058e:	bf00      	nop

08000590 <__aeabi_i2d>:
 8000590:	f090 0f00 	teq	r0, #0
 8000594:	bf04      	itt	eq
 8000596:	2100      	moveq	r1, #0
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005a0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005a4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80005a8:	bf48      	it	mi
 80005aa:	4240      	negmi	r0, r0
 80005ac:	f04f 0100 	mov.w	r1, #0
 80005b0:	e73e      	b.n	8000430 <__adddf3+0x138>
 80005b2:	bf00      	nop

080005b4 <__aeabi_f2d>:
 80005b4:	0042      	lsls	r2, r0, #1
 80005b6:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80005ba:	ea4f 0131 	mov.w	r1, r1, rrx
 80005be:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005c2:	bf1f      	itttt	ne
 80005c4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80005c8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005cc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005d0:	4770      	bxne	lr
 80005d2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005d6:	bf08      	it	eq
 80005d8:	4770      	bxeq	lr
 80005da:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005de:	bf04      	itt	eq
 80005e0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005e4:	4770      	bxeq	lr
 80005e6:	b530      	push	{r4, r5, lr}
 80005e8:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005f4:	e71c      	b.n	8000430 <__adddf3+0x138>
 80005f6:	bf00      	nop

080005f8 <__aeabi_ul2d>:
 80005f8:	ea50 0201 	orrs.w	r2, r0, r1
 80005fc:	bf08      	it	eq
 80005fe:	4770      	bxeq	lr
 8000600:	b530      	push	{r4, r5, lr}
 8000602:	f04f 0500 	mov.w	r5, #0
 8000606:	e00a      	b.n	800061e <__aeabi_l2d+0x16>

08000608 <__aeabi_l2d>:
 8000608:	ea50 0201 	orrs.w	r2, r0, r1
 800060c:	bf08      	it	eq
 800060e:	4770      	bxeq	lr
 8000610:	b530      	push	{r4, r5, lr}
 8000612:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000616:	d502      	bpl.n	800061e <__aeabi_l2d+0x16>
 8000618:	4240      	negs	r0, r0
 800061a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800061e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000622:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000626:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800062a:	f43f aed8 	beq.w	80003de <__adddf3+0xe6>
 800062e:	f04f 0203 	mov.w	r2, #3
 8000632:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000636:	bf18      	it	ne
 8000638:	3203      	addne	r2, #3
 800063a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800063e:	bf18      	it	ne
 8000640:	3203      	addne	r2, #3
 8000642:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000646:	f1c2 0320 	rsb	r3, r2, #32
 800064a:	fa00 fc03 	lsl.w	ip, r0, r3
 800064e:	fa20 f002 	lsr.w	r0, r0, r2
 8000652:	fa01 fe03 	lsl.w	lr, r1, r3
 8000656:	ea40 000e 	orr.w	r0, r0, lr
 800065a:	fa21 f102 	lsr.w	r1, r1, r2
 800065e:	4414      	add	r4, r2
 8000660:	e6bd      	b.n	80003de <__adddf3+0xe6>
 8000662:	bf00      	nop

08000664 <__aeabi_dmul>:
 8000664:	b570      	push	{r4, r5, r6, lr}
 8000666:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800066a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800066e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000672:	bf1d      	ittte	ne
 8000674:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000678:	ea94 0f0c 	teqne	r4, ip
 800067c:	ea95 0f0c 	teqne	r5, ip
 8000680:	f000 f8de 	bleq	8000840 <__aeabi_dmul+0x1dc>
 8000684:	442c      	add	r4, r5
 8000686:	ea81 0603 	eor.w	r6, r1, r3
 800068a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800068e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000692:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000696:	bf18      	it	ne
 8000698:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 800069c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006a0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80006a4:	d038      	beq.n	8000718 <__aeabi_dmul+0xb4>
 80006a6:	fba0 ce02 	umull	ip, lr, r0, r2
 80006aa:	f04f 0500 	mov.w	r5, #0
 80006ae:	fbe1 e502 	umlal	lr, r5, r1, r2
 80006b2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80006b6:	fbe0 e503 	umlal	lr, r5, r0, r3
 80006ba:	f04f 0600 	mov.w	r6, #0
 80006be:	fbe1 5603 	umlal	r5, r6, r1, r3
 80006c2:	f09c 0f00 	teq	ip, #0
 80006c6:	bf18      	it	ne
 80006c8:	f04e 0e01 	orrne.w	lr, lr, #1
 80006cc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006d0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006d4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006d8:	d204      	bcs.n	80006e4 <__aeabi_dmul+0x80>
 80006da:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006de:	416d      	adcs	r5, r5
 80006e0:	eb46 0606 	adc.w	r6, r6, r6
 80006e4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006e8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006ec:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006f0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006f4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006f8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006fc:	bf88      	it	hi
 80006fe:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000702:	d81e      	bhi.n	8000742 <__aeabi_dmul+0xde>
 8000704:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000708:	bf08      	it	eq
 800070a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800070e:	f150 0000 	adcs.w	r0, r0, #0
 8000712:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000716:	bd70      	pop	{r4, r5, r6, pc}
 8000718:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 800071c:	ea46 0101 	orr.w	r1, r6, r1
 8000720:	ea40 0002 	orr.w	r0, r0, r2
 8000724:	ea81 0103 	eor.w	r1, r1, r3
 8000728:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 800072c:	bfc2      	ittt	gt
 800072e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000732:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000736:	bd70      	popgt	{r4, r5, r6, pc}
 8000738:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800073c:	f04f 0e00 	mov.w	lr, #0
 8000740:	3c01      	subs	r4, #1
 8000742:	f300 80ab 	bgt.w	800089c <__aeabi_dmul+0x238>
 8000746:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800074a:	bfde      	ittt	le
 800074c:	2000      	movle	r0, #0
 800074e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000752:	bd70      	pople	{r4, r5, r6, pc}
 8000754:	f1c4 0400 	rsb	r4, r4, #0
 8000758:	3c20      	subs	r4, #32
 800075a:	da35      	bge.n	80007c8 <__aeabi_dmul+0x164>
 800075c:	340c      	adds	r4, #12
 800075e:	dc1b      	bgt.n	8000798 <__aeabi_dmul+0x134>
 8000760:	f104 0414 	add.w	r4, r4, #20
 8000764:	f1c4 0520 	rsb	r5, r4, #32
 8000768:	fa00 f305 	lsl.w	r3, r0, r5
 800076c:	fa20 f004 	lsr.w	r0, r0, r4
 8000770:	fa01 f205 	lsl.w	r2, r1, r5
 8000774:	ea40 0002 	orr.w	r0, r0, r2
 8000778:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 800077c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000780:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000784:	fa21 f604 	lsr.w	r6, r1, r4
 8000788:	eb42 0106 	adc.w	r1, r2, r6
 800078c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000790:	bf08      	it	eq
 8000792:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000796:	bd70      	pop	{r4, r5, r6, pc}
 8000798:	f1c4 040c 	rsb	r4, r4, #12
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f304 	lsl.w	r3, r0, r4
 80007a4:	fa20 f005 	lsr.w	r0, r0, r5
 80007a8:	fa01 f204 	lsl.w	r2, r1, r4
 80007ac:	ea40 0002 	orr.w	r0, r0, r2
 80007b0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007b4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80007b8:	f141 0100 	adc.w	r1, r1, #0
 80007bc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007c0:	bf08      	it	eq
 80007c2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c6:	bd70      	pop	{r4, r5, r6, pc}
 80007c8:	f1c4 0520 	rsb	r5, r4, #32
 80007cc:	fa00 f205 	lsl.w	r2, r0, r5
 80007d0:	ea4e 0e02 	orr.w	lr, lr, r2
 80007d4:	fa20 f304 	lsr.w	r3, r0, r4
 80007d8:	fa01 f205 	lsl.w	r2, r1, r5
 80007dc:	ea43 0302 	orr.w	r3, r3, r2
 80007e0:	fa21 f004 	lsr.w	r0, r1, r4
 80007e4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007e8:	fa21 f204 	lsr.w	r2, r1, r4
 80007ec:	ea20 0002 	bic.w	r0, r0, r2
 80007f0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007f4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007f8:	bf08      	it	eq
 80007fa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007fe:	bd70      	pop	{r4, r5, r6, pc}
 8000800:	f094 0f00 	teq	r4, #0
 8000804:	d10f      	bne.n	8000826 <__aeabi_dmul+0x1c2>
 8000806:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800080a:	0040      	lsls	r0, r0, #1
 800080c:	eb41 0101 	adc.w	r1, r1, r1
 8000810:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000814:	bf08      	it	eq
 8000816:	3c01      	subeq	r4, #1
 8000818:	d0f7      	beq.n	800080a <__aeabi_dmul+0x1a6>
 800081a:	ea41 0106 	orr.w	r1, r1, r6
 800081e:	f095 0f00 	teq	r5, #0
 8000822:	bf18      	it	ne
 8000824:	4770      	bxne	lr
 8000826:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800082a:	0052      	lsls	r2, r2, #1
 800082c:	eb43 0303 	adc.w	r3, r3, r3
 8000830:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000834:	bf08      	it	eq
 8000836:	3d01      	subeq	r5, #1
 8000838:	d0f7      	beq.n	800082a <__aeabi_dmul+0x1c6>
 800083a:	ea43 0306 	orr.w	r3, r3, r6
 800083e:	4770      	bx	lr
 8000840:	ea94 0f0c 	teq	r4, ip
 8000844:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000848:	bf18      	it	ne
 800084a:	ea95 0f0c 	teqne	r5, ip
 800084e:	d00c      	beq.n	800086a <__aeabi_dmul+0x206>
 8000850:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000854:	bf18      	it	ne
 8000856:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800085a:	d1d1      	bne.n	8000800 <__aeabi_dmul+0x19c>
 800085c:	ea81 0103 	eor.w	r1, r1, r3
 8000860:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000864:	f04f 0000 	mov.w	r0, #0
 8000868:	bd70      	pop	{r4, r5, r6, pc}
 800086a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800086e:	bf06      	itte	eq
 8000870:	4610      	moveq	r0, r2
 8000872:	4619      	moveq	r1, r3
 8000874:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000878:	d019      	beq.n	80008ae <__aeabi_dmul+0x24a>
 800087a:	ea94 0f0c 	teq	r4, ip
 800087e:	d102      	bne.n	8000886 <__aeabi_dmul+0x222>
 8000880:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000884:	d113      	bne.n	80008ae <__aeabi_dmul+0x24a>
 8000886:	ea95 0f0c 	teq	r5, ip
 800088a:	d105      	bne.n	8000898 <__aeabi_dmul+0x234>
 800088c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000890:	bf1c      	itt	ne
 8000892:	4610      	movne	r0, r2
 8000894:	4619      	movne	r1, r3
 8000896:	d10a      	bne.n	80008ae <__aeabi_dmul+0x24a>
 8000898:	ea81 0103 	eor.w	r1, r1, r3
 800089c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80008a0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80008a4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80008a8:	f04f 0000 	mov.w	r0, #0
 80008ac:	bd70      	pop	{r4, r5, r6, pc}
 80008ae:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80008b2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80008b6:	bd70      	pop	{r4, r5, r6, pc}

080008b8 <__aeabi_ddiv>:
 80008b8:	b570      	push	{r4, r5, r6, lr}
 80008ba:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80008be:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80008c2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80008c6:	bf1d      	ittte	ne
 80008c8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008cc:	ea94 0f0c 	teqne	r4, ip
 80008d0:	ea95 0f0c 	teqne	r5, ip
 80008d4:	f000 f8a7 	bleq	8000a26 <__aeabi_ddiv+0x16e>
 80008d8:	eba4 0405 	sub.w	r4, r4, r5
 80008dc:	ea81 0e03 	eor.w	lr, r1, r3
 80008e0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008e4:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008e8:	f000 8088 	beq.w	80009fc <__aeabi_ddiv+0x144>
 80008ec:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008f0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008f4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008f8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008fc:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000900:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000904:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000908:	ea4f 2600 	mov.w	r6, r0, lsl #8
 800090c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000910:	429d      	cmp	r5, r3
 8000912:	bf08      	it	eq
 8000914:	4296      	cmpeq	r6, r2
 8000916:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800091a:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800091e:	d202      	bcs.n	8000926 <__aeabi_ddiv+0x6e>
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	1ab6      	subs	r6, r6, r2
 8000928:	eb65 0503 	sbc.w	r5, r5, r3
 800092c:	085b      	lsrs	r3, r3, #1
 800092e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000932:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000936:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800093a:	ebb6 0e02 	subs.w	lr, r6, r2
 800093e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000942:	bf22      	ittt	cs
 8000944:	1ab6      	subcs	r6, r6, r2
 8000946:	4675      	movcs	r5, lr
 8000948:	ea40 000c 	orrcs.w	r0, r0, ip
 800094c:	085b      	lsrs	r3, r3, #1
 800094e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000952:	ebb6 0e02 	subs.w	lr, r6, r2
 8000956:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095a:	bf22      	ittt	cs
 800095c:	1ab6      	subcs	r6, r6, r2
 800095e:	4675      	movcs	r5, lr
 8000960:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000964:	085b      	lsrs	r3, r3, #1
 8000966:	ea4f 0232 	mov.w	r2, r2, rrx
 800096a:	ebb6 0e02 	subs.w	lr, r6, r2
 800096e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000972:	bf22      	ittt	cs
 8000974:	1ab6      	subcs	r6, r6, r2
 8000976:	4675      	movcs	r5, lr
 8000978:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 800097c:	085b      	lsrs	r3, r3, #1
 800097e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000982:	ebb6 0e02 	subs.w	lr, r6, r2
 8000986:	eb75 0e03 	sbcs.w	lr, r5, r3
 800098a:	bf22      	ittt	cs
 800098c:	1ab6      	subcs	r6, r6, r2
 800098e:	4675      	movcs	r5, lr
 8000990:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000994:	ea55 0e06 	orrs.w	lr, r5, r6
 8000998:	d018      	beq.n	80009cc <__aeabi_ddiv+0x114>
 800099a:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800099e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80009a2:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80009a6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80009aa:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80009ae:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80009b2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80009b6:	d1c0      	bne.n	800093a <__aeabi_ddiv+0x82>
 80009b8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009bc:	d10b      	bne.n	80009d6 <__aeabi_ddiv+0x11e>
 80009be:	ea41 0100 	orr.w	r1, r1, r0
 80009c2:	f04f 0000 	mov.w	r0, #0
 80009c6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80009ca:	e7b6      	b.n	800093a <__aeabi_ddiv+0x82>
 80009cc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009d0:	bf04      	itt	eq
 80009d2:	4301      	orreq	r1, r0
 80009d4:	2000      	moveq	r0, #0
 80009d6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009da:	bf88      	it	hi
 80009dc:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009e0:	f63f aeaf 	bhi.w	8000742 <__aeabi_dmul+0xde>
 80009e4:	ebb5 0c03 	subs.w	ip, r5, r3
 80009e8:	bf04      	itt	eq
 80009ea:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009ee:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009f2:	f150 0000 	adcs.w	r0, r0, #0
 80009f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009fa:	bd70      	pop	{r4, r5, r6, pc}
 80009fc:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000a00:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000a04:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000a08:	bfc2      	ittt	gt
 8000a0a:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000a0e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000a12:	bd70      	popgt	{r4, r5, r6, pc}
 8000a14:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a18:	f04f 0e00 	mov.w	lr, #0
 8000a1c:	3c01      	subs	r4, #1
 8000a1e:	e690      	b.n	8000742 <__aeabi_dmul+0xde>
 8000a20:	ea45 0e06 	orr.w	lr, r5, r6
 8000a24:	e68d      	b.n	8000742 <__aeabi_dmul+0xde>
 8000a26:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a2a:	ea94 0f0c 	teq	r4, ip
 8000a2e:	bf08      	it	eq
 8000a30:	ea95 0f0c 	teqeq	r5, ip
 8000a34:	f43f af3b 	beq.w	80008ae <__aeabi_dmul+0x24a>
 8000a38:	ea94 0f0c 	teq	r4, ip
 8000a3c:	d10a      	bne.n	8000a54 <__aeabi_ddiv+0x19c>
 8000a3e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a42:	f47f af34 	bne.w	80008ae <__aeabi_dmul+0x24a>
 8000a46:	ea95 0f0c 	teq	r5, ip
 8000a4a:	f47f af25 	bne.w	8000898 <__aeabi_dmul+0x234>
 8000a4e:	4610      	mov	r0, r2
 8000a50:	4619      	mov	r1, r3
 8000a52:	e72c      	b.n	80008ae <__aeabi_dmul+0x24a>
 8000a54:	ea95 0f0c 	teq	r5, ip
 8000a58:	d106      	bne.n	8000a68 <__aeabi_ddiv+0x1b0>
 8000a5a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a5e:	f43f aefd 	beq.w	800085c <__aeabi_dmul+0x1f8>
 8000a62:	4610      	mov	r0, r2
 8000a64:	4619      	mov	r1, r3
 8000a66:	e722      	b.n	80008ae <__aeabi_dmul+0x24a>
 8000a68:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a6c:	bf18      	it	ne
 8000a6e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a72:	f47f aec5 	bne.w	8000800 <__aeabi_dmul+0x19c>
 8000a76:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a7a:	f47f af0d 	bne.w	8000898 <__aeabi_dmul+0x234>
 8000a7e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a82:	f47f aeeb 	bne.w	800085c <__aeabi_dmul+0x1f8>
 8000a86:	e712      	b.n	80008ae <__aeabi_dmul+0x24a>

08000a88 <__aeabi_d2uiz>:
 8000a88:	004a      	lsls	r2, r1, #1
 8000a8a:	d211      	bcs.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a8c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a90:	d211      	bcs.n	8000ab6 <__aeabi_d2uiz+0x2e>
 8000a92:	d50d      	bpl.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a94:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a9c:	d40e      	bmi.n	8000abc <__aeabi_d2uiz+0x34>
 8000a9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aa2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000aa6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aaa:	fa23 f002 	lsr.w	r0, r3, r2
 8000aae:	4770      	bx	lr
 8000ab0:	f04f 0000 	mov.w	r0, #0
 8000ab4:	4770      	bx	lr
 8000ab6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aba:	d102      	bne.n	8000ac2 <__aeabi_d2uiz+0x3a>
 8000abc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ac0:	4770      	bx	lr
 8000ac2:	f04f 0000 	mov.w	r0, #0
 8000ac6:	4770      	bx	lr

08000ac8 <__aeabi_frsub>:
 8000ac8:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000acc:	e002      	b.n	8000ad4 <__addsf3>
 8000ace:	bf00      	nop

08000ad0 <__aeabi_fsub>:
 8000ad0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000ad4 <__addsf3>:
 8000ad4:	0042      	lsls	r2, r0, #1
 8000ad6:	bf1f      	itttt	ne
 8000ad8:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000adc:	ea92 0f03 	teqne	r2, r3
 8000ae0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000ae4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000ae8:	d06a      	beq.n	8000bc0 <__addsf3+0xec>
 8000aea:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000aee:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000af2:	bfc1      	itttt	gt
 8000af4:	18d2      	addgt	r2, r2, r3
 8000af6:	4041      	eorgt	r1, r0
 8000af8:	4048      	eorgt	r0, r1
 8000afa:	4041      	eorgt	r1, r0
 8000afc:	bfb8      	it	lt
 8000afe:	425b      	neglt	r3, r3
 8000b00:	2b19      	cmp	r3, #25
 8000b02:	bf88      	it	hi
 8000b04:	4770      	bxhi	lr
 8000b06:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000b0a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b0e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000b12:	bf18      	it	ne
 8000b14:	4240      	negne	r0, r0
 8000b16:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b1a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000b1e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000b22:	bf18      	it	ne
 8000b24:	4249      	negne	r1, r1
 8000b26:	ea92 0f03 	teq	r2, r3
 8000b2a:	d03f      	beq.n	8000bac <__addsf3+0xd8>
 8000b2c:	f1a2 0201 	sub.w	r2, r2, #1
 8000b30:	fa41 fc03 	asr.w	ip, r1, r3
 8000b34:	eb10 000c 	adds.w	r0, r0, ip
 8000b38:	f1c3 0320 	rsb	r3, r3, #32
 8000b3c:	fa01 f103 	lsl.w	r1, r1, r3
 8000b40:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000b44:	d502      	bpl.n	8000b4c <__addsf3+0x78>
 8000b46:	4249      	negs	r1, r1
 8000b48:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000b4c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000b50:	d313      	bcc.n	8000b7a <__addsf3+0xa6>
 8000b52:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000b56:	d306      	bcc.n	8000b66 <__addsf3+0x92>
 8000b58:	0840      	lsrs	r0, r0, #1
 8000b5a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000b5e:	f102 0201 	add.w	r2, r2, #1
 8000b62:	2afe      	cmp	r2, #254	; 0xfe
 8000b64:	d251      	bcs.n	8000c0a <__addsf3+0x136>
 8000b66:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000b6a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000b6e:	bf08      	it	eq
 8000b70:	f020 0001 	biceq.w	r0, r0, #1
 8000b74:	ea40 0003 	orr.w	r0, r0, r3
 8000b78:	4770      	bx	lr
 8000b7a:	0049      	lsls	r1, r1, #1
 8000b7c:	eb40 0000 	adc.w	r0, r0, r0
 8000b80:	3a01      	subs	r2, #1
 8000b82:	bf28      	it	cs
 8000b84:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000b88:	d2ed      	bcs.n	8000b66 <__addsf3+0x92>
 8000b8a:	fab0 fc80 	clz	ip, r0
 8000b8e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000b92:	ebb2 020c 	subs.w	r2, r2, ip
 8000b96:	fa00 f00c 	lsl.w	r0, r0, ip
 8000b9a:	bfaa      	itet	ge
 8000b9c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000ba0:	4252      	neglt	r2, r2
 8000ba2:	4318      	orrge	r0, r3
 8000ba4:	bfbc      	itt	lt
 8000ba6:	40d0      	lsrlt	r0, r2
 8000ba8:	4318      	orrlt	r0, r3
 8000baa:	4770      	bx	lr
 8000bac:	f092 0f00 	teq	r2, #0
 8000bb0:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000bb4:	bf06      	itte	eq
 8000bb6:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000bba:	3201      	addeq	r2, #1
 8000bbc:	3b01      	subne	r3, #1
 8000bbe:	e7b5      	b.n	8000b2c <__addsf3+0x58>
 8000bc0:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000bc4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000bc8:	bf18      	it	ne
 8000bca:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000bce:	d021      	beq.n	8000c14 <__addsf3+0x140>
 8000bd0:	ea92 0f03 	teq	r2, r3
 8000bd4:	d004      	beq.n	8000be0 <__addsf3+0x10c>
 8000bd6:	f092 0f00 	teq	r2, #0
 8000bda:	bf08      	it	eq
 8000bdc:	4608      	moveq	r0, r1
 8000bde:	4770      	bx	lr
 8000be0:	ea90 0f01 	teq	r0, r1
 8000be4:	bf1c      	itt	ne
 8000be6:	2000      	movne	r0, #0
 8000be8:	4770      	bxne	lr
 8000bea:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000bee:	d104      	bne.n	8000bfa <__addsf3+0x126>
 8000bf0:	0040      	lsls	r0, r0, #1
 8000bf2:	bf28      	it	cs
 8000bf4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000bf8:	4770      	bx	lr
 8000bfa:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000bfe:	bf3c      	itt	cc
 8000c00:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000c04:	4770      	bxcc	lr
 8000c06:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c0a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000c0e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c12:	4770      	bx	lr
 8000c14:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000c18:	bf16      	itet	ne
 8000c1a:	4608      	movne	r0, r1
 8000c1c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000c20:	4601      	movne	r1, r0
 8000c22:	0242      	lsls	r2, r0, #9
 8000c24:	bf06      	itte	eq
 8000c26:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000c2a:	ea90 0f01 	teqeq	r0, r1
 8000c2e:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000c32:	4770      	bx	lr

08000c34 <__aeabi_ui2f>:
 8000c34:	f04f 0300 	mov.w	r3, #0
 8000c38:	e004      	b.n	8000c44 <__aeabi_i2f+0x8>
 8000c3a:	bf00      	nop

08000c3c <__aeabi_i2f>:
 8000c3c:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000c40:	bf48      	it	mi
 8000c42:	4240      	negmi	r0, r0
 8000c44:	ea5f 0c00 	movs.w	ip, r0
 8000c48:	bf08      	it	eq
 8000c4a:	4770      	bxeq	lr
 8000c4c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000c50:	4601      	mov	r1, r0
 8000c52:	f04f 0000 	mov.w	r0, #0
 8000c56:	e01c      	b.n	8000c92 <__aeabi_l2f+0x2a>

08000c58 <__aeabi_ul2f>:
 8000c58:	ea50 0201 	orrs.w	r2, r0, r1
 8000c5c:	bf08      	it	eq
 8000c5e:	4770      	bxeq	lr
 8000c60:	f04f 0300 	mov.w	r3, #0
 8000c64:	e00a      	b.n	8000c7c <__aeabi_l2f+0x14>
 8000c66:	bf00      	nop

08000c68 <__aeabi_l2f>:
 8000c68:	ea50 0201 	orrs.w	r2, r0, r1
 8000c6c:	bf08      	it	eq
 8000c6e:	4770      	bxeq	lr
 8000c70:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000c74:	d502      	bpl.n	8000c7c <__aeabi_l2f+0x14>
 8000c76:	4240      	negs	r0, r0
 8000c78:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c7c:	ea5f 0c01 	movs.w	ip, r1
 8000c80:	bf02      	ittt	eq
 8000c82:	4684      	moveq	ip, r0
 8000c84:	4601      	moveq	r1, r0
 8000c86:	2000      	moveq	r0, #0
 8000c88:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000c8c:	bf08      	it	eq
 8000c8e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000c92:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000c96:	fabc f28c 	clz	r2, ip
 8000c9a:	3a08      	subs	r2, #8
 8000c9c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000ca0:	db10      	blt.n	8000cc4 <__aeabi_l2f+0x5c>
 8000ca2:	fa01 fc02 	lsl.w	ip, r1, r2
 8000ca6:	4463      	add	r3, ip
 8000ca8:	fa00 fc02 	lsl.w	ip, r0, r2
 8000cac:	f1c2 0220 	rsb	r2, r2, #32
 8000cb0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000cb4:	fa20 f202 	lsr.w	r2, r0, r2
 8000cb8:	eb43 0002 	adc.w	r0, r3, r2
 8000cbc:	bf08      	it	eq
 8000cbe:	f020 0001 	biceq.w	r0, r0, #1
 8000cc2:	4770      	bx	lr
 8000cc4:	f102 0220 	add.w	r2, r2, #32
 8000cc8:	fa01 fc02 	lsl.w	ip, r1, r2
 8000ccc:	f1c2 0220 	rsb	r2, r2, #32
 8000cd0:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000cd4:	fa21 f202 	lsr.w	r2, r1, r2
 8000cd8:	eb43 0002 	adc.w	r0, r3, r2
 8000cdc:	bf08      	it	eq
 8000cde:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000ce2:	4770      	bx	lr

08000ce4 <__aeabi_f2uiz>:
 8000ce4:	0042      	lsls	r2, r0, #1
 8000ce6:	d20e      	bcs.n	8000d06 <__aeabi_f2uiz+0x22>
 8000ce8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8000cec:	d30b      	bcc.n	8000d06 <__aeabi_f2uiz+0x22>
 8000cee:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8000cf2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000cf6:	d409      	bmi.n	8000d0c <__aeabi_f2uiz+0x28>
 8000cf8:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000cfc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000d00:	fa23 f002 	lsr.w	r0, r3, r2
 8000d04:	4770      	bx	lr
 8000d06:	f04f 0000 	mov.w	r0, #0
 8000d0a:	4770      	bx	lr
 8000d0c:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8000d10:	d101      	bne.n	8000d16 <__aeabi_f2uiz+0x32>
 8000d12:	0242      	lsls	r2, r0, #9
 8000d14:	d102      	bne.n	8000d1c <__aeabi_f2uiz+0x38>
 8000d16:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000d1a:	4770      	bx	lr
 8000d1c:	f04f 0000 	mov.w	r0, #0
 8000d20:	4770      	bx	lr
 8000d22:	bf00      	nop

08000d24 <Reset_Handler>:
 8000d24:	480c      	ldr	r0, [pc, #48]	; (8000d58 <Zerobss+0x10>)
 8000d26:	4685      	mov	sp, r0
 8000d28:	2100      	movs	r1, #0
 8000d2a:	e003      	b.n	8000d34 <DataInit>

08000d2c <CopyData>:
 8000d2c:	4b0b      	ldr	r3, [pc, #44]	; (8000d5c <Zerobss+0x14>)
 8000d2e:	585b      	ldr	r3, [r3, r1]
 8000d30:	5043      	str	r3, [r0, r1]
 8000d32:	3104      	adds	r1, #4

08000d34 <DataInit>:
 8000d34:	480a      	ldr	r0, [pc, #40]	; (8000d60 <Zerobss+0x18>)
 8000d36:	4b0b      	ldr	r3, [pc, #44]	; (8000d64 <Zerobss+0x1c>)
 8000d38:	1842      	adds	r2, r0, r1
 8000d3a:	429a      	cmp	r2, r3
 8000d3c:	d3f6      	bcc.n	8000d2c <CopyData>
 8000d3e:	4a0a      	ldr	r2, [pc, #40]	; (8000d68 <Zerobss+0x20>)
 8000d40:	e002      	b.n	8000d48 <Zerobss>

08000d42 <FillZerobss>:
 8000d42:	2300      	movs	r3, #0
 8000d44:	f842 3b04 	str.w	r3, [r2], #4

08000d48 <Zerobss>:
 8000d48:	4b08      	ldr	r3, [pc, #32]	; (8000d6c <Zerobss+0x24>)
 8000d4a:	429a      	cmp	r2, r3
 8000d4c:	d3f9      	bcc.n	8000d42 <FillZerobss>
 8000d4e:	f003 fa35 	bl	80041bc <SystemInit>
 8000d52:	f000 f837 	bl	8000dc4 <main>
 8000d56:	4770      	bx	lr
 8000d58:	2000c000 	andcs	ip, r0, r0
 8000d5c:	08005c4c 	stmdaeq	r0, {r2, r3, r6, sl, fp, ip, lr}
 8000d60:	20000000 	andcs	r0, r0, r0
 8000d64:	200000ec 	andcs	r0, r0, ip, ror #1
 8000d68:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8000d6c:	2000181c 	andcs	r1, r0, ip, lsl r8

08000d70 <ADC0_1_IRQHandler>:
 8000d70:	e7fe      	b.n	8000d70 <ADC0_1_IRQHandler>

08000d72 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 8000d72:	b470      	push	{r4, r5, r6}
 8000d74:	790a      	ldrb	r2, [r1, #4]
 8000d76:	680b      	ldr	r3, [r1, #0]
 8000d78:	2a20      	cmp	r2, #32
 8000d7a:	bf28      	it	cs
 8000d7c:	2220      	movcs	r2, #32
 8000d7e:	f890 1050 	ldrb.w	r1, [r0, #80]	; 0x50
 8000d82:	189c      	adds	r4, r3, r2
 8000d84:	b189      	cbz	r1, 8000daa <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x38>
 8000d86:	f100 010a 	add.w	r1, r0, #10
 8000d8a:	460d      	mov	r5, r1
 8000d8c:	42a3      	cmp	r3, r4
 8000d8e:	d107      	bne.n	8000da0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x2e>
 8000d90:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 8000d94:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8000d96:	b170      	cbz	r0, 8000db6 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x44>
 8000d98:	bc70      	pop	{r4, r5, r6}
 8000d9a:	6803      	ldr	r3, [r0, #0]
 8000d9c:	689b      	ldr	r3, [r3, #8]
 8000d9e:	4718      	bx	r3
 8000da0:	f813 6b01 	ldrb.w	r6, [r3], #1
 8000da4:	f805 6b01 	strb.w	r6, [r5], #1
 8000da8:	e7f0      	b.n	8000d8c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x1a>
 8000daa:	f100 0151 	add.w	r1, r0, #81	; 0x51
 8000dae:	42a3      	cmp	r3, r4
 8000db0:	d103      	bne.n	8000dba <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x48>
 8000db2:	f880 2071 	strb.w	r2, [r0, #113]	; 0x71
 8000db6:	bc70      	pop	{r4, r5, r6}
 8000db8:	4770      	bx	lr
 8000dba:	f813 5b01 	ldrb.w	r5, [r3], #1
 8000dbe:	f801 5b01 	strb.w	r5, [r1], #1
 8000dc2:	e7f4      	b.n	8000dae <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3c>

08000dc4 <main>:
 8000dc4:	b570      	push	{r4, r5, r6, lr}
 8000dc6:	f5ad 7d76 	sub.w	sp, sp, #984	; 0x3d8
 8000dca:	a807      	add	r0, sp, #28
 8000dcc:	f002 fff8 	bl	8003dc0 <Hardware::Hardware()>
 8000dd0:	a80f      	add	r0, sp, #60	; 0x3c
 8000dd2:	f002 fce1 	bl	8003798 <Network::Network()>
 8000dd6:	a817      	add	r0, sp, #92	; 0x5c
 8000dd8:	f002 ffd0 	bl	8003d7c <LedBlink::LedBlink()>
 8000ddc:	a81d      	add	r0, sp, #116	; 0x74
 8000dde:	f002 fda5 	bl	800392c <Display::Display()>
 8000de2:	a805      	add	r0, sp, #20
 8000de4:	f002 fb60 	bl	80034a8 <FlashRom::FlashRom()>
 8000de8:	a806      	add	r0, sp, #24
 8000dea:	f002 f9d9 	bl	80031a0 <SpiFlashStore::SpiFlashStore()>
 8000dee:	a830      	add	r0, sp, #192	; 0xc0
 8000df0:	f000 fc44 	bl	800167c <Widget::Widget()>
 8000df4:	2300      	movs	r3, #0
 8000df6:	2201      	movs	r2, #1
 8000df8:	4619      	mov	r1, r3
 8000dfa:	a830      	add	r0, sp, #192	; 0xc0
 8000dfc:	f001 fd5c 	bl	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000e00:	a809      	add	r0, sp, #36	; 0x24
 8000e02:	f002 fb45 	bl	8003490 <StoreWidget::StoreWidget()>
 8000e06:	a909      	add	r1, sp, #36	; 0x24
 8000e08:	a813      	add	r0, sp, #76	; 0x4c
 8000e0a:	f000 ffe9 	bl	8001de0 <WidgetParams::WidgetParams(WidgetParamsStore*)>
 8000e0e:	a813      	add	r0, sp, #76	; 0x4c
 8000e10:	f000 ffee 	bl	8001df0 <WidgetParams::Load()>
 8000e14:	b128      	cbz	r0, 8000e22 <main+0x5e>
 8000e16:	a813      	add	r0, sp, #76	; 0x4c
 8000e18:	f001 f866 	bl	8001ee8 <WidgetParams::Set()>
 8000e1c:	a813      	add	r0, sp, #76	; 0x4c
 8000e1e:	f001 f886 	bl	8001f2e <WidgetParams::Dump()>
 8000e22:	a80b      	add	r0, sp, #44	; 0x2c
 8000e24:	f002 faf8 	bl	8003418 <StoreRDMDevice::StoreRDMDevice()>
 8000e28:	a90b      	add	r1, sp, #44	; 0x2c
 8000e2a:	a824      	add	r0, sp, #144	; 0x90
 8000e2c:	f002 f8bc 	bl	8002fa8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 8000e30:	a837      	add	r0, sp, #220	; 0xdc
 8000e32:	494f      	ldr	r1, [pc, #316]	; (8000f70 <main+0x1ac>)
 8000e34:	f7ff ff9d 	bl	8000d72 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 8000e38:	a824      	add	r0, sp, #144	; 0x90
 8000e3a:	f002 f8c7 	bl	8002fcc <RDMDeviceParams::Load()>
 8000e3e:	b130      	cbz	r0, 8000e4e <main+0x8a>
 8000e40:	a824      	add	r0, sp, #144	; 0x90
 8000e42:	a937      	add	r1, sp, #220	; 0xdc
 8000e44:	f002 f8cd 	bl	8002fe2 <RDMDeviceParams::Set(RDMDevice*)>
 8000e48:	a824      	add	r0, sp, #144	; 0x90
 8000e4a:	f002 f8ff 	bl	800304c <RDMDeviceParams::Dump()>
 8000e4e:	2301      	movs	r3, #1
 8000e50:	f88d 312c 	strb.w	r3, [sp, #300]	; 0x12c
 8000e54:	f20d 132d 	addw	r3, sp, #301	; 0x12d
 8000e58:	930d      	str	r3, [sp, #52]	; 0x34
 8000e5a:	f89d 314d 	ldrb.w	r3, [sp, #333]	; 0x14d
 8000e5e:	a90d      	add	r1, sp, #52	; 0x34
 8000e60:	a837      	add	r0, sp, #220	; 0xdc
 8000e62:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
 8000e66:	f7ff ff84 	bl	8000d72 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 8000e6a:	f10d 01e6 	add.w	r1, sp, #230	; 0xe6
 8000e6e:	2200      	movs	r2, #0
 8000e70:	460e      	mov	r6, r1
 8000e72:	f89d 314d 	ldrb.w	r3, [sp, #333]	; 0x14d
 8000e76:	f89d 5106 	ldrb.w	r5, [sp, #262]	; 0x106
 8000e7a:	42aa      	cmp	r2, r5
 8000e7c:	d372      	bcc.n	8000f64 <main+0x1a0>
 8000e7e:	f8ad 314e 	strh.w	r3, [sp, #334]	; 0x14e
 8000e82:	4b3c      	ldr	r3, [pc, #240]	; (8000f74 <main+0x1b0>)
 8000e84:	4a3c      	ldr	r2, [pc, #240]	; (8000f78 <main+0x1b4>)
 8000e86:	493d      	ldr	r1, [pc, #244]	; (8000f7c <main+0x1b8>)
 8000e88:	9300      	str	r3, [sp, #0]
 8000e8a:	483d      	ldr	r0, [pc, #244]	; (8000f80 <main+0x1bc>)
 8000e8c:	4b3d      	ldr	r3, [pc, #244]	; (8000f84 <main+0x1c0>)
 8000e8e:	f89d 4057 	ldrb.w	r4, [sp, #87]	; 0x57
 8000e92:	f000 fa7d 	bl	8001390 <printf>
 8000e96:	220c      	movs	r2, #12
 8000e98:	4b3b      	ldr	r3, [pc, #236]	; (8000f88 <main+0x1c4>)
 8000e9a:	4621      	mov	r1, r4
 8000e9c:	fb02 3204 	mla	r2, r2, r4, r3
 8000ea0:	483a      	ldr	r0, [pc, #232]	; (8000f8c <main+0x1c8>)
 8000ea2:	f000 fa75 	bl	8001390 <printf>
 8000ea6:	f89d 30e1 	ldrb.w	r3, [sp, #225]	; 0xe1
 8000eaa:	f89d 20dd 	ldrb.w	r2, [sp, #221]	; 0xdd
 8000eae:	9302      	str	r3, [sp, #8]
 8000eb0:	f89d 30e0 	ldrb.w	r3, [sp, #224]	; 0xe0
 8000eb4:	f89d 10dc 	ldrb.w	r1, [sp, #220]	; 0xdc
 8000eb8:	9301      	str	r3, [sp, #4]
 8000eba:	f89d 30df 	ldrb.w	r3, [sp, #223]	; 0xdf
 8000ebe:	4834      	ldr	r0, [pc, #208]	; (8000f90 <main+0x1cc>)
 8000ec0:	9300      	str	r3, [sp, #0]
 8000ec2:	f89d 30de 	ldrb.w	r3, [sp, #222]	; 0xde
 8000ec6:	f000 fa63 	bl	8001390 <printf>
 8000eca:	4632      	mov	r2, r6
 8000ecc:	4629      	mov	r1, r5
 8000ece:	4831      	ldr	r0, [pc, #196]	; (8000f94 <main+0x1d0>)
 8000ed0:	f000 fa5e 	bl	8001390 <printf>
 8000ed4:	2102      	movs	r1, #2
 8000ed6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000eda:	f003 facb 	bl	8004474 <fwdgt_config>
 8000ede:	2801      	cmp	r0, #1
 8000ee0:	bf0c      	ite	eq
 8000ee2:	2301      	moveq	r3, #1
 8000ee4:	2300      	movne	r3, #0
 8000ee6:	f88d 3020 	strb.w	r3, [sp, #32]
 8000eea:	d101      	bne.n	8000ef0 <main+0x12c>
 8000eec:	f003 fab2 	bl	8004454 <fwdgt_enable>
 8000ef0:	2c03      	cmp	r4, #3
 8000ef2:	d108      	bne.n	8000f06 <main+0x142>
 8000ef4:	2301      	movs	r3, #1
 8000ef6:	a830      	add	r0, sp, #192	; 0xc0
 8000ef8:	461a      	mov	r2, r3
 8000efa:	2100      	movs	r1, #0
 8000efc:	f001 fcdc 	bl	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000f00:	a830      	add	r0, sp, #192	; 0xc0
 8000f02:	f001 f8f7 	bl	80020f4 <Widget::SnifferFillTransmitBuffer()>
 8000f06:	2601      	movs	r6, #1
 8000f08:	4c23      	ldr	r4, [pc, #140]	; (8000f98 <main+0x1d4>)
 8000f0a:	4d24      	ldr	r5, [pc, #144]	; (8000f9c <main+0x1d8>)
 8000f0c:	f003 faaa 	bl	8004464 <fwdgt_counter_reload>
 8000f10:	a830      	add	r0, sp, #192	; 0xc0
 8000f12:	f000 fe7d 	bl	8001c10 <Widget::ReceiveDataFromHost()>
 8000f16:	a830      	add	r0, sp, #192	; 0xc0
 8000f18:	f000 fc2a 	bl	8001770 <Widget::ReceivedDmxPacket()>
 8000f1c:	a830      	add	r0, sp, #192	; 0xc0
 8000f1e:	f000 fcef 	bl	8001900 <Widget::ReceivedDmxChangeOfStatePacket()>
 8000f22:	a830      	add	r0, sp, #192	; 0xc0
 8000f24:	f000 fd7a 	bl	8001a1c <Widget::ReceivedRdmPacket()>
 8000f28:	a830      	add	r0, sp, #192	; 0xc0
 8000f2a:	f000 fded 	bl	8001b08 <Widget::RdmTimeout()>
 8000f2e:	a830      	add	r0, sp, #192	; 0xc0
 8000f30:	f001 f88a 	bl	8002048 <Widget::SnifferRdm()>
 8000f34:	a830      	add	r0, sp, #192	; 0xc0
 8000f36:	f001 f861 	bl	8001ffc <Widget::SnifferDmx()>
 8000f3a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8000f3c:	b172      	cbz	r2, 8000f5c <main+0x198>
 8000f3e:	6823      	ldr	r3, [r4, #0]
 8000f40:	991c      	ldr	r1, [sp, #112]	; 0x70
 8000f42:	1a5b      	subs	r3, r3, r1
 8000f44:	429a      	cmp	r2, r3
 8000f46:	d809      	bhi.n	8000f5c <main+0x198>
 8000f48:	6823      	ldr	r3, [r4, #0]
 8000f4a:	931c      	str	r3, [sp, #112]	; 0x70
 8000f4c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8000f4e:	2b01      	cmp	r3, #1
 8000f50:	f083 0201 	eor.w	r2, r3, #1
 8000f54:	921b      	str	r2, [sp, #108]	; 0x6c
 8000f56:	bf14      	ite	ne
 8000f58:	612e      	strne	r6, [r5, #16]
 8000f5a:	616b      	streq	r3, [r5, #20]
 8000f5c:	a806      	add	r0, sp, #24
 8000f5e:	f002 f9af 	bl	80032c0 <SpiFlashStore::Flash()>
 8000f62:	e7d3      	b.n	8000f0c <main+0x148>
 8000f64:	f811 0b01 	ldrb.w	r0, [r1], #1
 8000f68:	3201      	adds	r2, #1
 8000f6a:	4403      	add	r3, r0
 8000f6c:	b29b      	uxth	r3, r3
 8000f6e:	e784      	b.n	8000e7a <main+0xb6>
 8000f70:	08005470 	stmdaeq	r0, {r4, r5, r6, sl, ip, lr}
 8000f74:	080053bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, ip, lr}
 8000f78:	08005394 	stmdaeq	r0, {r2, r4, r7, r8, r9, ip, lr}
 8000f7c:	08005478 	stmdaeq	r0, {r3, r4, r5, r6, sl, ip, lr}
 8000f80:	0800539e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, r9, ip, lr}
 8000f84:	08005388 	stmdaeq	r0, {r3, r7, r8, r9, ip, lr}
 8000f88:	0800547c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl, ip, lr}
 8000f8c:	080053c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, r9, ip, lr}
 8000f90:	08005420 	stmdaeq	r0, {r5, sl, ip, lr}
 8000f94:	0800544a 	stmdaeq	r0, {r1, r3, r6, sl, ip, lr}
 8000f98:	20001814 	andcs	r1, r0, r4, lsl r8
 8000f9c:	40011000 	andmi	r1, r1, r0

08000fa0 <_xputch>:
 8000fa0:	4603      	mov	r3, r0
 8000fa2:	b410      	push	{r4}
 8000fa4:	4c08      	ldr	r4, [pc, #32]	; (8000fc8 <_xputch+0x28>)
 8000fa6:	68da      	ldr	r2, [r3, #12]
 8000fa8:	4608      	mov	r0, r1
 8000faa:	6821      	ldr	r1, [r4, #0]
 8000fac:	3201      	adds	r2, #1
 8000fae:	60da      	str	r2, [r3, #12]
 8000fb0:	b139      	cbz	r1, 8000fc2 <_xputch+0x22>
 8000fb2:	691b      	ldr	r3, [r3, #16]
 8000fb4:	429a      	cmp	r2, r3
 8000fb6:	da02      	bge.n	8000fbe <_xputch+0x1e>
 8000fb8:	1c4b      	adds	r3, r1, #1
 8000fba:	6023      	str	r3, [r4, #0]
 8000fbc:	7008      	strb	r0, [r1, #0]
 8000fbe:	bc10      	pop	{r4}
 8000fc0:	4770      	bx	lr
 8000fc2:	bc10      	pop	{r4}
 8000fc4:	f002 bed6 	b.w	8003d74 <console_putc>
 8000fc8:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08000fcc <_format_int>:
 8000fcc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000fd0:	4698      	mov	r8, r3
 8000fd2:	b091      	sub	sp, #68	; 0x44
 8000fd4:	ea52 0308 	orrs.w	r3, r2, r8
 8000fd8:	4606      	mov	r6, r0
 8000fda:	4617      	mov	r7, r2
 8000fdc:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8000fe0:	d133      	bne.n	800104a <_format_int+0x7e>
 8000fe2:	2330      	movs	r3, #48	; 0x30
 8000fe4:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8000fe8:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8000fec:	6833      	ldr	r3, [r6, #0]
 8000fee:	07d8      	lsls	r0, r3, #31
 8000ff0:	d507      	bpl.n	8001002 <_format_int+0x36>
 8000ff2:	466a      	mov	r2, sp
 8000ff4:	2030      	movs	r0, #48	; 0x30
 8000ff6:	6871      	ldr	r1, [r6, #4]
 8000ff8:	1b2f      	subs	r7, r5, r4
 8000ffa:	428f      	cmp	r7, r1
 8000ffc:	da01      	bge.n	8001002 <_format_int+0x36>
 8000ffe:	4294      	cmp	r4, r2
 8001000:	d839      	bhi.n	8001076 <_format_int+0xaa>
 8001002:	0699      	lsls	r1, r3, #26
 8001004:	d507      	bpl.n	8001016 <_format_int+0x4a>
 8001006:	466a      	mov	r2, sp
 8001008:	2030      	movs	r0, #48	; 0x30
 800100a:	68b1      	ldr	r1, [r6, #8]
 800100c:	1b2f      	subs	r7, r5, r4
 800100e:	428f      	cmp	r7, r1
 8001010:	da01      	bge.n	8001016 <_format_int+0x4a>
 8001012:	4294      	cmp	r4, r2
 8001014:	d832      	bhi.n	800107c <_format_int+0xb0>
 8001016:	071a      	lsls	r2, r3, #28
 8001018:	bf44      	itt	mi
 800101a:	222d      	movmi	r2, #45	; 0x2d
 800101c:	f804 2901 	strbmi.w	r2, [r4], #-1
 8001020:	065b      	lsls	r3, r3, #25
 8001022:	d407      	bmi.n	8001034 <_format_int+0x68>
 8001024:	466b      	mov	r3, sp
 8001026:	2120      	movs	r1, #32
 8001028:	68b2      	ldr	r2, [r6, #8]
 800102a:	1b28      	subs	r0, r5, r4
 800102c:	4290      	cmp	r0, r2
 800102e:	da01      	bge.n	8001034 <_format_int+0x68>
 8001030:	429c      	cmp	r4, r3
 8001032:	d826      	bhi.n	8001082 <_format_int+0xb6>
 8001034:	1b2d      	subs	r5, r5, r4
 8001036:	3401      	adds	r4, #1
 8001038:	ab10      	add	r3, sp, #64	; 0x40
 800103a:	429c      	cmp	r4, r3
 800103c:	d324      	bcc.n	8001088 <_format_int+0xbc>
 800103e:	68b3      	ldr	r3, [r6, #8]
 8001040:	42ab      	cmp	r3, r5
 8001042:	dc27      	bgt.n	8001094 <_format_int+0xc8>
 8001044:	b011      	add	sp, #68	; 0x44
 8001046:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800104a:	462c      	mov	r4, r5
 800104c:	46e9      	mov	r9, sp
 800104e:	4638      	mov	r0, r7
 8001050:	4641      	mov	r1, r8
 8001052:	220a      	movs	r2, #10
 8001054:	2300      	movs	r3, #0
 8001056:	f7ff f87b 	bl	8000150 <__aeabi_uldivmod>
 800105a:	3230      	adds	r2, #48	; 0x30
 800105c:	f804 2901 	strb.w	r2, [r4], #-1
 8001060:	463a      	mov	r2, r7
 8001062:	4643      	mov	r3, r8
 8001064:	2a0a      	cmp	r2, #10
 8001066:	f173 0300 	sbcs.w	r3, r3, #0
 800106a:	4607      	mov	r7, r0
 800106c:	4688      	mov	r8, r1
 800106e:	d3bd      	bcc.n	8000fec <_format_int+0x20>
 8001070:	454c      	cmp	r4, r9
 8001072:	d1ec      	bne.n	800104e <_format_int+0x82>
 8001074:	e7ba      	b.n	8000fec <_format_int+0x20>
 8001076:	f804 0901 	strb.w	r0, [r4], #-1
 800107a:	e7bd      	b.n	8000ff8 <_format_int+0x2c>
 800107c:	f804 0901 	strb.w	r0, [r4], #-1
 8001080:	e7c4      	b.n	800100c <_format_int+0x40>
 8001082:	f804 1901 	strb.w	r1, [r4], #-1
 8001086:	e7d0      	b.n	800102a <_format_int+0x5e>
 8001088:	4630      	mov	r0, r6
 800108a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800108e:	f7ff ff87 	bl	8000fa0 <_xputch>
 8001092:	e7d1      	b.n	8001038 <_format_int+0x6c>
 8001094:	2120      	movs	r1, #32
 8001096:	4630      	mov	r0, r6
 8001098:	f7ff ff82 	bl	8000fa0 <_xputch>
 800109c:	3501      	adds	r5, #1
 800109e:	e7ce      	b.n	800103e <_format_int+0x72>

080010a0 <_format_hex>:
 80010a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80010a2:	b091      	sub	sp, #68	; 0x44
 80010a4:	4606      	mov	r6, r0
 80010a6:	6804      	ldr	r4, [r0, #0]
 80010a8:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 80010ac:	bb61      	cbnz	r1, 8001108 <_format_hex+0x68>
 80010ae:	2330      	movs	r3, #48	; 0x30
 80010b0:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80010b4:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 80010b8:	07e5      	lsls	r5, r4, #31
 80010ba:	d507      	bpl.n	80010cc <_format_hex+0x2c>
 80010bc:	4669      	mov	r1, sp
 80010be:	2530      	movs	r5, #48	; 0x30
 80010c0:	6870      	ldr	r0, [r6, #4]
 80010c2:	1ad7      	subs	r7, r2, r3
 80010c4:	4287      	cmp	r7, r0
 80010c6:	da01      	bge.n	80010cc <_format_hex+0x2c>
 80010c8:	428b      	cmp	r3, r1
 80010ca:	d831      	bhi.n	8001130 <_format_hex+0x90>
 80010cc:	06a0      	lsls	r0, r4, #26
 80010ce:	d507      	bpl.n	80010e0 <_format_hex+0x40>
 80010d0:	4669      	mov	r1, sp
 80010d2:	2530      	movs	r5, #48	; 0x30
 80010d4:	68b0      	ldr	r0, [r6, #8]
 80010d6:	1ad7      	subs	r7, r2, r3
 80010d8:	4287      	cmp	r7, r0
 80010da:	da01      	bge.n	80010e0 <_format_hex+0x40>
 80010dc:	428b      	cmp	r3, r1
 80010de:	d82a      	bhi.n	8001136 <_format_hex+0x96>
 80010e0:	0661      	lsls	r1, r4, #25
 80010e2:	d407      	bmi.n	80010f4 <_format_hex+0x54>
 80010e4:	4669      	mov	r1, sp
 80010e6:	2420      	movs	r4, #32
 80010e8:	68b0      	ldr	r0, [r6, #8]
 80010ea:	1ad5      	subs	r5, r2, r3
 80010ec:	4285      	cmp	r5, r0
 80010ee:	da01      	bge.n	80010f4 <_format_hex+0x54>
 80010f0:	428b      	cmp	r3, r1
 80010f2:	d823      	bhi.n	800113c <_format_hex+0x9c>
 80010f4:	1ad5      	subs	r5, r2, r3
 80010f6:	1c5c      	adds	r4, r3, #1
 80010f8:	ab10      	add	r3, sp, #64	; 0x40
 80010fa:	429c      	cmp	r4, r3
 80010fc:	d321      	bcc.n	8001142 <_format_hex+0xa2>
 80010fe:	68b3      	ldr	r3, [r6, #8]
 8001100:	429d      	cmp	r5, r3
 8001102:	db24      	blt.n	800114e <_format_hex+0xae>
 8001104:	b011      	add	sp, #68	; 0x44
 8001106:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001108:	f014 0f02 	tst.w	r4, #2
 800110c:	bf0c      	ite	eq
 800110e:	2757      	moveq	r7, #87	; 0x57
 8001110:	2737      	movne	r7, #55	; 0x37
 8001112:	4613      	mov	r3, r2
 8001114:	466d      	mov	r5, sp
 8001116:	f001 000f 	and.w	r0, r1, #15
 800111a:	2809      	cmp	r0, #9
 800111c:	bf94      	ite	ls
 800111e:	3030      	addls	r0, #48	; 0x30
 8001120:	19c0      	addhi	r0, r0, r7
 8001122:	0909      	lsrs	r1, r1, #4
 8001124:	f803 0901 	strb.w	r0, [r3], #-1
 8001128:	d0c6      	beq.n	80010b8 <_format_hex+0x18>
 800112a:	42ab      	cmp	r3, r5
 800112c:	d1f3      	bne.n	8001116 <_format_hex+0x76>
 800112e:	e7c3      	b.n	80010b8 <_format_hex+0x18>
 8001130:	f803 5901 	strb.w	r5, [r3], #-1
 8001134:	e7c5      	b.n	80010c2 <_format_hex+0x22>
 8001136:	f803 5901 	strb.w	r5, [r3], #-1
 800113a:	e7cc      	b.n	80010d6 <_format_hex+0x36>
 800113c:	f803 4901 	strb.w	r4, [r3], #-1
 8001140:	e7d3      	b.n	80010ea <_format_hex+0x4a>
 8001142:	4630      	mov	r0, r6
 8001144:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001148:	f7ff ff2a 	bl	8000fa0 <_xputch>
 800114c:	e7d4      	b.n	80010f8 <_format_hex+0x58>
 800114e:	2120      	movs	r1, #32
 8001150:	4630      	mov	r0, r6
 8001152:	f7ff ff25 	bl	8000fa0 <_xputch>
 8001156:	3501      	adds	r5, #1
 8001158:	e7d1      	b.n	80010fe <_format_hex+0x5e>
	...

0800115c <_vprintf>:
 800115c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001160:	2700      	movs	r7, #0
 8001162:	460b      	mov	r3, r1
 8001164:	4614      	mov	r4, r2
 8001166:	f04f 080a 	mov.w	r8, #10
 800116a:	b086      	sub	sp, #24
 800116c:	e9cd 7004 	strd	r7, r0, [sp, #16]
 8001170:	7819      	ldrb	r1, [r3, #0]
 8001172:	b919      	cbnz	r1, 800117c <_vprintf+0x20>
 8001174:	9804      	ldr	r0, [sp, #16]
 8001176:	b006      	add	sp, #24
 8001178:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800117c:	2925      	cmp	r1, #37	; 0x25
 800117e:	f103 0601 	add.w	r6, r3, #1
 8001182:	d004      	beq.n	800118e <_vprintf+0x32>
 8001184:	a801      	add	r0, sp, #4
 8001186:	f7ff ff0b 	bl	8000fa0 <_xputch>
 800118a:	4633      	mov	r3, r6
 800118c:	e7f0      	b.n	8001170 <_vprintf+0x14>
 800118e:	785a      	ldrb	r2, [r3, #1]
 8001190:	e9cd 7701 	strd	r7, r7, [sp, #4]
 8001194:	2a30      	cmp	r2, #48	; 0x30
 8001196:	9703      	str	r7, [sp, #12]
 8001198:	d126      	bne.n	80011e8 <_vprintf+0x8c>
 800119a:	2220      	movs	r2, #32
 800119c:	9201      	str	r2, [sp, #4]
 800119e:	1c9e      	adds	r6, r3, #2
 80011a0:	2200      	movs	r2, #0
 80011a2:	4635      	mov	r5, r6
 80011a4:	4613      	mov	r3, r2
 80011a6:	7829      	ldrb	r1, [r5, #0]
 80011a8:	462e      	mov	r6, r5
 80011aa:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 80011ae:	2809      	cmp	r0, #9
 80011b0:	f105 0501 	add.w	r5, r5, #1
 80011b4:	d91c      	bls.n	80011f0 <_vprintf+0x94>
 80011b6:	b12a      	cbz	r2, 80011c4 <_vprintf+0x68>
 80011b8:	9303      	str	r3, [sp, #12]
 80011ba:	b11b      	cbz	r3, 80011c4 <_vprintf+0x68>
 80011bc:	9b01      	ldr	r3, [sp, #4]
 80011be:	f043 0310 	orr.w	r3, r3, #16
 80011c2:	9301      	str	r3, [sp, #4]
 80011c4:	292e      	cmp	r1, #46	; 0x2e
 80011c6:	d122      	bne.n	800120e <_vprintf+0xb2>
 80011c8:	7873      	ldrb	r3, [r6, #1]
 80011ca:	2b2a      	cmp	r3, #42	; 0x2a
 80011cc:	d014      	beq.n	80011f8 <_vprintf+0x9c>
 80011ce:	2100      	movs	r1, #0
 80011d0:	460a      	mov	r2, r1
 80011d2:	1c70      	adds	r0, r6, #1
 80011d4:	7803      	ldrb	r3, [r0, #0]
 80011d6:	4606      	mov	r6, r0
 80011d8:	3b30      	subs	r3, #48	; 0x30
 80011da:	2b09      	cmp	r3, #9
 80011dc:	f100 0001 	add.w	r0, r0, #1
 80011e0:	d930      	bls.n	8001244 <_vprintf+0xe8>
 80011e2:	b181      	cbz	r1, 8001206 <_vprintf+0xaa>
 80011e4:	9202      	str	r2, [sp, #8]
 80011e6:	e00e      	b.n	8001206 <_vprintf+0xaa>
 80011e8:	2a2d      	cmp	r2, #45	; 0x2d
 80011ea:	d1d9      	bne.n	80011a0 <_vprintf+0x44>
 80011ec:	2240      	movs	r2, #64	; 0x40
 80011ee:	e7d5      	b.n	800119c <_vprintf+0x40>
 80011f0:	2201      	movs	r2, #1
 80011f2:	fb08 0303 	mla	r3, r8, r3, r0
 80011f6:	e7d6      	b.n	80011a6 <_vprintf+0x4a>
 80011f8:	f854 3b04 	ldr.w	r3, [r4], #4
 80011fc:	3602      	adds	r6, #2
 80011fe:	2b00      	cmp	r3, #0
 8001200:	bfb8      	it	lt
 8001202:	425b      	neglt	r3, r3
 8001204:	9302      	str	r3, [sp, #8]
 8001206:	9b01      	ldr	r3, [sp, #4]
 8001208:	f043 0301 	orr.w	r3, r3, #1
 800120c:	9301      	str	r3, [sp, #4]
 800120e:	7833      	ldrb	r3, [r6, #0]
 8001210:	2b6c      	cmp	r3, #108	; 0x6c
 8001212:	bf04      	itt	eq
 8001214:	9b01      	ldreq	r3, [sp, #4]
 8001216:	3601      	addeq	r6, #1
 8001218:	7831      	ldrb	r1, [r6, #0]
 800121a:	bf04      	itt	eq
 800121c:	f043 0304 	orreq.w	r3, r3, #4
 8001220:	9301      	streq	r3, [sp, #4]
 8001222:	2978      	cmp	r1, #120	; 0x78
 8001224:	d8ae      	bhi.n	8001184 <_vprintf+0x28>
 8001226:	296f      	cmp	r1, #111	; 0x6f
 8001228:	d810      	bhi.n	800124c <_vprintf+0xf0>
 800122a:	2963      	cmp	r1, #99	; 0x63
 800122c:	d048      	beq.n	80012c0 <_vprintf+0x164>
 800122e:	d827      	bhi.n	8001280 <_vprintf+0x124>
 8001230:	2958      	cmp	r1, #88	; 0x58
 8001232:	d1a7      	bne.n	8001184 <_vprintf+0x28>
 8001234:	9b01      	ldr	r3, [sp, #4]
 8001236:	f043 0302 	orr.w	r3, r3, #2
 800123a:	9301      	str	r3, [sp, #4]
 800123c:	4625      	mov	r5, r4
 800123e:	f855 1b04 	ldr.w	r1, [r5], #4
 8001242:	e056      	b.n	80012f2 <_vprintf+0x196>
 8001244:	2101      	movs	r1, #1
 8001246:	fb08 3202 	mla	r2, r8, r2, r3
 800124a:	e7c3      	b.n	80011d4 <_vprintf+0x78>
 800124c:	f1a1 0370 	sub.w	r3, r1, #112	; 0x70
 8001250:	2b08      	cmp	r3, #8
 8001252:	d897      	bhi.n	8001184 <_vprintf+0x28>
 8001254:	a201      	add	r2, pc, #4	; (adr r2, 800125c <_vprintf+0x100>)
 8001256:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800125a:	bf00      	nop
 800125c:	080012d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r9, ip}
 8001260:	08001185 	stmdaeq	r0, {r0, r2, r7, r8, ip}
 8001264:	08001185 	stmdaeq	r0, {r0, r2, r7, r8, ip}
 8001268:	080012fb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r9, ip}
 800126c:	08001185 	stmdaeq	r0, {r0, r2, r7, r8, ip}
 8001270:	0800136f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r8, r9, ip}
 8001274:	08001185 	stmdaeq	r0, {r0, r2, r7, r8, ip}
 8001278:	08001185 	stmdaeq	r0, {r0, r2, r7, r8, ip}
 800127c:	0800123d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, ip}
 8001280:	2964      	cmp	r1, #100	; 0x64
 8001282:	d002      	beq.n	800128a <_vprintf+0x12e>
 8001284:	2969      	cmp	r1, #105	; 0x69
 8001286:	f47f af7d 	bne.w	8001184 <_vprintf+0x28>
 800128a:	9901      	ldr	r1, [sp, #4]
 800128c:	074d      	lsls	r5, r1, #29
 800128e:	bf51      	iteee	pl
 8001290:	4625      	movpl	r5, r4
 8001292:	3407      	addmi	r4, #7
 8001294:	f024 0407 	bicmi.w	r4, r4, #7
 8001298:	4625      	movmi	r5, r4
 800129a:	bf55      	itete	pl
 800129c:	f855 2b04 	ldrpl.w	r2, [r5], #4
 80012a0:	6863      	ldrmi	r3, [r4, #4]
 80012a2:	17d3      	asrpl	r3, r2, #31
 80012a4:	f855 2b08 	ldrmi.w	r2, [r5], #8
 80012a8:	2b00      	cmp	r3, #0
 80012aa:	da05      	bge.n	80012b8 <_vprintf+0x15c>
 80012ac:	f041 0108 	orr.w	r1, r1, #8
 80012b0:	4252      	negs	r2, r2
 80012b2:	9101      	str	r1, [sp, #4]
 80012b4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80012b8:	a801      	add	r0, sp, #4
 80012ba:	f7ff fe87 	bl	8000fcc <_format_int>
 80012be:	e005      	b.n	80012cc <_vprintf+0x170>
 80012c0:	4625      	mov	r5, r4
 80012c2:	a801      	add	r0, sp, #4
 80012c4:	f855 1b04 	ldr.w	r1, [r5], #4
 80012c8:	f7ff fe6a 	bl	8000fa0 <_xputch>
 80012cc:	462c      	mov	r4, r5
 80012ce:	3601      	adds	r6, #1
 80012d0:	e75b      	b.n	800118a <_vprintf+0x2e>
 80012d2:	2308      	movs	r3, #8
 80012d4:	4625      	mov	r5, r4
 80012d6:	9303      	str	r3, [sp, #12]
 80012d8:	2320      	movs	r3, #32
 80012da:	2130      	movs	r1, #48	; 0x30
 80012dc:	f855 4b04 	ldr.w	r4, [r5], #4
 80012e0:	a801      	add	r0, sp, #4
 80012e2:	9301      	str	r3, [sp, #4]
 80012e4:	f7ff fe5c 	bl	8000fa0 <_xputch>
 80012e8:	2178      	movs	r1, #120	; 0x78
 80012ea:	a801      	add	r0, sp, #4
 80012ec:	f7ff fe58 	bl	8000fa0 <_xputch>
 80012f0:	4621      	mov	r1, r4
 80012f2:	a801      	add	r0, sp, #4
 80012f4:	f7ff fed4 	bl	80010a0 <_format_hex>
 80012f8:	e7e8      	b.n	80012cc <_vprintf+0x170>
 80012fa:	4625      	mov	r5, r4
 80012fc:	2400      	movs	r4, #0
 80012fe:	f855 9b04 	ldr.w	r9, [r5], #4
 8001302:	f819 3004 	ldrb.w	r3, [r9, r4]
 8001306:	b993      	cbnz	r3, 800132e <_vprintf+0x1d2>
 8001308:	9b01      	ldr	r3, [sp, #4]
 800130a:	07d9      	lsls	r1, r3, #31
 800130c:	d503      	bpl.n	8001316 <_vprintf+0x1ba>
 800130e:	9b02      	ldr	r3, [sp, #8]
 8001310:	429c      	cmp	r4, r3
 8001312:	bfa8      	it	ge
 8001314:	461c      	movge	r4, r3
 8001316:	9b01      	ldr	r3, [sp, #4]
 8001318:	f104 0a01 	add.w	sl, r4, #1
 800131c:	065a      	lsls	r2, r3, #25
 800131e:	d403      	bmi.n	8001328 <_vprintf+0x1cc>
 8001320:	9b03      	ldr	r3, [sp, #12]
 8001322:	429c      	cmp	r4, r3
 8001324:	db05      	blt.n	8001332 <_vprintf+0x1d6>
 8001326:	4654      	mov	r4, sl
 8001328:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800132c:	e00d      	b.n	800134a <_vprintf+0x1ee>
 800132e:	3401      	adds	r4, #1
 8001330:	e7e7      	b.n	8001302 <_vprintf+0x1a6>
 8001332:	2120      	movs	r1, #32
 8001334:	a801      	add	r0, sp, #4
 8001336:	f7ff fe33 	bl	8000fa0 <_xputch>
 800133a:	4654      	mov	r4, sl
 800133c:	e7eb      	b.n	8001316 <_vprintf+0x1ba>
 800133e:	a801      	add	r0, sp, #4
 8001340:	f7ff fe2e 	bl	8000fa0 <_xputch>
 8001344:	9b02      	ldr	r3, [sp, #8]
 8001346:	3b01      	subs	r3, #1
 8001348:	9302      	str	r3, [sp, #8]
 800134a:	9b01      	ldr	r3, [sp, #4]
 800134c:	07db      	lsls	r3, r3, #31
 800134e:	d501      	bpl.n	8001354 <_vprintf+0x1f8>
 8001350:	9b02      	ldr	r3, [sp, #8]
 8001352:	b11b      	cbz	r3, 800135c <_vprintf+0x200>
 8001354:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8001358:	2900      	cmp	r1, #0
 800135a:	d1f0      	bne.n	800133e <_vprintf+0x1e2>
 800135c:	9b03      	ldr	r3, [sp, #12]
 800135e:	42a3      	cmp	r3, r4
 8001360:	ddb4      	ble.n	80012cc <_vprintf+0x170>
 8001362:	2120      	movs	r1, #32
 8001364:	a801      	add	r0, sp, #4
 8001366:	f7ff fe1b 	bl	8000fa0 <_xputch>
 800136a:	3401      	adds	r4, #1
 800136c:	e7f6      	b.n	800135c <_vprintf+0x200>
 800136e:	9b01      	ldr	r3, [sp, #4]
 8001370:	f013 0304 	ands.w	r3, r3, #4
 8001374:	bf1d      	ittte	ne
 8001376:	3407      	addne	r4, #7
 8001378:	f024 0407 	bicne.w	r4, r4, #7
 800137c:	4625      	movne	r5, r4
 800137e:	4625      	moveq	r5, r4
 8001380:	bf1a      	itte	ne
 8001382:	f855 2b08 	ldrne.w	r2, [r5], #8
 8001386:	6863      	ldrne	r3, [r4, #4]
 8001388:	f855 2b04 	ldreq.w	r2, [r5], #4
 800138c:	e794      	b.n	80012b8 <_vprintf+0x15c>
 800138e:	bf00      	nop

08001390 <printf>:
 8001390:	b40f      	push	{r0, r1, r2, r3}
 8001392:	b507      	push	{r0, r1, r2, lr}
 8001394:	aa04      	add	r2, sp, #16
 8001396:	f852 1b04 	ldr.w	r1, [r2], #4
 800139a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800139e:	9201      	str	r2, [sp, #4]
 80013a0:	f7ff fedc 	bl	800115c <_vprintf>
 80013a4:	b003      	add	sp, #12
 80013a6:	f85d eb04 	ldr.w	lr, [sp], #4
 80013aa:	b004      	add	sp, #16
 80013ac:	4770      	bx	lr
	...

080013b0 <__udivmoddi4>:
 80013b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80013b4:	9e08      	ldr	r6, [sp, #32]
 80013b6:	460d      	mov	r5, r1
 80013b8:	4604      	mov	r4, r0
 80013ba:	468e      	mov	lr, r1
 80013bc:	2b00      	cmp	r3, #0
 80013be:	d14c      	bne.n	800145a <__udivmoddi4+0xaa>
 80013c0:	428a      	cmp	r2, r1
 80013c2:	4694      	mov	ip, r2
 80013c4:	d967      	bls.n	8001496 <__udivmoddi4+0xe6>
 80013c6:	fab2 f382 	clz	r3, r2
 80013ca:	b153      	cbz	r3, 80013e2 <__udivmoddi4+0x32>
 80013cc:	fa02 fc03 	lsl.w	ip, r2, r3
 80013d0:	f1c3 0220 	rsb	r2, r3, #32
 80013d4:	fa01 fe03 	lsl.w	lr, r1, r3
 80013d8:	fa20 f202 	lsr.w	r2, r0, r2
 80013dc:	ea42 0e0e 	orr.w	lr, r2, lr
 80013e0:	409c      	lsls	r4, r3
 80013e2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80013e6:	fbbe f1f7 	udiv	r1, lr, r7
 80013ea:	fa1f f58c 	uxth.w	r5, ip
 80013ee:	fb07 ee11 	mls	lr, r7, r1, lr
 80013f2:	fb01 f005 	mul.w	r0, r1, r5
 80013f6:	0c22      	lsrs	r2, r4, #16
 80013f8:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 80013fc:	4290      	cmp	r0, r2
 80013fe:	d90a      	bls.n	8001416 <__udivmoddi4+0x66>
 8001400:	eb1c 0202 	adds.w	r2, ip, r2
 8001404:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 8001408:	f080 8119 	bcs.w	800163e <__udivmoddi4+0x28e>
 800140c:	4290      	cmp	r0, r2
 800140e:	f240 8116 	bls.w	800163e <__udivmoddi4+0x28e>
 8001412:	3902      	subs	r1, #2
 8001414:	4462      	add	r2, ip
 8001416:	1a12      	subs	r2, r2, r0
 8001418:	fbb2 f0f7 	udiv	r0, r2, r7
 800141c:	fb07 2210 	mls	r2, r7, r0, r2
 8001420:	fb00 f505 	mul.w	r5, r0, r5
 8001424:	b2a4      	uxth	r4, r4
 8001426:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800142a:	42a5      	cmp	r5, r4
 800142c:	d90a      	bls.n	8001444 <__udivmoddi4+0x94>
 800142e:	eb1c 0404 	adds.w	r4, ip, r4
 8001432:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8001436:	f080 8104 	bcs.w	8001642 <__udivmoddi4+0x292>
 800143a:	42a5      	cmp	r5, r4
 800143c:	f240 8101 	bls.w	8001642 <__udivmoddi4+0x292>
 8001440:	4464      	add	r4, ip
 8001442:	3802      	subs	r0, #2
 8001444:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8001448:	2100      	movs	r1, #0
 800144a:	1b64      	subs	r4, r4, r5
 800144c:	b11e      	cbz	r6, 8001456 <__udivmoddi4+0xa6>
 800144e:	40dc      	lsrs	r4, r3
 8001450:	2300      	movs	r3, #0
 8001452:	e9c6 4300 	strd	r4, r3, [r6]
 8001456:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800145a:	428b      	cmp	r3, r1
 800145c:	d908      	bls.n	8001470 <__udivmoddi4+0xc0>
 800145e:	2e00      	cmp	r6, #0
 8001460:	f000 80ea 	beq.w	8001638 <__udivmoddi4+0x288>
 8001464:	2100      	movs	r1, #0
 8001466:	e9c6 0500 	strd	r0, r5, [r6]
 800146a:	4608      	mov	r0, r1
 800146c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001470:	fab3 f183 	clz	r1, r3
 8001474:	2900      	cmp	r1, #0
 8001476:	d148      	bne.n	800150a <__udivmoddi4+0x15a>
 8001478:	42ab      	cmp	r3, r5
 800147a:	d302      	bcc.n	8001482 <__udivmoddi4+0xd2>
 800147c:	4282      	cmp	r2, r0
 800147e:	f200 80f8 	bhi.w	8001672 <__udivmoddi4+0x2c2>
 8001482:	1a84      	subs	r4, r0, r2
 8001484:	eb65 0203 	sbc.w	r2, r5, r3
 8001488:	2001      	movs	r0, #1
 800148a:	4696      	mov	lr, r2
 800148c:	2e00      	cmp	r6, #0
 800148e:	d0e2      	beq.n	8001456 <__udivmoddi4+0xa6>
 8001490:	e9c6 4e00 	strd	r4, lr, [r6]
 8001494:	e7df      	b.n	8001456 <__udivmoddi4+0xa6>
 8001496:	b902      	cbnz	r2, 800149a <__udivmoddi4+0xea>
 8001498:	deff      	udf	#255	; 0xff
 800149a:	fab2 f382 	clz	r3, r2
 800149e:	2b00      	cmp	r3, #0
 80014a0:	f040 808e 	bne.w	80015c0 <__udivmoddi4+0x210>
 80014a4:	1a88      	subs	r0, r1, r2
 80014a6:	2101      	movs	r1, #1
 80014a8:	0c17      	lsrs	r7, r2, #16
 80014aa:	fa1f fe82 	uxth.w	lr, r2
 80014ae:	fbb0 f5f7 	udiv	r5, r0, r7
 80014b2:	fb07 0015 	mls	r0, r7, r5, r0
 80014b6:	0c22      	lsrs	r2, r4, #16
 80014b8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80014bc:	fb0e f005 	mul.w	r0, lr, r5
 80014c0:	4290      	cmp	r0, r2
 80014c2:	d908      	bls.n	80014d6 <__udivmoddi4+0x126>
 80014c4:	eb1c 0202 	adds.w	r2, ip, r2
 80014c8:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80014cc:	d202      	bcs.n	80014d4 <__udivmoddi4+0x124>
 80014ce:	4290      	cmp	r0, r2
 80014d0:	f200 80cc 	bhi.w	800166c <__udivmoddi4+0x2bc>
 80014d4:	4645      	mov	r5, r8
 80014d6:	1a12      	subs	r2, r2, r0
 80014d8:	fbb2 f0f7 	udiv	r0, r2, r7
 80014dc:	fb07 2210 	mls	r2, r7, r0, r2
 80014e0:	fb0e fe00 	mul.w	lr, lr, r0
 80014e4:	b2a4      	uxth	r4, r4
 80014e6:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80014ea:	45a6      	cmp	lr, r4
 80014ec:	d908      	bls.n	8001500 <__udivmoddi4+0x150>
 80014ee:	eb1c 0404 	adds.w	r4, ip, r4
 80014f2:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80014f6:	d202      	bcs.n	80014fe <__udivmoddi4+0x14e>
 80014f8:	45a6      	cmp	lr, r4
 80014fa:	f200 80b4 	bhi.w	8001666 <__udivmoddi4+0x2b6>
 80014fe:	4610      	mov	r0, r2
 8001500:	eba4 040e 	sub.w	r4, r4, lr
 8001504:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8001508:	e7a0      	b.n	800144c <__udivmoddi4+0x9c>
 800150a:	f1c1 0720 	rsb	r7, r1, #32
 800150e:	408b      	lsls	r3, r1
 8001510:	fa22 fc07 	lsr.w	ip, r2, r7
 8001514:	ea4c 0c03 	orr.w	ip, ip, r3
 8001518:	fa25 fa07 	lsr.w	sl, r5, r7
 800151c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8001520:	fbba f8f9 	udiv	r8, sl, r9
 8001524:	408d      	lsls	r5, r1
 8001526:	fa20 f307 	lsr.w	r3, r0, r7
 800152a:	fb09 aa18 	mls	sl, r9, r8, sl
 800152e:	fa1f fe8c 	uxth.w	lr, ip
 8001532:	432b      	orrs	r3, r5
 8001534:	fa00 f501 	lsl.w	r5, r0, r1
 8001538:	fb08 f00e 	mul.w	r0, r8, lr
 800153c:	0c1c      	lsrs	r4, r3, #16
 800153e:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8001542:	42a0      	cmp	r0, r4
 8001544:	fa02 f201 	lsl.w	r2, r2, r1
 8001548:	d90b      	bls.n	8001562 <__udivmoddi4+0x1b2>
 800154a:	eb1c 0404 	adds.w	r4, ip, r4
 800154e:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8001552:	f080 8086 	bcs.w	8001662 <__udivmoddi4+0x2b2>
 8001556:	42a0      	cmp	r0, r4
 8001558:	f240 8083 	bls.w	8001662 <__udivmoddi4+0x2b2>
 800155c:	f1a8 0802 	sub.w	r8, r8, #2
 8001560:	4464      	add	r4, ip
 8001562:	1a24      	subs	r4, r4, r0
 8001564:	b298      	uxth	r0, r3
 8001566:	fbb4 f3f9 	udiv	r3, r4, r9
 800156a:	fb09 4413 	mls	r4, r9, r3, r4
 800156e:	fb03 fe0e 	mul.w	lr, r3, lr
 8001572:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 8001576:	45a6      	cmp	lr, r4
 8001578:	d908      	bls.n	800158c <__udivmoddi4+0x1dc>
 800157a:	eb1c 0404 	adds.w	r4, ip, r4
 800157e:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 8001582:	d26a      	bcs.n	800165a <__udivmoddi4+0x2aa>
 8001584:	45a6      	cmp	lr, r4
 8001586:	d968      	bls.n	800165a <__udivmoddi4+0x2aa>
 8001588:	3b02      	subs	r3, #2
 800158a:	4464      	add	r4, ip
 800158c:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8001590:	fba0 9302 	umull	r9, r3, r0, r2
 8001594:	eba4 040e 	sub.w	r4, r4, lr
 8001598:	429c      	cmp	r4, r3
 800159a:	46c8      	mov	r8, r9
 800159c:	469e      	mov	lr, r3
 800159e:	d354      	bcc.n	800164a <__udivmoddi4+0x29a>
 80015a0:	d051      	beq.n	8001646 <__udivmoddi4+0x296>
 80015a2:	2e00      	cmp	r6, #0
 80015a4:	d067      	beq.n	8001676 <__udivmoddi4+0x2c6>
 80015a6:	ebb5 0308 	subs.w	r3, r5, r8
 80015aa:	eb64 040e 	sbc.w	r4, r4, lr
 80015ae:	40cb      	lsrs	r3, r1
 80015b0:	fa04 f707 	lsl.w	r7, r4, r7
 80015b4:	431f      	orrs	r7, r3
 80015b6:	40cc      	lsrs	r4, r1
 80015b8:	e9c6 7400 	strd	r7, r4, [r6]
 80015bc:	2100      	movs	r1, #0
 80015be:	e74a      	b.n	8001456 <__udivmoddi4+0xa6>
 80015c0:	fa02 fc03 	lsl.w	ip, r2, r3
 80015c4:	f1c3 0020 	rsb	r0, r3, #32
 80015c8:	40c1      	lsrs	r1, r0
 80015ca:	409d      	lsls	r5, r3
 80015cc:	fa24 f000 	lsr.w	r0, r4, r0
 80015d0:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80015d4:	4328      	orrs	r0, r5
 80015d6:	fbb1 f5f7 	udiv	r5, r1, r7
 80015da:	fb07 1115 	mls	r1, r7, r5, r1
 80015de:	fa1f fe8c 	uxth.w	lr, ip
 80015e2:	0c02      	lsrs	r2, r0, #16
 80015e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80015e8:	fb05 f10e 	mul.w	r1, r5, lr
 80015ec:	4291      	cmp	r1, r2
 80015ee:	fa04 f403 	lsl.w	r4, r4, r3
 80015f2:	d908      	bls.n	8001606 <__udivmoddi4+0x256>
 80015f4:	eb1c 0202 	adds.w	r2, ip, r2
 80015f8:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80015fc:	d22f      	bcs.n	800165e <__udivmoddi4+0x2ae>
 80015fe:	4291      	cmp	r1, r2
 8001600:	d92d      	bls.n	800165e <__udivmoddi4+0x2ae>
 8001602:	3d02      	subs	r5, #2
 8001604:	4462      	add	r2, ip
 8001606:	1a52      	subs	r2, r2, r1
 8001608:	fbb2 f1f7 	udiv	r1, r2, r7
 800160c:	fb07 2211 	mls	r2, r7, r1, r2
 8001610:	b280      	uxth	r0, r0
 8001612:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8001616:	fb01 f20e 	mul.w	r2, r1, lr
 800161a:	4282      	cmp	r2, r0
 800161c:	d908      	bls.n	8001630 <__udivmoddi4+0x280>
 800161e:	eb1c 0000 	adds.w	r0, ip, r0
 8001622:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8001626:	d216      	bcs.n	8001656 <__udivmoddi4+0x2a6>
 8001628:	4282      	cmp	r2, r0
 800162a:	d914      	bls.n	8001656 <__udivmoddi4+0x2a6>
 800162c:	3902      	subs	r1, #2
 800162e:	4460      	add	r0, ip
 8001630:	1a80      	subs	r0, r0, r2
 8001632:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8001636:	e73a      	b.n	80014ae <__udivmoddi4+0xfe>
 8001638:	4631      	mov	r1, r6
 800163a:	4630      	mov	r0, r6
 800163c:	e70b      	b.n	8001456 <__udivmoddi4+0xa6>
 800163e:	4671      	mov	r1, lr
 8001640:	e6e9      	b.n	8001416 <__udivmoddi4+0x66>
 8001642:	4610      	mov	r0, r2
 8001644:	e6fe      	b.n	8001444 <__udivmoddi4+0x94>
 8001646:	454d      	cmp	r5, r9
 8001648:	d2ab      	bcs.n	80015a2 <__udivmoddi4+0x1f2>
 800164a:	ebb9 0802 	subs.w	r8, r9, r2
 800164e:	eb63 0e0c 	sbc.w	lr, r3, ip
 8001652:	3801      	subs	r0, #1
 8001654:	e7a5      	b.n	80015a2 <__udivmoddi4+0x1f2>
 8001656:	4641      	mov	r1, r8
 8001658:	e7ea      	b.n	8001630 <__udivmoddi4+0x280>
 800165a:	4603      	mov	r3, r0
 800165c:	e796      	b.n	800158c <__udivmoddi4+0x1dc>
 800165e:	4645      	mov	r5, r8
 8001660:	e7d1      	b.n	8001606 <__udivmoddi4+0x256>
 8001662:	46d0      	mov	r8, sl
 8001664:	e77d      	b.n	8001562 <__udivmoddi4+0x1b2>
 8001666:	4464      	add	r4, ip
 8001668:	3802      	subs	r0, #2
 800166a:	e749      	b.n	8001500 <__udivmoddi4+0x150>
 800166c:	3d02      	subs	r5, #2
 800166e:	4462      	add	r2, ip
 8001670:	e731      	b.n	80014d6 <__udivmoddi4+0x126>
 8001672:	4608      	mov	r0, r1
 8001674:	e70a      	b.n	800148c <__udivmoddi4+0xdc>
 8001676:	4631      	mov	r1, r6
 8001678:	e6ed      	b.n	8001456 <__udivmoddi4+0xa6>
 800167a:	bf00      	nop

0800167c <Widget::Widget()>:
 800167c:	b510      	push	{r4, lr}
 800167e:	4604      	mov	r4, r0
 8001680:	f001 f948 	bl	8002914 <Dmx::Dmx()>
 8001684:	f104 001c 	add.w	r0, r4, #28
 8001688:	f001 fc1a 	bl	8002ec0 <RDMDevice::RDMDevice()>
 800168c:	2300      	movs	r3, #0
 800168e:	e9c4 33bb 	strd	r3, r3, [r4, #748]	; 0x2ec
 8001692:	e9c4 33bd 	strd	r3, r3, [r4, #756]	; 0x2f4
 8001696:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 800169a:	f884 3300 	strb.w	r3, [r4, #768]	; 0x300
 800169e:	f8c4 3304 	str.w	r3, [r4, #772]	; 0x304
 80016a2:	4b03      	ldr	r3, [pc, #12]	; (80016b0 <Widget::Widget()+0x34>)
 80016a4:	601c      	str	r4, [r3, #0]
 80016a6:	f001 fb31 	bl	8002d0c <FT245RL_init>
 80016aa:	4620      	mov	r0, r4
 80016ac:	bd10      	pop	{r4, pc}
 80016ae:	bf00      	nop
 80016b0:	200000f4 	strdcs	r0, [r0], -r4

080016b4 <Widget::GetParamsReply()>:
 80016b4:	b513      	push	{r0, r1, r4, lr}
 80016b6:	4604      	mov	r4, r0
 80016b8:	4911      	ldr	r1, [pc, #68]	; (8001700 <Widget::GetParamsReply()+0x4c>)
 80016ba:	2007      	movs	r0, #7
 80016bc:	f000 fb8c 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 80016c0:	2100      	movs	r1, #0
 80016c2:	201c      	movs	r0, #28
 80016c4:	f000 fb88 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 80016c8:	4b0e      	ldr	r3, [pc, #56]	; (8001704 <Widget::GetParamsReply()+0x50>)
 80016ca:	466a      	mov	r2, sp
 80016cc:	781b      	ldrb	r3, [r3, #0]
 80016ce:	2103      	movs	r1, #3
 80016d0:	f88d 3002 	strb.w	r3, [sp, #2]
 80016d4:	4b0c      	ldr	r3, [pc, #48]	; (8001708 <Widget::GetParamsReply()+0x54>)
 80016d6:	4620      	mov	r0, r4
 80016d8:	781b      	ldrb	r3, [r3, #0]
 80016da:	f88d 3000 	strb.w	r3, [sp]
 80016de:	4b0b      	ldr	r3, [pc, #44]	; (800170c <Widget::GetParamsReply()+0x58>)
 80016e0:	781b      	ldrb	r3, [r3, #0]
 80016e2:	f88d 3001 	strb.w	r3, [sp, #1]
 80016e6:	4b0a      	ldr	r3, [pc, #40]	; (8001710 <Widget::GetParamsReply()+0x5c>)
 80016e8:	781b      	ldrb	r3, [r3, #0]
 80016ea:	f88d 3003 	strb.w	r3, [sp, #3]
 80016ee:	4b09      	ldr	r3, [pc, #36]	; (8001714 <Widget::GetParamsReply()+0x60>)
 80016f0:	781b      	ldrb	r3, [r3, #0]
 80016f2:	f88d 3004 	strb.w	r3, [sp, #4]
 80016f6:	2305      	movs	r3, #5
 80016f8:	f000 fd30 	bl	800215c <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>
 80016fc:	b002      	add	sp, #8
 80016fe:	bd10      	pop	{r4, pc}
 8001700:	080054ac 	stmdaeq	r0, {r2, r3, r5, r7, sl, ip, lr}
 8001704:	20000001 	andcs	r0, r0, r1
 8001708:	20000002 	andcs	r0, r0, r2
 800170c:	20000003 	andcs	r0, r0, r3
 8001710:	20000000 	andcs	r0, r0, r0
 8001714:	20000004 	andcs	r0, r0, r4

08001718 <Widget::SetParams()>:
 8001718:	b513      	push	{r0, r1, r4, lr}
 800171a:	4604      	mov	r4, r0
 800171c:	4912      	ldr	r1, [pc, #72]	; (8001768 <Widget::SetParams()+0x50>)
 800171e:	2007      	movs	r0, #7
 8001720:	f000 fb5a 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001724:	2100      	movs	r1, #0
 8001726:	201c      	movs	r0, #28
 8001728:	f000 fb56 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 800172c:	2300      	movs	r3, #0
 800172e:	4620      	mov	r0, r4
 8001730:	4619      	mov	r1, r3
 8001732:	2201      	movs	r2, #1
 8001734:	f001 f8c0 	bl	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001738:	f894 3098 	ldrb.w	r3, [r4, #152]	; 0x98
 800173c:	f8b4 2096 	ldrh.w	r2, [r4, #150]	; 0x96
 8001740:	4668      	mov	r0, sp
 8001742:	f8ad 2002 	strh.w	r2, [sp, #2]
 8001746:	f88d 3004 	strb.w	r3, [sp, #4]
 800174a:	f000 fd69 	bl	8002220 <WidgetConfiguration::Store(TWidgetConfiguration const*)>
 800174e:	2301      	movs	r3, #1
 8001750:	2100      	movs	r1, #0
 8001752:	461a      	mov	r2, r3
 8001754:	4620      	mov	r0, r4
 8001756:	f001 f8af 	bl	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800175a:	4b04      	ldr	r3, [pc, #16]	; (800176c <Widget::SetParams()+0x54>)
 800175c:	681b      	ldr	r3, [r3, #0]
 800175e:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 8001762:	b002      	add	sp, #8
 8001764:	bd10      	pop	{r4, pc}
 8001766:	bf00      	nop
 8001768:	080054c4 	stmdaeq	r0, {r2, r6, r7, sl, ip, lr}
 800176c:	20001814 	andcs	r1, r0, r4, lsl r8

08001770 <Widget::ReceivedDmxPacket()>:
 8001770:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001772:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
 8001776:	4604      	mov	r4, r0
 8001778:	2b03      	cmp	r3, #3
 800177a:	d042      	beq.n	8001802 <Widget::ReceivedDmxPacket()+0x92>
 800177c:	f890 7300 	ldrb.w	r7, [r0, #768]	; 0x300
 8001780:	2f00      	cmp	r7, #0
 8001782:	d13e      	bne.n	8001802 <Widget::ReceivedDmxPacket()+0x92>
 8001784:	6943      	ldr	r3, [r0, #20]
 8001786:	2b01      	cmp	r3, #1
 8001788:	d13b      	bne.n	8001802 <Widget::ReceivedDmxPacket()+0x92>
 800178a:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 800178e:	2b01      	cmp	r3, #1
 8001790:	d037      	beq.n	8001802 <Widget::ReceivedDmxPacket()+0x92>
 8001792:	4639      	mov	r1, r7
 8001794:	f001 fa08 	bl	8002ba8 <Dmx::GetDmxAvailable(unsigned int)>
 8001798:	4605      	mov	r5, r0
 800179a:	b390      	cbz	r0, 8001802 <Widget::ReceivedDmxPacket()+0x92>
 800179c:	4b19      	ldr	r3, [pc, #100]	; (8001804 <Widget::ReceivedDmxPacket()+0x94>)
 800179e:	f8d4 12f4 	ldr.w	r1, [r4, #756]	; 0x2f4
 80017a2:	681a      	ldr	r2, [r3, #0]
 80017a4:	f8d4 32f8 	ldr.w	r3, [r4, #760]	; 0x2f8
 80017a8:	1ad3      	subs	r3, r2, r3
 80017aa:	428b      	cmp	r3, r1
 80017ac:	d329      	bcc.n	8001802 <Widget::ReceivedDmxPacket()+0x92>
 80017ae:	f8d4 3304 	ldr.w	r3, [r4, #772]	; 0x304
 80017b2:	f8c4 22f8 	str.w	r2, [r4, #760]	; 0x2f8
 80017b6:	3301      	adds	r3, #1
 80017b8:	f8c4 3304 	str.w	r3, [r4, #772]	; 0x304
 80017bc:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 80017c0:	4911      	ldr	r1, [pc, #68]	; (8001808 <Widget::ReceivedDmxPacket()+0x98>)
 80017c2:	3601      	adds	r6, #1
 80017c4:	2006      	movs	r0, #6
 80017c6:	f000 fb07 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 80017ca:	4632      	mov	r2, r6
 80017cc:	2007      	movs	r0, #7
 80017ce:	490f      	ldr	r1, [pc, #60]	; (800180c <Widget::ReceivedDmxPacket()+0x9c>)
 80017d0:	f000 fb02 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 80017d4:	4639      	mov	r1, r7
 80017d6:	201c      	movs	r0, #28
 80017d8:	f000 fafe 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 80017dc:	1c72      	adds	r2, r6, #1
 80017de:	2105      	movs	r1, #5
 80017e0:	4620      	mov	r0, r4
 80017e2:	b292      	uxth	r2, r2
 80017e4:	f000 fc9a 	bl	800211c <Widget::SendHeader(unsigned char, unsigned int)>
 80017e8:	4638      	mov	r0, r7
 80017ea:	f001 fa70 	bl	8002cce <usb_send_byte>
 80017ee:	4620      	mov	r0, r4
 80017f0:	4629      	mov	r1, r5
 80017f2:	b2b2      	uxth	r2, r6
 80017f4:	f000 fca4 	bl	8002140 <Widget::SendData(unsigned char const*, unsigned int)>
 80017f8:	4620      	mov	r0, r4
 80017fa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80017fe:	f000 bcaa 	b.w	8002156 <Widget::SendFooter()>
 8001802:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001804:	20001814 	andcs	r1, r0, r4, lsl r8
 8001808:	080054d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, sl, ip, lr}
 800180c:	080054ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, sl, ip, lr}

08001810 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>:
 8001810:	b570      	push	{r4, r5, r6, lr}
 8001812:	f8d0 52fc 	ldr.w	r5, [r0, #764]	; 0x2fc
 8001816:	4604      	mov	r4, r0
 8001818:	460e      	mov	r6, r1
 800181a:	b9e5      	cbnz	r5, 8001856 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x46>
 800181c:	2007      	movs	r0, #7
 800181e:	490e      	ldr	r1, [pc, #56]	; (8001858 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x48>)
 8001820:	f000 fada 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001824:	4629      	mov	r1, r5
 8001826:	201c      	movs	r0, #28
 8001828:	f000 fad6 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 800182c:	462b      	mov	r3, r5
 800182e:	462a      	mov	r2, r5
 8001830:	4629      	mov	r1, r5
 8001832:	4620      	mov	r0, r4
 8001834:	f001 f840 	bl	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001838:	4633      	mov	r3, r6
 800183a:	4629      	mov	r1, r5
 800183c:	4620      	mov	r0, r4
 800183e:	f104 0294 	add.w	r2, r4, #148	; 0x94
 8001842:	f001 f989 	bl	8002b58 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)>
 8001846:	462a      	mov	r2, r5
 8001848:	4629      	mov	r1, r5
 800184a:	4620      	mov	r0, r4
 800184c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001850:	2301      	movs	r3, #1
 8001852:	f001 b831 	b.w	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001856:	bd70      	pop	{r4, r5, r6, pc}
 8001858:	08005504 	stmdaeq	r0, {r2, r8, sl, ip, lr}

0800185c <Widget::SendRdmPacketRequest(unsigned short)>:
 800185c:	b570      	push	{r4, r5, r6, lr}
 800185e:	4604      	mov	r4, r0
 8001860:	460d      	mov	r5, r1
 8001862:	2007      	movs	r0, #7
 8001864:	4910      	ldr	r1, [pc, #64]	; (80018a8 <Widget::SendRdmPacketRequest(unsigned short)+0x4c>)
 8001866:	f000 fab7 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 800186a:	2100      	movs	r1, #0
 800186c:	201c      	movs	r0, #28
 800186e:	f000 fab3 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001872:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 8001876:	f104 0694 	add.w	r6, r4, #148	; 0x94
 800187a:	f1a3 0210 	sub.w	r2, r3, #16
 800187e:	4253      	negs	r3, r2
 8001880:	4153      	adcs	r3, r2
 8001882:	4631      	mov	r1, r6
 8001884:	462a      	mov	r2, r5
 8001886:	f884 3300 	strb.w	r3, [r4, #768]	; 0x300
 800188a:	2000      	movs	r0, #0
 800188c:	f000 fd2a 	bl	80022e4 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 8001890:	4b06      	ldr	r3, [pc, #24]	; (80018ac <Widget::SendRdmPacketRequest(unsigned short)+0x50>)
 8001892:	4632      	mov	r2, r6
 8001894:	681b      	ldr	r3, [r3, #0]
 8001896:	4629      	mov	r1, r5
 8001898:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 800189c:	2011      	movs	r0, #17
 800189e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80018a2:	2301      	movs	r3, #1
 80018a4:	f000 bd14 	b.w	80022d0 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 80018a8:	08005528 	stmdaeq	r0, {r3, r5, r8, sl, ip, lr}
 80018ac:	20001814 	andcs	r1, r0, r4, lsl r8

080018b0 <Widget::ReceiveDmxOnChange()>:
 80018b0:	b510      	push	{r4, lr}
 80018b2:	4604      	mov	r4, r0
 80018b4:	4910      	ldr	r1, [pc, #64]	; (80018f8 <Widget::ReceiveDmxOnChange()+0x48>)
 80018b6:	2007      	movs	r0, #7
 80018b8:	f000 fa8e 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 80018bc:	2100      	movs	r1, #0
 80018be:	201c      	movs	r0, #28
 80018c0:	f000 fa8a 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 80018c4:	f894 3094 	ldrb.w	r3, [r4, #148]	; 0x94
 80018c8:	2201      	movs	r2, #1
 80018ca:	f8c4 32f0 	str.w	r3, [r4, #752]	; 0x2f0
 80018ce:	2300      	movs	r3, #0
 80018d0:	4620      	mov	r0, r4
 80018d2:	4619      	mov	r1, r3
 80018d4:	f000 fff0 	bl	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80018d8:	2100      	movs	r1, #0
 80018da:	4620      	mov	r0, r4
 80018dc:	f000 fef6 	bl	80026cc <Dmx::ClearData(unsigned int)>
 80018e0:	2301      	movs	r3, #1
 80018e2:	2100      	movs	r1, #0
 80018e4:	461a      	mov	r2, r3
 80018e6:	4620      	mov	r0, r4
 80018e8:	f000 ffe6 	bl	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80018ec:	4b03      	ldr	r3, [pc, #12]	; (80018fc <Widget::ReceiveDmxOnChange()+0x4c>)
 80018ee:	681b      	ldr	r3, [r3, #0]
 80018f0:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 80018f4:	bd10      	pop	{r4, pc}
 80018f6:	bf00      	nop
 80018f8:	08005540 	stmdaeq	r0, {r6, r8, sl, ip, lr}
 80018fc:	20001814 	andcs	r1, r0, r4, lsl r8

08001900 <Widget::ReceivedDmxChangeOfStatePacket()>:
 8001900:	f8d0 22ec 	ldr.w	r2, [r0, #748]	; 0x2ec
 8001904:	b510      	push	{r4, lr}
 8001906:	2a03      	cmp	r2, #3
 8001908:	d01a      	beq.n	8001940 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 800190a:	f890 4300 	ldrb.w	r4, [r0, #768]	; 0x300
 800190e:	b9bc      	cbnz	r4, 8001940 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001910:	6942      	ldr	r2, [r0, #20]
 8001912:	2a01      	cmp	r2, #1
 8001914:	d114      	bne.n	8001940 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001916:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 800191a:	b18b      	cbz	r3, 8001940 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 800191c:	4621      	mov	r1, r4
 800191e:	f001 f957 	bl	8002bd0 <Dmx::GetDmxChanged(unsigned int)>
 8001922:	b168      	cbz	r0, 8001940 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001924:	2007      	movs	r0, #7
 8001926:	4907      	ldr	r1, [pc, #28]	; (8001944 <Widget::ReceivedDmxChangeOfStatePacket()+0x44>)
 8001928:	f000 fa56 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 800192c:	4621      	mov	r1, r4
 800192e:	201c      	movs	r0, #28
 8001930:	f000 fa52 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001934:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001938:	2007      	movs	r0, #7
 800193a:	4903      	ldr	r1, [pc, #12]	; (8001948 <Widget::ReceivedDmxChangeOfStatePacket()+0x48>)
 800193c:	f000 ba4c 	b.w	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001940:	bd10      	pop	{r4, pc}
 8001942:	bf00      	nop
 8001944:	08005556 	stmdaeq	r0, {r1, r2, r4, r6, r8, sl, ip, lr}
 8001948:	0800556c 	stmdaeq	r0, {r2, r3, r5, r6, r8, sl, ip, lr}

0800194c <Widget::GetSnReply()>:
 800194c:	b510      	push	{r4, lr}
 800194e:	4910      	ldr	r1, [pc, #64]	; (8001990 <Widget::GetSnReply()+0x44>)
 8001950:	4604      	mov	r4, r0
 8001952:	2007      	movs	r0, #7
 8001954:	f000 fa40 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001958:	2100      	movs	r1, #0
 800195a:	201c      	movs	r0, #28
 800195c:	f000 fa3c 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001960:	2300      	movs	r3, #0
 8001962:	2201      	movs	r2, #1
 8001964:	4619      	mov	r1, r3
 8001966:	4620      	mov	r0, r4
 8001968:	f000 ffa6 	bl	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800196c:	2304      	movs	r3, #4
 800196e:	210a      	movs	r1, #10
 8001970:	4620      	mov	r0, r4
 8001972:	f104 0222 	add.w	r2, r4, #34	; 0x22
 8001976:	f000 fbf1 	bl	800215c <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>
 800197a:	2301      	movs	r3, #1
 800197c:	2100      	movs	r1, #0
 800197e:	461a      	mov	r2, r3
 8001980:	4620      	mov	r0, r4
 8001982:	f000 ff99 	bl	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001986:	4b03      	ldr	r3, [pc, #12]	; (8001994 <Widget::GetSnReply()+0x48>)
 8001988:	681b      	ldr	r3, [r3, #0]
 800198a:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 800198e:	bd10      	pop	{r4, pc}
 8001990:	080054ac 	stmdaeq	r0, {r2, r3, r5, r7, sl, ip, lr}
 8001994:	20001814 	andcs	r1, r0, r4, lsl r8

08001998 <Widget::SendRdmDiscoveryRequest(unsigned short)>:
 8001998:	b570      	push	{r4, r5, r6, lr}
 800199a:	4604      	mov	r4, r0
 800199c:	460d      	mov	r5, r1
 800199e:	2007      	movs	r0, #7
 80019a0:	490d      	ldr	r1, [pc, #52]	; (80019d8 <Widget::SendRdmDiscoveryRequest(unsigned short)+0x40>)
 80019a2:	f000 fa19 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 80019a6:	f104 0694 	add.w	r6, r4, #148	; 0x94
 80019aa:	2100      	movs	r1, #0
 80019ac:	201c      	movs	r0, #28
 80019ae:	f000 fa13 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 80019b2:	462a      	mov	r2, r5
 80019b4:	4631      	mov	r1, r6
 80019b6:	2000      	movs	r0, #0
 80019b8:	f000 fc94 	bl	80022e4 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 80019bc:	2301      	movs	r3, #1
 80019be:	4a07      	ldr	r2, [pc, #28]	; (80019dc <Widget::SendRdmDiscoveryRequest(unsigned short)+0x44>)
 80019c0:	4629      	mov	r1, r5
 80019c2:	6812      	ldr	r2, [r2, #0]
 80019c4:	f884 3300 	strb.w	r3, [r4, #768]	; 0x300
 80019c8:	f8c4 22fc 	str.w	r2, [r4, #764]	; 0x2fc
 80019cc:	2011      	movs	r0, #17
 80019ce:	4632      	mov	r2, r6
 80019d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80019d4:	f000 bc7c 	b.w	80022d0 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 80019d8:	0800558a 	stmdaeq	r0, {r1, r3, r7, r8, sl, ip, lr}
 80019dc:	20001814 	andcs	r1, r0, r4, lsl r8

080019e0 <Widget::RdmTimeOutMessage()>:
 80019e0:	b510      	push	{r4, lr}
 80019e2:	4604      	mov	r4, r0
 80019e4:	2200      	movs	r2, #0
 80019e6:	2007      	movs	r0, #7
 80019e8:	490a      	ldr	r1, [pc, #40]	; (8001a14 <Widget::RdmTimeOutMessage()+0x34>)
 80019ea:	f000 f9f5 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 80019ee:	201c      	movs	r0, #28
 80019f0:	4909      	ldr	r1, [pc, #36]	; (8001a18 <Widget::RdmTimeOutMessage()+0x38>)
 80019f2:	f000 f9f1 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 80019f6:	2200      	movs	r2, #0
 80019f8:	210c      	movs	r1, #12
 80019fa:	4620      	mov	r0, r4
 80019fc:	f000 fb8e 	bl	800211c <Widget::SendHeader(unsigned char, unsigned int)>
 8001a00:	4620      	mov	r0, r4
 8001a02:	f000 fba8 	bl	8002156 <Widget::SendFooter()>
 8001a06:	2300      	movs	r3, #0
 8001a08:	f884 3300 	strb.w	r3, [r4, #768]	; 0x300
 8001a0c:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001a10:	bd10      	pop	{r4, pc}
 8001a12:	bf00      	nop
 8001a14:	080055a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, sl, ip, lr}
 8001a18:	080055c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, ip, lr}

08001a1c <Widget::ReceivedRdmPacket()>:
 8001a1c:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
 8001a20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001a24:	f023 0302 	bic.w	r3, r3, #2
 8001a28:	2b01      	cmp	r3, #1
 8001a2a:	4604      	mov	r4, r0
 8001a2c:	d063      	beq.n	8001af6 <Widget::ReceivedRdmPacket()+0xda>
 8001a2e:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001a32:	2b01      	cmp	r3, #1
 8001a34:	d05f      	beq.n	8001af6 <Widget::ReceivedRdmPacket()+0xda>
 8001a36:	2000      	movs	r0, #0
 8001a38:	f000 fc4c 	bl	80022d4 <Rdm::Receive(unsigned int)>
 8001a3c:	4605      	mov	r5, r0
 8001a3e:	2800      	cmp	r0, #0
 8001a40:	d059      	beq.n	8001af6 <Widget::ReceivedRdmPacket()+0xda>
 8001a42:	7803      	ldrb	r3, [r0, #0]
 8001a44:	2bcc      	cmp	r3, #204	; 0xcc
 8001a46:	d134      	bne.n	8001ab2 <Widget::ReceivedRdmPacket()+0x96>
 8001a48:	7886      	ldrb	r6, [r0, #2]
 8001a4a:	7d07      	ldrb	r7, [r0, #20]
 8001a4c:	3602      	adds	r6, #2
 8001a4e:	b2f6      	uxtb	r6, r6
 8001a50:	4632      	mov	r2, r6
 8001a52:	2007      	movs	r0, #7
 8001a54:	4929      	ldr	r1, [pc, #164]	; (8001afc <Widget::ReceivedRdmPacket()+0xe0>)
 8001a56:	f000 f9bf 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001a5a:	201c      	movs	r0, #28
 8001a5c:	4928      	ldr	r1, [pc, #160]	; (8001b00 <Widget::ReceivedRdmPacket()+0xe4>)
 8001a5e:	f000 f9bb 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001a62:	2105      	movs	r1, #5
 8001a64:	1c72      	adds	r2, r6, #1
 8001a66:	4620      	mov	r0, r4
 8001a68:	f000 fb58 	bl	800211c <Widget::SendHeader(unsigned char, unsigned int)>
 8001a6c:	2000      	movs	r0, #0
 8001a6e:	f001 f92e 	bl	8002cce <usb_send_byte>
 8001a72:	4632      	mov	r2, r6
 8001a74:	4629      	mov	r1, r5
 8001a76:	4620      	mov	r0, r4
 8001a78:	f000 fb62 	bl	8002140 <Widget::SendData(unsigned char const*, unsigned int)>
 8001a7c:	4620      	mov	r0, r4
 8001a7e:	f000 fb6a 	bl	8002156 <Widget::SendFooter()>
 8001a82:	2f11      	cmp	r7, #17
 8001a84:	7d6a      	ldrb	r2, [r5, #21]
 8001a86:	7dab      	ldrb	r3, [r5, #22]
 8001a88:	d10f      	bne.n	8001aaa <Widget::ReceivedRdmPacket()+0x8e>
 8001a8a:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8001a8e:	b29b      	uxth	r3, r3
 8001a90:	2b02      	cmp	r3, #2
 8001a92:	d00a      	beq.n	8001aaa <Widget::ReceivedRdmPacket()+0x8e>
 8001a94:	4620      	mov	r0, r4
 8001a96:	f7ff ffa3 	bl	80019e0 <Widget::RdmTimeOutMessage()>
 8001a9a:	462a      	mov	r2, r5
 8001a9c:	4631      	mov	r1, r6
 8001a9e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001aa2:	2300      	movs	r3, #0
 8001aa4:	2011      	movs	r0, #17
 8001aa6:	f000 bc13 	b.w	80022d0 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8001aaa:	2300      	movs	r3, #0
 8001aac:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001ab0:	e7f3      	b.n	8001a9a <Widget::ReceivedRdmPacket()+0x7e>
 8001ab2:	2bfe      	cmp	r3, #254	; 0xfe
 8001ab4:	d11d      	bne.n	8001af2 <Widget::ReceivedRdmPacket()+0xd6>
 8001ab6:	2218      	movs	r2, #24
 8001ab8:	2007      	movs	r0, #7
 8001aba:	4910      	ldr	r1, [pc, #64]	; (8001afc <Widget::ReceivedRdmPacket()+0xe0>)
 8001abc:	f000 f98c 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001ac0:	201c      	movs	r0, #28
 8001ac2:	4910      	ldr	r1, [pc, #64]	; (8001b04 <Widget::ReceivedRdmPacket()+0xe8>)
 8001ac4:	f000 f988 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001ac8:	2219      	movs	r2, #25
 8001aca:	2105      	movs	r1, #5
 8001acc:	4620      	mov	r0, r4
 8001ace:	f000 fb25 	bl	800211c <Widget::SendHeader(unsigned char, unsigned int)>
 8001ad2:	2000      	movs	r0, #0
 8001ad4:	f001 f8fb 	bl	8002cce <usb_send_byte>
 8001ad8:	2218      	movs	r2, #24
 8001ada:	4629      	mov	r1, r5
 8001adc:	4620      	mov	r0, r4
 8001ade:	f000 fb2f 	bl	8002140 <Widget::SendData(unsigned char const*, unsigned int)>
 8001ae2:	4620      	mov	r0, r4
 8001ae4:	f000 fb37 	bl	8002156 <Widget::SendFooter()>
 8001ae8:	4620      	mov	r0, r4
 8001aea:	f7ff ff79 	bl	80019e0 <Widget::RdmTimeOutMessage()>
 8001aee:	2618      	movs	r6, #24
 8001af0:	e7d3      	b.n	8001a9a <Widget::ReceivedRdmPacket()+0x7e>
 8001af2:	2600      	movs	r6, #0
 8001af4:	e7d1      	b.n	8001a9a <Widget::ReceivedRdmPacket()+0x7e>
 8001af6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001afa:	bf00      	nop
 8001afc:	080055a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, sl, ip, lr}
 8001b00:	080055cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, sl, ip, lr}
 8001b04:	080055e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, sl, ip, lr}

08001b08 <Widget::RdmTimeout()>:
 8001b08:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
 8001b0c:	b510      	push	{r4, lr}
 8001b0e:	2b03      	cmp	r3, #3
 8001b10:	4604      	mov	r4, r0
 8001b12:	d00d      	beq.n	8001b30 <Widget::RdmTimeout()+0x28>
 8001b14:	f8d0 22fc 	ldr.w	r2, [r0, #764]	; 0x2fc
 8001b18:	b152      	cbz	r2, 8001b30 <Widget::RdmTimeout()+0x28>
 8001b1a:	4b06      	ldr	r3, [pc, #24]	; (8001b34 <Widget::RdmTimeout()+0x2c>)
 8001b1c:	681b      	ldr	r3, [r3, #0]
 8001b1e:	1a9b      	subs	r3, r3, r2
 8001b20:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001b24:	d304      	bcc.n	8001b30 <Widget::RdmTimeout()+0x28>
 8001b26:	f7ff ff5b 	bl	80019e0 <Widget::RdmTimeOutMessage()>
 8001b2a:	2300      	movs	r3, #0
 8001b2c:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001b30:	bd10      	pop	{r4, pc}
 8001b32:	bf00      	nop
 8001b34:	20001814 	andcs	r1, r0, r4, lsl r8

08001b38 <Widget::GetManufacturerReply()>:
 8001b38:	b538      	push	{r3, r4, r5, lr}
 8001b3a:	4917      	ldr	r1, [pc, #92]	; (8001b98 <Widget::GetManufacturerReply()+0x60>)
 8001b3c:	4604      	mov	r4, r0
 8001b3e:	2007      	movs	r0, #7
 8001b40:	f000 f94a 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001b44:	2100      	movs	r1, #0
 8001b46:	201c      	movs	r0, #28
 8001b48:	f000 f946 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001b4c:	2300      	movs	r3, #0
 8001b4e:	f894 5067 	ldrb.w	r5, [r4, #103]	; 0x67
 8001b52:	4619      	mov	r1, r3
 8001b54:	2201      	movs	r2, #1
 8001b56:	4620      	mov	r0, r4
 8001b58:	f000 feae 	bl	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001b5c:	214d      	movs	r1, #77	; 0x4d
 8001b5e:	4620      	mov	r0, r4
 8001b60:	1caa      	adds	r2, r5, #2
 8001b62:	f000 fadb 	bl	800211c <Widget::SendHeader(unsigned char, unsigned int)>
 8001b66:	2202      	movs	r2, #2
 8001b68:	4620      	mov	r0, r4
 8001b6a:	490c      	ldr	r1, [pc, #48]	; (8001b9c <Widget::GetManufacturerReply()+0x64>)
 8001b6c:	f000 fae8 	bl	8002140 <Widget::SendData(unsigned char const*, unsigned int)>
 8001b70:	462a      	mov	r2, r5
 8001b72:	f104 0147 	add.w	r1, r4, #71	; 0x47
 8001b76:	4620      	mov	r0, r4
 8001b78:	f000 fae2 	bl	8002140 <Widget::SendData(unsigned char const*, unsigned int)>
 8001b7c:	4620      	mov	r0, r4
 8001b7e:	f000 faea 	bl	8002156 <Widget::SendFooter()>
 8001b82:	2301      	movs	r3, #1
 8001b84:	2100      	movs	r1, #0
 8001b86:	461a      	mov	r2, r3
 8001b88:	4620      	mov	r0, r4
 8001b8a:	f000 fe95 	bl	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001b8e:	4b04      	ldr	r3, [pc, #16]	; (8001ba0 <Widget::GetManufacturerReply()+0x68>)
 8001b90:	681b      	ldr	r3, [r3, #0]
 8001b92:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 8001b96:	bd38      	pop	{r3, r4, r5, pc}
 8001b98:	08005605 	stmdaeq	r0, {r0, r2, r9, sl, ip, lr}
 8001b9c:	080056ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, sl, ip, lr}
 8001ba0:	20001814 	andcs	r1, r0, r4, lsl r8

08001ba4 <Widget::GetNameReply()>:
 8001ba4:	b538      	push	{r3, r4, r5, lr}
 8001ba6:	4917      	ldr	r1, [pc, #92]	; (8001c04 <Widget::GetNameReply()+0x60>)
 8001ba8:	4604      	mov	r4, r0
 8001baa:	2007      	movs	r0, #7
 8001bac:	f000 f914 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001bb0:	2100      	movs	r1, #0
 8001bb2:	201c      	movs	r0, #28
 8001bb4:	f000 f910 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001bb8:	2300      	movs	r3, #0
 8001bba:	f894 5046 	ldrb.w	r5, [r4, #70]	; 0x46
 8001bbe:	4619      	mov	r1, r3
 8001bc0:	2201      	movs	r2, #1
 8001bc2:	4620      	mov	r0, r4
 8001bc4:	f000 fe78 	bl	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001bc8:	214e      	movs	r1, #78	; 0x4e
 8001bca:	4620      	mov	r0, r4
 8001bcc:	1caa      	adds	r2, r5, #2
 8001bce:	f000 faa5 	bl	800211c <Widget::SendHeader(unsigned char, unsigned int)>
 8001bd2:	2202      	movs	r2, #2
 8001bd4:	4620      	mov	r0, r4
 8001bd6:	490c      	ldr	r1, [pc, #48]	; (8001c08 <Widget::GetNameReply()+0x64>)
 8001bd8:	f000 fab2 	bl	8002140 <Widget::SendData(unsigned char const*, unsigned int)>
 8001bdc:	462a      	mov	r2, r5
 8001bde:	f104 0126 	add.w	r1, r4, #38	; 0x26
 8001be2:	4620      	mov	r0, r4
 8001be4:	f000 faac 	bl	8002140 <Widget::SendData(unsigned char const*, unsigned int)>
 8001be8:	4620      	mov	r0, r4
 8001bea:	f000 fab4 	bl	8002156 <Widget::SendFooter()>
 8001bee:	2301      	movs	r3, #1
 8001bf0:	2100      	movs	r1, #0
 8001bf2:	461a      	mov	r2, r3
 8001bf4:	4620      	mov	r0, r4
 8001bf6:	f000 fe5f 	bl	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001bfa:	4b04      	ldr	r3, [pc, #16]	; (8001c0c <Widget::GetNameReply()+0x68>)
 8001bfc:	681b      	ldr	r3, [r3, #0]
 8001bfe:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 8001c02:	bd38      	pop	{r3, r4, r5, pc}
 8001c04:	08005618 	stmdaeq	r0, {r3, r4, r9, sl, ip, lr}
 8001c08:	20000005 	andcs	r0, r0, r5
 8001c0c:	20001814 	andcs	r1, r0, r4, lsl r8

08001c10 <Widget::ReceiveDataFromHost()>:
 8001c10:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001c14:	4604      	mov	r4, r0
 8001c16:	f001 f93b 	bl	8002e90 <FT245RL_data_available>
 8001c1a:	2800      	cmp	r0, #0
 8001c1c:	d040      	beq.n	8001ca0 <Widget::ReceiveDataFromHost()+0x90>
 8001c1e:	f001 f84d 	bl	8002cbc <usb_read_byte>
 8001c22:	287e      	cmp	r0, #126	; 0x7e
 8001c24:	d13c      	bne.n	8001ca0 <Widget::ReceiveDataFromHost()+0x90>
 8001c26:	f001 f849 	bl	8002cbc <usb_read_byte>
 8001c2a:	4607      	mov	r7, r0
 8001c2c:	f001 f846 	bl	8002cbc <usb_read_byte>
 8001c30:	4605      	mov	r5, r0
 8001c32:	f001 f843 	bl	8002cbc <usb_read_byte>
 8001c36:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8001c3a:	f06f 0993 	mvn.w	r9, #147	; 0x93
 8001c3e:	b2ad      	uxth	r5, r5
 8001c40:	462e      	mov	r6, r5
 8001c42:	f104 0894 	add.w	r8, r4, #148	; 0x94
 8001c46:	eba9 0904 	sub.w	r9, r9, r4
 8001c4a:	eb09 0308 	add.w	r3, r9, r8
 8001c4e:	429d      	cmp	r5, r3
 8001c50:	d81d      	bhi.n	8001c8e <Widget::ReceiveDataFromHost()+0x7e>
 8001c52:	f001 f833 	bl	8002cbc <usb_read_byte>
 8001c56:	28e7      	cmp	r0, #231	; 0xe7
 8001c58:	d004      	beq.n	8001c64 <Widget::ReceiveDataFromHost()+0x54>
 8001c5a:	1c73      	adds	r3, r6, #1
 8001c5c:	f5b6 7f16 	cmp.w	r6, #600	; 0x258
 8001c60:	461e      	mov	r6, r3
 8001c62:	d3f6      	bcc.n	8001c52 <Widget::ReceiveDataFromHost()+0x42>
 8001c64:	462b      	mov	r3, r5
 8001c66:	463a      	mov	r2, r7
 8001c68:	2006      	movs	r0, #6
 8001c6a:	492b      	ldr	r1, [pc, #172]	; (8001d18 <Widget::ReceiveDataFromHost()+0x108>)
 8001c6c:	9600      	str	r6, [sp, #0]
 8001c6e:	f000 f8b3 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001c72:	2f0b      	cmp	r7, #11
 8001c74:	d810      	bhi.n	8001c98 <Widget::ReceiveDataFromHost()+0x88>
 8001c76:	2f02      	cmp	r7, #2
 8001c78:	d912      	bls.n	8001ca0 <Widget::ReceiveDataFromHost()+0x90>
 8001c7a:	3f03      	subs	r7, #3
 8001c7c:	2f08      	cmp	r7, #8
 8001c7e:	d80f      	bhi.n	8001ca0 <Widget::ReceiveDataFromHost()+0x90>
 8001c80:	e8df f007 	tbb	[pc, r7]
 8001c84:	2f0e1d11 	svccs	0x000e1d11
 8001c88:	170e363c 	smladxne	lr, ip, r6, r3
 8001c8c:	f0010043 			; <UNDEFINED> instruction: 0xf0010043
 8001c90:	f815 f808 	pld	[r5, <undefined>]
 8001c94:	0b01      	lsrs	r1, r0, #12
 8001c96:	e7d8      	b.n	8001c4a <Widget::ReceiveDataFromHost()+0x3a>
 8001c98:	2f4d      	cmp	r7, #77	; 0x4d
 8001c9a:	d01c      	beq.n	8001cd6 <Widget::ReceiveDataFromHost()+0xc6>
 8001c9c:	2f4e      	cmp	r7, #78	; 0x4e
 8001c9e:	d014      	beq.n	8001cca <Widget::ReceiveDataFromHost()+0xba>
 8001ca0:	b003      	add	sp, #12
 8001ca2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001ca6:	4620      	mov	r0, r4
 8001ca8:	b003      	add	sp, #12
 8001caa:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001cae:	f7ff bd01 	b.w	80016b4 <Widget::GetParamsReply()>
 8001cb2:	4620      	mov	r0, r4
 8001cb4:	b003      	add	sp, #12
 8001cb6:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001cba:	f7ff be47 	b.w	800194c <Widget::GetSnReply()>
 8001cbe:	4620      	mov	r0, r4
 8001cc0:	b003      	add	sp, #12
 8001cc2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001cc6:	f7ff bd27 	b.w	8001718 <Widget::SetParams()>
 8001cca:	4620      	mov	r0, r4
 8001ccc:	b003      	add	sp, #12
 8001cce:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001cd2:	f7ff bf67 	b.w	8001ba4 <Widget::GetNameReply()>
 8001cd6:	4620      	mov	r0, r4
 8001cd8:	b003      	add	sp, #12
 8001cda:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001cde:	f7ff bf2b 	b.w	8001b38 <Widget::GetManufacturerReply()>
 8001ce2:	4629      	mov	r1, r5
 8001ce4:	4620      	mov	r0, r4
 8001ce6:	b003      	add	sp, #12
 8001ce8:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001cec:	f7ff bd90 	b.w	8001810 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>
 8001cf0:	4620      	mov	r0, r4
 8001cf2:	b003      	add	sp, #12
 8001cf4:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001cf8:	f7ff bdda 	b.w	80018b0 <Widget::ReceiveDmxOnChange()>
 8001cfc:	4629      	mov	r1, r5
 8001cfe:	4620      	mov	r0, r4
 8001d00:	b003      	add	sp, #12
 8001d02:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001d06:	f7ff bda9 	b.w	800185c <Widget::SendRdmPacketRequest(unsigned short)>
 8001d0a:	4629      	mov	r1, r5
 8001d0c:	4620      	mov	r0, r4
 8001d0e:	b003      	add	sp, #12
 8001d10:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001d14:	f7ff be40 	b.w	8001998 <Widget::SendRdmDiscoveryRequest(unsigned short)>
 8001d18:	0800562e 	stmdaeq	r0, {r1, r2, r3, r5, r9, sl, ip, lr}

08001d1c <WidgetConfiguration::SetRefreshRate(unsigned char)>:
 8001d1c:	4b05      	ldr	r3, [pc, #20]	; (8001d34 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x18>)
 8001d1e:	4601      	mov	r1, r0
 8001d20:	7018      	strb	r0, [r3, #0]
 8001d22:	b110      	cbz	r0, 8001d2a <WidgetConfiguration::SetRefreshRate(unsigned char)+0xe>
 8001d24:	4b04      	ldr	r3, [pc, #16]	; (8001d38 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x1c>)
 8001d26:	fbb3 f1f0 	udiv	r1, r3, r0
 8001d2a:	4b04      	ldr	r3, [pc, #16]	; (8001d3c <WidgetConfiguration::SetRefreshRate(unsigned char)+0x20>)
 8001d2c:	6818      	ldr	r0, [r3, #0]
 8001d2e:	f000 becf 	b.w	8002ad0 <Dmx::SetDmxPeriodTime(unsigned int)>
 8001d32:	bf00      	nop
 8001d34:	20000004 	andcs	r0, r0, r4
 8001d38:	000f4240 	andeq	r4, pc, r0, asr #4
 8001d3c:	20000724 	andcs	r0, r0, r4, lsr #14

08001d40 <WidgetConfiguration::SetBreakTime(unsigned char)>:
 8001d40:	b508      	push	{r3, lr}
 8001d42:	4b08      	ldr	r3, [pc, #32]	; (8001d64 <WidgetConfiguration::SetBreakTime(unsigned char)+0x24>)
 8001d44:	7018      	strb	r0, [r3, #0]
 8001d46:	f7fe ff79 	bl	8000c3c <__aeabi_i2f>
 8001d4a:	4907      	ldr	r1, [pc, #28]	; (8001d68 <WidgetConfiguration::SetBreakTime(unsigned char)+0x28>)
 8001d4c:	f7fe fa1a 	bl	8000184 <__aeabi_fmul>
 8001d50:	f7fe ffc8 	bl	8000ce4 <__aeabi_f2uiz>
 8001d54:	4b05      	ldr	r3, [pc, #20]	; (8001d6c <WidgetConfiguration::SetBreakTime(unsigned char)+0x2c>)
 8001d56:	4601      	mov	r1, r0
 8001d58:	6818      	ldr	r0, [r3, #0]
 8001d5a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001d5e:	f000 bee7 	b.w	8002b30 <Dmx::SetDmxBreakTime(unsigned int)>
 8001d62:	bf00      	nop
 8001d64:	20000001 	andcs	r0, r0, r1
 8001d68:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 8001d6c:	20000724 	andcs	r0, r0, r4, lsr #14

08001d70 <WidgetConfiguration::SetMabTime(unsigned char)>:
 8001d70:	b508      	push	{r3, lr}
 8001d72:	4b08      	ldr	r3, [pc, #32]	; (8001d94 <WidgetConfiguration::SetMabTime(unsigned char)+0x24>)
 8001d74:	7018      	strb	r0, [r3, #0]
 8001d76:	f7fe ff61 	bl	8000c3c <__aeabi_i2f>
 8001d7a:	4907      	ldr	r1, [pc, #28]	; (8001d98 <WidgetConfiguration::SetMabTime(unsigned char)+0x28>)
 8001d7c:	f7fe fa02 	bl	8000184 <__aeabi_fmul>
 8001d80:	f7fe ffb0 	bl	8000ce4 <__aeabi_f2uiz>
 8001d84:	4b05      	ldr	r3, [pc, #20]	; (8001d9c <WidgetConfiguration::SetMabTime(unsigned char)+0x2c>)
 8001d86:	4601      	mov	r1, r0
 8001d88:	6818      	ldr	r0, [r3, #0]
 8001d8a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001d8e:	f000 bed9 	b.w	8002b44 <Dmx::SetDmxMabTime(unsigned int)>
 8001d92:	bf00      	nop
 8001d94:	20000000 	andcs	r0, r0, r0
 8001d98:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 8001d9c:	20000724 	andcs	r0, r0, r4, lsr #14

08001da0 <WidgetConfiguration::SetMode(widget::Mode)>:
 8001da0:	2800      	cmp	r0, #0
 8001da2:	bf14      	ite	ne
 8001da4:	4602      	movne	r2, r0
 8001da6:	2202      	moveq	r2, #2
 8001da8:	4b03      	ldr	r3, [pc, #12]	; (8001db8 <WidgetConfiguration::SetMode(widget::Mode)+0x18>)
 8001daa:	701a      	strb	r2, [r3, #0]
 8001dac:	4b03      	ldr	r3, [pc, #12]	; (8001dbc <WidgetConfiguration::SetMode(widget::Mode)+0x1c>)
 8001dae:	681b      	ldr	r3, [r3, #0]
 8001db0:	f8c3 02ec 	str.w	r0, [r3, #748]	; 0x2ec
 8001db4:	4770      	bx	lr
 8001db6:	bf00      	nop
 8001db8:	20000002 	andcs	r0, r0, r2
 8001dbc:	200000f4 	strdcs	r0, [r0], -r4

08001dc0 <WidgetConfiguration::SetThrottle(unsigned char)>:
 8001dc0:	b118      	cbz	r0, 8001dca <WidgetConfiguration::SetThrottle(unsigned char)+0xa>
 8001dc2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001dc6:	fbb3 f0f0 	udiv	r0, r3, r0
 8001dca:	4b02      	ldr	r3, [pc, #8]	; (8001dd4 <WidgetConfiguration::SetThrottle(unsigned char)+0x14>)
 8001dcc:	681b      	ldr	r3, [r3, #0]
 8001dce:	f8c3 02f4 	str.w	r0, [r3, #756]	; 0x2f4
 8001dd2:	4770      	bx	lr
 8001dd4:	200000f4 	strdcs	r0, [r0], -r4

08001dd8 <WidgetMonitor::Line(int, char const*, ...)>:
 8001dd8:	b40e      	push	{r1, r2, r3}
 8001dda:	b003      	add	sp, #12
 8001ddc:	4770      	bx	lr
	...

08001de0 <WidgetParams::WidgetParams(WidgetParamsStore*)>:
 8001de0:	4a02      	ldr	r2, [pc, #8]	; (8001dec <WidgetParams::WidgetParams(WidgetParamsStore*)+0xc>)
 8001de2:	6001      	str	r1, [r0, #0]
 8001de4:	6082      	str	r2, [r0, #8]
 8001de6:	2200      	movs	r2, #0
 8001de8:	7302      	strb	r2, [r0, #12]
 8001dea:	4770      	bx	lr
 8001dec:	00280109 	eoreq	r0, r8, r9, lsl #2

08001df0 <WidgetParams::Load()>:
 8001df0:	2300      	movs	r3, #0
 8001df2:	b513      	push	{r0, r1, r4, lr}
 8001df4:	4604      	mov	r4, r0
 8001df6:	4602      	mov	r2, r0
 8001df8:	6043      	str	r3, [r0, #4]
 8001dfa:	4909      	ldr	r1, [pc, #36]	; (8001e20 <WidgetParams::Load()+0x30>)
 8001dfc:	4668      	mov	r0, sp
 8001dfe:	f001 fcde 	bl	80037be <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8001e02:	6820      	ldr	r0, [r4, #0]
 8001e04:	b150      	cbz	r0, 8001e1c <WidgetParams::Load()+0x2c>
 8001e06:	6803      	ldr	r3, [r0, #0]
 8001e08:	1d21      	adds	r1, r4, #4
 8001e0a:	68db      	ldr	r3, [r3, #12]
 8001e0c:	4798      	blx	r3
 8001e0e:	2401      	movs	r4, #1
 8001e10:	4668      	mov	r0, sp
 8001e12:	f001 fcd7 	bl	80037c4 <ReadConfigFile::~ReadConfigFile()>
 8001e16:	4620      	mov	r0, r4
 8001e18:	b002      	add	sp, #8
 8001e1a:	bd10      	pop	{r4, pc}
 8001e1c:	4604      	mov	r4, r0
 8001e1e:	e7f7      	b.n	8001e10 <WidgetParams::Load()+0x20>
 8001e20:	08001ee5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, sl, fp, ip}

08001e24 <WidgetParams::callbackFunction(char const*)>:
 8001e24:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001e26:	460d      	mov	r5, r1
 8001e28:	4604      	mov	r4, r0
 8001e2a:	4929      	ldr	r1, [pc, #164]	; (8001ed0 <WidgetParams::callbackFunction(char const*)+0xac>)
 8001e2c:	4628      	mov	r0, r5
 8001e2e:	f10d 0207 	add.w	r2, sp, #7
 8001e32:	f001 fcc8 	bl	80037c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8001e36:	b960      	cbnz	r0, 8001e52 <WidgetParams::callbackFunction(char const*)+0x2e>
 8001e38:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001e3c:	f1a3 0209 	sub.w	r2, r3, #9
 8001e40:	2a76      	cmp	r2, #118	; 0x76
 8001e42:	d806      	bhi.n	8001e52 <WidgetParams::callbackFunction(char const*)+0x2e>
 8001e44:	7223      	strb	r3, [r4, #8]
 8001e46:	6863      	ldr	r3, [r4, #4]
 8001e48:	f043 0301 	orr.w	r3, r3, #1
 8001e4c:	6063      	str	r3, [r4, #4]
 8001e4e:	b003      	add	sp, #12
 8001e50:	bd30      	pop	{r4, r5, pc}
 8001e52:	4628      	mov	r0, r5
 8001e54:	491f      	ldr	r1, [pc, #124]	; (8001ed4 <WidgetParams::callbackFunction(char const*)+0xb0>)
 8001e56:	f10d 0207 	add.w	r2, sp, #7
 8001e5a:	f001 fcb4 	bl	80037c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8001e5e:	b950      	cbnz	r0, 8001e76 <WidgetParams::callbackFunction(char const*)+0x52>
 8001e60:	f99d 2007 	ldrsb.w	r2, [sp, #7]
 8001e64:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001e68:	2a00      	cmp	r2, #0
 8001e6a:	dd04      	ble.n	8001e76 <WidgetParams::callbackFunction(char const*)+0x52>
 8001e6c:	7263      	strb	r3, [r4, #9]
 8001e6e:	6863      	ldr	r3, [r4, #4]
 8001e70:	f043 0302 	orr.w	r3, r3, #2
 8001e74:	e7ea      	b.n	8001e4c <WidgetParams::callbackFunction(char const*)+0x28>
 8001e76:	4628      	mov	r0, r5
 8001e78:	4917      	ldr	r1, [pc, #92]	; (8001ed8 <WidgetParams::callbackFunction(char const*)+0xb4>)
 8001e7a:	f10d 0207 	add.w	r2, sp, #7
 8001e7e:	f001 fca2 	bl	80037c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8001e82:	b930      	cbnz	r0, 8001e92 <WidgetParams::callbackFunction(char const*)+0x6e>
 8001e84:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001e88:	72a3      	strb	r3, [r4, #10]
 8001e8a:	6863      	ldr	r3, [r4, #4]
 8001e8c:	f043 0304 	orr.w	r3, r3, #4
 8001e90:	e7dc      	b.n	8001e4c <WidgetParams::callbackFunction(char const*)+0x28>
 8001e92:	4628      	mov	r0, r5
 8001e94:	4911      	ldr	r1, [pc, #68]	; (8001edc <WidgetParams::callbackFunction(char const*)+0xb8>)
 8001e96:	f10d 0207 	add.w	r2, sp, #7
 8001e9a:	f001 fc94 	bl	80037c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8001e9e:	b940      	cbnz	r0, 8001eb2 <WidgetParams::callbackFunction(char const*)+0x8e>
 8001ea0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001ea4:	2b03      	cmp	r3, #3
 8001ea6:	d804      	bhi.n	8001eb2 <WidgetParams::callbackFunction(char const*)+0x8e>
 8001ea8:	72e3      	strb	r3, [r4, #11]
 8001eaa:	6863      	ldr	r3, [r4, #4]
 8001eac:	f043 0308 	orr.w	r3, r3, #8
 8001eb0:	e7cc      	b.n	8001e4c <WidgetParams::callbackFunction(char const*)+0x28>
 8001eb2:	4628      	mov	r0, r5
 8001eb4:	490a      	ldr	r1, [pc, #40]	; (8001ee0 <WidgetParams::callbackFunction(char const*)+0xbc>)
 8001eb6:	f10d 0207 	add.w	r2, sp, #7
 8001eba:	f001 fc84 	bl	80037c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8001ebe:	2800      	cmp	r0, #0
 8001ec0:	d1c5      	bne.n	8001e4e <WidgetParams::callbackFunction(char const*)+0x2a>
 8001ec2:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001ec6:	7323      	strb	r3, [r4, #12]
 8001ec8:	6863      	ldr	r3, [r4, #4]
 8001eca:	f043 0310 	orr.w	r3, r3, #16
 8001ece:	e7bd      	b.n	8001e4c <WidgetParams::callbackFunction(char const*)+0x28>
 8001ed0:	08005659 	stmdaeq	r0, {r0, r3, r4, r6, r9, sl, ip, lr}
 8001ed4:	08005646 	stmdaeq	r0, {r1, r2, r6, r9, sl, ip, lr}
 8001ed8:	0800566e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9, sl, ip, lr}
 8001edc:	0800563a 	stmdaeq	r0, {r1, r3, r4, r5, r9, sl, ip, lr}
 8001ee0:	08005685 	stmdaeq	r0, {r0, r2, r7, r9, sl, ip, lr}

08001ee4 <WidgetParams::staticCallbackFunction(void*, char const*)>:
 8001ee4:	f7ff bf9e 	b.w	8001e24 <WidgetParams::callbackFunction(char const*)>

08001ee8 <WidgetParams::Set()>:
 8001ee8:	6843      	ldr	r3, [r0, #4]
 8001eea:	b510      	push	{r4, lr}
 8001eec:	075b      	lsls	r3, r3, #29
 8001eee:	4604      	mov	r4, r0
 8001ef0:	d502      	bpl.n	8001ef8 <WidgetParams::Set()+0x10>
 8001ef2:	7a80      	ldrb	r0, [r0, #10]
 8001ef4:	f7ff ff12 	bl	8001d1c <WidgetConfiguration::SetRefreshRate(unsigned char)>
 8001ef8:	6863      	ldr	r3, [r4, #4]
 8001efa:	07d8      	lsls	r0, r3, #31
 8001efc:	d502      	bpl.n	8001f04 <WidgetParams::Set()+0x1c>
 8001efe:	7a20      	ldrb	r0, [r4, #8]
 8001f00:	f7ff ff1e 	bl	8001d40 <WidgetConfiguration::SetBreakTime(unsigned char)>
 8001f04:	6863      	ldr	r3, [r4, #4]
 8001f06:	0799      	lsls	r1, r3, #30
 8001f08:	d502      	bpl.n	8001f10 <WidgetParams::Set()+0x28>
 8001f0a:	7a60      	ldrb	r0, [r4, #9]
 8001f0c:	f7ff ff30 	bl	8001d70 <WidgetConfiguration::SetMabTime(unsigned char)>
 8001f10:	6863      	ldr	r3, [r4, #4]
 8001f12:	06da      	lsls	r2, r3, #27
 8001f14:	d502      	bpl.n	8001f1c <WidgetParams::Set()+0x34>
 8001f16:	7b20      	ldrb	r0, [r4, #12]
 8001f18:	f7ff ff52 	bl	8001dc0 <WidgetConfiguration::SetThrottle(unsigned char)>
 8001f1c:	6863      	ldr	r3, [r4, #4]
 8001f1e:	071b      	lsls	r3, r3, #28
 8001f20:	d504      	bpl.n	8001f2c <WidgetParams::Set()+0x44>
 8001f22:	7ae0      	ldrb	r0, [r4, #11]
 8001f24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001f28:	f7ff bf3a 	b.w	8001da0 <WidgetConfiguration::SetMode(widget::Mode)>
 8001f2c:	bd10      	pop	{r4, pc}

08001f2e <WidgetParams::Dump()>:
 8001f2e:	4770      	bx	lr

08001f30 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>:
 8001f30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001f34:	4606      	mov	r6, r0
 8001f36:	460f      	mov	r7, r1
 8001f38:	461d      	mov	r5, r3
 8001f3a:	eb03 0802 	add.w	r8, r3, r2
 8001f3e:	eba8 0405 	sub.w	r4, r8, r5
 8001f42:	b2a4      	uxth	r4, r4
 8001f44:	2d63      	cmp	r5, #99	; 0x63
 8001f46:	f04f 02c8 	mov.w	r2, #200	; 0xc8
 8001f4a:	f04f 0181 	mov.w	r1, #129	; 0x81
 8001f4e:	4630      	mov	r0, r6
 8001f50:	443c      	add	r4, r7
 8001f52:	d81e      	bhi.n	8001f92 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x62>
 8001f54:	f000 f8e2 	bl	800211c <Widget::SendHeader(unsigned char, unsigned int)>
 8001f58:	f04f 0800 	mov.w	r8, #0
 8001f5c:	4545      	cmp	r5, r8
 8001f5e:	462f      	mov	r7, r5
 8001f60:	d80d      	bhi.n	8001f7e <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x4e>
 8001f62:	2000      	movs	r0, #0
 8001f64:	f000 feb3 	bl	8002cce <usb_send_byte>
 8001f68:	3701      	adds	r7, #1
 8001f6a:	2002      	movs	r0, #2
 8001f6c:	f000 feaf 	bl	8002cce <usb_send_byte>
 8001f70:	2f64      	cmp	r7, #100	; 0x64
 8001f72:	d1f6      	bne.n	8001f62 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x32>
 8001f74:	4630      	mov	r0, r6
 8001f76:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001f7a:	f000 b8ec 	b.w	8002156 <Widget::SendFooter()>
 8001f7e:	2080      	movs	r0, #128	; 0x80
 8001f80:	f000 fea5 	bl	8002cce <usb_send_byte>
 8001f84:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001f88:	f000 fea1 	bl	8002cce <usb_send_byte>
 8001f8c:	f108 0801 	add.w	r8, r8, #1
 8001f90:	e7e4      	b.n	8001f5c <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x2c>
 8001f92:	f000 f8c3 	bl	800211c <Widget::SendHeader(unsigned char, unsigned int)>
 8001f96:	f04f 0900 	mov.w	r9, #0
 8001f9a:	2080      	movs	r0, #128	; 0x80
 8001f9c:	f000 fe97 	bl	8002cce <usb_send_byte>
 8001fa0:	f109 0901 	add.w	r9, r9, #1
 8001fa4:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001fa8:	f000 fe91 	bl	8002cce <usb_send_byte>
 8001fac:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8001fb0:	d1f3      	bne.n	8001f9a <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x6a>
 8001fb2:	4630      	mov	r0, r6
 8001fb4:	3d64      	subs	r5, #100	; 0x64
 8001fb6:	f000 f8ce 	bl	8002156 <Widget::SendFooter()>
 8001fba:	b2ad      	uxth	r5, r5
 8001fbc:	e7bf      	b.n	8001f3e <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0xe>
	...

08001fc0 <Widget::UsbCanSend()>:
 8001fc0:	b570      	push	{r4, r5, r6, lr}
 8001fc2:	256c      	movs	r5, #108	; 0x6c
 8001fc4:	4e0b      	ldr	r6, [pc, #44]	; (8001ff4 <Widget::UsbCanSend()+0x34>)
 8001fc6:	6874      	ldr	r4, [r6, #4]
 8001fc8:	fbb4 f4f5 	udiv	r4, r4, r5
 8001fcc:	f000 ff6c 	bl	8002ea8 <FT245RL_can_write>
 8001fd0:	b930      	cbnz	r0, 8001fe0 <Widget::UsbCanSend()+0x20>
 8001fd2:	6873      	ldr	r3, [r6, #4]
 8001fd4:	fbb3 f3f5 	udiv	r3, r3, r5
 8001fd8:	1b1b      	subs	r3, r3, r4
 8001fda:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001fde:	d3f5      	bcc.n	8001fcc <Widget::UsbCanSend()+0xc>
 8001fe0:	f000 ff62 	bl	8002ea8 <FT245RL_can_write>
 8001fe4:	4604      	mov	r4, r0
 8001fe6:	b918      	cbnz	r0, 8001ff0 <Widget::UsbCanSend()+0x30>
 8001fe8:	2007      	movs	r0, #7
 8001fea:	4903      	ldr	r1, [pc, #12]	; (8001ff8 <Widget::UsbCanSend()+0x38>)
 8001fec:	f7ff fef4 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8001ff0:	4620      	mov	r0, r4
 8001ff2:	bd70      	pop	{r4, r5, r6, pc}
 8001ff4:	e0001000 	and	r1, r0, r0
 8001ff8:	0800569f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, r9, sl, ip, lr}

08001ffc <Widget::SnifferDmx()>:
 8001ffc:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
 8002000:	b570      	push	{r4, r5, r6, lr}
 8002002:	2b03      	cmp	r3, #3
 8002004:	4604      	mov	r4, r0
 8002006:	d11c      	bne.n	8002042 <Widget::SnifferDmx()+0x46>
 8002008:	f7ff ffda 	bl	8001fc0 <Widget::UsbCanSend()>
 800200c:	b1c8      	cbz	r0, 8002042 <Widget::SnifferDmx()+0x46>
 800200e:	2100      	movs	r1, #0
 8002010:	4620      	mov	r0, r4
 8002012:	f000 fddd 	bl	8002bd0 <Dmx::GetDmxChanged(unsigned int)>
 8002016:	4605      	mov	r5, r0
 8002018:	b198      	cbz	r0, 8002042 <Widget::SnifferDmx()+0x46>
 800201a:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 800201e:	4620      	mov	r0, r4
 8002020:	f7ff ffce 	bl	8001fc0 <Widget::UsbCanSend()>
 8002024:	b168      	cbz	r0, 8002042 <Widget::SnifferDmx()+0x46>
 8002026:	3601      	adds	r6, #1
 8002028:	4632      	mov	r2, r6
 800202a:	2007      	movs	r0, #7
 800202c:	4905      	ldr	r1, [pc, #20]	; (8002044 <Widget::SnifferDmx()+0x48>)
 800202e:	f7ff fed3 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8002032:	4629      	mov	r1, r5
 8002034:	4620      	mov	r0, r4
 8002036:	b2b3      	uxth	r3, r6
 8002038:	2200      	movs	r2, #0
 800203a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800203e:	f7ff bf77 	b.w	8001f30 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 8002042:	bd70      	pop	{r4, r5, r6, pc}
 8002044:	080056bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, ip, lr}

08002048 <Widget::SnifferRdm()>:
 8002048:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
 800204c:	b570      	push	{r4, r5, r6, lr}
 800204e:	2b03      	cmp	r3, #3
 8002050:	4604      	mov	r4, r0
 8002052:	d14c      	bne.n	80020ee <Widget::SnifferRdm()+0xa6>
 8002054:	f7ff ffb4 	bl	8001fc0 <Widget::UsbCanSend()>
 8002058:	2800      	cmp	r0, #0
 800205a:	d048      	beq.n	80020ee <Widget::SnifferRdm()+0xa6>
 800205c:	2000      	movs	r0, #0
 800205e:	f000 f939 	bl	80022d4 <Rdm::Receive(unsigned int)>
 8002062:	4605      	mov	r5, r0
 8002064:	2800      	cmp	r0, #0
 8002066:	d042      	beq.n	80020ee <Widget::SnifferRdm()+0xa6>
 8002068:	7803      	ldrb	r3, [r0, #0]
 800206a:	2bcc      	cmp	r3, #204	; 0xcc
 800206c:	d134      	bne.n	80020d8 <Widget::SnifferRdm()+0x90>
 800206e:	7886      	ldrb	r6, [r0, #2]
 8002070:	7d03      	ldrb	r3, [r0, #20]
 8002072:	3602      	adds	r6, #2
 8002074:	2b20      	cmp	r3, #32
 8002076:	b2f6      	uxtb	r6, r6
 8002078:	d028      	beq.n	80020cc <Widget::SnifferRdm()+0x84>
 800207a:	d813      	bhi.n	80020a4 <Widget::SnifferRdm()+0x5c>
 800207c:	2b10      	cmp	r3, #16
 800207e:	d019      	beq.n	80020b4 <Widget::SnifferRdm()+0x6c>
 8002080:	2b11      	cmp	r3, #17
 8002082:	d01d      	beq.n	80020c0 <Widget::SnifferRdm()+0x78>
 8002084:	4620      	mov	r0, r4
 8002086:	f7ff ff9b 	bl	8001fc0 <Widget::UsbCanSend()>
 800208a:	b380      	cbz	r0, 80020ee <Widget::SnifferRdm()+0xa6>
 800208c:	2007      	movs	r0, #7
 800208e:	4918      	ldr	r1, [pc, #96]	; (80020f0 <Widget::SnifferRdm()+0xa8>)
 8002090:	f7ff fea2 	bl	8001dd8 <WidgetMonitor::Line(int, char const*, ...)>
 8002094:	4633      	mov	r3, r6
 8002096:	4629      	mov	r1, r5
 8002098:	4620      	mov	r0, r4
 800209a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800209e:	2200      	movs	r2, #0
 80020a0:	f7ff bf46 	b.w	8001f30 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 80020a4:	2b30      	cmp	r3, #48	; 0x30
 80020a6:	d1ed      	bne.n	8002084 <Widget::SnifferRdm()+0x3c>
 80020a8:	f8d4 3314 	ldr.w	r3, [r4, #788]	; 0x314
 80020ac:	3301      	adds	r3, #1
 80020ae:	f8c4 3314 	str.w	r3, [r4, #788]	; 0x314
 80020b2:	e7e7      	b.n	8002084 <Widget::SnifferRdm()+0x3c>
 80020b4:	f8d4 3308 	ldr.w	r3, [r4, #776]	; 0x308
 80020b8:	3301      	adds	r3, #1
 80020ba:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
 80020be:	e7e1      	b.n	8002084 <Widget::SnifferRdm()+0x3c>
 80020c0:	f8d4 330c 	ldr.w	r3, [r4, #780]	; 0x30c
 80020c4:	3301      	adds	r3, #1
 80020c6:	f8c4 330c 	str.w	r3, [r4, #780]	; 0x30c
 80020ca:	e7db      	b.n	8002084 <Widget::SnifferRdm()+0x3c>
 80020cc:	f8d4 3310 	ldr.w	r3, [r4, #784]	; 0x310
 80020d0:	3301      	adds	r3, #1
 80020d2:	f8c4 3310 	str.w	r3, [r4, #784]	; 0x310
 80020d6:	e7d5      	b.n	8002084 <Widget::SnifferRdm()+0x3c>
 80020d8:	2bfe      	cmp	r3, #254	; 0xfe
 80020da:	bf03      	ittte	eq
 80020dc:	f8d4 330c 	ldreq.w	r3, [r4, #780]	; 0x30c
 80020e0:	2618      	moveq	r6, #24
 80020e2:	3301      	addeq	r3, #1
 80020e4:	2600      	movne	r6, #0
 80020e6:	bf08      	it	eq
 80020e8:	f8c4 330c 	streq.w	r3, [r4, #780]	; 0x30c
 80020ec:	e7ca      	b.n	8002084 <Widget::SnifferRdm()+0x3c>
 80020ee:	bd70      	pop	{r4, r5, r6, pc}
 80020f0:	080056d8 	stmdaeq	r0, {r3, r4, r6, r7, r9, sl, ip, lr}

080020f4 <Widget::SnifferFillTransmitBuffer()>:
 80020f4:	b538      	push	{r3, r4, r5, lr}
 80020f6:	4605      	mov	r5, r0
 80020f8:	f7ff ff62 	bl	8001fc0 <Widget::UsbCanSend()>
 80020fc:	b958      	cbnz	r0, 8002116 <Widget::SnifferFillTransmitBuffer()+0x22>
 80020fe:	bd38      	pop	{r3, r4, r5, pc}
 8002100:	4628      	mov	r0, r5
 8002102:	f7ff ff5d 	bl	8001fc0 <Widget::UsbCanSend()>
 8002106:	2800      	cmp	r0, #0
 8002108:	d0f9      	beq.n	80020fe <Widget::SnifferFillTransmitBuffer()+0xa>
 800210a:	2000      	movs	r0, #0
 800210c:	f000 fddf 	bl	8002cce <usb_send_byte>
 8002110:	3c01      	subs	r4, #1
 8002112:	d1f5      	bne.n	8002100 <Widget::SnifferFillTransmitBuffer()+0xc>
 8002114:	e7f3      	b.n	80020fe <Widget::SnifferFillTransmitBuffer()+0xa>
 8002116:	f240 1401 	movw	r4, #257	; 0x101
 800211a:	e7f9      	b.n	8002110 <Widget::SnifferFillTransmitBuffer()+0x1c>

0800211c <Widget::SendHeader(unsigned char, unsigned int)>:
 800211c:	b538      	push	{r3, r4, r5, lr}
 800211e:	460d      	mov	r5, r1
 8002120:	4614      	mov	r4, r2
 8002122:	207e      	movs	r0, #126	; 0x7e
 8002124:	f000 fdd3 	bl	8002cce <usb_send_byte>
 8002128:	4628      	mov	r0, r5
 800212a:	f000 fdd0 	bl	8002cce <usb_send_byte>
 800212e:	b2e0      	uxtb	r0, r4
 8002130:	f000 fdcd 	bl	8002cce <usb_send_byte>
 8002134:	f3c4 2007 	ubfx	r0, r4, #8, #8
 8002138:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800213c:	f000 bdc7 	b.w	8002cce <usb_send_byte>

08002140 <Widget::SendData(unsigned char const*, unsigned int)>:
 8002140:	b538      	push	{r3, r4, r5, lr}
 8002142:	460c      	mov	r4, r1
 8002144:	188d      	adds	r5, r1, r2
 8002146:	42ac      	cmp	r4, r5
 8002148:	d100      	bne.n	800214c <Widget::SendData(unsigned char const*, unsigned int)+0xc>
 800214a:	bd38      	pop	{r3, r4, r5, pc}
 800214c:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002150:	f000 fdbd 	bl	8002cce <usb_send_byte>
 8002154:	e7f7      	b.n	8002146 <Widget::SendData(unsigned char const*, unsigned int)+0x6>

08002156 <Widget::SendFooter()>:
 8002156:	20e7      	movs	r0, #231	; 0xe7
 8002158:	f000 bdb9 	b.w	8002cce <usb_send_byte>

0800215c <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>:
 800215c:	b570      	push	{r4, r5, r6, lr}
 800215e:	461c      	mov	r4, r3
 8002160:	4605      	mov	r5, r0
 8002162:	4616      	mov	r6, r2
 8002164:	461a      	mov	r2, r3
 8002166:	f7ff ffd9 	bl	800211c <Widget::SendHeader(unsigned char, unsigned int)>
 800216a:	4628      	mov	r0, r5
 800216c:	4622      	mov	r2, r4
 800216e:	4631      	mov	r1, r6
 8002170:	f7ff ffe6 	bl	8002140 <Widget::SendData(unsigned char const*, unsigned int)>
 8002174:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002178:	20e7      	movs	r0, #231	; 0xe7
 800217a:	f000 bda8 	b.w	8002cce <usb_send_byte>
	...

08002180 <StoreWidget::UpdateBreakTime(unsigned char)>:
 8002180:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002182:	2301      	movs	r3, #1
 8002184:	2200      	movs	r2, #0
 8002186:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800218a:	4807      	ldr	r0, [pc, #28]	; (80021a8 <StoreWidget::UpdateBreakTime(unsigned char)+0x28>)
 800218c:	9300      	str	r3, [sp, #0]
 800218e:	f88d 1017 	strb.w	r1, [sp, #23]
 8002192:	2204      	movs	r2, #4
 8002194:	210a      	movs	r1, #10
 8002196:	6800      	ldr	r0, [r0, #0]
 8002198:	f10d 0317 	add.w	r3, sp, #23
 800219c:	f001 f826 	bl	80031ec <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80021a0:	b007      	add	sp, #28
 80021a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80021a6:	bf00      	nop
 80021a8:	20001740 	andcs	r1, r0, r0, asr #14

080021ac <non-virtual thunk to StoreWidget::UpdateBreakTime(unsigned char)>:
 80021ac:	f1a0 0004 	sub.w	r0, r0, #4
 80021b0:	e7e6      	b.n	8002180 <StoreWidget::UpdateBreakTime(unsigned char)>
 80021b2:	bf00      	nop

080021b4 <StoreWidget::UpdateMabTime(unsigned char)>:
 80021b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80021b6:	2302      	movs	r3, #2
 80021b8:	2200      	movs	r2, #0
 80021ba:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80021be:	2301      	movs	r3, #1
 80021c0:	4806      	ldr	r0, [pc, #24]	; (80021dc <StoreWidget::UpdateMabTime(unsigned char)+0x28>)
 80021c2:	9300      	str	r3, [sp, #0]
 80021c4:	f88d 1017 	strb.w	r1, [sp, #23]
 80021c8:	2205      	movs	r2, #5
 80021ca:	210a      	movs	r1, #10
 80021cc:	6800      	ldr	r0, [r0, #0]
 80021ce:	f10d 0317 	add.w	r3, sp, #23
 80021d2:	f001 f80b 	bl	80031ec <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80021d6:	b007      	add	sp, #28
 80021d8:	f85d fb04 	ldr.w	pc, [sp], #4
 80021dc:	20001740 	andcs	r1, r0, r0, asr #14

080021e0 <non-virtual thunk to StoreWidget::UpdateMabTime(unsigned char)>:
 80021e0:	f1a0 0004 	sub.w	r0, r0, #4
 80021e4:	e7e6      	b.n	80021b4 <StoreWidget::UpdateMabTime(unsigned char)>
 80021e6:	bf00      	nop

080021e8 <StoreWidget::UpdateRefreshRate(unsigned char)>:
 80021e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80021ea:	2304      	movs	r3, #4
 80021ec:	2200      	movs	r2, #0
 80021ee:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80021f2:	2301      	movs	r3, #1
 80021f4:	4806      	ldr	r0, [pc, #24]	; (8002210 <StoreWidget::UpdateRefreshRate(unsigned char)+0x28>)
 80021f6:	9300      	str	r3, [sp, #0]
 80021f8:	f88d 1017 	strb.w	r1, [sp, #23]
 80021fc:	2206      	movs	r2, #6
 80021fe:	210a      	movs	r1, #10
 8002200:	6800      	ldr	r0, [r0, #0]
 8002202:	f10d 0317 	add.w	r3, sp, #23
 8002206:	f000 fff1 	bl	80031ec <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800220a:	b007      	add	sp, #28
 800220c:	f85d fb04 	ldr.w	pc, [sp], #4
 8002210:	20001740 	andcs	r1, r0, r0, asr #14

08002214 <non-virtual thunk to StoreWidget::UpdateRefreshRate(unsigned char)>:
 8002214:	f1a0 0004 	sub.w	r0, r0, #4
 8002218:	e7e6      	b.n	80021e8 <StoreWidget::UpdateRefreshRate(unsigned char)>
 800221a:	bf00      	nop
 800221c:	0000      	movs	r0, r0
	...

08002220 <WidgetConfiguration::Store(TWidgetConfiguration const*)>:
 8002220:	b510      	push	{r4, lr}
 8002222:	4b25      	ldr	r3, [pc, #148]	; (80022b8 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x98>)
 8002224:	4604      	mov	r4, r0
 8002226:	781a      	ldrb	r2, [r3, #0]
 8002228:	7880      	ldrb	r0, [r0, #2]
 800222a:	4282      	cmp	r2, r0
 800222c:	d013      	beq.n	8002256 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x36>
 800222e:	7018      	strb	r0, [r3, #0]
 8002230:	f7fe f9ae 	bl	8000590 <__aeabi_i2d>
 8002234:	a31e      	add	r3, pc, #120	; (adr r3, 80022b0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x90>)
 8002236:	e9d3 2300 	ldrd	r2, r3, [r3]
 800223a:	f7fe fa13 	bl	8000664 <__aeabi_dmul>
 800223e:	f7fe fc23 	bl	8000a88 <__aeabi_d2uiz>
 8002242:	4b1e      	ldr	r3, [pc, #120]	; (80022bc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>)
 8002244:	4601      	mov	r1, r0
 8002246:	6818      	ldr	r0, [r3, #0]
 8002248:	f000 fc72 	bl	8002b30 <Dmx::SetDmxBreakTime(unsigned int)>
 800224c:	4b1c      	ldr	r3, [pc, #112]	; (80022c0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 800224e:	78a1      	ldrb	r1, [r4, #2]
 8002250:	6818      	ldr	r0, [r3, #0]
 8002252:	f7ff ff95 	bl	8002180 <StoreWidget::UpdateBreakTime(unsigned char)>
 8002256:	4b1b      	ldr	r3, [pc, #108]	; (80022c4 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa4>)
 8002258:	78e0      	ldrb	r0, [r4, #3]
 800225a:	781a      	ldrb	r2, [r3, #0]
 800225c:	4282      	cmp	r2, r0
 800225e:	d013      	beq.n	8002288 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x68>
 8002260:	7018      	strb	r0, [r3, #0]
 8002262:	f7fe f995 	bl	8000590 <__aeabi_i2d>
 8002266:	a312      	add	r3, pc, #72	; (adr r3, 80022b0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x90>)
 8002268:	e9d3 2300 	ldrd	r2, r3, [r3]
 800226c:	f7fe f9fa 	bl	8000664 <__aeabi_dmul>
 8002270:	f7fe fc0a 	bl	8000a88 <__aeabi_d2uiz>
 8002274:	4b11      	ldr	r3, [pc, #68]	; (80022bc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>)
 8002276:	4601      	mov	r1, r0
 8002278:	6818      	ldr	r0, [r3, #0]
 800227a:	f000 fc63 	bl	8002b44 <Dmx::SetDmxMabTime(unsigned int)>
 800227e:	4b10      	ldr	r3, [pc, #64]	; (80022c0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 8002280:	78e1      	ldrb	r1, [r4, #3]
 8002282:	6818      	ldr	r0, [r3, #0]
 8002284:	f7ff ff96 	bl	80021b4 <StoreWidget::UpdateMabTime(unsigned char)>
 8002288:	4b0f      	ldr	r3, [pc, #60]	; (80022c8 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa8>)
 800228a:	7921      	ldrb	r1, [r4, #4]
 800228c:	781a      	ldrb	r2, [r3, #0]
 800228e:	428a      	cmp	r2, r1
 8002290:	d00d      	beq.n	80022ae <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x8e>
 8002292:	7019      	strb	r1, [r3, #0]
 8002294:	4b09      	ldr	r3, [pc, #36]	; (80022bc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>)
 8002296:	6818      	ldr	r0, [r3, #0]
 8002298:	b111      	cbz	r1, 80022a0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x80>
 800229a:	4b0c      	ldr	r3, [pc, #48]	; (80022cc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xac>)
 800229c:	fbb3 f1f1 	udiv	r1, r3, r1
 80022a0:	f000 fc16 	bl	8002ad0 <Dmx::SetDmxPeriodTime(unsigned int)>
 80022a4:	4b06      	ldr	r3, [pc, #24]	; (80022c0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 80022a6:	7921      	ldrb	r1, [r4, #4]
 80022a8:	6818      	ldr	r0, [r3, #0]
 80022aa:	f7ff ff9d 	bl	80021e8 <StoreWidget::UpdateRefreshRate(unsigned char)>
 80022ae:	bd10      	pop	{r4, pc}
 80022b0:	3d70a3d7 	ldclcc	3, cr10, [r0, #-860]!	; 0xfffffca4
 80022b4:	4025570a 	eormi	r5, r5, sl, lsl #14
 80022b8:	20000001 	andcs	r0, r0, r1
 80022bc:	20000724 	andcs	r0, r0, r4, lsr #14
 80022c0:	2000174c 	andcs	r1, r0, ip, asr #14
 80022c4:	20000000 	andcs	r0, r0, r0
 80022c8:	20000004 	andcs	r0, r0, r4
 80022cc:	000f4240 	andeq	r4, pc, r0, asr #4

080022d0 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>:
 80022d0:	4770      	bx	lr
	...

080022d4 <Rdm::Receive(unsigned int)>:
 80022d4:	4b02      	ldr	r3, [pc, #8]	; (80022e0 <Rdm::Receive(unsigned int)+0xc>)
 80022d6:	4601      	mov	r1, r0
 80022d8:	6818      	ldr	r0, [r3, #0]
 80022da:	f000 bcdd 	b.w	8002c98 <Dmx::RdmReceive(unsigned int)>
 80022de:	bf00      	nop
 80022e0:	20000724 	andcs	r0, r0, r4, lsr #14

080022e4 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>:
 80022e4:	2300      	movs	r3, #0
 80022e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80022ea:	4604      	mov	r4, r0
 80022ec:	460e      	mov	r6, r1
 80022ee:	4617      	mov	r7, r2
 80022f0:	4d0b      	ldr	r5, [pc, #44]	; (8002320 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)+0x3c>)
 80022f2:	461a      	mov	r2, r3
 80022f4:	4601      	mov	r1, r0
 80022f6:	6828      	ldr	r0, [r5, #0]
 80022f8:	f000 fade 	bl	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80022fc:	463b      	mov	r3, r7
 80022fe:	4632      	mov	r2, r6
 8002300:	4621      	mov	r1, r4
 8002302:	6828      	ldr	r0, [r5, #0]
 8002304:	f000 fc82 	bl	8002c0c <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>
 8002308:	2100      	movs	r1, #0
 800230a:	2004      	movs	r0, #4
 800230c:	f002 fe82 	bl	8005014 <udelay(unsigned int, unsigned int)>
 8002310:	2301      	movs	r3, #1
 8002312:	4621      	mov	r1, r4
 8002314:	6828      	ldr	r0, [r5, #0]
 8002316:	461a      	mov	r2, r3
 8002318:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800231c:	f000 bacc 	b.w	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8002320:	20000724 	andcs	r0, r0, r4, lsr #14

08002324 <USART2_IRQHandler>:
 8002324:	b510      	push	{r4, lr}
 8002326:	f3bf 8f5f 	dmb	sy
 800232a:	2408      	movs	r4, #8
 800232c:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 8002330:	498c      	ldr	r1, [pc, #560]	; (8002564 <USART2_IRQHandler+0x240>)
 8002332:	f8c1 4c10 	str.w	r4, [r1, #3088]	; 0xc10
 8002336:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 800233a:	f013 0f02 	tst.w	r3, #2
 800233e:	4b8a      	ldr	r3, [pc, #552]	; (8002568 <USART2_IRQHandler+0x244>)
 8002340:	d016      	beq.n	8002370 <USART2_IRQHandler+0x4c>
 8002342:	f8d2 0800 	ldr.w	r0, [r2, #2048]	; 0x800
 8002346:	f020 0002 	bic.w	r0, r0, #2
 800234a:	f8c2 0800 	str.w	r0, [r2, #2048]	; 0x800
 800234e:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8002352:	2200      	movs	r2, #0
 8002354:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8002358:	2202      	movs	r2, #2
 800235a:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800235e:	2310      	movs	r3, #16
 8002360:	f8c1 4c14 	str.w	r4, [r1, #3092]	; 0xc14
 8002364:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 8002368:	2320      	movs	r3, #32
 800236a:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 800236e:	bd10      	pop	{r4, pc}
 8002370:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8002374:	f8d3 020c 	ldr.w	r0, [r3, #524]	; 0x20c
 8002378:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800237c:	280a      	cmp	r0, #10
 800237e:	f200 80ec 	bhi.w	800255a <USART2_IRQHandler+0x236>
 8002382:	e8df f010 	tbh	[pc, r0, lsl #1]
 8002386:	00ea000b 	rsceq	r0, sl, fp
 800238a:	00ea0019 	rsceq	r0, sl, r9, lsl r0
 800238e:	005c0039 	subseq	r0, ip, r9, lsr r0
 8002392:	00870077 	addeq	r0, r7, r7, ror r0
 8002396:	00ba00a8 	adcseq	r0, sl, r8, lsr #1
 800239a:	210800ce 	smlabtcs	r8, lr, r0, r0
 800239e:	701a      	strb	r2, [r3, #0]
 80023a0:	2201      	movs	r2, #1
 80023a2:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 80023a6:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 80023aa:	2208      	movs	r2, #8
 80023ac:	4b6d      	ldr	r3, [pc, #436]	; (8002564 <USART2_IRQHandler+0x240>)
 80023ae:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80023b2:	f3bf 8f5f 	dmb	sy
 80023b6:	e7da      	b.n	800236e <USART2_IRQHandler+0x4a>
 80023b8:	b11a      	cbz	r2, 80023c2 <USART2_IRQHandler+0x9e>
 80023ba:	2acc      	cmp	r2, #204	; 0xcc
 80023bc:	d016      	beq.n	80023ec <USART2_IRQHandler+0xc8>
 80023be:	2200      	movs	r2, #0
 80023c0:	e065      	b.n	800248e <USART2_IRQHandler+0x16a>
 80023c2:	701a      	strb	r2, [r3, #0]
 80023c4:	2201      	movs	r2, #1
 80023c6:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80023ca:	4a68      	ldr	r2, [pc, #416]	; (800256c <USART2_IRQHandler+0x248>)
 80023cc:	6851      	ldr	r1, [r2, #4]
 80023ce:	3101      	adds	r1, #1
 80023d0:	6051      	str	r1, [r2, #4]
 80023d2:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80023d6:	f8d1 1424 	ldr.w	r1, [r1, #1060]	; 0x424
 80023da:	60d1      	str	r1, [r2, #12]
 80023dc:	2204      	movs	r2, #4
 80023de:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 80023e2:	2210      	movs	r2, #16
 80023e4:	4b5f      	ldr	r3, [pc, #380]	; (8002564 <USART2_IRQHandler+0x240>)
 80023e6:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 80023ea:	e7de      	b.n	80023aa <USART2_IRQHandler+0x86>
 80023ec:	701a      	strb	r2, [r3, #0]
 80023ee:	4a60      	ldr	r2, [pc, #384]	; (8002570 <USART2_IRQHandler+0x24c>)
 80023f0:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80023f4:	2205      	movs	r2, #5
 80023f6:	e7f2      	b.n	80023de <USART2_IRQHandler+0xba>
 80023f8:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 80023fc:	b288      	uxth	r0, r1
 80023fe:	541a      	strb	r2, [r3, r0]
 8002400:	1c4a      	adds	r2, r1, #1
 8002402:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8002406:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800240a:	d90b      	bls.n	8002424 <USART2_IRQHandler+0x100>
 800240c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002410:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8002414:	2200      	movs	r2, #0
 8002416:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800241a:	2210      	movs	r2, #16
 800241c:	4b51      	ldr	r3, [pc, #324]	; (8002564 <USART2_IRQHandler+0x240>)
 800241e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8002422:	e7c2      	b.n	80023aa <USART2_IRQHandler+0x86>
 8002424:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002428:	4850      	ldr	r0, [pc, #320]	; (800256c <USART2_IRQHandler+0x248>)
 800242a:	f8d2 1424 	ldr.w	r1, [r2, #1060]	; 0x424
 800242e:	68c3      	ldr	r3, [r0, #12]
 8002430:	60c1      	str	r1, [r0, #12]
 8002432:	ebc3 0341 	rsb	r3, r3, r1, lsl #1
 8002436:	3304      	adds	r3, #4
 8002438:	f8c2 3434 	str.w	r3, [r2, #1076]	; 0x434
 800243c:	e7b5      	b.n	80023aa <USART2_IRQHandler+0x86>
 800243e:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 8002442:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 8002446:	541a      	strb	r2, [r3, r0]
 8002448:	1c41      	adds	r1, r0, #1
 800244a:	3817      	subs	r0, #23
 800244c:	b289      	uxth	r1, r1
 800244e:	4422      	add	r2, r4
 8002450:	28e7      	cmp	r0, #231	; 0xe7
 8002452:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8002456:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 800245a:	d808      	bhi.n	800246e <USART2_IRQHandler+0x14a>
 800245c:	789a      	ldrb	r2, [r3, #2]
 800245e:	428a      	cmp	r2, r1
 8002460:	d105      	bne.n	800246e <USART2_IRQHandler+0x14a>
 8002462:	2206      	movs	r2, #6
 8002464:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002468:	2220      	movs	r2, #32
 800246a:	4b3e      	ldr	r3, [pc, #248]	; (8002564 <USART2_IRQHandler+0x240>)
 800246c:	e7bb      	b.n	80023e6 <USART2_IRQHandler+0xc2>
 800246e:	29ff      	cmp	r1, #255	; 0xff
 8002470:	d99b      	bls.n	80023aa <USART2_IRQHandler+0x86>
 8002472:	e7a4      	b.n	80023be <USART2_IRQHandler+0x9a>
 8002474:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8002478:	545a      	strb	r2, [r3, r1]
 800247a:	3101      	adds	r1, #1
 800247c:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8002480:	f8b3 1206 	ldrh.w	r1, [r3, #518]	; 0x206
 8002484:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 8002488:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 800248c:	2207      	movs	r2, #7
 800248e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002492:	e78a      	b.n	80023aa <USART2_IRQHandler+0x86>
 8002494:	2020      	movs	r0, #32
 8002496:	f8c1 0c14 	str.w	r0, [r1, #3092]	; 0xc14
 800249a:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 800249e:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 80024a2:	541a      	strb	r2, [r3, r0]
 80024a4:	1aa2      	subs	r2, r4, r2
 80024a6:	b292      	uxth	r2, r2
 80024a8:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 80024ac:	b912      	cbnz	r2, 80024b4 <USART2_IRQHandler+0x190>
 80024ae:	785a      	ldrb	r2, [r3, #1]
 80024b0:	2a01      	cmp	r2, #1
 80024b2:	d003      	beq.n	80024bc <USART2_IRQHandler+0x198>
 80024b4:	2200      	movs	r2, #0
 80024b6:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80024ba:	e780      	b.n	80023be <USART2_IRQHandler+0x9a>
 80024bc:	3001      	adds	r0, #1
 80024be:	4a2d      	ldr	r2, [pc, #180]	; (8002574 <USART2_IRQHandler+0x250>)
 80024c0:	f440 4080 	orr.w	r0, r0, #16384	; 0x4000
 80024c4:	f8a3 0204 	strh.w	r0, [r3, #516]	; 0x204
 80024c8:	6850      	ldr	r0, [r2, #4]
 80024ca:	4a2b      	ldr	r2, [pc, #172]	; (8002578 <USART2_IRQHandler+0x254>)
 80024cc:	6010      	str	r0, [r2, #0]
 80024ce:	2210      	movs	r2, #16
 80024d0:	f8c1 2c14 	str.w	r2, [r1, #3092]	; 0xc14
 80024d4:	e773      	b.n	80023be <USART2_IRQHandler+0x9a>
 80024d6:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 80024da:	2aaa      	cmp	r2, #170	; 0xaa
 80024dc:	545a      	strb	r2, [r3, r1]
 80024de:	f101 0101 	add.w	r1, r1, #1
 80024e2:	b289      	uxth	r1, r1
 80024e4:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 80024e8:	d002      	beq.n	80024f0 <USART2_IRQHandler+0x1cc>
 80024ea:	2909      	cmp	r1, #9
 80024ec:	f47f af5d 	bne.w	80023aa <USART2_IRQHandler+0x86>
 80024f0:	2200      	movs	r2, #0
 80024f2:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 80024f6:	2209      	movs	r2, #9
 80024f8:	e7c9      	b.n	800248e <USART2_IRQHandler+0x16a>
 80024fa:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 80024fe:	545a      	strb	r2, [r3, r1]
 8002500:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 8002504:	3101      	adds	r1, #1
 8002506:	3201      	adds	r2, #1
 8002508:	b292      	uxth	r2, r2
 800250a:	2a0c      	cmp	r2, #12
 800250c:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8002510:	d002      	beq.n	8002518 <USART2_IRQHandler+0x1f4>
 8002512:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8002516:	e748      	b.n	80023aa <USART2_IRQHandler+0x86>
 8002518:	2200      	movs	r2, #0
 800251a:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800251e:	220a      	movs	r2, #10
 8002520:	e7b5      	b.n	800248e <USART2_IRQHandler+0x16a>
 8002522:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8002526:	545a      	strb	r2, [r3, r1]
 8002528:	1c4a      	adds	r2, r1, #1
 800252a:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 800252e:	b292      	uxth	r2, r2
 8002530:	3101      	adds	r1, #1
 8002532:	b289      	uxth	r1, r1
 8002534:	2904      	cmp	r1, #4
 8002536:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800253a:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 800253e:	f47f af34 	bne.w	80023aa <USART2_IRQHandler+0x86>
 8002542:	2100      	movs	r1, #0
 8002544:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002548:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 800254c:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8002550:	4b08      	ldr	r3, [pc, #32]	; (8002574 <USART2_IRQHandler+0x250>)
 8002552:	685a      	ldr	r2, [r3, #4]
 8002554:	4b08      	ldr	r3, [pc, #32]	; (8002578 <USART2_IRQHandler+0x254>)
 8002556:	601a      	str	r2, [r3, #0]
 8002558:	e727      	b.n	80023aa <USART2_IRQHandler+0x86>
 800255a:	2200      	movs	r2, #0
 800255c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8002560:	e795      	b.n	800248e <USART2_IRQHandler+0x16a>
 8002562:	bf00      	nop
 8002564:	40010000 	andmi	r0, r1, r0
 8002568:	200000f8 	strdcs	r0, [r0], -r8
 800256c:	20000714 	andcs	r0, r0, r4, lsl r7
 8002570:	00cc0001 	sbceq	r0, ip, r1
 8002574:	e0001000 	and	r1, r0, r0
 8002578:	20000728 	andcs	r0, r0, r8, lsr #14

0800257c <TIMER1_IRQHandler>:
 800257c:	b538      	push	{r3, r4, r5, lr}
 800257e:	f3bf 8f5f 	dmb	sy
 8002582:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002586:	2008      	movs	r0, #8
 8002588:	691c      	ldr	r4, [r3, #16]
 800258a:	4923      	ldr	r1, [pc, #140]	; (8002618 <TIMER1_IRQHandler+0x9c>)
 800258c:	4a23      	ldr	r2, [pc, #140]	; (800261c <TIMER1_IRQHandler+0xa0>)
 800258e:	8813      	ldrh	r3, [r2, #0]
 8002590:	f8c1 0c10 	str.w	r0, [r1, #3088]	; 0xc10
 8002594:	07a1      	lsls	r1, r4, #30
 8002596:	d51b      	bpl.n	80025d0 <TIMER1_IRQHandler+0x54>
 8002598:	07dd      	lsls	r5, r3, #31
 800259a:	d50d      	bpl.n	80025b8 <TIMER1_IRQHandler+0x3c>
 800259c:	4d20      	ldr	r5, [pc, #128]	; (8002620 <TIMER1_IRQHandler+0xa4>)
 800259e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80025a2:	8013      	strh	r3, [r2, #0]
 80025a4:	2110      	movs	r1, #16
 80025a6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80025aa:	2203      	movs	r2, #3
 80025ac:	4628      	mov	r0, r5
 80025ae:	f001 ff8b 	bl	80044c8 <gpio_init>
 80025b2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80025b6:	616b      	str	r3, [r5, #20]
 80025b8:	4621      	mov	r1, r4
 80025ba:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80025be:	f002 f9c2 	bl	8004946 <timer_interrupt_flag_clear>
 80025c2:	2208      	movs	r2, #8
 80025c4:	4b14      	ldr	r3, [pc, #80]	; (8002618 <TIMER1_IRQHandler+0x9c>)
 80025c6:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80025ca:	f3bf 8f5f 	dmb	sy
 80025ce:	bd38      	pop	{r3, r4, r5, pc}
 80025d0:	0760      	lsls	r0, r4, #29
 80025d2:	d509      	bpl.n	80025e8 <TIMER1_IRQHandler+0x6c>
 80025d4:	05d9      	lsls	r1, r3, #23
 80025d6:	d5ef      	bpl.n	80025b8 <TIMER1_IRQHandler+0x3c>
 80025d8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80025dc:	2203      	movs	r2, #3
 80025de:	2118      	movs	r1, #24
 80025e0:	480f      	ldr	r0, [pc, #60]	; (8002620 <TIMER1_IRQHandler+0xa4>)
 80025e2:	f001 ff71 	bl	80044c8 <gpio_init>
 80025e6:	e7e7      	b.n	80025b8 <TIMER1_IRQHandler+0x3c>
 80025e8:	0722      	lsls	r2, r4, #28
 80025ea:	d5e5      	bpl.n	80025b8 <TIMER1_IRQHandler+0x3c>
 80025ec:	05db      	lsls	r3, r3, #23
 80025ee:	d5e3      	bpl.n	80025b8 <TIMER1_IRQHandler+0x3c>
 80025f0:	4b0c      	ldr	r3, [pc, #48]	; (8002624 <TIMER1_IRQHandler+0xa8>)
 80025f2:	2180      	movs	r1, #128	; 0x80
 80025f4:	69da      	ldr	r2, [r3, #28]
 80025f6:	480c      	ldr	r0, [pc, #48]	; (8002628 <TIMER1_IRQHandler+0xac>)
 80025f8:	f022 0201 	bic.w	r2, r2, #1
 80025fc:	61da      	str	r2, [r3, #28]
 80025fe:	4a0b      	ldr	r2, [pc, #44]	; (800262c <TIMER1_IRQHandler+0xb0>)
 8002600:	629a      	str	r2, [r3, #40]	; 0x28
 8002602:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 8002606:	621a      	str	r2, [r3, #32]
 8002608:	69da      	ldr	r2, [r3, #28]
 800260a:	f042 0201 	orr.w	r2, r2, #1
 800260e:	61da      	str	r2, [r3, #28]
 8002610:	f002 fa38 	bl	8004a84 <usart_dma_transmit_config>
 8002614:	e7d0      	b.n	80025b8 <TIMER1_IRQHandler+0x3c>
 8002616:	bf00      	nop
 8002618:	40010000 	andmi	r0, r1, r0
 800261c:	20000712 	andcs	r0, r0, r2, lsl r7
 8002620:	40011000 	andmi	r1, r1, r0
 8002624:	40020000 	andmi	r0, r2, r0
 8002628:	40004800 	andmi	r4, r0, r0, lsl #16
 800262c:	20000308 	andcs	r0, r0, r8, lsl #6

08002630 <TIMER2_IRQHandler>:
 8002630:	b508      	push	{r3, lr}
 8002632:	f3bf 8f5f 	dmb	sy
 8002636:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800263a:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 800263e:	078b      	lsls	r3, r1, #30
 8002640:	d511      	bpl.n	8002666 <TIMER2_IRQHandler+0x36>
 8002642:	4b0c      	ldr	r3, [pc, #48]	; (8002674 <TIMER2_IRQHandler+0x44>)
 8002644:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8002648:	2a04      	cmp	r2, #4
 800264a:	d10c      	bne.n	8002666 <TIMER2_IRQHandler+0x36>
 800264c:	2200      	movs	r2, #0
 800264e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002652:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8002656:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800265a:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800265e:	2210      	movs	r2, #16
 8002660:	4b05      	ldr	r3, [pc, #20]	; (8002678 <TIMER2_IRQHandler+0x48>)
 8002662:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8002666:	4805      	ldr	r0, [pc, #20]	; (800267c <TIMER2_IRQHandler+0x4c>)
 8002668:	f002 f96d 	bl	8004946 <timer_interrupt_flag_clear>
 800266c:	f3bf 8f5f 	dmb	sy
 8002670:	bd08      	pop	{r3, pc}
 8002672:	bf00      	nop
 8002674:	200000f8 	strdcs	r0, [r0], -r8
 8002678:	40010000 	andmi	r0, r1, r0
 800267c:	40000400 	andmi	r0, r0, r0, lsl #8

08002680 <TIMER3_IRQHandler>:
 8002680:	b508      	push	{r3, lr}
 8002682:	f3bf 8f5f 	dmb	sy
 8002686:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800268a:	4804      	ldr	r0, [pc, #16]	; (800269c <TIMER3_IRQHandler+0x1c>)
 800268c:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 8002690:	f002 f959 	bl	8004946 <timer_interrupt_flag_clear>
 8002694:	f3bf 8f5f 	dmb	sy
 8002698:	bd08      	pop	{r3, pc}
 800269a:	bf00      	nop
 800269c:	40000800 	andmi	r0, r0, r0, lsl #16

080026a0 <TIMER6_IRQHandler>:
 80026a0:	b508      	push	{r3, lr}
 80026a2:	f3bf 8f5f 	dmb	sy
 80026a6:	4b07      	ldr	r3, [pc, #28]	; (80026c4 <TIMER6_IRQHandler+0x24>)
 80026a8:	4807      	ldr	r0, [pc, #28]	; (80026c8 <TIMER6_IRQHandler+0x28>)
 80026aa:	685a      	ldr	r2, [r3, #4]
 80026ac:	6899      	ldr	r1, [r3, #8]
 80026ae:	1a52      	subs	r2, r2, r1
 80026b0:	601a      	str	r2, [r3, #0]
 80026b2:	685a      	ldr	r2, [r3, #4]
 80026b4:	2101      	movs	r1, #1
 80026b6:	609a      	str	r2, [r3, #8]
 80026b8:	f002 f945 	bl	8004946 <timer_interrupt_flag_clear>
 80026bc:	f3bf 8f5f 	dmb	sy
 80026c0:	bd08      	pop	{r3, pc}
 80026c2:	bf00      	nop
 80026c4:	20000714 	andcs	r0, r0, r4, lsl r7
 80026c8:	40001400 	andmi	r1, r0, r0, lsl #8

080026cc <Dmx::ClearData(unsigned int)>:
 80026cc:	f44f 7301 	mov.w	r3, #516	; 0x204
 80026d0:	b510      	push	{r4, lr}
 80026d2:	2400      	movs	r4, #0
 80026d4:	4a08      	ldr	r2, [pc, #32]	; (80026f8 <Dmx::ClearData(unsigned int)+0x2c>)
 80026d6:	fb03 2301 	mla	r3, r3, r1, r2
 80026da:	f203 2002 	addw	r0, r3, #514	; 0x202
 80026de:	f823 4b02 	strh.w	r4, [r3], #2
 80026e2:	4283      	cmp	r3, r0
 80026e4:	d1fb      	bne.n	80026de <Dmx::ClearData(unsigned int)+0x12>
 80026e6:	f44f 7301 	mov.w	r3, #516	; 0x204
 80026ea:	fb03 2201 	mla	r2, r3, r1, r2
 80026ee:	f240 2301 	movw	r3, #513	; 0x201
 80026f2:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 80026f6:	bd10      	pop	{r4, pc}
 80026f8:	20000308 	andcs	r0, r0, r8, lsl #6

080026fc <Dmx::StartData(unsigned int, unsigned int)>:
 80026fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80026fe:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8002702:	6943      	ldr	r3, [r0, #20]
 8002704:	460c      	mov	r4, r1
 8002706:	4615      	mov	r5, r2
 8002708:	b085      	sub	sp, #20
 800270a:	2b00      	cmp	r3, #0
 800270c:	d16a      	bne.n	80027e4 <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 800270e:	4e47      	ldr	r6, [pc, #284]	; (800282c <Dmx::StartData(unsigned int, unsigned int)+0x130>)
 8002710:	8834      	ldrh	r4, [r6, #0]
 8002712:	2c00      	cmp	r4, #0
 8002714:	d15b      	bne.n	80027ce <Dmx::StartData(unsigned int, unsigned int)+0xd2>
 8002716:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 800271a:	f001 ff67 	bl	80045ec <rcu_periph_clock_enable>
 800271e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002722:	f002 f819 	bl	8004758 <timer_deinit>
 8002726:	236b      	movs	r3, #107	; 0x6b
 8002728:	9300      	str	r3, [sp, #0]
 800272a:	4b41      	ldr	r3, [pc, #260]	; (8002830 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 800272c:	4669      	mov	r1, sp
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002734:	9302      	str	r3, [sp, #8]
 8002736:	f8ad 4004 	strh.w	r4, [sp, #4]
 800273a:	f8ad 400c 	strh.w	r4, [sp, #12]
 800273e:	f88d 400e 	strb.w	r4, [sp, #14]
 8002742:	f002 f86b 	bl	800481c <timer_init>
 8002746:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800274a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800274e:	f002 f8fd 	bl	800494c <timer_flag_clear>
 8002752:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002756:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800275a:	f002 f8f4 	bl	8004946 <timer_interrupt_flag_clear>
 800275e:	2210      	movs	r2, #16
 8002760:	4621      	mov	r1, r4
 8002762:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002766:	f002 f8b6 	bl	80048d6 <timer_channel_output_mode_config>
 800276a:	2210      	movs	r2, #16
 800276c:	2101      	movs	r1, #1
 800276e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002772:	f002 f8b0 	bl	80048d6 <timer_channel_output_mode_config>
 8002776:	4f2f      	ldr	r7, [pc, #188]	; (8002834 <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 8002778:	2210      	movs	r2, #16
 800277a:	2102      	movs	r1, #2
 800277c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002780:	f002 f8a9 	bl	80048d6 <timer_channel_output_mode_config>
 8002784:	4622      	mov	r2, r4
 8002786:	4621      	mov	r1, r4
 8002788:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800278c:	f002 f8c9 	bl	8004922 <timer_channel_output_pulse_value_config>
 8002790:	2101      	movs	r1, #1
 8002792:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002796:	883a      	ldrh	r2, [r7, #0]
 8002798:	f002 f8c3 	bl	8004922 <timer_channel_output_pulse_value_config>
 800279c:	4b26      	ldr	r3, [pc, #152]	; (8002838 <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 800279e:	683a      	ldr	r2, [r7, #0]
 80027a0:	681b      	ldr	r3, [r3, #0]
 80027a2:	2102      	movs	r1, #2
 80027a4:	441a      	add	r2, r3
 80027a6:	b292      	uxth	r2, r2
 80027a8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80027ac:	f002 f8b9 	bl	8004922 <timer_channel_output_pulse_value_config>
 80027b0:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80027b4:	210e      	movs	r1, #14
 80027b6:	f002 f8c2 	bl	800493e <timer_interrupt_enable>
 80027ba:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80027be:	4b1f      	ldr	r3, [pc, #124]	; (800283c <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 80027c0:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80027c4:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 80027c8:	601a      	str	r2, [r3, #0]
 80027ca:	f002 f87f 	bl	80048cc <timer_enable>
 80027ce:	2201      	movs	r2, #1
 80027d0:	8831      	ldrh	r1, [r6, #0]
 80027d2:	fa02 f305 	lsl.w	r3, r2, r5
 80027d6:	430b      	orrs	r3, r1
 80027d8:	8033      	strh	r3, [r6, #0]
 80027da:	4b19      	ldr	r3, [pc, #100]	; (8002840 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 80027dc:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80027e0:	b005      	add	sp, #20
 80027e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80027e4:	f44f 7204 	mov.w	r2, #528	; 0x210
 80027e8:	4b16      	ldr	r3, [pc, #88]	; (8002844 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 80027ea:	fb02 3305 	mla	r3, r2, r5, r3
 80027ee:	2200      	movs	r2, #0
 80027f0:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 80027f4:	2107      	movs	r1, #7
 80027f6:	4620      	mov	r0, r4
 80027f8:	f002 f94a 	bl	8004a90 <usart_flag_get>
 80027fc:	2800      	cmp	r0, #0
 80027fe:	d0f9      	beq.n	80027f4 <Dmx::StartData(unsigned int, unsigned int)+0xf8>
 8002800:	4620      	mov	r0, r4
 8002802:	4911      	ldr	r1, [pc, #68]	; (8002848 <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 8002804:	f002 f966 	bl	8004ad4 <usart_interrupt_flag_clear>
 8002808:	f240 3105 	movw	r1, #773	; 0x305
 800280c:	4620      	mov	r0, r4
 800280e:	f002 f94a 	bl	8004aa6 <usart_interrupt_enable>
 8002812:	2202      	movs	r2, #2
 8002814:	4b0a      	ldr	r3, [pc, #40]	; (8002840 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 8002816:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800281a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800281e:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8002822:	f043 0302 	orr.w	r3, r3, #2
 8002826:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800282a:	e7d9      	b.n	80027e0 <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 800282c:	20000712 	andcs	r0, r0, r2, lsl r7
 8002830:	20000008 	andcs	r0, r0, r8
 8002834:	20000010 	andcs	r0, r0, r0, lsl r0
 8002838:	2000000c 	andcs	r0, r0, ip
 800283c:	e000e100 	and	lr, r0, r0, lsl #2
 8002840:	2000050c 	andcs	r0, r0, ip, lsl #10
 8002844:	200000f8 	strdcs	r0, [r0], -r8
 8002848:	00050305 	andeq	r0, r5, r5, lsl #6

0800284c <Dmx::StopData(unsigned int, unsigned int)>:
 800284c:	b538      	push	{r3, r4, r5, lr}
 800284e:	4d17      	ldr	r5, [pc, #92]	; (80028ac <Dmx::StopData(unsigned int, unsigned int)+0x60>)
 8002850:	4614      	mov	r4, r2
 8002852:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8002856:	4603      	mov	r3, r0
 8002858:	4608      	mov	r0, r1
 800285a:	b182      	cbz	r2, 800287e <Dmx::StopData(unsigned int, unsigned int)+0x32>
 800285c:	695b      	ldr	r3, [r3, #20]
 800285e:	b97b      	cbnz	r3, 8002880 <Dmx::StopData(unsigned int, unsigned int)+0x34>
 8002860:	2201      	movs	r2, #1
 8002862:	4913      	ldr	r1, [pc, #76]	; (80028b0 <Dmx::StopData(unsigned int, unsigned int)+0x64>)
 8002864:	f104 0308 	add.w	r3, r4, #8
 8002868:	fa02 f303 	lsl.w	r3, r2, r3
 800286c:	40a2      	lsls	r2, r4
 800286e:	4313      	orrs	r3, r2
 8002870:	880a      	ldrh	r2, [r1, #0]
 8002872:	ea22 0303 	bic.w	r3, r2, r3
 8002876:	800b      	strh	r3, [r1, #0]
 8002878:	2300      	movs	r3, #0
 800287a:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 800287e:	bd38      	pop	{r3, r4, r5, pc}
 8002880:	f240 3105 	movw	r1, #773	; 0x305
 8002884:	f002 f91a 	bl	8004abc <usart_interrupt_disable>
 8002888:	f44f 7204 	mov.w	r2, #528	; 0x210
 800288c:	4b09      	ldr	r3, [pc, #36]	; (80028b4 <Dmx::StopData(unsigned int, unsigned int)+0x68>)
 800288e:	fb02 3304 	mla	r3, r2, r4, r3
 8002892:	2200      	movs	r2, #0
 8002894:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002898:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800289c:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 80028a0:	f023 0302 	bic.w	r3, r3, #2
 80028a4:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 80028a8:	e7e6      	b.n	8002878 <Dmx::StopData(unsigned int, unsigned int)+0x2c>
 80028aa:	bf00      	nop
 80028ac:	2000050c 	andcs	r0, r0, ip, lsl #10
 80028b0:	20000712 	andcs	r0, r0, r2, lsl r7
 80028b4:	200000f8 	strdcs	r0, [r0], -r8

080028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 80028b8:	b570      	push	{r4, r5, r6, lr}
 80028ba:	461d      	mov	r5, r3
 80028bc:	6943      	ldr	r3, [r0, #20]
 80028be:	4606      	mov	r6, r0
 80028c0:	4293      	cmp	r3, r2
 80028c2:	4614      	mov	r4, r2
 80028c4:	d014      	beq.n	80028f0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 80028c6:	6142      	str	r2, [r0, #20]
 80028c8:	4910      	ldr	r1, [pc, #64]	; (800290c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 80028ca:	2200      	movs	r2, #0
 80028cc:	f7ff ffbe 	bl	800284c <Dmx::StopData(unsigned int, unsigned int)>
 80028d0:	b934      	cbnz	r4, 80028e0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 80028d2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80028d6:	4b0e      	ldr	r3, [pc, #56]	; (8002910 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 80028d8:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 80028dc:	b94d      	cbnz	r5, 80028f2 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 80028de:	bd70      	pop	{r4, r5, r6, pc}
 80028e0:	2c01      	cmp	r4, #1
 80028e2:	d1fb      	bne.n	80028dc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 80028e4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80028e8:	4b09      	ldr	r3, [pc, #36]	; (8002910 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 80028ea:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80028ee:	e7f5      	b.n	80028dc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 80028f0:	b135      	cbz	r5, 8002900 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 80028f2:	4630      	mov	r0, r6
 80028f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80028f8:	2200      	movs	r2, #0
 80028fa:	4904      	ldr	r1, [pc, #16]	; (800290c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 80028fc:	f7ff befe 	b.w	80026fc <Dmx::StartData(unsigned int, unsigned int)>
 8002900:	462a      	mov	r2, r5
 8002902:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002906:	4901      	ldr	r1, [pc, #4]	; (800290c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8002908:	f7ff bfa0 	b.w	800284c <Dmx::StopData(unsigned int, unsigned int)>
 800290c:	40004800 	andmi	r4, r0, r0, lsl #16
 8002910:	40010000 	andmi	r0, r1, r0

08002914 <Dmx::Dmx()>:
 8002914:	225c      	movs	r2, #92	; 0x5c
 8002916:	230c      	movs	r3, #12
 8002918:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800291c:	e9c0 2300 	strd	r2, r3, [r0]
 8002920:	f246 13a8 	movw	r3, #25000	; 0x61a8
 8002924:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8002928:	f44f 7300 	mov.w	r3, #512	; 0x200
 800292c:	2400      	movs	r4, #0
 800292e:	4605      	mov	r5, r0
 8002930:	8203      	strh	r3, [r0, #16]
 8002932:	4b5d      	ldr	r3, [pc, #372]	; (8002aa8 <Dmx::Dmx()+0x194>)
 8002934:	b08b      	sub	sp, #44	; 0x2c
 8002936:	6018      	str	r0, [r3, #0]
 8002938:	4b5c      	ldr	r3, [pc, #368]	; (8002aac <Dmx::Dmx()+0x198>)
 800293a:	2203      	movs	r2, #3
 800293c:	801c      	strh	r4, [r3, #0]
 800293e:	2110      	movs	r1, #16
 8002940:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002944:	485a      	ldr	r0, [pc, #360]	; (8002ab0 <Dmx::Dmx()+0x19c>)
 8002946:	f001 fdbf 	bl	80044c8 <gpio_init>
 800294a:	4621      	mov	r1, r4
 800294c:	4628      	mov	r0, r5
 800294e:	f7ff febd 	bl	80026cc <Dmx::ClearData(unsigned int)>
 8002952:	4b58      	ldr	r3, [pc, #352]	; (8002ab4 <Dmx::Dmx()+0x1a0>)
 8002954:	2201      	movs	r2, #1
 8002956:	4628      	mov	r0, r5
 8002958:	601c      	str	r4, [r3, #0]
 800295a:	4623      	mov	r3, r4
 800295c:	f7ff ffac 	bl	80028b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8002960:	4b55      	ldr	r3, [pc, #340]	; (8002ab8 <Dmx::Dmx()+0x1a4>)
 8002962:	4e56      	ldr	r6, [pc, #344]	; (8002abc <Dmx::Dmx()+0x1a8>)
 8002964:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 8002968:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800296c:	f001 fe3e 	bl	80045ec <rcu_periph_clock_enable>
 8002970:	f240 5001 	movw	r0, #1281	; 0x501
 8002974:	f001 fe3a 	bl	80045ec <rcu_periph_clock_enable>
 8002978:	4630      	mov	r0, r6
 800297a:	2101      	movs	r1, #1
 800297c:	f001 fca4 	bl	80042c8 <dma_deinit>
 8002980:	4b4f      	ldr	r3, [pc, #316]	; (8002ac0 <Dmx::Dmx()+0x1ac>)
 8002982:	2701      	movs	r7, #1
 8002984:	e9cd 3403 	strd	r3, r4, [sp, #12]
 8002988:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800298c:	9308      	str	r3, [sp, #32]
 800298e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002992:	aa03      	add	r2, sp, #12
 8002994:	4639      	mov	r1, r7
 8002996:	4630      	mov	r0, r6
 8002998:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800299c:	9406      	str	r4, [sp, #24]
 800299e:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 80029a2:	f001 fcad 	bl	8004300 <dma_init>
 80029a6:	4639      	mov	r1, r7
 80029a8:	4630      	mov	r0, r6
 80029aa:	f001 fce3 	bl	8004374 <dma_circulation_disable>
 80029ae:	4639      	mov	r1, r7
 80029b0:	4630      	mov	r0, r6
 80029b2:	f001 fcef 	bl	8004394 <dma_memory_to_memory_disable>
 80029b6:	f5a6 36fe 	sub.w	r6, r6, #130048	; 0x1fc00
 80029ba:	f240 7001 	movw	r0, #1793	; 0x701
 80029be:	f001 fe15 	bl	80045ec <rcu_periph_clock_enable>
 80029c2:	4630      	mov	r0, r6
 80029c4:	f001 fec8 	bl	8004758 <timer_deinit>
 80029c8:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 80029cc:	236b      	movs	r3, #107	; 0x6b
 80029ce:	4630      	mov	r0, r6
 80029d0:	a903      	add	r1, sp, #12
 80029d2:	9303      	str	r3, [sp, #12]
 80029d4:	f8ad 4010 	strh.w	r4, [sp, #16]
 80029d8:	f8cd 9014 	str.w	r9, [sp, #20]
 80029dc:	f8ad 4018 	strh.w	r4, [sp, #24]
 80029e0:	f88d 401a 	strb.w	r4, [sp, #26]
 80029e4:	f001 ff1a 	bl	800481c <timer_init>
 80029e8:	4649      	mov	r1, r9
 80029ea:	4630      	mov	r0, r6
 80029ec:	f001 ffae 	bl	800494c <timer_flag_clear>
 80029f0:	4649      	mov	r1, r9
 80029f2:	4630      	mov	r0, r6
 80029f4:	f001 ffa7 	bl	8004946 <timer_interrupt_flag_clear>
 80029f8:	4621      	mov	r1, r4
 80029fa:	4630      	mov	r0, r6
 80029fc:	2210      	movs	r2, #16
 80029fe:	f001 ff6a 	bl	80048d6 <timer_channel_output_mode_config>
 8002a02:	4639      	mov	r1, r7
 8002a04:	4630      	mov	r0, r6
 8002a06:	2210      	movs	r2, #16
 8002a08:	f001 ff65 	bl	80048d6 <timer_channel_output_mode_config>
 8002a0c:	4630      	mov	r0, r6
 8002a0e:	2210      	movs	r2, #16
 8002a10:	2102      	movs	r1, #2
 8002a12:	f001 ff60 	bl	80048d6 <timer_channel_output_mode_config>
 8002a16:	2210      	movs	r2, #16
 8002a18:	2103      	movs	r1, #3
 8002a1a:	4630      	mov	r0, r6
 8002a1c:	f001 ff5b 	bl	80048d6 <timer_channel_output_mode_config>
 8002a20:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8002a24:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8002ac4 <Dmx::Dmx()+0x1b0>
 8002a28:	4630      	mov	r0, r6
 8002a2a:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 8002a2e:	f8c8 3000 	str.w	r3, [r8]
 8002a32:	f506 5680 	add.w	r6, r6, #4096	; 0x1000
 8002a36:	f001 ff49 	bl	80048cc <timer_enable>
 8002a3a:	f240 7005 	movw	r0, #1797	; 0x705
 8002a3e:	f001 fdd5 	bl	80045ec <rcu_periph_clock_enable>
 8002a42:	4630      	mov	r0, r6
 8002a44:	f001 fe88 	bl	8004758 <timer_deinit>
 8002a48:	f642 232f 	movw	r3, #10799	; 0x2a2f
 8002a4c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002a50:	f242 7310 	movw	r3, #10000	; 0x2710
 8002a54:	4630      	mov	r0, r6
 8002a56:	a903      	add	r1, sp, #12
 8002a58:	9305      	str	r3, [sp, #20]
 8002a5a:	f001 fedf 	bl	800481c <timer_init>
 8002a5e:	4649      	mov	r1, r9
 8002a60:	4630      	mov	r0, r6
 8002a62:	f001 ff73 	bl	800494c <timer_flag_clear>
 8002a66:	4649      	mov	r1, r9
 8002a68:	4630      	mov	r0, r6
 8002a6a:	f001 ff6c 	bl	8004946 <timer_interrupt_flag_clear>
 8002a6e:	4639      	mov	r1, r7
 8002a70:	4630      	mov	r0, r6
 8002a72:	f001 ff64 	bl	800493e <timer_interrupt_enable>
 8002a76:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8002a7a:	4630      	mov	r0, r6
 8002a7c:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 8002a80:	f8c8 3004 	str.w	r3, [r8, #4]
 8002a84:	f001 ff22 	bl	80048cc <timer_enable>
 8002a88:	2302      	movs	r3, #2
 8002a8a:	2208      	movs	r2, #8
 8002a8c:	9300      	str	r3, [sp, #0]
 8002a8e:	490e      	ldr	r1, [pc, #56]	; (8002ac8 <Dmx::Dmx()+0x1b4>)
 8002a90:	4623      	mov	r3, r4
 8002a92:	480e      	ldr	r0, [pc, #56]	; (8002acc <Dmx::Dmx()+0x1b8>)
 8002a94:	f002 f9d0 	bl	8004e38 <gd32_uart_begin>
 8002a98:	2380      	movs	r3, #128	; 0x80
 8002a9a:	4628      	mov	r0, r5
 8002a9c:	f8c8 3004 	str.w	r3, [r8, #4]
 8002aa0:	b00b      	add	sp, #44	; 0x2c
 8002aa2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002aa6:	bf00      	nop
 8002aa8:	20000724 	andcs	r0, r0, r4, lsr #14
 8002aac:	20000712 	andcs	r0, r0, r2, lsl r7
 8002ab0:	40010c00 	andmi	r0, r1, r0, lsl #24
 8002ab4:	2000050c 	andcs	r0, r0, ip, lsl #10
 8002ab8:	200000f8 	strdcs	r0, [r0], -r8
 8002abc:	40020000 	andmi	r0, r2, r0
 8002ac0:	40004804 	andmi	r4, r0, r4, lsl #16
 8002ac4:	e000e100 	and	lr, r0, r0, lsl #2
 8002ac8:	0003d090 	muleq	r3, r0, r0
 8002acc:	40004800 	andmi	r4, r0, r0, lsl #16

08002ad0 <Dmx::SetDmxPeriodTime(unsigned int)>:
 8002ad0:	4b13      	ldr	r3, [pc, #76]	; (8002b20 <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 8002ad2:	b570      	push	{r4, r5, r6, lr}
 8002ad4:	60c1      	str	r1, [r0, #12]
 8002ad6:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 8002ada:	232c      	movs	r3, #44	; 0x2c
 8002adc:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 8002ae0:	4d10      	ldr	r5, [pc, #64]	; (8002b24 <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 8002ae2:	4c11      	ldr	r4, [pc, #68]	; (8002b28 <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 8002ae4:	4358      	muls	r0, r3
 8002ae6:	682a      	ldr	r2, [r5, #0]
 8002ae8:	6823      	ldr	r3, [r4, #0]
 8002aea:	4413      	add	r3, r2
 8002aec:	4403      	add	r3, r0
 8002aee:	42b3      	cmp	r3, r6
 8002af0:	d908      	bls.n	8002b04 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 8002af2:	2ab0      	cmp	r2, #176	; 0xb0
 8002af4:	4613      	mov	r3, r2
 8002af6:	bf28      	it	cs
 8002af8:	23b0      	movcs	r3, #176	; 0xb0
 8002afa:	220c      	movs	r2, #12
 8002afc:	602b      	str	r3, [r5, #0]
 8002afe:	4413      	add	r3, r2
 8002b00:	6022      	str	r2, [r4, #0]
 8002b02:	4403      	add	r3, r0
 8002b04:	b109      	cbz	r1, 8002b0a <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 8002b06:	428b      	cmp	r3, r1
 8002b08:	d906      	bls.n	8002b18 <Dmx::SetDmxPeriodTime(unsigned int)+0x48>
 8002b0a:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 8002b0e:	f240 43b4 	movw	r3, #1204	; 0x4b4
 8002b12:	4299      	cmp	r1, r3
 8002b14:	bf38      	it	cc
 8002b16:	4619      	movcc	r1, r3
 8002b18:	4b04      	ldr	r3, [pc, #16]	; (8002b2c <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 8002b1a:	6019      	str	r1, [r3, #0]
 8002b1c:	bd70      	pop	{r4, r5, r6, pc}
 8002b1e:	bf00      	nop
 8002b20:	20000308 	andcs	r0, r0, r8, lsl #6
 8002b24:	20000010 	andcs	r0, r0, r0, lsl r0
 8002b28:	2000000c 	andcs	r0, r0, ip
 8002b2c:	20000008 	andcs	r0, r0, r8

08002b30 <Dmx::SetDmxBreakTime(unsigned int)>:
 8002b30:	295c      	cmp	r1, #92	; 0x5c
 8002b32:	bf38      	it	cc
 8002b34:	215c      	movcc	r1, #92	; 0x5c
 8002b36:	4b02      	ldr	r3, [pc, #8]	; (8002b40 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 8002b38:	6019      	str	r1, [r3, #0]
 8002b3a:	68c1      	ldr	r1, [r0, #12]
 8002b3c:	f7ff bfc8 	b.w	8002ad0 <Dmx::SetDmxPeriodTime(unsigned int)>
 8002b40:	20000010 	andcs	r0, r0, r0, lsl r0

08002b44 <Dmx::SetDmxMabTime(unsigned int)>:
 8002b44:	290c      	cmp	r1, #12
 8002b46:	bf38      	it	cc
 8002b48:	210c      	movcc	r1, #12
 8002b4a:	4b02      	ldr	r3, [pc, #8]	; (8002b54 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 8002b4c:	6019      	str	r1, [r3, #0]
 8002b4e:	68c1      	ldr	r1, [r0, #12]
 8002b50:	f7ff bfbe 	b.w	8002ad0 <Dmx::SetDmxPeriodTime(unsigned int)>
 8002b54:	2000000c 	andcs	r0, r0, ip

08002b58 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)>:
 8002b58:	b4f0      	push	{r4, r5, r6, r7}
 8002b5a:	8a04      	ldrh	r4, [r0, #16]
 8002b5c:	4d11      	ldr	r5, [pc, #68]	; (8002ba4 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 8002b5e:	42a3      	cmp	r3, r4
 8002b60:	bf28      	it	cs
 8002b62:	4623      	movcs	r3, r4
 8002b64:	f44f 7401 	mov.w	r4, #516	; 0x204
 8002b68:	434c      	muls	r4, r1
 8002b6a:	1c5f      	adds	r7, r3, #1
 8002b6c:	192e      	adds	r6, r5, r4
 8002b6e:	f892 f000 	pld	[r2]
 8002b72:	3c01      	subs	r4, #1
 8002b74:	442c      	add	r4, r5
 8002b76:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 8002b7a:	18d5      	adds	r5, r2, r3
 8002b7c:	4295      	cmp	r5, r2
 8002b7e:	d109      	bne.n	8002b94 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x3c>
 8002b80:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8002b84:	698a      	ldr	r2, [r1, #24]
 8002b86:	429a      	cmp	r2, r3
 8002b88:	d009      	beq.n	8002b9e <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x46>
 8002b8a:	bcf0      	pop	{r4, r5, r6, r7}
 8002b8c:	618b      	str	r3, [r1, #24]
 8002b8e:	68c1      	ldr	r1, [r0, #12]
 8002b90:	f7ff bf9e 	b.w	8002ad0 <Dmx::SetDmxPeriodTime(unsigned int)>
 8002b94:	f812 6b01 	ldrb.w	r6, [r2], #1
 8002b98:	f804 6f01 	strb.w	r6, [r4, #1]!
 8002b9c:	e7ee      	b.n	8002b7c <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x24>
 8002b9e:	bcf0      	pop	{r4, r5, r6, r7}
 8002ba0:	4770      	bx	lr
 8002ba2:	bf00      	nop
 8002ba4:	20000308 	andcs	r0, r0, r8, lsl #6

08002ba8 <Dmx::GetDmxAvailable(unsigned int)>:
 8002ba8:	f44f 7204 	mov.w	r2, #528	; 0x210
 8002bac:	4b07      	ldr	r3, [pc, #28]	; (8002bcc <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 8002bae:	fb02 3101 	mla	r1, r2, r1, r3
 8002bb2:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 8002bb6:	f413 4000 	ands.w	r0, r3, #32768	; 0x8000
 8002bba:	bf1f      	itttt	ne
 8002bbc:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 8002bc0:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 8002bc4:	4608      	movne	r0, r1
 8002bc6:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 8002bca:	4770      	bx	lr
 8002bcc:	200000f8 	strdcs	r0, [r0], -r8

08002bd0 <Dmx::GetDmxChanged(unsigned int)>:
 8002bd0:	b570      	push	{r4, r5, r6, lr}
 8002bd2:	460c      	mov	r4, r1
 8002bd4:	f7ff ffe8 	bl	8002ba8 <Dmx::GetDmxAvailable(unsigned int)>
 8002bd8:	b1a0      	cbz	r0, 8002c04 <Dmx::GetDmxChanged(unsigned int)+0x34>
 8002bda:	f240 2202 	movw	r2, #514	; 0x202
 8002bde:	490a      	ldr	r1, [pc, #40]	; (8002c08 <Dmx::GetDmxChanged(unsigned int)+0x38>)
 8002be0:	fb02 1104 	mla	r1, r2, r4, r1
 8002be4:	2200      	movs	r2, #0
 8002be6:	1e8b      	subs	r3, r1, #2
 8002be8:	1e84      	subs	r4, r0, #2
 8002bea:	f501 7100 	add.w	r1, r1, #512	; 0x200
 8002bee:	f833 6f02 	ldrh.w	r6, [r3, #2]!
 8002bf2:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8002bf6:	42ae      	cmp	r6, r5
 8002bf8:	bf1c      	itt	ne
 8002bfa:	2201      	movne	r2, #1
 8002bfc:	801d      	strhne	r5, [r3, #0]
 8002bfe:	428b      	cmp	r3, r1
 8002c00:	d1f5      	bne.n	8002bee <Dmx::GetDmxChanged(unsigned int)+0x1e>
 8002c02:	b902      	cbnz	r2, 8002c06 <Dmx::GetDmxChanged(unsigned int)+0x36>
 8002c04:	2000      	movs	r0, #0
 8002c06:	bd70      	pop	{r4, r5, r6, pc}
 8002c08:	20000510 	andcs	r0, r0, r0, lsl r5

08002c0c <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>:
 8002c0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c0e:	4614      	mov	r4, r2
 8002c10:	461d      	mov	r5, r3
 8002c12:	4e1f      	ldr	r6, [pc, #124]	; (8002c90 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x84>)
 8002c14:	2106      	movs	r1, #6
 8002c16:	4630      	mov	r0, r6
 8002c18:	f001 ff3a 	bl	8004a90 <usart_flag_get>
 8002c1c:	2800      	cmp	r0, #0
 8002c1e:	d0f9      	beq.n	8002c14 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x8>
 8002c20:	f44f 6780 	mov.w	r7, #1024	; 0x400
 8002c24:	4e1b      	ldr	r6, [pc, #108]	; (8002c94 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x88>)
 8002c26:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002c2a:	2203      	movs	r2, #3
 8002c2c:	4630      	mov	r0, r6
 8002c2e:	2110      	movs	r1, #16
 8002c30:	f001 fc4a 	bl	80044c8 <gpio_init>
 8002c34:	6177      	str	r7, [r6, #20]
 8002c36:	2100      	movs	r1, #0
 8002c38:	20b0      	movs	r0, #176	; 0xb0
 8002c3a:	f002 f9eb 	bl	8005014 <udelay(unsigned int, unsigned int)>
 8002c3e:	463b      	mov	r3, r7
 8002c40:	4630      	mov	r0, r6
 8002c42:	2203      	movs	r2, #3
 8002c44:	2118      	movs	r1, #24
 8002c46:	f001 fc3f 	bl	80044c8 <gpio_init>
 8002c4a:	2100      	movs	r1, #0
 8002c4c:	200c      	movs	r0, #12
 8002c4e:	f002 f9e1 	bl	8005014 <udelay(unsigned int, unsigned int)>
 8002c52:	f04f 2740 	mov.w	r7, #1073758208	; 0x40004000
 8002c56:	4425      	add	r5, r4
 8002c58:	f5a6 4648 	sub.w	r6, r6, #51200	; 0xc800
 8002c5c:	42ac      	cmp	r4, r5
 8002c5e:	d109      	bne.n	8002c74 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x68>
 8002c60:	f04f 2540 	mov.w	r5, #1073758208	; 0x40004000
 8002c64:	4c0a      	ldr	r4, [pc, #40]	; (8002c90 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x84>)
 8002c66:	2106      	movs	r1, #6
 8002c68:	4620      	mov	r0, r4
 8002c6a:	f001 ff11 	bl	8004a90 <usart_flag_get>
 8002c6e:	2801      	cmp	r0, #1
 8002c70:	d10b      	bne.n	8002c8a <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x7e>
 8002c72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002c74:	2107      	movs	r1, #7
 8002c76:	4630      	mov	r0, r6
 8002c78:	f001 ff0a 	bl	8004a90 <usart_flag_get>
 8002c7c:	2800      	cmp	r0, #0
 8002c7e:	d0f9      	beq.n	8002c74 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x68>
 8002c80:	f814 3b01 	ldrb.w	r3, [r4], #1
 8002c84:	f8c7 3804 	str.w	r3, [r7, #2052]	; 0x804
 8002c88:	e7e8      	b.n	8002c5c <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x50>
 8002c8a:	f8d5 3804 	ldr.w	r3, [r5, #2052]	; 0x804
 8002c8e:	e7ea      	b.n	8002c66 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x5a>
 8002c90:	40004800 	andmi	r4, r0, r0, lsl #16
 8002c94:	40011000 	andmi	r1, r1, r0

08002c98 <Dmx::RdmReceive(unsigned int)>:
 8002c98:	f44f 7204 	mov.w	r2, #528	; 0x210
 8002c9c:	4b06      	ldr	r3, [pc, #24]	; (8002cb8 <Dmx::RdmReceive(unsigned int)+0x20>)
 8002c9e:	fb02 3101 	mla	r1, r2, r1, r3
 8002ca2:	f8b1 0204 	ldrh.w	r0, [r1, #516]	; 0x204
 8002ca6:	f410 4080 	ands.w	r0, r0, #16384	; 0x4000
 8002caa:	bf1e      	ittt	ne
 8002cac:	2300      	movne	r3, #0
 8002cae:	4608      	movne	r0, r1
 8002cb0:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 8002cb4:	4770      	bx	lr
 8002cb6:	bf00      	nop
 8002cb8:	200000f8 	strdcs	r0, [r0], -r8

08002cbc <usb_read_byte>:
 8002cbc:	b508      	push	{r3, lr}
 8002cbe:	f000 f8e7 	bl	8002e90 <FT245RL_data_available>
 8002cc2:	2800      	cmp	r0, #0
 8002cc4:	d0fb      	beq.n	8002cbe <usb_read_byte+0x2>
 8002cc6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002cca:	f000 b8a7 	b.w	8002e1c <FT245RL_read_data>

08002cce <usb_send_byte>:
 8002cce:	b510      	push	{r4, lr}
 8002cd0:	4604      	mov	r4, r0
 8002cd2:	f000 f8e9 	bl	8002ea8 <FT245RL_can_write>
 8002cd6:	2800      	cmp	r0, #0
 8002cd8:	d0fb      	beq.n	8002cd2 <usb_send_byte+0x4>
 8002cda:	4620      	mov	r0, r4
 8002cdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002ce0:	f000 b856 	b.w	8002d90 <FT245RL_write_data>

08002ce4 <data_gpio_fsel_input>:
 8002ce4:	b510      	push	{r4, lr}
 8002ce6:	f24c 0340 	movw	r3, #49216	; 0xc040
 8002cea:	2203      	movs	r2, #3
 8002cec:	2104      	movs	r1, #4
 8002cee:	4805      	ldr	r0, [pc, #20]	; (8002d04 <data_gpio_fsel_input+0x20>)
 8002cf0:	f001 fbea 	bl	80044c8 <gpio_init>
 8002cf4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002cf8:	23f8      	movs	r3, #248	; 0xf8
 8002cfa:	2203      	movs	r2, #3
 8002cfc:	2104      	movs	r1, #4
 8002cfe:	4802      	ldr	r0, [pc, #8]	; (8002d08 <data_gpio_fsel_input+0x24>)
 8002d00:	f001 bbe2 	b.w	80044c8 <gpio_init>
 8002d04:	40010800 	andmi	r0, r1, r0, lsl #16
 8002d08:	40010c00 	andmi	r0, r1, r0, lsl #24

08002d0c <FT245RL_init>:
 8002d0c:	b510      	push	{r4, lr}
 8002d0e:	f240 6002 	movw	r0, #1538	; 0x602
 8002d12:	f001 fc6b 	bl	80045ec <rcu_periph_clock_enable>
 8002d16:	f240 6003 	movw	r0, #1539	; 0x603
 8002d1a:	f001 fc67 	bl	80045ec <rcu_periph_clock_enable>
 8002d1e:	4c19      	ldr	r4, [pc, #100]	; (8002d84 <FT245RL_init+0x78>)
 8002d20:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8002d24:	f001 fc62 	bl	80045ec <rcu_periph_clock_enable>
 8002d28:	2101      	movs	r1, #1
 8002d2a:	4817      	ldr	r0, [pc, #92]	; (8002d88 <FT245RL_init+0x7c>)
 8002d2c:	f001 fc26 	bl	800457c <gpio_pin_remap_config>
 8002d30:	f7ff ffd8 	bl	8002ce4 <data_gpio_fsel_input>
 8002d34:	4620      	mov	r0, r4
 8002d36:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002d3a:	2203      	movs	r2, #3
 8002d3c:	2110      	movs	r1, #16
 8002d3e:	f001 fbc3 	bl	80044c8 <gpio_init>
 8002d42:	4620      	mov	r0, r4
 8002d44:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8002d48:	2203      	movs	r2, #3
 8002d4a:	2110      	movs	r1, #16
 8002d4c:	f5a4 6480 	sub.w	r4, r4, #1024	; 0x400
 8002d50:	f001 fbba 	bl	80044c8 <gpio_init>
 8002d54:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002d58:	2203      	movs	r2, #3
 8002d5a:	2148      	movs	r1, #72	; 0x48
 8002d5c:	4620      	mov	r0, r4
 8002d5e:	f001 fbb3 	bl	80044c8 <gpio_init>
 8002d62:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002d66:	2203      	movs	r2, #3
 8002d68:	2148      	movs	r1, #72	; 0x48
 8002d6a:	4620      	mov	r0, r4
 8002d6c:	f001 fbac 	bl	80044c8 <gpio_init>
 8002d70:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8002d74:	4b05      	ldr	r3, [pc, #20]	; (8002d8c <FT245RL_init+0x80>)
 8002d76:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8002d7a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8002d7e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8002d82:	bd10      	pop	{r4, pc}
 8002d84:	40010c00 	andmi	r0, r1, r0, lsl #24
 8002d88:	00300400 	eorseq	r0, r0, r0, lsl #8
 8002d8c:	40010000 	andmi	r0, r1, r0

08002d90 <FT245RL_write_data>:
 8002d90:	b510      	push	{r4, lr}
 8002d92:	f24c 0340 	movw	r3, #49216	; 0xc040
 8002d96:	4604      	mov	r4, r0
 8002d98:	2203      	movs	r2, #3
 8002d9a:	2110      	movs	r1, #16
 8002d9c:	481c      	ldr	r0, [pc, #112]	; (8002e10 <FT245RL_write_data+0x80>)
 8002d9e:	f001 fb93 	bl	80044c8 <gpio_init>
 8002da2:	23f8      	movs	r3, #248	; 0xf8
 8002da4:	2203      	movs	r2, #3
 8002da6:	2110      	movs	r1, #16
 8002da8:	481a      	ldr	r0, [pc, #104]	; (8002e14 <FT245RL_write_data+0x84>)
 8002daa:	f001 fb8d 	bl	80044c8 <gpio_init>
 8002dae:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8002db2:	4a19      	ldr	r2, [pc, #100]	; (8002e18 <FT245RL_write_data+0x88>)
 8002db4:	f8c2 1c10 	str.w	r1, [r2, #3088]	; 0xc10
 8002db8:	bf00      	nop
 8002dba:	bf00      	nop
 8002dbc:	02e3      	lsls	r3, r4, #11
 8002dbe:	0120      	lsls	r0, r4, #4
 8002dc0:	f000 0040 	and.w	r0, r0, #64	; 0x40
 8002dc4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8002dc8:	4303      	orrs	r3, r0
 8002dca:	f8c2 3810 	str.w	r3, [r2, #2064]	; 0x810
 8002dce:	f483 4340 	eor.w	r3, r3, #49152	; 0xc000
 8002dd2:	f083 0340 	eor.w	r3, r3, #64	; 0x40
 8002dd6:	f8c2 3814 	str.w	r3, [r2, #2068]	; 0x814
 8002dda:	01e0      	lsls	r0, r4, #7
 8002ddc:	0163      	lsls	r3, r4, #5
 8002dde:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002de2:	b2c0      	uxtb	r0, r0
 8002de4:	4318      	orrs	r0, r3
 8002de6:	1063      	asrs	r3, r4, #1
 8002de8:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8002dec:	f344 1403 	sbfx	r4, r4, #4, #4
 8002df0:	4303      	orrs	r3, r0
 8002df2:	f004 0408 	and.w	r4, r4, #8
 8002df6:	431c      	orrs	r4, r3
 8002df8:	f8c2 4c10 	str.w	r4, [r2, #3088]	; 0xc10
 8002dfc:	f084 04f8 	eor.w	r4, r4, #248	; 0xf8
 8002e00:	f8c2 4c14 	str.w	r4, [r2, #3092]	; 0xc14
 8002e04:	bf00      	nop
 8002e06:	bf00      	nop
 8002e08:	f8c2 1c14 	str.w	r1, [r2, #3092]	; 0xc14
 8002e0c:	bd10      	pop	{r4, pc}
 8002e0e:	bf00      	nop
 8002e10:	40010800 	andmi	r0, r1, r0, lsl #16
 8002e14:	40010c00 	andmi	r0, r1, r0, lsl #24
 8002e18:	40010000 	andmi	r0, r1, r0

08002e1c <FT245RL_read_data>:
 8002e1c:	b510      	push	{r4, lr}
 8002e1e:	f7ff ff61 	bl	8002ce4 <data_gpio_fsel_input>
 8002e22:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002e26:	4c18      	ldr	r4, [pc, #96]	; (8002e88 <FT245RL_read_data+0x6c>)
 8002e28:	f8c4 3c14 	str.w	r3, [r4, #3092]	; 0xc14
 8002e2c:	2318      	movs	r3, #24
 8002e2e:	bf00      	nop
 8002e30:	3b01      	subs	r3, #1
 8002e32:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 8002e36:	d1fa      	bne.n	8002e2e <FT245RL_read_data+0x12>
 8002e38:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002e3c:	f8d4 2808 	ldr.w	r2, [r4, #2056]	; 0x808
 8002e40:	f8d4 1c08 	ldr.w	r1, [r4, #3080]	; 0xc08
 8002e44:	f8c4 3c10 	str.w	r3, [r4, #3088]	; 0xc10
 8002e48:	f3c2 130b 	ubfx	r3, r2, #4, #12
 8002e4c:	f3c2 24c4 	ubfx	r4, r2, #11, #5
 8002e50:	f004 0408 	and.w	r4, r4, #8
 8002e54:	f003 0304 	and.w	r3, r3, #4
 8002e58:	f342 22c4 	sbfx	r2, r2, #11, #5
 8002e5c:	4323      	orrs	r3, r4
 8002e5e:	f002 0210 	and.w	r2, r2, #16
 8002e62:	4313      	orrs	r3, r2
 8002e64:	f3c1 12c0 	ubfx	r2, r1, #7, #1
 8002e68:	4313      	orrs	r3, r2
 8002e6a:	f3c1 124a 	ubfx	r2, r1, #5, #11
 8002e6e:	0048      	lsls	r0, r1, #1
 8002e70:	f002 0202 	and.w	r2, r2, #2
 8002e74:	4313      	orrs	r3, r2
 8002e76:	f000 0060 	and.w	r0, r0, #96	; 0x60
 8002e7a:	4318      	orrs	r0, r3
 8002e7c:	4b03      	ldr	r3, [pc, #12]	; (8002e8c <FT245RL_read_data+0x70>)
 8002e7e:	0109      	lsls	r1, r1, #4
 8002e80:	400b      	ands	r3, r1
 8002e82:	4318      	orrs	r0, r3
 8002e84:	b2c0      	uxtb	r0, r0
 8002e86:	bd10      	pop	{r4, pc}
 8002e88:	40010000 	andmi	r0, r1, r0
 8002e8c:	000fff80 	andeq	pc, pc, r0, lsl #31

08002e90 <FT245RL_data_available>:
 8002e90:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8002e94:	b508      	push	{r3, lr}
 8002e96:	4803      	ldr	r0, [pc, #12]	; (8002ea4 <FT245RL_data_available+0x14>)
 8002e98:	f001 fb6a 	bl	8004570 <gpio_input_bit_get>
 8002e9c:	fab0 f080 	clz	r0, r0
 8002ea0:	0940      	lsrs	r0, r0, #5
 8002ea2:	bd08      	pop	{r3, pc}
 8002ea4:	40010800 	andmi	r0, r1, r0, lsl #16

08002ea8 <FT245RL_can_write>:
 8002ea8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002eac:	b508      	push	{r3, lr}
 8002eae:	4803      	ldr	r0, [pc, #12]	; (8002ebc <FT245RL_can_write+0x14>)
 8002eb0:	f001 fb5e 	bl	8004570 <gpio_input_bit_get>
 8002eb4:	fab0 f080 	clz	r0, r0
 8002eb8:	0940      	lsrs	r0, r0, #5
 8002eba:	bd08      	pop	{r3, pc}
 8002ebc:	40010800 	andmi	r0, r1, r0, lsl #16

08002ec0 <RDMDevice::RDMDevice()>:
 8002ec0:	4a33      	ldr	r2, [pc, #204]	; (8002f90 <RDMDevice::RDMDevice()+0xd0>)
 8002ec2:	2300      	movs	r3, #0
 8002ec4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8002ec6:	4604      	mov	r4, r0
 8002ec8:	4611      	mov	r1, r2
 8002eca:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 8002ece:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
 8002ed2:	f8a0 3072 	strh.w	r3, [r0, #114]	; 0x72
 8002ed6:	6743      	str	r3, [r0, #116]	; 0x74
 8002ed8:	4613      	mov	r3, r2
 8002eda:	7818      	ldrb	r0, [r3, #0]
 8002edc:	3201      	adds	r2, #1
 8002ede:	2800      	cmp	r0, #0
 8002ee0:	d1fa      	bne.n	8002ed8 <RDMDevice::RDMDevice()+0x18>
 8002ee2:	1a5b      	subs	r3, r3, r1
 8002ee4:	2b20      	cmp	r3, #32
 8002ee6:	bf28      	it	cs
 8002ee8:	2320      	movcs	r3, #32
 8002eea:	f104 052b 	add.w	r5, r4, #43	; 0x2b
 8002eee:	4629      	mov	r1, r5
 8002ef0:	461a      	mov	r2, r3
 8002ef2:	4827      	ldr	r0, [pc, #156]	; (8002f90 <RDMDevice::RDMDevice()+0xd0>)
 8002ef4:	3a01      	subs	r2, #1
 8002ef6:	d23b      	bcs.n	8002f70 <RDMDevice::RDMDevice()+0xb0>
 8002ef8:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 8002efc:	4b25      	ldr	r3, [pc, #148]	; (8002f94 <RDMDevice::RDMDevice()+0xd4>)
 8002efe:	4669      	mov	r1, sp
 8002f00:	781a      	ldrb	r2, [r3, #0]
 8002f02:	7022      	strb	r2, [r4, #0]
 8002f04:	785b      	ldrb	r3, [r3, #1]
 8002f06:	7063      	strb	r3, [r4, #1]
 8002f08:	4b23      	ldr	r3, [pc, #140]	; (8002f98 <RDMDevice::RDMDevice()+0xd8>)
 8002f0a:	6818      	ldr	r0, [r3, #0]
 8002f0c:	f000 fc54 	bl	80037b8 <Network::MacAddressCopyTo(unsigned char*)>
 8002f10:	f89d 3002 	ldrb.w	r3, [sp, #2]
 8002f14:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8002f18:	70a3      	strb	r3, [r4, #2]
 8002f1a:	7263      	strb	r3, [r4, #9]
 8002f1c:	4b1f      	ldr	r3, [pc, #124]	; (8002f9c <RDMDevice::RDMDevice()+0xdc>)
 8002f1e:	70e2      	strb	r2, [r4, #3]
 8002f20:	7222      	strb	r2, [r4, #8]
 8002f22:	461a      	mov	r2, r3
 8002f24:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8002f28:	f89d 0005 	ldrb.w	r0, [sp, #5]
 8002f2c:	7121      	strb	r1, [r4, #4]
 8002f2e:	7160      	strb	r0, [r4, #5]
 8002f30:	71a0      	strb	r0, [r4, #6]
 8002f32:	71e1      	strb	r1, [r4, #7]
 8002f34:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8002f38:	2900      	cmp	r1, #0
 8002f3a:	d1fb      	bne.n	8002f34 <RDMDevice::RDMDevice()+0x74>
 8002f3c:	1a9b      	subs	r3, r3, r2
 8002f3e:	2b20      	cmp	r3, #32
 8002f40:	bf28      	it	cs
 8002f42:	2320      	movcs	r3, #32
 8002f44:	461a      	mov	r2, r3
 8002f46:	4915      	ldr	r1, [pc, #84]	; (8002f9c <RDMDevice::RDMDevice()+0xdc>)
 8002f48:	3a01      	subs	r2, #1
 8002f4a:	d216      	bcs.n	8002f7a <RDMDevice::RDMDevice()+0xba>
 8002f4c:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 8002f50:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 8002f54:	64e3      	str	r3, [r4, #76]	; 0x4c
 8002f56:	2314      	movs	r3, #20
 8002f58:	4a11      	ldr	r2, [pc, #68]	; (8002fa0 <RDMDevice::RDMDevice()+0xe0>)
 8002f5a:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
 8002f5e:	f104 0165 	add.w	r1, r4, #101	; 0x65
 8002f62:	f104 0351 	add.w	r3, r4, #81	; 0x51
 8002f66:	4299      	cmp	r1, r3
 8002f68:	d10c      	bne.n	8002f84 <RDMDevice::RDMDevice()+0xc4>
 8002f6a:	4620      	mov	r0, r4
 8002f6c:	b002      	add	sp, #8
 8002f6e:	bd70      	pop	{r4, r5, r6, pc}
 8002f70:	f810 6b01 	ldrb.w	r6, [r0], #1
 8002f74:	f801 6b01 	strb.w	r6, [r1], #1
 8002f78:	e7bc      	b.n	8002ef4 <RDMDevice::RDMDevice()+0x34>
 8002f7a:	f811 0b01 	ldrb.w	r0, [r1], #1
 8002f7e:	f805 0b01 	strb.w	r0, [r5], #1
 8002f82:	e7e1      	b.n	8002f48 <RDMDevice::RDMDevice()+0x88>
 8002f84:	f812 0b01 	ldrb.w	r0, [r2], #1
 8002f88:	f803 0b01 	strb.w	r0, [r3], #1
 8002f8c:	e7eb      	b.n	8002f66 <RDMDevice::RDMDevice()+0xa6>
 8002f8e:	bf00      	nop
 8002f90:	080056f0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl, ip, lr}
 8002f94:	080056ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, sl, ip, lr}
 8002f98:	2000176c 	andcs	r1, r0, ip, ror #14
 8002f9c:	0800570c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip, lr}
 8002fa0:	08005720 	stmdaeq	r0, {r5, r8, r9, sl, ip, lr}

08002fa4 <memcpy.isra.0>:
 8002fa4:	f000 bfd4 	b.w	8003f50 <memcpy>

08002fa8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 8002fa8:	b510      	push	{r4, lr}
 8002faa:	6001      	str	r1, [r0, #0]
 8002fac:	2100      	movs	r1, #0
 8002fae:	4604      	mov	r4, r0
 8002fb0:	6041      	str	r1, [r0, #4]
 8002fb2:	2220      	movs	r2, #32
 8002fb4:	3008      	adds	r0, #8
 8002fb6:	f000 ffd6 	bl	8003f66 <memset>
 8002fba:	4b03      	ldr	r3, [pc, #12]	; (8002fc8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 8002fbc:	4620      	mov	r0, r4
 8002fbe:	62a3      	str	r3, [r4, #40]	; 0x28
 8002fc0:	237f      	movs	r3, #127	; 0x7f
 8002fc2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8002fc6:	bd10      	pop	{r4, pc}
 8002fc8:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

08002fcc <RDMDeviceParams::Load()>:
 8002fcc:	4601      	mov	r1, r0
 8002fce:	6800      	ldr	r0, [r0, #0]
 8002fd0:	b130      	cbz	r0, 8002fe0 <RDMDeviceParams::Load()+0x14>
 8002fd2:	b508      	push	{r3, lr}
 8002fd4:	6803      	ldr	r3, [r0, #0]
 8002fd6:	3104      	adds	r1, #4
 8002fd8:	68db      	ldr	r3, [r3, #12]
 8002fda:	4798      	blx	r3
 8002fdc:	2001      	movs	r0, #1
 8002fde:	bd08      	pop	{r3, pc}
 8002fe0:	4770      	bx	lr

08002fe2 <RDMDeviceParams::Set(RDMDevice*)>:
 8002fe2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002fe4:	6843      	ldr	r3, [r0, #4]
 8002fe6:	460c      	mov	r4, r1
 8002fe8:	07d9      	lsls	r1, r3, #31
 8002fea:	4605      	mov	r5, r0
 8002fec:	d518      	bpl.n	8003020 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 8002fee:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 8002ff2:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8002ff6:	2e20      	cmp	r6, #32
 8002ff8:	bf28      	it	cs
 8002ffa:	2620      	movcs	r6, #32
 8002ffc:	f100 0108 	add.w	r1, r0, #8
 8003000:	b1e3      	cbz	r3, 800303c <RDMDeviceParams::Set(RDMDevice*)+0x5a>
 8003002:	f104 070a 	add.w	r7, r4, #10
 8003006:	4638      	mov	r0, r7
 8003008:	4632      	mov	r2, r6
 800300a:	f7ff ffcb 	bl	8002fa4 <memcpy.isra.0>
 800300e:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8003010:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 8003014:	b120      	cbz	r0, 8003020 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 8003016:	6803      	ldr	r3, [r0, #0]
 8003018:	4632      	mov	r2, r6
 800301a:	4639      	mov	r1, r7
 800301c:	689b      	ldr	r3, [r3, #8]
 800301e:	4798      	blx	r3
 8003020:	686b      	ldr	r3, [r5, #4]
 8003022:	079a      	lsls	r2, r3, #30
 8003024:	bf44      	itt	mi
 8003026:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800302a:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 800302e:	075b      	lsls	r3, r3, #29
 8003030:	bf44      	itt	mi
 8003032:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 8003036:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 800303a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800303c:	4632      	mov	r2, r6
 800303e:	f104 0051 	add.w	r0, r4, #81	; 0x51
 8003042:	f7ff ffaf 	bl	8002fa4 <memcpy.isra.0>
 8003046:	f884 6071 	strb.w	r6, [r4, #113]	; 0x71
 800304a:	e7e9      	b.n	8003020 <RDMDeviceParams::Set(RDMDevice*)+0x3e>

0800304c <RDMDeviceParams::Dump()>:
 800304c:	4770      	bx	lr
	...

08003050 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 8003050:	2300      	movs	r3, #0
 8003052:	2020      	movs	r0, #32
 8003054:	b510      	push	{r4, lr}
 8003056:	4a04      	ldr	r2, [pc, #16]	; (8003068 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 8003058:	428b      	cmp	r3, r1
 800305a:	d100      	bne.n	800305e <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 800305c:	bd10      	pop	{r4, pc}
 800305e:	f852 4b04 	ldr.w	r4, [r2], #4
 8003062:	3301      	adds	r3, #1
 8003064:	4420      	add	r0, r4
 8003066:	e7f7      	b.n	8003058 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 8003068:	08005738 	stmdaeq	r0, {r3, r4, r5, r8, r9, sl, ip, lr}

0800306c <SpiFlashStore::Init()>:
 800306c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003070:	f8df 8114 	ldr.w	r8, [pc, #276]	; 8003188 <SpiFlashStore::Init()+0x11c>
 8003074:	4607      	mov	r7, r0
 8003076:	b085      	sub	sp, #20
 8003078:	f8d8 0000 	ldr.w	r0, [r8]
 800307c:	f000 fa34 	bl	80034e8 <FlashRom::GetSectorSize() const>
 8003080:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 8003084:	4605      	mov	r5, r0
 8003086:	d17d      	bne.n	8003184 <SpiFlashStore::Init()+0x118>
 8003088:	f8d8 0000 	ldr.w	r0, [r8]
 800308c:	f000 fa24 	bl	80034d8 <FlashRom::GetSize() const>
 8003090:	4b3e      	ldr	r3, [pc, #248]	; (800318c <SpiFlashStore::Init()+0x120>)
 8003092:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 8003096:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800309a:	6019      	str	r1, [r3, #0]
 800309c:	2e00      	cmp	r6, #0
 800309e:	d171      	bne.n	8003184 <SpiFlashStore::Init()+0x118>
 80030a0:	4c3b      	ldr	r4, [pc, #236]	; (8003190 <SpiFlashStore::Init()+0x124>)
 80030a2:	ab03      	add	r3, sp, #12
 80030a4:	9300      	str	r3, [sp, #0]
 80030a6:	462a      	mov	r2, r5
 80030a8:	4623      	mov	r3, r4
 80030aa:	f8d8 0000 	ldr.w	r0, [r8]
 80030ae:	f000 fa1e 	bl	80034ee <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 80030b2:	7823      	ldrb	r3, [r4, #0]
 80030b4:	2b41      	cmp	r3, #65	; 0x41
 80030b6:	bf1c      	itt	ne
 80030b8:	2341      	movne	r3, #65	; 0x41
 80030ba:	7023      	strbne	r3, [r4, #0]
 80030bc:	7863      	ldrb	r3, [r4, #1]
 80030be:	bf14      	ite	ne
 80030c0:	4635      	movne	r5, r6
 80030c2:	2501      	moveq	r5, #1
 80030c4:	2b76      	cmp	r3, #118	; 0x76
 80030c6:	bf1c      	itt	ne
 80030c8:	2376      	movne	r3, #118	; 0x76
 80030ca:	7063      	strbne	r3, [r4, #1]
 80030cc:	78a3      	ldrb	r3, [r4, #2]
 80030ce:	bf18      	it	ne
 80030d0:	2500      	movne	r5, #0
 80030d2:	2b56      	cmp	r3, #86	; 0x56
 80030d4:	bf1c      	itt	ne
 80030d6:	2356      	movne	r3, #86	; 0x56
 80030d8:	70a3      	strbne	r3, [r4, #2]
 80030da:	78e3      	ldrb	r3, [r4, #3]
 80030dc:	bf18      	it	ne
 80030de:	2500      	movne	r5, #0
 80030e0:	2b10      	cmp	r3, #16
 80030e2:	d022      	beq.n	800312a <SpiFlashStore::Init()+0xbe>
 80030e4:	2310      	movs	r3, #16
 80030e6:	70e3      	strb	r3, [r4, #3]
 80030e8:	2201      	movs	r2, #1
 80030ea:	2500      	movs	r5, #0
 80030ec:	f04f 09ff 	mov.w	r9, #255	; 0xff
 80030f0:	4b28      	ldr	r3, [pc, #160]	; (8003194 <SpiFlashStore::Init()+0x128>)
 80030f2:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 8003198 <SpiFlashStore::Init()+0x12c>
 80030f6:	701a      	strb	r2, [r3, #0]
 80030f8:	4631      	mov	r1, r6
 80030fa:	4638      	mov	r0, r7
 80030fc:	f7ff ffa8 	bl	8003050 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8003100:	1823      	adds	r3, r4, r0
 8003102:	5425      	strb	r5, [r4, r0]
 8003104:	705d      	strb	r5, [r3, #1]
 8003106:	709d      	strb	r5, [r3, #2]
 8003108:	70dd      	strb	r5, [r3, #3]
 800310a:	f858 3b04 	ldr.w	r3, [r8], #4
 800310e:	1d02      	adds	r2, r0, #4
 8003110:	4403      	add	r3, r0
 8003112:	429a      	cmp	r2, r3
 8003114:	d332      	bcc.n	800317c <SpiFlashStore::Init()+0x110>
 8003116:	3601      	adds	r6, #1
 8003118:	2e1c      	cmp	r6, #28
 800311a:	d1ed      	bne.n	80030f8 <SpiFlashStore::Init()+0x8c>
 800311c:	2501      	movs	r5, #1
 800311e:	4b1f      	ldr	r3, [pc, #124]	; (800319c <SpiFlashStore::Init()+0x130>)
 8003120:	601d      	str	r5, [r3, #0]
 8003122:	4628      	mov	r0, r5
 8003124:	b005      	add	sp, #20
 8003126:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800312a:	2d00      	cmp	r5, #0
 800312c:	d0dc      	beq.n	80030e8 <SpiFlashStore::Init()+0x7c>
 800312e:	f04f 0900 	mov.w	r9, #0
 8003132:	46c8      	mov	r8, r9
 8003134:	4631      	mov	r1, r6
 8003136:	4638      	mov	r0, r7
 8003138:	f7ff ff8a 	bl	8003050 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800313c:	5c23      	ldrb	r3, [r4, r0]
 800313e:	2bff      	cmp	r3, #255	; 0xff
 8003140:	d112      	bne.n	8003168 <SpiFlashStore::Init()+0xfc>
 8003142:	1823      	adds	r3, r4, r0
 8003144:	785a      	ldrb	r2, [r3, #1]
 8003146:	2aff      	cmp	r2, #255	; 0xff
 8003148:	d10e      	bne.n	8003168 <SpiFlashStore::Init()+0xfc>
 800314a:	789a      	ldrb	r2, [r3, #2]
 800314c:	2aff      	cmp	r2, #255	; 0xff
 800314e:	d10b      	bne.n	8003168 <SpiFlashStore::Init()+0xfc>
 8003150:	78da      	ldrb	r2, [r3, #3]
 8003152:	2aff      	cmp	r2, #255	; 0xff
 8003154:	d108      	bne.n	8003168 <SpiFlashStore::Init()+0xfc>
 8003156:	46a9      	mov	r9, r5
 8003158:	f804 8000 	strb.w	r8, [r4, r0]
 800315c:	f883 8001 	strb.w	r8, [r3, #1]
 8003160:	f883 8002 	strb.w	r8, [r3, #2]
 8003164:	f883 8003 	strb.w	r8, [r3, #3]
 8003168:	3601      	adds	r6, #1
 800316a:	2e1c      	cmp	r6, #28
 800316c:	d1e2      	bne.n	8003134 <SpiFlashStore::Init()+0xc8>
 800316e:	f1b9 0f00 	cmp.w	r9, #0
 8003172:	d0d6      	beq.n	8003122 <SpiFlashStore::Init()+0xb6>
 8003174:	2201      	movs	r2, #1
 8003176:	4b09      	ldr	r3, [pc, #36]	; (800319c <SpiFlashStore::Init()+0x130>)
 8003178:	601a      	str	r2, [r3, #0]
 800317a:	e7d2      	b.n	8003122 <SpiFlashStore::Init()+0xb6>
 800317c:	f804 9002 	strb.w	r9, [r4, r2]
 8003180:	3201      	adds	r2, #1
 8003182:	e7c6      	b.n	8003112 <SpiFlashStore::Init()+0xa6>
 8003184:	2500      	movs	r5, #0
 8003186:	e7cc      	b.n	8003122 <SpiFlashStore::Init()+0xb6>
 8003188:	20001750 	andcs	r1, r0, r0, asr r7
 800318c:	20001730 	andcs	r1, r0, r0, lsr r7
 8003190:	20000730 	andcs	r0, r0, r0, lsr r7
 8003194:	20001744 	andcs	r1, r0, r4, asr #14
 8003198:	08005738 	stmdaeq	r0, {r3, r4, r5, r8, r9, sl, ip, lr}
 800319c:	2000173c 	andcs	r1, r0, ip, lsr r7

080031a0 <SpiFlashStore::SpiFlashStore()>:
 80031a0:	b538      	push	{r3, r4, r5, lr}
 80031a2:	4b0d      	ldr	r3, [pc, #52]	; (80031d8 <SpiFlashStore::SpiFlashStore()+0x38>)
 80031a4:	4604      	mov	r4, r0
 80031a6:	6018      	str	r0, [r3, #0]
 80031a8:	4b0c      	ldr	r3, [pc, #48]	; (80031dc <SpiFlashStore::SpiFlashStore()+0x3c>)
 80031aa:	4d0d      	ldr	r5, [pc, #52]	; (80031e0 <SpiFlashStore::SpiFlashStore()+0x40>)
 80031ac:	681b      	ldr	r3, [r3, #0]
 80031ae:	781b      	ldrb	r3, [r3, #0]
 80031b0:	b113      	cbz	r3, 80031b8 <SpiFlashStore::SpiFlashStore()+0x18>
 80031b2:	f7ff ff5b 	bl	800306c <SpiFlashStore::Init()>
 80031b6:	7028      	strb	r0, [r5, #0]
 80031b8:	782b      	ldrb	r3, [r5, #0]
 80031ba:	b153      	cbz	r3, 80031d2 <SpiFlashStore::SpiFlashStore()+0x32>
 80031bc:	2320      	movs	r3, #32
 80031be:	2200      	movs	r2, #0
 80031c0:	4908      	ldr	r1, [pc, #32]	; (80031e4 <SpiFlashStore::SpiFlashStore()+0x44>)
 80031c2:	f851 0b04 	ldr.w	r0, [r1], #4
 80031c6:	3201      	adds	r2, #1
 80031c8:	2a1c      	cmp	r2, #28
 80031ca:	4403      	add	r3, r0
 80031cc:	d1f9      	bne.n	80031c2 <SpiFlashStore::SpiFlashStore()+0x22>
 80031ce:	4a06      	ldr	r2, [pc, #24]	; (80031e8 <SpiFlashStore::SpiFlashStore()+0x48>)
 80031d0:	6013      	str	r3, [r2, #0]
 80031d2:	4620      	mov	r0, r4
 80031d4:	bd38      	pop	{r3, r4, r5, pc}
 80031d6:	bf00      	nop
 80031d8:	20001740 	andcs	r1, r0, r0, asr #14
 80031dc:	20001750 	andcs	r1, r0, r0, asr r7
 80031e0:	20001734 	andcs	r1, r0, r4, lsr r7
 80031e4:	08005738 	stmdaeq	r0, {r3, r4, r5, r8, r9, sl, ip, lr}
 80031e8:	20001738 	andcs	r1, r0, r8, lsr r7

080031ec <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 80031ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80031f0:	461c      	mov	r4, r3
 80031f2:	4b19      	ldr	r3, [pc, #100]	; (8003258 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 80031f4:	4615      	mov	r5, r2
 80031f6:	781f      	ldrb	r7, [r3, #0]
 80031f8:	9e07      	ldr	r6, [sp, #28]
 80031fa:	b307      	cbz	r7, 800323e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 80031fc:	f7ff ff28 	bl	8003050 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8003200:	f04f 0c00 	mov.w	ip, #0
 8003204:	4a15      	ldr	r2, [pc, #84]	; (800325c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 8003206:	1941      	adds	r1, r0, r5
 8003208:	1e63      	subs	r3, r4, #1
 800320a:	9c06      	ldr	r4, [sp, #24]
 800320c:	4411      	add	r1, r2
 800320e:	440c      	add	r4, r1
 8003210:	42a1      	cmp	r1, r4
 8003212:	d116      	bne.n	8003242 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 8003214:	f1bc 0f00 	cmp.w	ip, #0
 8003218:	d011      	beq.n	800323e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800321a:	4b11      	ldr	r3, [pc, #68]	; (8003260 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800321c:	6819      	ldr	r1, [r3, #0]
 800321e:	b109      	cbz	r1, 8003224 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 8003220:	2906      	cmp	r1, #6
 8003222:	d101      	bne.n	8003228 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 8003224:	2101      	movs	r1, #1
 8003226:	6019      	str	r1, [r3, #0]
 8003228:	4b0e      	ldr	r3, [pc, #56]	; (8003264 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800322a:	6819      	ldr	r1, [r3, #0]
 800322c:	4b0e      	ldr	r3, [pc, #56]	; (8003268 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800322e:	6019      	str	r1, [r3, #0]
 8003230:	b12d      	cbz	r5, 800323e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8003232:	b126      	cbz	r6, 800323e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8003234:	9b08      	ldr	r3, [sp, #32]
 8003236:	4418      	add	r0, r3
 8003238:	5813      	ldr	r3, [r2, r0]
 800323a:	4333      	orrs	r3, r6
 800323c:	5013      	str	r3, [r2, r0]
 800323e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003242:	f891 8000 	ldrb.w	r8, [r1]
 8003246:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800324a:	3101      	adds	r1, #1
 800324c:	45f0      	cmp	r8, lr
 800324e:	bf1c      	itt	ne
 8003250:	f801 ec01 	strbne.w	lr, [r1, #-1]
 8003254:	46bc      	movne	ip, r7
 8003256:	e7db      	b.n	8003210 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 8003258:	20001734 	andcs	r1, r0, r4, lsr r7
 800325c:	20000730 	andcs	r0, r0, r0, lsr r7
 8003260:	2000173c 	andcs	r1, r0, ip, lsr r7
 8003264:	20001814 	andcs	r1, r0, r4, lsl r8
 8003268:	2000072c 	andcs	r0, r0, ip, lsr #14

0800326c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800326c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8003270:	461d      	mov	r5, r3
 8003272:	4b11      	ldr	r3, [pc, #68]	; (80032b8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x4c>)
 8003274:	4607      	mov	r7, r0
 8003276:	781b      	ldrb	r3, [r3, #0]
 8003278:	4614      	mov	r4, r2
 800327a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 800327e:	b1c3      	cbz	r3, 80032b2 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x46>
 8003280:	f7ff fee6 	bl	8003050 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8003284:	4a0d      	ldr	r2, [pc, #52]	; (80032bc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x50>)
 8003286:	eb00 0608 	add.w	r6, r0, r8
 800328a:	5990      	ldr	r0, [r2, r6]
 800328c:	18b3      	adds	r3, r6, r2
 800328e:	b140      	cbz	r0, 80032a2 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x36>
 8003290:	3c01      	subs	r4, #1
 8003292:	441d      	add	r5, r3
 8003294:	429d      	cmp	r5, r3
 8003296:	d00c      	beq.n	80032b2 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x46>
 8003298:	f813 2b01 	ldrb.w	r2, [r3], #1
 800329c:	f804 2f01 	strb.w	r2, [r4, #1]!
 80032a0:	e7f8      	b.n	8003294 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x28>
 80032a2:	e9cd 0001 	strd	r0, r0, [sp, #4]
 80032a6:	4623      	mov	r3, r4
 80032a8:	4642      	mov	r2, r8
 80032aa:	4638      	mov	r0, r7
 80032ac:	9500      	str	r5, [sp, #0]
 80032ae:	f7ff ff9d 	bl	80031ec <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80032b2:	b004      	add	sp, #16
 80032b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80032b8:	20001734 	andcs	r1, r0, r4, lsr r7
 80032bc:	20000730 	andcs	r0, r0, r0, lsr r7

080032c0 <SpiFlashStore::Flash()>:
 80032c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80032c2:	4c25      	ldr	r4, [pc, #148]	; (8003358 <SpiFlashStore::Flash()+0x98>)
 80032c4:	6820      	ldr	r0, [r4, #0]
 80032c6:	2800      	cmp	r0, #0
 80032c8:	d043      	beq.n	8003352 <SpiFlashStore::Flash()+0x92>
 80032ca:	3801      	subs	r0, #1
 80032cc:	2805      	cmp	r0, #5
 80032ce:	d831      	bhi.n	8003334 <SpiFlashStore::Flash()+0x74>
 80032d0:	e8df f000 	tbb	[pc, r0]
 80032d4:	2e140b03 	vnmlscs.f64	d0, d4, d3
 80032d8:	4b203025 	blmi	880f374 <__exidx_end+0x809728>
 80032dc:	681a      	ldr	r2, [r3, #0]
 80032de:	4b20      	ldr	r3, [pc, #128]	; (8003360 <SpiFlashStore::Flash()+0xa0>)
 80032e0:	601a      	str	r2, [r3, #0]
 80032e2:	2302      	movs	r3, #2
 80032e4:	6023      	str	r3, [r4, #0]
 80032e6:	2001      	movs	r0, #1
 80032e8:	e033      	b.n	8003352 <SpiFlashStore::Flash()+0x92>
 80032ea:	4b1c      	ldr	r3, [pc, #112]	; (800335c <SpiFlashStore::Flash()+0x9c>)
 80032ec:	4a1c      	ldr	r2, [pc, #112]	; (8003360 <SpiFlashStore::Flash()+0xa0>)
 80032ee:	681b      	ldr	r3, [r3, #0]
 80032f0:	6812      	ldr	r2, [r2, #0]
 80032f2:	1a9b      	subs	r3, r3, r2
 80032f4:	2b63      	cmp	r3, #99	; 0x63
 80032f6:	d9f6      	bls.n	80032e6 <SpiFlashStore::Flash()+0x26>
 80032f8:	2303      	movs	r3, #3
 80032fa:	e7f3      	b.n	80032e4 <SpiFlashStore::Flash()+0x24>
 80032fc:	4919      	ldr	r1, [pc, #100]	; (8003364 <SpiFlashStore::Flash()+0xa4>)
 80032fe:	481a      	ldr	r0, [pc, #104]	; (8003368 <SpiFlashStore::Flash()+0xa8>)
 8003300:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8003304:	6809      	ldr	r1, [r1, #0]
 8003306:	6800      	ldr	r0, [r0, #0]
 8003308:	ab03      	add	r3, sp, #12
 800330a:	f000 f8ff 	bl	800350c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800330e:	2800      	cmp	r0, #0
 8003310:	d0e9      	beq.n	80032e6 <SpiFlashStore::Flash()+0x26>
 8003312:	4b12      	ldr	r3, [pc, #72]	; (800335c <SpiFlashStore::Flash()+0x9c>)
 8003314:	681a      	ldr	r2, [r3, #0]
 8003316:	4b12      	ldr	r3, [pc, #72]	; (8003360 <SpiFlashStore::Flash()+0xa0>)
 8003318:	601a      	str	r2, [r3, #0]
 800331a:	2305      	movs	r3, #5
 800331c:	e7e2      	b.n	80032e4 <SpiFlashStore::Flash()+0x24>
 800331e:	4b0f      	ldr	r3, [pc, #60]	; (800335c <SpiFlashStore::Flash()+0x9c>)
 8003320:	4a0f      	ldr	r2, [pc, #60]	; (8003360 <SpiFlashStore::Flash()+0xa0>)
 8003322:	681b      	ldr	r3, [r3, #0]
 8003324:	6812      	ldr	r2, [r2, #0]
 8003326:	1a9b      	subs	r3, r3, r2
 8003328:	2b63      	cmp	r3, #99	; 0x63
 800332a:	d9dc      	bls.n	80032e6 <SpiFlashStore::Flash()+0x26>
 800332c:	2304      	movs	r3, #4
 800332e:	e7d9      	b.n	80032e4 <SpiFlashStore::Flash()+0x24>
 8003330:	2306      	movs	r3, #6
 8003332:	e7d7      	b.n	80032e4 <SpiFlashStore::Flash()+0x24>
 8003334:	ab03      	add	r3, sp, #12
 8003336:	4a0d      	ldr	r2, [pc, #52]	; (800336c <SpiFlashStore::Flash()+0xac>)
 8003338:	490a      	ldr	r1, [pc, #40]	; (8003364 <SpiFlashStore::Flash()+0xa4>)
 800333a:	480b      	ldr	r0, [pc, #44]	; (8003368 <SpiFlashStore::Flash()+0xa8>)
 800333c:	9300      	str	r3, [sp, #0]
 800333e:	6812      	ldr	r2, [r2, #0]
 8003340:	4b0b      	ldr	r3, [pc, #44]	; (8003370 <SpiFlashStore::Flash()+0xb0>)
 8003342:	6809      	ldr	r1, [r1, #0]
 8003344:	6800      	ldr	r0, [r0, #0]
 8003346:	f000 f981 	bl	800364c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800334a:	2800      	cmp	r0, #0
 800334c:	d0cb      	beq.n	80032e6 <SpiFlashStore::Flash()+0x26>
 800334e:	2000      	movs	r0, #0
 8003350:	6020      	str	r0, [r4, #0]
 8003352:	b004      	add	sp, #16
 8003354:	bd10      	pop	{r4, pc}
 8003356:	bf00      	nop
 8003358:	2000173c 	andcs	r1, r0, ip, lsr r7
 800335c:	20001814 	andcs	r1, r0, r4, lsl r8
 8003360:	2000072c 	andcs	r0, r0, ip, lsr #14
 8003364:	20001730 	andcs	r1, r0, r0, lsr r7
 8003368:	20001750 	andcs	r1, r0, r0, asr r7
 800336c:	20001738 	andcs	r1, r0, r8, lsr r7
 8003370:	20000730 	andcs	r0, r0, r0, lsr r7

08003374 <StoreRDMDevice::~StoreRDMDevice()>:
 8003374:	4770      	bx	lr

08003376 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8003376:	3804      	subs	r0, #4
 8003378:	4770      	bx	lr
	...

0800337c <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 800337c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800337e:	2200      	movs	r2, #0
 8003380:	460b      	mov	r3, r1
 8003382:	2129      	movs	r1, #41	; 0x29
 8003384:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8003388:	4804      	ldr	r0, [pc, #16]	; (800339c <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 800338a:	9100      	str	r1, [sp, #0]
 800338c:	6800      	ldr	r0, [r0, #0]
 800338e:	210b      	movs	r1, #11
 8003390:	f7ff ff2c 	bl	80031ec <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8003394:	b005      	add	sp, #20
 8003396:	f85d fb04 	ldr.w	pc, [sp], #4
 800339a:	bf00      	nop
 800339c:	20001740 	andcs	r1, r0, r0, asr #14

080033a0 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 80033a0:	b570      	push	{r4, r5, r6, lr}
 80033a2:	2401      	movs	r4, #1
 80033a4:	2600      	movs	r6, #0
 80033a6:	4d0c      	ldr	r5, [pc, #48]	; (80033d8 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 80033a8:	b086      	sub	sp, #24
 80033aa:	460b      	mov	r3, r1
 80033ac:	6828      	ldr	r0, [r5, #0]
 80033ae:	f88d 2017 	strb.w	r2, [sp, #23]
 80033b2:	9200      	str	r2, [sp, #0]
 80033b4:	210b      	movs	r1, #11
 80033b6:	2204      	movs	r2, #4
 80033b8:	e9cd 4601 	strd	r4, r6, [sp, #4]
 80033bc:	f7ff ff16 	bl	80031ec <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80033c0:	2224      	movs	r2, #36	; 0x24
 80033c2:	210b      	movs	r1, #11
 80033c4:	e9cd 4601 	strd	r4, r6, [sp, #4]
 80033c8:	6828      	ldr	r0, [r5, #0]
 80033ca:	9400      	str	r4, [sp, #0]
 80033cc:	f10d 0317 	add.w	r3, sp, #23
 80033d0:	f7ff ff0c 	bl	80031ec <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80033d4:	b006      	add	sp, #24
 80033d6:	bd70      	pop	{r4, r5, r6, pc}
 80033d8:	20001740 	andcs	r1, r0, r0, asr #14

080033dc <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 80033dc:	f1a0 0004 	sub.w	r0, r0, #4
 80033e0:	e7de      	b.n	80033a0 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 80033e2:	bf00      	nop

080033e4 <StoreRDMDevice::~StoreRDMDevice()>:
 80033e4:	b510      	push	{r4, lr}
 80033e6:	4604      	mov	r4, r0
 80033e8:	f000 fd3e 	bl	8003e68 <operator delete(void*)>
 80033ec:	4620      	mov	r0, r4
 80033ee:	bd10      	pop	{r4, pc}

080033f0 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 80033f0:	f1a0 0004 	sub.w	r0, r0, #4
 80033f4:	e7f6      	b.n	80033e4 <StoreRDMDevice::~StoreRDMDevice()>
	...

080033f8 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 80033f8:	2300      	movs	r3, #0
 80033fa:	b507      	push	{r0, r1, r2, lr}
 80033fc:	4805      	ldr	r0, [pc, #20]	; (8003414 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x1c>)
 80033fe:	9300      	str	r3, [sp, #0]
 8003400:	460a      	mov	r2, r1
 8003402:	2329      	movs	r3, #41	; 0x29
 8003404:	210b      	movs	r1, #11
 8003406:	6800      	ldr	r0, [r0, #0]
 8003408:	f7ff ff30 	bl	800326c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800340c:	b003      	add	sp, #12
 800340e:	f85d fb04 	ldr.w	pc, [sp], #4
 8003412:	bf00      	nop
 8003414:	20001740 	andcs	r1, r0, r0, asr #14

08003418 <StoreRDMDevice::StoreRDMDevice()>:
 8003418:	4a03      	ldr	r2, [pc, #12]	; (8003428 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 800341a:	6002      	str	r2, [r0, #0]
 800341c:	321c      	adds	r2, #28
 800341e:	6042      	str	r2, [r0, #4]
 8003420:	4a02      	ldr	r2, [pc, #8]	; (800342c <StoreRDMDevice::StoreRDMDevice()+0x14>)
 8003422:	6010      	str	r0, [r2, #0]
 8003424:	4770      	bx	lr
 8003426:	bf00      	nop
 8003428:	080057b0 	stmdaeq	r0, {r4, r5, r7, r8, r9, sl, ip, lr}
 800342c:	20001748 	andcs	r1, r0, r8, asr #14

08003430 <StoreWidget::~StoreWidget()>:
 8003430:	4770      	bx	lr

08003432 <non-virtual thunk to StoreWidget::~StoreWidget()>:
 8003432:	3804      	subs	r0, #4
 8003434:	4770      	bx	lr
	...

08003438 <StoreWidget::Update(TWidgetParams const*)>:
 8003438:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800343a:	2200      	movs	r2, #0
 800343c:	460b      	mov	r3, r1
 800343e:	210c      	movs	r1, #12
 8003440:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8003444:	4804      	ldr	r0, [pc, #16]	; (8003458 <StoreWidget::Update(TWidgetParams const*)+0x20>)
 8003446:	9100      	str	r1, [sp, #0]
 8003448:	6800      	ldr	r0, [r0, #0]
 800344a:	210a      	movs	r1, #10
 800344c:	f7ff fece 	bl	80031ec <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8003450:	b005      	add	sp, #20
 8003452:	f85d fb04 	ldr.w	pc, [sp], #4
 8003456:	bf00      	nop
 8003458:	20001740 	andcs	r1, r0, r0, asr #14

0800345c <StoreWidget::~StoreWidget()>:
 800345c:	b510      	push	{r4, lr}
 800345e:	4604      	mov	r4, r0
 8003460:	f000 fd02 	bl	8003e68 <operator delete(void*)>
 8003464:	4620      	mov	r0, r4
 8003466:	bd10      	pop	{r4, pc}

08003468 <non-virtual thunk to StoreWidget::~StoreWidget()>:
 8003468:	f1a0 0004 	sub.w	r0, r0, #4
 800346c:	e7f6      	b.n	800345c <StoreWidget::~StoreWidget()>
	...

08003470 <StoreWidget::Copy(TWidgetParams*)>:
 8003470:	2300      	movs	r3, #0
 8003472:	b507      	push	{r0, r1, r2, lr}
 8003474:	4805      	ldr	r0, [pc, #20]	; (800348c <StoreWidget::Copy(TWidgetParams*)+0x1c>)
 8003476:	9300      	str	r3, [sp, #0]
 8003478:	460a      	mov	r2, r1
 800347a:	230c      	movs	r3, #12
 800347c:	210a      	movs	r1, #10
 800347e:	6800      	ldr	r0, [r0, #0]
 8003480:	f7ff fef4 	bl	800326c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 8003484:	b003      	add	sp, #12
 8003486:	f85d fb04 	ldr.w	pc, [sp], #4
 800348a:	bf00      	nop
 800348c:	20001740 	andcs	r1, r0, r0, asr #14

08003490 <StoreWidget::StoreWidget()>:
 8003490:	4a03      	ldr	r2, [pc, #12]	; (80034a0 <StoreWidget::StoreWidget()+0x10>)
 8003492:	6002      	str	r2, [r0, #0]
 8003494:	3224      	adds	r2, #36	; 0x24
 8003496:	6042      	str	r2, [r0, #4]
 8003498:	4a02      	ldr	r2, [pc, #8]	; (80034a4 <StoreWidget::StoreWidget()+0x14>)
 800349a:	6010      	str	r0, [r2, #0]
 800349c:	4770      	bx	lr
 800349e:	bf00      	nop
 80034a0:	080057e0 	stmdaeq	r0, {r5, r6, r7, r8, r9, sl, ip, lr}
 80034a4:	2000174c 	andcs	r1, r0, ip, asr #14

080034a8 <FlashRom::FlashRom()>:
 80034a8:	4b07      	ldr	r3, [pc, #28]	; (80034c8 <FlashRom::FlashRom()+0x20>)
 80034aa:	b510      	push	{r4, lr}
 80034ac:	6018      	str	r0, [r3, #0]
 80034ae:	2301      	movs	r3, #1
 80034b0:	4604      	mov	r4, r0
 80034b2:	7003      	strb	r3, [r0, #0]
 80034b4:	4b05      	ldr	r3, [pc, #20]	; (80034cc <FlashRom::FlashRom()+0x24>)
 80034b6:	4906      	ldr	r1, [pc, #24]	; (80034d0 <FlashRom::FlashRom()+0x28>)
 80034b8:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 80034bc:	4805      	ldr	r0, [pc, #20]	; (80034d4 <FlashRom::FlashRom()+0x2c>)
 80034be:	029a      	lsls	r2, r3, #10
 80034c0:	f7fd ff66 	bl	8001390 <printf>
 80034c4:	4620      	mov	r0, r4
 80034c6:	bd10      	pop	{r4, pc}
 80034c8:	20001750 	andcs	r1, r0, r0, asr r7
 80034cc:	1ffff700 	svcne	0x00fff700
 80034d0:	08005394 	stmdaeq	r0, {r2, r4, r7, r8, r9, ip, lr}
 80034d4:	08005818 	stmdaeq	r0, {r3, r4, fp, ip, lr}

080034d8 <FlashRom::GetSize() const>:
 80034d8:	4b02      	ldr	r3, [pc, #8]	; (80034e4 <FlashRom::GetSize() const+0xc>)
 80034da:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 80034de:	0280      	lsls	r0, r0, #10
 80034e0:	4770      	bx	lr
 80034e2:	bf00      	nop
 80034e4:	1ffff700 	svcne	0x00fff700

080034e8 <FlashRom::GetSectorSize() const>:
 80034e8:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 80034ec:	4770      	bx	lr

080034ee <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 80034ee:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 80034f2:	441a      	add	r2, r3
 80034f4:	4293      	cmp	r3, r2
 80034f6:	d104      	bne.n	8003502 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 80034f8:	2200      	movs	r2, #0
 80034fa:	9b00      	ldr	r3, [sp, #0]
 80034fc:	2001      	movs	r0, #1
 80034fe:	601a      	str	r2, [r3, #0]
 8003500:	4770      	bx	lr
 8003502:	f851 0b04 	ldr.w	r0, [r1], #4
 8003506:	f843 0b04 	str.w	r0, [r3], #4
 800350a:	e7f3      	b.n	80034f4 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>

0800350c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800350c:	2000      	movs	r0, #0
 800350e:	b538      	push	{r3, r4, r5, lr}
 8003510:	4c47      	ldr	r4, [pc, #284]	; (8003630 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 8003512:	6018      	str	r0, [r3, #0]
 8003514:	6823      	ldr	r3, [r4, #0]
 8003516:	2b04      	cmp	r3, #4
 8003518:	f200 8082 	bhi.w	8003620 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800351c:	e8df f003 	tbb	[pc, r3]
 8003520:	78452003 	stmdavc	r5, {r0, r1, sp}^
 8003524:	4b430080 	blmi	90c372c <__exidx_end+0x10bdae0>
 8003528:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800352c:	6019      	str	r1, [r3, #0]
 800352e:	4b42      	ldr	r3, [pc, #264]	; (8003638 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 8003530:	601a      	str	r2, [r3, #0]
 8003532:	4b42      	ldr	r3, [pc, #264]	; (800363c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 8003534:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8003538:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800353c:	4b40      	ldr	r3, [pc, #256]	; (8003640 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800353e:	d807      	bhi.n	8003550 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 8003540:	2201      	movs	r2, #1
 8003542:	701a      	strb	r2, [r3, #0]
 8003544:	f000 ff36 	bl	80043b4 <fmc_bank0_unlock>
 8003548:	2301      	movs	r3, #1
 800354a:	6023      	str	r3, [r4, #0]
 800354c:	2000      	movs	r0, #0
 800354e:	e026      	b.n	800359e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 8003550:	4a3c      	ldr	r2, [pc, #240]	; (8003644 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 8003552:	4291      	cmp	r1, r2
 8003554:	d3f4      	bcc.n	8003540 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 8003556:	2200      	movs	r2, #0
 8003558:	701a      	strb	r2, [r3, #0]
 800355a:	f000 ff39 	bl	80043d0 <fmc_bank1_unlock>
 800355e:	e7f3      	b.n	8003548 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 8003560:	4d37      	ldr	r5, [pc, #220]	; (8003640 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 8003562:	782b      	ldrb	r3, [r5, #0]
 8003564:	b15b      	cbz	r3, 800357e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 8003566:	f000 ff51 	bl	800440c <fmc_bank0_state_get>
 800356a:	2801      	cmp	r0, #1
 800356c:	d0ee      	beq.n	800354c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800356e:	7829      	ldrb	r1, [r5, #0]
 8003570:	4b35      	ldr	r3, [pc, #212]	; (8003648 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 8003572:	b939      	cbnz	r1, 8003584 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 8003574:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003576:	f022 0202 	bic.w	r2, r2, #2
 800357a:	651a      	str	r2, [r3, #80]	; 0x50
 800357c:	e006      	b.n	800358c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800357e:	f000 ff57 	bl	8004430 <fmc_bank1_state_get>
 8003582:	e7f2      	b.n	800356a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 8003584:	691a      	ldr	r2, [r3, #16]
 8003586:	f022 0202 	bic.w	r2, r2, #2
 800358a:	611a      	str	r2, [r3, #16]
 800358c:	4b2a      	ldr	r3, [pc, #168]	; (8003638 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800358e:	681b      	ldr	r3, [r3, #0]
 8003590:	b94b      	cbnz	r3, 80035a6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 8003592:	b129      	cbz	r1, 80035a0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 8003594:	f000 ff2a 	bl	80043ec <fmc_bank0_lock>
 8003598:	2300      	movs	r3, #0
 800359a:	2001      	movs	r0, #1
 800359c:	6023      	str	r3, [r4, #0]
 800359e:	bd38      	pop	{r3, r4, r5, pc}
 80035a0:	f000 ff2c 	bl	80043fc <fmc_bank1_lock>
 80035a4:	e7f8      	b.n	8003598 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 80035a6:	2302      	movs	r3, #2
 80035a8:	e7cf      	b.n	800354a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 80035aa:	4923      	ldr	r1, [pc, #140]	; (8003638 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 80035ac:	680b      	ldr	r3, [r1, #0]
 80035ae:	2b00      	cmp	r3, #0
 80035b0:	d0ca      	beq.n	8003548 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 80035b2:	4b23      	ldr	r3, [pc, #140]	; (8003640 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 80035b4:	4a1f      	ldr	r2, [pc, #124]	; (8003634 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 80035b6:	7818      	ldrb	r0, [r3, #0]
 80035b8:	4b23      	ldr	r3, [pc, #140]	; (8003648 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 80035ba:	b190      	cbz	r0, 80035e2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 80035bc:	6918      	ldr	r0, [r3, #16]
 80035be:	f040 0002 	orr.w	r0, r0, #2
 80035c2:	6118      	str	r0, [r3, #16]
 80035c4:	6810      	ldr	r0, [r2, #0]
 80035c6:	6158      	str	r0, [r3, #20]
 80035c8:	6918      	ldr	r0, [r3, #16]
 80035ca:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 80035ce:	6118      	str	r0, [r3, #16]
 80035d0:	680b      	ldr	r3, [r1, #0]
 80035d2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80035d6:	600b      	str	r3, [r1, #0]
 80035d8:	6813      	ldr	r3, [r2, #0]
 80035da:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80035de:	6013      	str	r3, [r2, #0]
 80035e0:	e7b2      	b.n	8003548 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 80035e2:	6d18      	ldr	r0, [r3, #80]	; 0x50
 80035e4:	f040 0002 	orr.w	r0, r0, #2
 80035e8:	6518      	str	r0, [r3, #80]	; 0x50
 80035ea:	6810      	ldr	r0, [r2, #0]
 80035ec:	6558      	str	r0, [r3, #84]	; 0x54
 80035ee:	69dd      	ldr	r5, [r3, #28]
 80035f0:	07ad      	lsls	r5, r5, #30
 80035f2:	bf48      	it	mi
 80035f4:	6158      	strmi	r0, [r3, #20]
 80035f6:	4814      	ldr	r0, [pc, #80]	; (8003648 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 80035f8:	6d03      	ldr	r3, [r0, #80]	; 0x50
 80035fa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80035fe:	6503      	str	r3, [r0, #80]	; 0x50
 8003600:	680b      	ldr	r3, [r1, #0]
 8003602:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8003606:	600b      	str	r3, [r1, #0]
 8003608:	6813      	ldr	r3, [r2, #0]
 800360a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800360e:	e7e6      	b.n	80035de <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 8003610:	4b0b      	ldr	r3, [pc, #44]	; (8003640 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 8003612:	781a      	ldrb	r2, [r3, #0]
 8003614:	4b0c      	ldr	r3, [pc, #48]	; (8003648 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 8003616:	b132      	cbz	r2, 8003626 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 8003618:	691a      	ldr	r2, [r3, #16]
 800361a:	f022 0201 	bic.w	r2, r2, #1
 800361e:	611a      	str	r2, [r3, #16]
 8003620:	2000      	movs	r0, #0
 8003622:	6020      	str	r0, [r4, #0]
 8003624:	e7bb      	b.n	800359e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 8003626:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003628:	f022 0201 	bic.w	r2, r2, #1
 800362c:	651a      	str	r2, [r3, #80]	; 0x50
 800362e:	e7f7      	b.n	8003620 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 8003630:	20001758 	andcs	r1, r0, r8, asr r7
 8003634:	2000175c 	andcs	r1, r0, ip, asr r7
 8003638:	20001768 	andcs	r1, r0, r8, ror #14
 800363c:	1ffff700 	svcne	0x00fff700
 8003640:	20001764 	andcs	r1, r0, r4, ror #14
 8003644:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8003648:	40022000 	andmi	r2, r2, r0

0800364c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800364c:	b570      	push	{r4, r5, r6, lr}
 800364e:	2400      	movs	r4, #0
 8003650:	9804      	ldr	r0, [sp, #16]
 8003652:	6004      	str	r4, [r0, #0]
 8003654:	4c48      	ldr	r4, [pc, #288]	; (8003778 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 8003656:	6820      	ldr	r0, [r4, #0]
 8003658:	2804      	cmp	r0, #4
 800365a:	d848      	bhi.n	80036ee <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800365c:	e8df f000 	tbb	[pc, r0]
 8003660:	22847c03 	addcs	r7, r4, #768	; 0x300
 8003664:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 8003668:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800366c:	6001      	str	r1, [r0, #0]
 800366e:	4844      	ldr	r0, [pc, #272]	; (8003780 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8003670:	6003      	str	r3, [r0, #0]
 8003672:	4b44      	ldr	r3, [pc, #272]	; (8003784 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 8003674:	601a      	str	r2, [r3, #0]
 8003676:	4b44      	ldr	r3, [pc, #272]	; (8003788 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 8003678:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800367c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003680:	4b42      	ldr	r3, [pc, #264]	; (800378c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8003682:	d807      	bhi.n	8003694 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 8003684:	2201      	movs	r2, #1
 8003686:	701a      	strb	r2, [r3, #0]
 8003688:	f000 fe94 	bl	80043b4 <fmc_bank0_unlock>
 800368c:	2303      	movs	r3, #3
 800368e:	6023      	str	r3, [r4, #0]
 8003690:	2000      	movs	r0, #0
 8003692:	e026      	b.n	80036e2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 8003694:	4a3e      	ldr	r2, [pc, #248]	; (8003790 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 8003696:	4291      	cmp	r1, r2
 8003698:	d3f4      	bcc.n	8003684 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800369a:	2200      	movs	r2, #0
 800369c:	701a      	strb	r2, [r3, #0]
 800369e:	f000 fe97 	bl	80043d0 <fmc_bank1_unlock>
 80036a2:	e7f3      	b.n	800368c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 80036a4:	4d39      	ldr	r5, [pc, #228]	; (800378c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 80036a6:	782b      	ldrb	r3, [r5, #0]
 80036a8:	b15b      	cbz	r3, 80036c2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 80036aa:	f000 feaf 	bl	800440c <fmc_bank0_state_get>
 80036ae:	2801      	cmp	r0, #1
 80036b0:	d0ee      	beq.n	8003690 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 80036b2:	7829      	ldrb	r1, [r5, #0]
 80036b4:	4b37      	ldr	r3, [pc, #220]	; (8003794 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 80036b6:	b939      	cbnz	r1, 80036c8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 80036b8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80036ba:	f022 0201 	bic.w	r2, r2, #1
 80036be:	651a      	str	r2, [r3, #80]	; 0x50
 80036c0:	e006      	b.n	80036d0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 80036c2:	f000 feb5 	bl	8004430 <fmc_bank1_state_get>
 80036c6:	e7f2      	b.n	80036ae <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 80036c8:	691a      	ldr	r2, [r3, #16]
 80036ca:	f022 0201 	bic.w	r2, r2, #1
 80036ce:	611a      	str	r2, [r3, #16]
 80036d0:	4b2c      	ldr	r3, [pc, #176]	; (8003784 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 80036d2:	681b      	ldr	r3, [r3, #0]
 80036d4:	b94b      	cbnz	r3, 80036ea <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 80036d6:	b129      	cbz	r1, 80036e4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 80036d8:	f000 fe88 	bl	80043ec <fmc_bank0_lock>
 80036dc:	2300      	movs	r3, #0
 80036de:	2001      	movs	r0, #1
 80036e0:	6023      	str	r3, [r4, #0]
 80036e2:	bd70      	pop	{r4, r5, r6, pc}
 80036e4:	f000 fe8a 	bl	80043fc <fmc_bank1_lock>
 80036e8:	e7f8      	b.n	80036dc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 80036ea:	2304      	movs	r3, #4
 80036ec:	e7cf      	b.n	800368e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 80036ee:	4a25      	ldr	r2, [pc, #148]	; (8003784 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 80036f0:	6813      	ldr	r3, [r2, #0]
 80036f2:	2b03      	cmp	r3, #3
 80036f4:	d91a      	bls.n	800372c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 80036f6:	4b25      	ldr	r3, [pc, #148]	; (800378c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 80036f8:	7819      	ldrb	r1, [r3, #0]
 80036fa:	4b26      	ldr	r3, [pc, #152]	; (8003794 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 80036fc:	b189      	cbz	r1, 8003722 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 80036fe:	6919      	ldr	r1, [r3, #16]
 8003700:	f041 0101 	orr.w	r1, r1, #1
 8003704:	6119      	str	r1, [r3, #16]
 8003706:	4d1e      	ldr	r5, [pc, #120]	; (8003780 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8003708:	481c      	ldr	r0, [pc, #112]	; (800377c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800370a:	6829      	ldr	r1, [r5, #0]
 800370c:	6803      	ldr	r3, [r0, #0]
 800370e:	f851 6b04 	ldr.w	r6, [r1], #4
 8003712:	f843 6b04 	str.w	r6, [r3], #4
 8003716:	6003      	str	r3, [r0, #0]
 8003718:	6813      	ldr	r3, [r2, #0]
 800371a:	6029      	str	r1, [r5, #0]
 800371c:	3b04      	subs	r3, #4
 800371e:	6013      	str	r3, [r2, #0]
 8003720:	e7b4      	b.n	800368c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8003722:	6d19      	ldr	r1, [r3, #80]	; 0x50
 8003724:	f041 0101 	orr.w	r1, r1, #1
 8003728:	6519      	str	r1, [r3, #80]	; 0x50
 800372a:	e7ec      	b.n	8003706 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800372c:	2b00      	cmp	r3, #0
 800372e:	d0ad      	beq.n	800368c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8003730:	4b16      	ldr	r3, [pc, #88]	; (800378c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8003732:	781a      	ldrb	r2, [r3, #0]
 8003734:	4b17      	ldr	r3, [pc, #92]	; (8003794 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 8003736:	b152      	cbz	r2, 800374e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 8003738:	691a      	ldr	r2, [r3, #16]
 800373a:	f042 0201 	orr.w	r2, r2, #1
 800373e:	611a      	str	r2, [r3, #16]
 8003740:	4a0f      	ldr	r2, [pc, #60]	; (8003780 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8003742:	4b0e      	ldr	r3, [pc, #56]	; (800377c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 8003744:	6812      	ldr	r2, [r2, #0]
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	6812      	ldr	r2, [r2, #0]
 800374a:	601a      	str	r2, [r3, #0]
 800374c:	e79e      	b.n	800368c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800374e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003750:	f042 0201 	orr.w	r2, r2, #1
 8003754:	651a      	str	r2, [r3, #80]	; 0x50
 8003756:	e7f3      	b.n	8003740 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 8003758:	4b0c      	ldr	r3, [pc, #48]	; (800378c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800375a:	781a      	ldrb	r2, [r3, #0]
 800375c:	4b0d      	ldr	r3, [pc, #52]	; (8003794 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800375e:	b132      	cbz	r2, 800376e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 8003760:	691a      	ldr	r2, [r3, #16]
 8003762:	f022 0202 	bic.w	r2, r2, #2
 8003766:	611a      	str	r2, [r3, #16]
 8003768:	2000      	movs	r0, #0
 800376a:	6020      	str	r0, [r4, #0]
 800376c:	e7b9      	b.n	80036e2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800376e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003770:	f022 0202 	bic.w	r2, r2, #2
 8003774:	651a      	str	r2, [r3, #80]	; 0x50
 8003776:	e7f7      	b.n	8003768 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 8003778:	20001758 	andcs	r1, r0, r8, asr r7
 800377c:	20001754 	andcs	r1, r0, r4, asr r7
 8003780:	20001760 	andcs	r1, r0, r0, ror #14
 8003784:	20001768 	andcs	r1, r0, r8, ror #14
 8003788:	1ffff700 	svcne	0x00fff700
 800378c:	20001764 	andcs	r1, r0, r4, ror #14
 8003790:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8003794:	40022000 	andmi	r2, r2, r0

08003798 <Network::Network()>:
 8003798:	4b05      	ldr	r3, [pc, #20]	; (80037b0 <Network::Network()+0x18>)
 800379a:	4906      	ldr	r1, [pc, #24]	; (80037b4 <Network::Network()+0x1c>)
 800379c:	6018      	str	r0, [r3, #0]
 800379e:	1e42      	subs	r2, r0, #1
 80037a0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80037a4:	f802 3f01 	strb.w	r3, [r2, #1]!
 80037a8:	2b00      	cmp	r3, #0
 80037aa:	d1f9      	bne.n	80037a0 <Network::Network()+0x8>
 80037ac:	4770      	bx	lr
 80037ae:	bf00      	nop
 80037b0:	2000176c 	andcs	r1, r0, ip, ror #14
 80037b4:	08005846 	stmdaeq	r0, {r1, r2, r6, fp, ip, lr}

080037b8 <Network::MacAddressCopyTo(unsigned char*)>:
 80037b8:	4608      	mov	r0, r1
 80037ba:	f000 bcc7 	b.w	800414c <mac_address_get>

080037be <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 80037be:	e9c0 1200 	strd	r1, r2, [r0]
 80037c2:	4770      	bx	lr

080037c4 <ReadConfigFile::~ReadConfigFile()>:
 80037c4:	4770      	bx	lr

080037c6 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 80037c6:	b538      	push	{r3, r4, r5, lr}
 80037c8:	4615      	mov	r5, r2
 80037ca:	f000 f819 	bl	8003800 <Sscan::checkName(char const*, char const*)>
 80037ce:	b198      	cbz	r0, 80037f8 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 80037d0:	4604      	mov	r4, r0
 80037d2:	2100      	movs	r1, #0
 80037d4:	220a      	movs	r2, #10
 80037d6:	7823      	ldrb	r3, [r4, #0]
 80037d8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 80037dc:	2809      	cmp	r0, #9
 80037de:	d80d      	bhi.n	80037fc <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 80037e0:	fb02 3101 	mla	r1, r2, r1, r3
 80037e4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80037e8:	3930      	subs	r1, #48	; 0x30
 80037ea:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 80037ee:	d1f2      	bne.n	80037d6 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 80037f0:	29ff      	cmp	r1, #255	; 0xff
 80037f2:	d803      	bhi.n	80037fc <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 80037f4:	7029      	strb	r1, [r5, #0]
 80037f6:	bd38      	pop	{r3, r4, r5, pc}
 80037f8:	2001      	movs	r0, #1
 80037fa:	e7fc      	b.n	80037f6 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 80037fc:	2002      	movs	r0, #2
 80037fe:	e7fa      	b.n	80037f6 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08003800 <Sscan::checkName(char const*, char const*)>:
 8003800:	4603      	mov	r3, r0
 8003802:	b510      	push	{r4, lr}
 8003804:	3901      	subs	r1, #1
 8003806:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800380a:	461c      	mov	r4, r3
 800380c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003810:	b120      	cbz	r0, 800381c <Sscan::checkName(char const*, char const*)+0x1c>
 8003812:	b10a      	cbz	r2, 8003818 <Sscan::checkName(char const*, char const*)+0x18>
 8003814:	4290      	cmp	r0, r2
 8003816:	d0f6      	beq.n	8003806 <Sscan::checkName(char const*, char const*)+0x6>
 8003818:	2000      	movs	r0, #0
 800381a:	e006      	b.n	800382a <Sscan::checkName(char const*, char const*)+0x2a>
 800381c:	2a3d      	cmp	r2, #61	; 0x3d
 800381e:	d104      	bne.n	800382a <Sscan::checkName(char const*, char const*)+0x2a>
 8003820:	7860      	ldrb	r0, [r4, #1]
 8003822:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8003826:	d000      	beq.n	800382a <Sscan::checkName(char const*, char const*)+0x2a>
 8003828:	1c60      	adds	r0, r4, #1
 800382a:	bd10      	pop	{r4, pc}

0800382c <Display::PrintInfo() [clone .isra.0]>:
 800382c:	b910      	cbnz	r0, 8003834 <Display::PrintInfo() [clone .isra.0]+0x8>
 800382e:	4803      	ldr	r0, [pc, #12]	; (800383c <Display::PrintInfo() [clone .isra.0]+0x10>)
 8003830:	f000 bbba 	b.w	8003fa8 <puts>
 8003834:	6803      	ldr	r3, [r0, #0]
 8003836:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003838:	4718      	bx	r3
 800383a:	bf00      	nop
 800383c:	08005849 	stmdaeq	r0, {r0, r3, r6, fp, ip, lr}

08003840 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8003840:	b513      	push	{r0, r1, r4, lr}
 8003842:	4604      	mov	r4, r0
 8003844:	0a13      	lsrs	r3, r2, #8
 8003846:	7800      	ldrb	r0, [r0, #0]
 8003848:	f88d 1004 	strb.w	r1, [sp, #4]
 800384c:	f88d 3005 	strb.w	r3, [sp, #5]
 8003850:	f88d 2006 	strb.w	r2, [sp, #6]
 8003854:	f001 f9e0 	bl	8004c18 <gd32_i2c_set_address(unsigned char)>
 8003858:	6860      	ldr	r0, [r4, #4]
 800385a:	f001 f9d5 	bl	8004c08 <gd32_i2c_set_baudrate(unsigned int)>
 800385e:	2103      	movs	r1, #3
 8003860:	a801      	add	r0, sp, #4
 8003862:	f001 f9df 	bl	8004c24 <gd32_i2c_write(char const*, unsigned int)>
 8003866:	b002      	add	sp, #8
 8003868:	bd10      	pop	{r4, pc}

0800386a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 800386a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800386c:	460d      	mov	r5, r1
 800386e:	4604      	mov	r4, r0
 8003870:	f001 f9d2 	bl	8004c18 <gd32_i2c_set_address(unsigned char)>
 8003874:	4628      	mov	r0, r5
 8003876:	f001 f9c7 	bl	8004c08 <gd32_i2c_set_baudrate(unsigned int)>
 800387a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800387e:	2b07      	cmp	r3, #7
 8003880:	d902      	bls.n	8003888 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8003882:	3c50      	subs	r4, #80	; 0x50
 8003884:	2c0f      	cmp	r4, #15
 8003886:	d809      	bhi.n	800389c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8003888:	2101      	movs	r1, #1
 800388a:	f10d 0007 	add.w	r0, sp, #7
 800388e:	f001 fa2f 	bl	8004cf0 <gd32_i2c_read(char*, unsigned int)>
 8003892:	fab0 f080 	clz	r0, r0
 8003896:	0940      	lsrs	r0, r0, #5
 8003898:	b003      	add	sp, #12
 800389a:	bd30      	pop	{r4, r5, pc}
 800389c:	2100      	movs	r1, #0
 800389e:	4608      	mov	r0, r1
 80038a0:	f001 f9c0 	bl	8004c24 <gd32_i2c_write(char const*, unsigned int)>
 80038a4:	e7f5      	b.n	8003892 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

080038a6 <Display::Detect7Segment()>:
 80038a6:	b538      	push	{r3, r4, r5, lr}
 80038a8:	68c1      	ldr	r1, [r0, #12]
 80038aa:	4604      	mov	r4, r0
 80038ac:	7a00      	ldrb	r0, [r0, #8]
 80038ae:	f7ff ffdc 	bl	800386a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 80038b2:	7460      	strb	r0, [r4, #17]
 80038b4:	b170      	cbz	r0, 80038d4 <Display::Detect7Segment()+0x2e>
 80038b6:	2200      	movs	r2, #0
 80038b8:	f104 0508 	add.w	r5, r4, #8
 80038bc:	4611      	mov	r1, r2
 80038be:	4628      	mov	r0, r5
 80038c0:	f7ff ffbe 	bl	8003840 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80038c4:	7c63      	ldrb	r3, [r4, #17]
 80038c6:	b12b      	cbz	r3, 80038d4 <Display::Detect7Segment()+0x2e>
 80038c8:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 80038cc:	2112      	movs	r1, #18
 80038ce:	4628      	mov	r0, r5
 80038d0:	f7ff ffb6 	bl	8003840 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80038d4:	bd38      	pop	{r3, r4, r5, pc}

080038d6 <Display::Detect(display::Type)>:
 80038d6:	2902      	cmp	r1, #2
 80038d8:	b538      	push	{r3, r4, r5, lr}
 80038da:	4604      	mov	r4, r0
 80038dc:	d014      	beq.n	8003908 <Display::Detect(display::Type)+0x32>
 80038de:	2904      	cmp	r1, #4
 80038e0:	d01b      	beq.n	800391a <Display::Detect(display::Type)+0x44>
 80038e2:	69a0      	ldr	r0, [r4, #24]
 80038e4:	b168      	cbz	r0, 8003902 <Display::Detect(display::Type)+0x2c>
 80038e6:	6803      	ldr	r3, [r0, #0]
 80038e8:	689b      	ldr	r3, [r3, #8]
 80038ea:	4798      	blx	r3
 80038ec:	4603      	mov	r3, r0
 80038ee:	69a0      	ldr	r0, [r4, #24]
 80038f0:	b9ab      	cbnz	r3, 800391e <Display::Detect(display::Type)+0x48>
 80038f2:	b110      	cbz	r0, 80038fa <Display::Detect(display::Type)+0x24>
 80038f4:	6803      	ldr	r3, [r0, #0]
 80038f6:	685b      	ldr	r3, [r3, #4]
 80038f8:	4798      	blx	r3
 80038fa:	2300      	movs	r3, #0
 80038fc:	61a3      	str	r3, [r4, #24]
 80038fe:	2304      	movs	r3, #4
 8003900:	6023      	str	r3, [r4, #0]
 8003902:	2300      	movs	r3, #0
 8003904:	6163      	str	r3, [r4, #20]
 8003906:	e010      	b.n	800392a <Display::Detect(display::Type)+0x54>
 8003908:	2018      	movs	r0, #24
 800390a:	f000 faaf 	bl	8003e6c <operator new(unsigned int)>
 800390e:	4605      	mov	r5, r0
 8003910:	2100      	movs	r1, #0
 8003912:	f000 f89f 	bl	8003a54 <Ssd1306::Ssd1306(TOledPanel)>
 8003916:	61a5      	str	r5, [r4, #24]
 8003918:	e7e3      	b.n	80038e2 <Display::Detect(display::Type)+0xc>
 800391a:	6001      	str	r1, [r0, #0]
 800391c:	e7e1      	b.n	80038e2 <Display::Detect(display::Type)+0xc>
 800391e:	6803      	ldr	r3, [r0, #0]
 8003920:	68db      	ldr	r3, [r3, #12]
 8003922:	4798      	blx	r3
 8003924:	69a3      	ldr	r3, [r4, #24]
 8003926:	2b00      	cmp	r3, #0
 8003928:	d0eb      	beq.n	8003902 <Display::Detect(display::Type)+0x2c>
 800392a:	bd38      	pop	{r3, r4, r5, pc}

0800392c <Display::Display()>:
 800392c:	2304      	movs	r3, #4
 800392e:	b510      	push	{r4, lr}
 8003930:	6003      	str	r3, [r0, #0]
 8003932:	4b0f      	ldr	r3, [pc, #60]	; (8003970 <Display::Display()+0x44>)
 8003934:	4604      	mov	r4, r0
 8003936:	681b      	ldr	r3, [r3, #0]
 8003938:	4a0e      	ldr	r2, [pc, #56]	; (8003974 <Display::Display()+0x48>)
 800393a:	6043      	str	r3, [r0, #4]
 800393c:	2321      	movs	r3, #33	; 0x21
 800393e:	7203      	strb	r3, [r0, #8]
 8003940:	4b0d      	ldr	r3, [pc, #52]	; (8003978 <Display::Display()+0x4c>)
 8003942:	2102      	movs	r1, #2
 8003944:	60c3      	str	r3, [r0, #12]
 8003946:	2300      	movs	r3, #0
 8003948:	e9c0 2305 	strd	r2, r3, [r0, #20]
 800394c:	8203      	strh	r3, [r0, #16]
 800394e:	4b0b      	ldr	r3, [pc, #44]	; (800397c <Display::Display()+0x50>)
 8003950:	6018      	str	r0, [r3, #0]
 8003952:	f7ff ffc0 	bl	80038d6 <Display::Detect(display::Type)>
 8003956:	4620      	mov	r0, r4
 8003958:	f7ff ffa5 	bl	80038a6 <Display::Detect7Segment()>
 800395c:	69a3      	ldr	r3, [r4, #24]
 800395e:	b10b      	cbz	r3, 8003964 <Display::Display()+0x38>
 8003960:	f000 f80e 	bl	8003980 <display::timeout::gpio_init()>
 8003964:	69a0      	ldr	r0, [r4, #24]
 8003966:	f7ff ff61 	bl	800382c <Display::PrintInfo() [clone .isra.0]>
 800396a:	4620      	mov	r0, r4
 800396c:	bd10      	pop	{r4, pc}
 800396e:	bf00      	nop
 8003970:	20001814 	andcs	r1, r0, r4, lsl r8
 8003974:	000493e0 	andeq	r9, r4, r0, ror #7
 8003978:	00061a80 	andeq	r1, r6, r0, lsl #21
 800397c:	20001770 	andcs	r1, r0, r0, ror r7

08003980 <display::timeout::gpio_init()>:
 8003980:	4770      	bx	lr

08003982 <Ssd1306::~Ssd1306()>:
 8003982:	4770      	bx	lr

08003984 <Ssd1306::SetCursor(unsigned int)>:
 8003984:	4770      	bx	lr
	...

08003988 <Ssd1306::PrintInfo()>:
 8003988:	b410      	push	{r4}
 800398a:	4906      	ldr	r1, [pc, #24]	; (80039a4 <Ssd1306::PrintInfo()+0x1c>)
 800398c:	7c44      	ldrb	r4, [r0, #17]
 800398e:	7903      	ldrb	r3, [r0, #4]
 8003990:	7942      	ldrb	r2, [r0, #5]
 8003992:	4805      	ldr	r0, [pc, #20]	; (80039a8 <Ssd1306::PrintInfo()+0x20>)
 8003994:	2c00      	cmp	r4, #0
 8003996:	bf08      	it	eq
 8003998:	4601      	moveq	r1, r0
 800399a:	4804      	ldr	r0, [pc, #16]	; (80039ac <Ssd1306::PrintInfo()+0x24>)
 800399c:	bc10      	pop	{r4}
 800399e:	f7fd bcf7 	b.w	8001390 <printf>
 80039a2:	bf00      	nop
 80039a4:	0800585a 	stmdaeq	r0, {r1, r3, r4, r6, fp, ip, lr}
 80039a8:	08005861 	stmdaeq	r0, {r0, r5, r6, fp, ip, lr}
 80039ac:	08005869 	stmdaeq	r0, {r0, r3, r5, r6, fp, ip, lr}

080039b0 <Ssd1306::~Ssd1306()>:
 80039b0:	b510      	push	{r4, lr}
 80039b2:	4604      	mov	r4, r0
 80039b4:	f000 fa58 	bl	8003e68 <operator delete(void*)>
 80039b8:	4620      	mov	r0, r4
 80039ba:	bd10      	pop	{r4, pc}

080039bc <HAL_I2C::Setup()>:
 80039bc:	b510      	push	{r4, lr}
 80039be:	4604      	mov	r4, r0
 80039c0:	7800      	ldrb	r0, [r0, #0]
 80039c2:	f001 f929 	bl	8004c18 <gd32_i2c_set_address(unsigned char)>
 80039c6:	6860      	ldr	r0, [r4, #4]
 80039c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80039cc:	f001 b91c 	b.w	8004c08 <gd32_i2c_set_baudrate(unsigned int)>

080039d0 <Ssd1306::PutChar(int)>:
 80039d0:	b510      	push	{r4, lr}
 80039d2:	f1a1 0420 	sub.w	r4, r1, #32
 80039d6:	2c5f      	cmp	r4, #95	; 0x5f
 80039d8:	bf88      	it	hi
 80039da:	2400      	movhi	r4, #0
 80039dc:	3008      	adds	r0, #8
 80039de:	f7ff ffed 	bl	80039bc <HAL_I2C::Setup()>
 80039e2:	4804      	ldr	r0, [pc, #16]	; (80039f4 <Ssd1306::PutChar(int)+0x24>)
 80039e4:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 80039e8:	4420      	add	r0, r4
 80039ea:	2107      	movs	r1, #7
 80039ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80039f0:	f001 b918 	b.w	8004c24 <gd32_i2c_write(char const*, unsigned int)>
 80039f4:	0800587c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, ip, lr}

080039f8 <Ssd1306::PutString(char const*)>:
 80039f8:	b538      	push	{r3, r4, r5, lr}
 80039fa:	4605      	mov	r5, r0
 80039fc:	1e4c      	subs	r4, r1, #1
 80039fe:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8003a02:	b901      	cbnz	r1, 8003a06 <Ssd1306::PutString(char const*)+0xe>
 8003a04:	bd38      	pop	{r3, r4, r5, pc}
 8003a06:	4628      	mov	r0, r5
 8003a08:	f7ff ffe2 	bl	80039d0 <Ssd1306::PutChar(int)>
 8003a0c:	e7f7      	b.n	80039fe <Ssd1306::PutString(char const*)+0x6>

08003a0e <Ssd1306::Text(char const*, unsigned int)>:
 8003a0e:	b570      	push	{r4, r5, r6, lr}
 8003a10:	7903      	ldrb	r3, [r0, #4]
 8003a12:	4605      	mov	r5, r0
 8003a14:	460c      	mov	r4, r1
 8003a16:	4293      	cmp	r3, r2
 8003a18:	bf94      	ite	ls
 8003a1a:	18ce      	addls	r6, r1, r3
 8003a1c:	188e      	addhi	r6, r1, r2
 8003a1e:	42b4      	cmp	r4, r6
 8003a20:	d100      	bne.n	8003a24 <Ssd1306::Text(char const*, unsigned int)+0x16>
 8003a22:	bd70      	pop	{r4, r5, r6, pc}
 8003a24:	4628      	mov	r0, r5
 8003a26:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003a2a:	f7ff ffd1 	bl	80039d0 <Ssd1306::PutChar(int)>
 8003a2e:	e7f6      	b.n	8003a1e <Ssd1306::Text(char const*, unsigned int)+0x10>

08003a30 <Ssd1306::InitMembers()>:
 8003a30:	7c03      	ldrb	r3, [r0, #16]
 8003a32:	b14b      	cbz	r3, 8003a48 <Ssd1306::InitMembers()+0x18>
 8003a34:	3b01      	subs	r3, #1
 8003a36:	2b01      	cmp	r3, #1
 8003a38:	d909      	bls.n	8003a4e <Ssd1306::InitMembers()+0x1e>
 8003a3a:	2308      	movs	r3, #8
 8003a3c:	2204      	movs	r2, #4
 8003a3e:	2115      	movs	r1, #21
 8003a40:	7143      	strb	r3, [r0, #5]
 8003a42:	7101      	strb	r1, [r0, #4]
 8003a44:	6142      	str	r2, [r0, #20]
 8003a46:	4770      	bx	lr
 8003a48:	2308      	movs	r3, #8
 8003a4a:	461a      	mov	r2, r3
 8003a4c:	e7f7      	b.n	8003a3e <Ssd1306::InitMembers()+0xe>
 8003a4e:	2304      	movs	r3, #4
 8003a50:	e7fb      	b.n	8003a4a <Ssd1306::InitMembers()+0x1a>
	...

08003a54 <Ssd1306::Ssd1306(TOledPanel)>:
 8003a54:	4a08      	ldr	r2, [pc, #32]	; (8003a78 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8003a56:	b508      	push	{r3, lr}
 8003a58:	6002      	str	r2, [r0, #0]
 8003a5a:	227f      	movs	r2, #127	; 0x7f
 8003a5c:	80c2      	strh	r2, [r0, #6]
 8003a5e:	223c      	movs	r2, #60	; 0x3c
 8003a60:	7202      	strb	r2, [r0, #8]
 8003a62:	4a06      	ldr	r2, [pc, #24]	; (8003a7c <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8003a64:	7401      	strb	r1, [r0, #16]
 8003a66:	60c2      	str	r2, [r0, #12]
 8003a68:	2200      	movs	r2, #0
 8003a6a:	7442      	strb	r2, [r0, #17]
 8003a6c:	4a04      	ldr	r2, [pc, #16]	; (8003a80 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8003a6e:	6010      	str	r0, [r2, #0]
 8003a70:	f7ff ffde 	bl	8003a30 <Ssd1306::InitMembers()>
 8003a74:	bd08      	pop	{r3, pc}
 8003a76:	bf00      	nop
 8003a78:	08005b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp, ip, lr}
 8003a7c:	00061a80 	andeq	r1, r6, r0, lsl #21
 8003a80:	200017fc 	strdcs	r1, [r0], -ip

08003a84 <Ssd1306::SendCommand(unsigned char)>:
 8003a84:	2300      	movs	r3, #0
 8003a86:	b507      	push	{r0, r1, r2, lr}
 8003a88:	3008      	adds	r0, #8
 8003a8a:	f88d 3004 	strb.w	r3, [sp, #4]
 8003a8e:	f88d 1005 	strb.w	r1, [sp, #5]
 8003a92:	f7ff ff93 	bl	80039bc <HAL_I2C::Setup()>
 8003a96:	2102      	movs	r1, #2
 8003a98:	a801      	add	r0, sp, #4
 8003a9a:	f001 f8c3 	bl	8004c24 <gd32_i2c_write(char const*, unsigned int)>
 8003a9e:	b003      	add	sp, #12
 8003aa0:	f85d fb04 	ldr.w	pc, [sp], #4

08003aa4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8003aa4:	2914      	cmp	r1, #20
 8003aa6:	b570      	push	{r4, r5, r6, lr}
 8003aa8:	4605      	mov	r5, r0
 8003aaa:	4616      	mov	r6, r2
 8003aac:	d81c      	bhi.n	8003ae8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8003aae:	7943      	ldrb	r3, [r0, #5]
 8003ab0:	4293      	cmp	r3, r2
 8003ab2:	d919      	bls.n	8003ae8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8003ab4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8003ab8:	7c43      	ldrb	r3, [r0, #17]
 8003aba:	004c      	lsls	r4, r1, #1
 8003abc:	b2e4      	uxtb	r4, r4
 8003abe:	b10b      	cbz	r3, 8003ac4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8003ac0:	3404      	adds	r4, #4
 8003ac2:	b2e4      	uxtb	r4, r4
 8003ac4:	4628      	mov	r0, r5
 8003ac6:	f004 010e 	and.w	r1, r4, #14
 8003aca:	f7ff ffdb 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003ace:	0921      	lsrs	r1, r4, #4
 8003ad0:	4628      	mov	r0, r5
 8003ad2:	f041 0110 	orr.w	r1, r1, #16
 8003ad6:	f7ff ffd5 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003ada:	4628      	mov	r0, r5
 8003adc:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8003ae0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003ae4:	f7ff bfce 	b.w	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003ae8:	bd70      	pop	{r4, r5, r6, pc}

08003aea <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8003aea:	b570      	push	{r4, r5, r6, lr}
 8003aec:	4604      	mov	r4, r0
 8003aee:	4615      	mov	r5, r2
 8003af0:	461e      	mov	r6, r3
 8003af2:	b171      	cbz	r1, 8003b12 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8003af4:	7943      	ldrb	r3, [r0, #5]
 8003af6:	428b      	cmp	r3, r1
 8003af8:	d30b      	bcc.n	8003b12 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8003afa:	3901      	subs	r1, #1
 8003afc:	b2ca      	uxtb	r2, r1
 8003afe:	2100      	movs	r1, #0
 8003b00:	f7ff ffd0 	bl	8003aa4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003b04:	4632      	mov	r2, r6
 8003b06:	4629      	mov	r1, r5
 8003b08:	4620      	mov	r0, r4
 8003b0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003b0e:	f7ff bf7e 	b.w	8003a0e <Ssd1306::Text(char const*, unsigned int)>
 8003b12:	bd70      	pop	{r4, r5, r6, pc}

08003b14 <Ssd1306::ClearLine(unsigned char)>:
 8003b14:	b538      	push	{r3, r4, r5, lr}
 8003b16:	4605      	mov	r5, r0
 8003b18:	b1b9      	cbz	r1, 8003b4a <Ssd1306::ClearLine(unsigned char)+0x36>
 8003b1a:	7943      	ldrb	r3, [r0, #5]
 8003b1c:	428b      	cmp	r3, r1
 8003b1e:	d314      	bcc.n	8003b4a <Ssd1306::ClearLine(unsigned char)+0x36>
 8003b20:	3901      	subs	r1, #1
 8003b22:	b2cc      	uxtb	r4, r1
 8003b24:	4622      	mov	r2, r4
 8003b26:	2100      	movs	r1, #0
 8003b28:	f7ff ffbc 	bl	8003aa4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003b2c:	f105 0008 	add.w	r0, r5, #8
 8003b30:	f7ff ff44 	bl	80039bc <HAL_I2C::Setup()>
 8003b34:	2181      	movs	r1, #129	; 0x81
 8003b36:	4805      	ldr	r0, [pc, #20]	; (8003b4c <Ssd1306::ClearLine(unsigned char)+0x38>)
 8003b38:	f001 f874 	bl	8004c24 <gd32_i2c_write(char const*, unsigned int)>
 8003b3c:	4622      	mov	r2, r4
 8003b3e:	4628      	mov	r0, r5
 8003b40:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003b44:	2100      	movs	r1, #0
 8003b46:	f7ff bfad 	b.w	8003aa4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003b4a:	bd38      	pop	{r3, r4, r5, pc}
 8003b4c:	20001774 	andcs	r1, r0, r4, ror r7

08003b50 <Ssd1306::SetSleep(bool)>:
 8003b50:	b111      	cbz	r1, 8003b58 <Ssd1306::SetSleep(bool)+0x8>
 8003b52:	21ae      	movs	r1, #174	; 0xae
 8003b54:	f7ff bf96 	b.w	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003b58:	21af      	movs	r1, #175	; 0xaf
 8003b5a:	e7fb      	b.n	8003b54 <Ssd1306::SetSleep(bool)+0x4>

08003b5c <Ssd1306::SetContrast(unsigned char)>:
 8003b5c:	b538      	push	{r3, r4, r5, lr}
 8003b5e:	4604      	mov	r4, r0
 8003b60:	460d      	mov	r5, r1
 8003b62:	7181      	strb	r1, [r0, #6]
 8003b64:	2181      	movs	r1, #129	; 0x81
 8003b66:	f7ff ff8d 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003b6a:	4629      	mov	r1, r5
 8003b6c:	4620      	mov	r0, r4
 8003b6e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003b72:	f7ff bf87 	b.w	8003a84 <Ssd1306::SendCommand(unsigned char)>

08003b76 <Ssd1306::SetFlipVertically(bool)>:
 8003b76:	b510      	push	{r4, lr}
 8003b78:	4604      	mov	r4, r0
 8003b7a:	71c1      	strb	r1, [r0, #7]
 8003b7c:	b141      	cbz	r1, 8003b90 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8003b7e:	21c0      	movs	r1, #192	; 0xc0
 8003b80:	f7ff ff80 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003b84:	21a0      	movs	r1, #160	; 0xa0
 8003b86:	4620      	mov	r0, r4
 8003b88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003b8c:	f7ff bf7a 	b.w	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003b90:	21c8      	movs	r1, #200	; 0xc8
 8003b92:	f7ff ff77 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003b96:	21a1      	movs	r1, #161	; 0xa1
 8003b98:	e7f5      	b.n	8003b86 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08003b9c <Ssd1306::CheckSH1106()>:
 8003b9c:	b570      	push	{r4, r5, r6, lr}
 8003b9e:	4604      	mov	r4, r0
 8003ba0:	b086      	sub	sp, #24
 8003ba2:	2100      	movs	r1, #0
 8003ba4:	f7ff ff6e 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003ba8:	2190      	movs	r1, #144	; 0x90
 8003baa:	4620      	mov	r0, r4
 8003bac:	f7ff ff6a 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003bb0:	21b0      	movs	r1, #176	; 0xb0
 8003bb2:	4620      	mov	r0, r4
 8003bb4:	f7ff ff66 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003bb8:	4b22      	ldr	r3, [pc, #136]	; (8003c44 <Ssd1306::CheckSH1106()+0xa8>)
 8003bba:	f104 0608 	add.w	r6, r4, #8
 8003bbe:	6818      	ldr	r0, [r3, #0]
 8003bc0:	791b      	ldrb	r3, [r3, #4]
 8003bc2:	ad02      	add	r5, sp, #8
 8003bc4:	9002      	str	r0, [sp, #8]
 8003bc6:	4630      	mov	r0, r6
 8003bc8:	712b      	strb	r3, [r5, #4]
 8003bca:	f7ff fef7 	bl	80039bc <HAL_I2C::Setup()>
 8003bce:	2105      	movs	r1, #5
 8003bd0:	4628      	mov	r0, r5
 8003bd2:	f001 f827 	bl	8004c24 <gd32_i2c_write(char const*, unsigned int)>
 8003bd6:	2100      	movs	r1, #0
 8003bd8:	4620      	mov	r0, r4
 8003bda:	f7ff ff53 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003bde:	2190      	movs	r1, #144	; 0x90
 8003be0:	4620      	mov	r0, r4
 8003be2:	f7ff ff4f 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003be6:	21b0      	movs	r1, #176	; 0xb0
 8003be8:	4620      	mov	r0, r4
 8003bea:	f7ff ff4b 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003bee:	2300      	movs	r3, #0
 8003bf0:	9304      	str	r3, [sp, #16]
 8003bf2:	f88d 3014 	strb.w	r3, [sp, #20]
 8003bf6:	2340      	movs	r3, #64	; 0x40
 8003bf8:	4630      	mov	r0, r6
 8003bfa:	f88d 3007 	strb.w	r3, [sp, #7]
 8003bfe:	f7ff fedd 	bl	80039bc <HAL_I2C::Setup()>
 8003c02:	2101      	movs	r1, #1
 8003c04:	f10d 0007 	add.w	r0, sp, #7
 8003c08:	f001 f80c 	bl	8004c24 <gd32_i2c_write(char const*, unsigned int)>
 8003c0c:	4630      	mov	r0, r6
 8003c0e:	f7ff fed5 	bl	80039bc <HAL_I2C::Setup()>
 8003c12:	2105      	movs	r1, #5
 8003c14:	a804      	add	r0, sp, #16
 8003c16:	f001 f86b 	bl	8004cf0 <gd32_i2c_read(char*, unsigned int)>
 8003c1a:	2201      	movs	r2, #1
 8003c1c:	5cab      	ldrb	r3, [r5, r2]
 8003c1e:	a904      	add	r1, sp, #16
 8003c20:	3201      	adds	r2, #1
 8003c22:	4411      	add	r1, r2
 8003c24:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 8003c28:	428b      	cmp	r3, r1
 8003c2a:	d006      	beq.n	8003c3a <Ssd1306::CheckSH1106()+0x9e>
 8003c2c:	1a5b      	subs	r3, r3, r1
 8003c2e:	fab3 f383 	clz	r3, r3
 8003c32:	095b      	lsrs	r3, r3, #5
 8003c34:	7463      	strb	r3, [r4, #17]
 8003c36:	b006      	add	sp, #24
 8003c38:	bd70      	pop	{r4, r5, r6, pc}
 8003c3a:	2a05      	cmp	r2, #5
 8003c3c:	d1ee      	bne.n	8003c1c <Ssd1306::CheckSH1106()+0x80>
 8003c3e:	2300      	movs	r3, #0
 8003c40:	e7f5      	b.n	8003c2e <Ssd1306::CheckSH1106()+0x92>
 8003c42:	bf00      	nop
 8003c44:	08005875 	stmdaeq	r0, {r0, r2, r4, r5, r6, fp, ip, lr}

08003c48 <Ssd1306::Cls()>:
 8003c48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003c4c:	4604      	mov	r4, r0
 8003c4e:	2600      	movs	r6, #0
 8003c50:	7c45      	ldrb	r5, [r0, #17]
 8003c52:	00ad      	lsls	r5, r5, #2
 8003c54:	b2ed      	uxtb	r5, r5
 8003c56:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8003c5a:	f045 0810 	orr.w	r8, r5, #16
 8003c5e:	b2ff      	uxtb	r7, r7
 8003c60:	6963      	ldr	r3, [r4, #20]
 8003c62:	4629      	mov	r1, r5
 8003c64:	42b3      	cmp	r3, r6
 8003c66:	4620      	mov	r0, r4
 8003c68:	d80b      	bhi.n	8003c82 <Ssd1306::Cls()+0x3a>
 8003c6a:	f7ff ff0b 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003c6e:	4641      	mov	r1, r8
 8003c70:	4620      	mov	r0, r4
 8003c72:	f7ff ff07 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003c76:	4620      	mov	r0, r4
 8003c78:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003c7c:	21b0      	movs	r1, #176	; 0xb0
 8003c7e:	f7ff bf01 	b.w	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003c82:	f7ff feff 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003c86:	4641      	mov	r1, r8
 8003c88:	4620      	mov	r0, r4
 8003c8a:	f7ff fefb 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003c8e:	f066 014f 	orn	r1, r6, #79	; 0x4f
 8003c92:	4620      	mov	r0, r4
 8003c94:	b2c9      	uxtb	r1, r1
 8003c96:	f7ff fef5 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003c9a:	7c23      	ldrb	r3, [r4, #16]
 8003c9c:	b123      	cbz	r3, 8003ca8 <Ssd1306::Cls()+0x60>
 8003c9e:	3b01      	subs	r3, #1
 8003ca0:	2b01      	cmp	r3, #1
 8003ca2:	d901      	bls.n	8003ca8 <Ssd1306::Cls()+0x60>
 8003ca4:	3601      	adds	r6, #1
 8003ca6:	e7db      	b.n	8003c60 <Ssd1306::Cls()+0x18>
 8003ca8:	f104 0008 	add.w	r0, r4, #8
 8003cac:	f7ff fe86 	bl	80039bc <HAL_I2C::Setup()>
 8003cb0:	4639      	mov	r1, r7
 8003cb2:	4802      	ldr	r0, [pc, #8]	; (8003cbc <Ssd1306::Cls()+0x74>)
 8003cb4:	f000 ffb6 	bl	8004c24 <gd32_i2c_write(char const*, unsigned int)>
 8003cb8:	e7f4      	b.n	8003ca4 <Ssd1306::Cls()+0x5c>
 8003cba:	bf00      	nop
 8003cbc:	20001774 	andcs	r1, r0, r4, ror r7

08003cc0 <Ssd1306::Start()>:
 8003cc0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003cc2:	7a04      	ldrb	r4, [r0, #8]
 8003cc4:	68c6      	ldr	r6, [r0, #12]
 8003cc6:	4605      	mov	r5, r0
 8003cc8:	4620      	mov	r0, r4
 8003cca:	f000 ffa5 	bl	8004c18 <gd32_i2c_set_address(unsigned char)>
 8003cce:	4630      	mov	r0, r6
 8003cd0:	f000 ff9a 	bl	8004c08 <gd32_i2c_set_baudrate(unsigned int)>
 8003cd4:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8003cd8:	2b07      	cmp	r3, #7
 8003cda:	d902      	bls.n	8003ce2 <Ssd1306::Start()+0x22>
 8003cdc:	3c50      	subs	r4, #80	; 0x50
 8003cde:	2c0f      	cmp	r4, #15
 8003ce0:	d80f      	bhi.n	8003d02 <Ssd1306::Start()+0x42>
 8003ce2:	2101      	movs	r1, #1
 8003ce4:	f10d 0007 	add.w	r0, sp, #7
 8003ce8:	f001 f802 	bl	8004cf0 <gd32_i2c_read(char*, unsigned int)>
 8003cec:	fab0 f480 	clz	r4, r0
 8003cf0:	0964      	lsrs	r4, r4, #5
 8003cf2:	b35c      	cbz	r4, 8003d4c <Ssd1306::Start()+0x8c>
 8003cf4:	7c2e      	ldrb	r6, [r5, #16]
 8003cf6:	b14e      	cbz	r6, 8003d0c <Ssd1306::Start()+0x4c>
 8003cf8:	3e01      	subs	r6, #1
 8003cfa:	2e01      	cmp	r6, #1
 8003cfc:	d929      	bls.n	8003d52 <Ssd1306::Start()+0x92>
 8003cfe:	2400      	movs	r4, #0
 8003d00:	e024      	b.n	8003d4c <Ssd1306::Start()+0x8c>
 8003d02:	2100      	movs	r1, #0
 8003d04:	4608      	mov	r0, r1
 8003d06:	f000 ff8d 	bl	8004c24 <gd32_i2c_write(char const*, unsigned int)>
 8003d0a:	e7ef      	b.n	8003cec <Ssd1306::Start()+0x2c>
 8003d0c:	4f16      	ldr	r7, [pc, #88]	; (8003d68 <Ssd1306::Start()+0xa8>)
 8003d0e:	4628      	mov	r0, r5
 8003d10:	f817 1b01 	ldrb.w	r1, [r7], #1
 8003d14:	3601      	adds	r6, #1
 8003d16:	f7ff feb5 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003d1a:	2e18      	cmp	r6, #24
 8003d1c:	d1f7      	bne.n	8003d0e <Ssd1306::Start()+0x4e>
 8003d1e:	2300      	movs	r3, #0
 8003d20:	4a12      	ldr	r2, [pc, #72]	; (8003d6c <Ssd1306::Start()+0xac>)
 8003d22:	4618      	mov	r0, r3
 8003d24:	4611      	mov	r1, r2
 8003d26:	3301      	adds	r3, #1
 8003d28:	2b86      	cmp	r3, #134	; 0x86
 8003d2a:	f802 0b01 	strb.w	r0, [r2], #1
 8003d2e:	d1fa      	bne.n	8003d26 <Ssd1306::Start()+0x66>
 8003d30:	2340      	movs	r3, #64	; 0x40
 8003d32:	4628      	mov	r0, r5
 8003d34:	700b      	strb	r3, [r1, #0]
 8003d36:	f7ff ff31 	bl	8003b9c <Ssd1306::CheckSH1106()>
 8003d3a:	4628      	mov	r0, r5
 8003d3c:	f7ff ff84 	bl	8003c48 <Ssd1306::Cls()>
 8003d40:	21af      	movs	r1, #175	; 0xaf
 8003d42:	4628      	mov	r0, r5
 8003d44:	f7ff fe9e 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003d48:	2301      	movs	r3, #1
 8003d4a:	71eb      	strb	r3, [r5, #7]
 8003d4c:	4620      	mov	r0, r4
 8003d4e:	b003      	add	sp, #12
 8003d50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003d52:	2600      	movs	r6, #0
 8003d54:	4f06      	ldr	r7, [pc, #24]	; (8003d70 <Ssd1306::Start()+0xb0>)
 8003d56:	4628      	mov	r0, r5
 8003d58:	f817 1b01 	ldrb.w	r1, [r7], #1
 8003d5c:	3601      	adds	r6, #1
 8003d5e:	f7ff fe91 	bl	8003a84 <Ssd1306::SendCommand(unsigned char)>
 8003d62:	2e18      	cmp	r6, #24
 8003d64:	d1f7      	bne.n	8003d56 <Ssd1306::Start()+0x96>
 8003d66:	e7da      	b.n	8003d1e <Ssd1306::Start()+0x5e>
 8003d68:	08005b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp, ip, lr}
 8003d6c:	20001774 	andcs	r1, r0, r4, ror r7
 8003d70:	08005b1c 	stmdaeq	r0, {r2, r3, r4, r8, r9, fp, ip, lr}

08003d74 <console_putc>:
 8003d74:	f000 b9ba 	b.w	80040ec <uart0_putc>

08003d78 <console_puts>:
 8003d78:	f000 b9d8 	b.w	800412c <uart0_puts>

08003d7c <LedBlink::LedBlink()>:
 8003d7c:	b538      	push	{r3, r4, r5, lr}
 8003d7e:	2205      	movs	r2, #5
 8003d80:	2300      	movs	r3, #0
 8003d82:	e9c0 3200 	strd	r3, r2, [r0]
 8003d86:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8003d8a:	6083      	str	r3, [r0, #8]
 8003d8c:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8003d90:	6143      	str	r3, [r0, #20]
 8003d92:	4b09      	ldr	r3, [pc, #36]	; (8003db8 <LedBlink::LedBlink()+0x3c>)
 8003d94:	4d09      	ldr	r5, [pc, #36]	; (8003dbc <LedBlink::LedBlink()+0x40>)
 8003d96:	4604      	mov	r4, r0
 8003d98:	6018      	str	r0, [r3, #0]
 8003d9a:	f240 6004 	movw	r0, #1540	; 0x604
 8003d9e:	f000 fc25 	bl	80045ec <rcu_periph_clock_enable>
 8003da2:	4628      	mov	r0, r5
 8003da4:	2301      	movs	r3, #1
 8003da6:	2203      	movs	r2, #3
 8003da8:	2110      	movs	r1, #16
 8003daa:	f000 fb8d 	bl	80044c8 <gpio_init>
 8003dae:	2301      	movs	r3, #1
 8003db0:	4620      	mov	r0, r4
 8003db2:	616b      	str	r3, [r5, #20]
 8003db4:	bd38      	pop	{r3, r4, r5, pc}
 8003db6:	bf00      	nop
 8003db8:	20001800 	andcs	r1, r0, r0, lsl #16
 8003dbc:	40011000 	andmi	r1, r1, r0

08003dc0 <Hardware::Hardware()>:
 8003dc0:	b570      	push	{r4, r5, r6, lr}
 8003dc2:	2400      	movs	r4, #0
 8003dc4:	4b26      	ldr	r3, [pc, #152]	; (8003e60 <Hardware::Hardware()+0xa0>)
 8003dc6:	b090      	sub	sp, #64	; 0x40
 8003dc8:	6004      	str	r4, [r0, #0]
 8003dca:	7104      	strb	r4, [r0, #4]
 8003dcc:	6018      	str	r0, [r3, #0]
 8003dce:	4605      	mov	r5, r0
 8003dd0:	f7fc f9ae 	bl	8000130 <console_init>
 8003dd4:	f000 f9cc 	bl	8004170 <systick_config>
 8003dd8:	f001 f908 	bl	8004fec <udelay_init()>
 8003ddc:	f001 f904 	bl	8004fe8 <micros_init()>
 8003de0:	f240 701b 	movw	r0, #1819	; 0x71b
 8003de4:	f000 fc02 	bl	80045ec <rcu_periph_clock_enable>
 8003de8:	f240 701c 	movw	r0, #1820	; 0x71c
 8003dec:	f000 fbfe 	bl	80045ec <rcu_periph_clock_enable>
 8003df0:	4e1c      	ldr	r6, [pc, #112]	; (8003e64 <Hardware::Hardware()+0xa4>)
 8003df2:	f000 fbf3 	bl	80045dc <pmu_backup_write_enable>
 8003df6:	f000 fa49 	bl	800428c <bkp_deinit>
 8003dfa:	4621      	mov	r1, r4
 8003dfc:	2002      	movs	r0, #2
 8003dfe:	f000 fa4d 	bl	800429c <bkp_data_write>
 8003e02:	f240 7004 	movw	r0, #1796	; 0x704
 8003e06:	f000 fbf1 	bl	80045ec <rcu_periph_clock_enable>
 8003e0a:	4630      	mov	r0, r6
 8003e0c:	f000 fca4 	bl	8004758 <timer_deinit>
 8003e10:	236b      	movs	r3, #107	; 0x6b
 8003e12:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003e16:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003e1a:	a903      	add	r1, sp, #12
 8003e1c:	4630      	mov	r0, r6
 8003e1e:	9305      	str	r3, [sp, #20]
 8003e20:	f000 fcfc 	bl	800481c <timer_init>
 8003e24:	4630      	mov	r0, r6
 8003e26:	f000 fd51 	bl	80048cc <timer_enable>
 8003e2a:	f000 fe5f 	bl	8004aec <gd32_adc_init()>
 8003e2e:	2213      	movs	r2, #19
 8003e30:	2302      	movs	r3, #2
 8003e32:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8003e36:	237a      	movs	r3, #122	; 0x7a
 8003e38:	a807      	add	r0, sp, #28
 8003e3a:	930c      	str	r3, [sp, #48]	; 0x30
 8003e3c:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003e40:	9407      	str	r4, [sp, #28]
 8003e42:	940f      	str	r4, [sp, #60]	; 0x3c
 8003e44:	f000 f8de 	bl	8004004 <mktime>
 8003e48:	4621      	mov	r1, r4
 8003e4a:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8003e4e:	a801      	add	r0, sp, #4
 8003e50:	f000 f924 	bl	800409c <settimeofday>
 8003e54:	f000 fea4 	bl	8004ba0 <gd32_i2c_begin()>
 8003e58:	4628      	mov	r0, r5
 8003e5a:	b010      	add	sp, #64	; 0x40
 8003e5c:	bd70      	pop	{r4, r5, r6, pc}
 8003e5e:	bf00      	nop
 8003e60:	20001804 	andcs	r1, r0, r4, lsl #16
 8003e64:	40001000 	andmi	r1, r0, r0

08003e68 <operator delete(void*)>:
 8003e68:	f000 b84c 	b.w	8003f04 <free>

08003e6c <operator new(unsigned int)>:
 8003e6c:	f000 b800 	b.w	8003e70 <malloc>

08003e70 <malloc>:
 8003e70:	b538      	push	{r3, r4, r5, lr}
 8003e72:	4604      	mov	r4, r0
 8003e74:	4601      	mov	r1, r0
 8003e76:	481c      	ldr	r0, [pc, #112]	; (8003ee8 <malloc+0x78>)
 8003e78:	f7fd fa8a 	bl	8001390 <printf>
 8003e7c:	b17c      	cbz	r4, 8003e9e <malloc+0x2e>
 8003e7e:	4b1b      	ldr	r3, [pc, #108]	; (8003eec <malloc+0x7c>)
 8003e80:	6818      	ldr	r0, [r3, #0]
 8003e82:	b978      	cbnz	r0, 8003ea4 <malloc+0x34>
 8003e84:	4a1a      	ldr	r2, [pc, #104]	; (8003ef0 <malloc+0x80>)
 8003e86:	f104 031b 	add.w	r3, r4, #27
 8003e8a:	6811      	ldr	r1, [r2, #0]
 8003e8c:	4819      	ldr	r0, [pc, #100]	; (8003ef4 <malloc+0x84>)
 8003e8e:	f023 030f 	bic.w	r3, r3, #15
 8003e92:	440b      	add	r3, r1
 8003e94:	4283      	cmp	r3, r0
 8003e96:	d921      	bls.n	8003edc <malloc+0x6c>
 8003e98:	4817      	ldr	r0, [pc, #92]	; (8003ef8 <malloc+0x88>)
 8003e9a:	f7fd fa79 	bl	8001390 <printf>
 8003e9e:	2500      	movs	r5, #0
 8003ea0:	4628      	mov	r0, r5
 8003ea2:	bd38      	pop	{r3, r4, r5, pc}
 8003ea4:	4284      	cmp	r4, r0
 8003ea6:	d80a      	bhi.n	8003ebe <malloc+0x4e>
 8003ea8:	685a      	ldr	r2, [r3, #4]
 8003eaa:	6899      	ldr	r1, [r3, #8]
 8003eac:	3201      	adds	r2, #1
 8003eae:	428a      	cmp	r2, r1
 8003eb0:	605a      	str	r2, [r3, #4]
 8003eb2:	d900      	bls.n	8003eb6 <malloc+0x46>
 8003eb4:	609a      	str	r2, [r3, #8]
 8003eb6:	68d9      	ldr	r1, [r3, #12]
 8003eb8:	b919      	cbnz	r1, 8003ec2 <malloc+0x52>
 8003eba:	4604      	mov	r4, r0
 8003ebc:	e7e2      	b.n	8003e84 <malloc+0x14>
 8003ebe:	3310      	adds	r3, #16
 8003ec0:	e7de      	b.n	8003e80 <malloc+0x10>
 8003ec2:	4604      	mov	r4, r0
 8003ec4:	688a      	ldr	r2, [r1, #8]
 8003ec6:	60da      	str	r2, [r3, #12]
 8003ec8:	2300      	movs	r3, #0
 8003eca:	f101 050c 	add.w	r5, r1, #12
 8003ece:	608b      	str	r3, [r1, #8]
 8003ed0:	4622      	mov	r2, r4
 8003ed2:	462b      	mov	r3, r5
 8003ed4:	4809      	ldr	r0, [pc, #36]	; (8003efc <malloc+0x8c>)
 8003ed6:	f7fd fa5b 	bl	8001390 <printf>
 8003eda:	e7e1      	b.n	8003ea0 <malloc+0x30>
 8003edc:	6013      	str	r3, [r2, #0]
 8003ede:	4b08      	ldr	r3, [pc, #32]	; (8003f00 <malloc+0x90>)
 8003ee0:	e9c1 3400 	strd	r3, r4, [r1]
 8003ee4:	e7f0      	b.n	8003ec8 <malloc+0x58>
 8003ee6:	bf00      	nop
 8003ee8:	08005b98 	stmdaeq	r0, {r3, r4, r7, r8, r9, fp, ip, lr}
 8003eec:	20000018 	andcs	r0, r0, r8, lsl r0
 8003ef0:	20000014 	andcs	r0, r0, r4, lsl r0
 8003ef4:	2000b000 	andcs	fp, r0, r0
 8003ef8:	08005ba4 	stmdaeq	r0, {r2, r5, r7, r8, r9, fp, ip, lr}
 8003efc:	08005bc0 	stmdaeq	r0, {r6, r7, r8, r9, fp, ip, lr}
 8003f00:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08003f04 <free>:
 8003f04:	b538      	push	{r3, r4, r5, lr}
 8003f06:	4604      	mov	r4, r0
 8003f08:	b1c8      	cbz	r0, 8003f3e <free+0x3a>
 8003f0a:	f1a0 050c 	sub.w	r5, r0, #12
 8003f0e:	4602      	mov	r2, r0
 8003f10:	4629      	mov	r1, r5
 8003f12:	480c      	ldr	r0, [pc, #48]	; (8003f44 <free+0x40>)
 8003f14:	f7fd fa3c 	bl	8001390 <printf>
 8003f18:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8003f1c:	4b0a      	ldr	r3, [pc, #40]	; (8003f48 <free+0x44>)
 8003f1e:	429a      	cmp	r2, r3
 8003f20:	d10d      	bne.n	8003f3e <free+0x3a>
 8003f22:	4b0a      	ldr	r3, [pc, #40]	; (8003f4c <free+0x48>)
 8003f24:	681a      	ldr	r2, [r3, #0]
 8003f26:	b152      	cbz	r2, 8003f3e <free+0x3a>
 8003f28:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8003f2c:	4291      	cmp	r1, r2
 8003f2e:	d107      	bne.n	8003f40 <free+0x3c>
 8003f30:	68da      	ldr	r2, [r3, #12]
 8003f32:	f844 2c04 	str.w	r2, [r4, #-4]
 8003f36:	685a      	ldr	r2, [r3, #4]
 8003f38:	60dd      	str	r5, [r3, #12]
 8003f3a:	3a01      	subs	r2, #1
 8003f3c:	605a      	str	r2, [r3, #4]
 8003f3e:	bd38      	pop	{r3, r4, r5, pc}
 8003f40:	3310      	adds	r3, #16
 8003f42:	e7ef      	b.n	8003f24 <free+0x20>
 8003f44:	08005beb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, r8, r9, fp, ip, lr}
 8003f48:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8003f4c:	20000018 	andcs	r0, r0, r8, lsl r0

08003f50 <memcpy>:
 8003f50:	b510      	push	{r4, lr}
 8003f52:	1e43      	subs	r3, r0, #1
 8003f54:	440a      	add	r2, r1
 8003f56:	4291      	cmp	r1, r2
 8003f58:	d100      	bne.n	8003f5c <memcpy+0xc>
 8003f5a:	bd10      	pop	{r4, pc}
 8003f5c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003f60:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003f64:	e7f7      	b.n	8003f56 <memcpy+0x6>

08003f66 <memset>:
 8003f66:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003f68:	b1c2      	cbz	r2, 8003f9c <memset+0x36>
 8003f6a:	4603      	mov	r3, r0
 8003f6c:	b2c9      	uxtb	r1, r1
 8003f6e:	075c      	lsls	r4, r3, #29
 8003f70:	d110      	bne.n	8003f94 <memset+0x2e>
 8003f72:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8003f76:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 8003f7a:	463d      	mov	r5, r7
 8003f7c:	461e      	mov	r6, r3
 8003f7e:	f022 0407 	bic.w	r4, r2, #7
 8003f82:	441c      	add	r4, r3
 8003f84:	42a6      	cmp	r6, r4
 8003f86:	d10a      	bne.n	8003f9e <memset+0x38>
 8003f88:	4413      	add	r3, r2
 8003f8a:	429c      	cmp	r4, r3
 8003f8c:	d006      	beq.n	8003f9c <memset+0x36>
 8003f8e:	f804 1b01 	strb.w	r1, [r4], #1
 8003f92:	e7fa      	b.n	8003f8a <memset+0x24>
 8003f94:	3a01      	subs	r2, #1
 8003f96:	f803 1b01 	strb.w	r1, [r3], #1
 8003f9a:	d1e8      	bne.n	8003f6e <memset+0x8>
 8003f9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003f9e:	f846 7b08 	str.w	r7, [r6], #8
 8003fa2:	f846 5c04 	str.w	r5, [r6, #-4]
 8003fa6:	e7ed      	b.n	8003f84 <memset+0x1e>

08003fa8 <puts>:
 8003fa8:	b508      	push	{r3, lr}
 8003faa:	f7ff fee5 	bl	8003d78 <console_puts>
 8003fae:	200a      	movs	r0, #10
 8003fb0:	f7ff fee0 	bl	8003d74 <console_putc>
 8003fb4:	2001      	movs	r0, #1
 8003fb6:	bd08      	pop	{r3, pc}

08003fb8 <isleapyear>:
 8003fb8:	2264      	movs	r2, #100	; 0x64
 8003fba:	fb90 f3f2 	sdiv	r3, r0, r2
 8003fbe:	fb02 0313 	mls	r3, r2, r3, r0
 8003fc2:	b94b      	cbnz	r3, 8003fd8 <isleapyear+0x20>
 8003fc4:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8003fc8:	fb90 f2f3 	sdiv	r2, r0, r3
 8003fcc:	fb03 0012 	mls	r0, r3, r2, r0
 8003fd0:	fab0 f080 	clz	r0, r0
 8003fd4:	0940      	lsrs	r0, r0, #5
 8003fd6:	4770      	bx	lr
 8003fd8:	f010 0f03 	tst.w	r0, #3
 8003fdc:	bf0c      	ite	eq
 8003fde:	2001      	moveq	r0, #1
 8003fe0:	2000      	movne	r0, #0
 8003fe2:	4770      	bx	lr

08003fe4 <getdaysofmonth>:
 8003fe4:	b510      	push	{r4, lr}
 8003fe6:	4604      	mov	r4, r0
 8003fe8:	2c01      	cmp	r4, #1
 8003fea:	4608      	mov	r0, r1
 8003fec:	d102      	bne.n	8003ff4 <getdaysofmonth+0x10>
 8003fee:	f7ff ffe3 	bl	8003fb8 <isleapyear>
 8003ff2:	b918      	cbnz	r0, 8003ffc <getdaysofmonth+0x18>
 8003ff4:	4b02      	ldr	r3, [pc, #8]	; (8004000 <getdaysofmonth+0x1c>)
 8003ff6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8003ffa:	bd10      	pop	{r4, pc}
 8003ffc:	201d      	movs	r0, #29
 8003ffe:	e7fc      	b.n	8003ffa <getdaysofmonth+0x16>
 8004000:	08005c14 	stmdaeq	r0, {r2, r4, sl, fp, ip, lr}

08004004 <mktime>:
 8004004:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004008:	4604      	mov	r4, r0
 800400a:	2800      	cmp	r0, #0
 800400c:	d043      	beq.n	8004096 <mktime+0x92>
 800400e:	6941      	ldr	r1, [r0, #20]
 8004010:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8004014:	2b45      	cmp	r3, #69	; 0x45
 8004016:	d83e      	bhi.n	8004096 <mktime+0x92>
 8004018:	2600      	movs	r6, #0
 800401a:	f240 75b2 	movw	r5, #1970	; 0x7b2
 800401e:	f240 186d 	movw	r8, #365	; 0x16d
 8004022:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 8004026:	42af      	cmp	r7, r5
 8004028:	da24      	bge.n	8004074 <mktime+0x70>
 800402a:	6927      	ldr	r7, [r4, #16]
 800402c:	2f0b      	cmp	r7, #11
 800402e:	d832      	bhi.n	8004096 <mktime+0x92>
 8004030:	2500      	movs	r5, #0
 8004032:	42af      	cmp	r7, r5
 8004034:	d129      	bne.n	800408a <mktime+0x86>
 8004036:	68e5      	ldr	r5, [r4, #12]
 8004038:	2d00      	cmp	r5, #0
 800403a:	dd2c      	ble.n	8004096 <mktime+0x92>
 800403c:	4638      	mov	r0, r7
 800403e:	f7ff ffd1 	bl	8003fe4 <getdaysofmonth>
 8004042:	4285      	cmp	r5, r0
 8004044:	dc27      	bgt.n	8004096 <mktime+0x92>
 8004046:	2318      	movs	r3, #24
 8004048:	3d01      	subs	r5, #1
 800404a:	4435      	add	r5, r6
 800404c:	435d      	muls	r5, r3
 800404e:	68a3      	ldr	r3, [r4, #8]
 8004050:	2b17      	cmp	r3, #23
 8004052:	d820      	bhi.n	8004096 <mktime+0x92>
 8004054:	213c      	movs	r1, #60	; 0x3c
 8004056:	442b      	add	r3, r5
 8004058:	fb01 f203 	mul.w	r2, r1, r3
 800405c:	6863      	ldr	r3, [r4, #4]
 800405e:	2b3b      	cmp	r3, #59	; 0x3b
 8004060:	d819      	bhi.n	8004096 <mktime+0x92>
 8004062:	6820      	ldr	r0, [r4, #0]
 8004064:	4413      	add	r3, r2
 8004066:	283b      	cmp	r0, #59	; 0x3b
 8004068:	fb01 f303 	mul.w	r3, r1, r3
 800406c:	d813      	bhi.n	8004096 <mktime+0x92>
 800406e:	4418      	add	r0, r3
 8004070:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004074:	4628      	mov	r0, r5
 8004076:	f7ff ff9f 	bl	8003fb8 <isleapyear>
 800407a:	2800      	cmp	r0, #0
 800407c:	bf14      	ite	ne
 800407e:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8004082:	4643      	moveq	r3, r8
 8004084:	3501      	adds	r5, #1
 8004086:	441e      	add	r6, r3
 8004088:	e7cd      	b.n	8004026 <mktime+0x22>
 800408a:	4628      	mov	r0, r5
 800408c:	f7ff ffaa 	bl	8003fe4 <getdaysofmonth>
 8004090:	3501      	adds	r5, #1
 8004092:	4406      	add	r6, r0
 8004094:	e7cd      	b.n	8004032 <mktime+0x2e>
 8004096:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800409a:	e7e9      	b.n	8004070 <mktime+0x6c>

0800409c <settimeofday>:
 800409c:	4b07      	ldr	r3, [pc, #28]	; (80040bc <settimeofday+0x20>)
 800409e:	b510      	push	{r4, lr}
 80040a0:	681a      	ldr	r2, [r3, #0]
 80040a2:	4b07      	ldr	r3, [pc, #28]	; (80040c0 <settimeofday+0x24>)
 80040a4:	6804      	ldr	r4, [r0, #0]
 80040a6:	601a      	str	r2, [r3, #0]
 80040a8:	6843      	ldr	r3, [r0, #4]
 80040aa:	4806      	ldr	r0, [pc, #24]	; (80040c4 <settimeofday+0x28>)
 80040ac:	17da      	asrs	r2, r3, #31
 80040ae:	fbc4 3200 	smlal	r3, r2, r4, r0
 80040b2:	4905      	ldr	r1, [pc, #20]	; (80040c8 <settimeofday+0x2c>)
 80040b4:	2000      	movs	r0, #0
 80040b6:	e9c1 3200 	strd	r3, r2, [r1]
 80040ba:	bd10      	pop	{r4, pc}
 80040bc:	20001814 	andcs	r1, r0, r4, lsl r8
 80040c0:	20001810 	andcs	r1, r0, r0, lsl r8
 80040c4:	000f4240 	andeq	r4, pc, r0, asr #4
 80040c8:	20001808 	andcs	r1, r0, r8, lsl #16

080040cc <uart0_init>:
 80040cc:	2301      	movs	r3, #1
 80040ce:	b507      	push	{r0, r1, r2, lr}
 80040d0:	2208      	movs	r2, #8
 80040d2:	9300      	str	r3, [sp, #0]
 80040d4:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80040d8:	2300      	movs	r3, #0
 80040da:	4803      	ldr	r0, [pc, #12]	; (80040e8 <uart0_init+0x1c>)
 80040dc:	f000 feac 	bl	8004e38 <gd32_uart_begin>
 80040e0:	b003      	add	sp, #12
 80040e2:	f85d fb04 	ldr.w	pc, [sp], #4
 80040e6:	bf00      	nop
 80040e8:	40013800 	andmi	r3, r1, r0, lsl #16

080040ec <uart0_putc>:
 80040ec:	280a      	cmp	r0, #10
 80040ee:	b538      	push	{r3, r4, r5, lr}
 80040f0:	4604      	mov	r4, r0
 80040f2:	d10a      	bne.n	800410a <uart0_putc+0x1e>
 80040f4:	4d0b      	ldr	r5, [pc, #44]	; (8004124 <uart0_putc+0x38>)
 80040f6:	2107      	movs	r1, #7
 80040f8:	4628      	mov	r0, r5
 80040fa:	f000 fcc9 	bl	8004a90 <usart_flag_get>
 80040fe:	2800      	cmp	r0, #0
 8004100:	d0f9      	beq.n	80040f6 <uart0_putc+0xa>
 8004102:	220d      	movs	r2, #13
 8004104:	4b08      	ldr	r3, [pc, #32]	; (8004128 <uart0_putc+0x3c>)
 8004106:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 800410a:	4d06      	ldr	r5, [pc, #24]	; (8004124 <uart0_putc+0x38>)
 800410c:	2107      	movs	r1, #7
 800410e:	4628      	mov	r0, r5
 8004110:	f000 fcbe 	bl	8004a90 <usart_flag_get>
 8004114:	2800      	cmp	r0, #0
 8004116:	d0f9      	beq.n	800410c <uart0_putc+0x20>
 8004118:	4b03      	ldr	r3, [pc, #12]	; (8004128 <uart0_putc+0x3c>)
 800411a:	b2e4      	uxtb	r4, r4
 800411c:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8004120:	bd38      	pop	{r3, r4, r5, pc}
 8004122:	bf00      	nop
 8004124:	40013800 	andmi	r3, r1, r0, lsl #16
 8004128:	40013000 	andmi	r3, r1, r0

0800412c <uart0_puts>:
 800412c:	b510      	push	{r4, lr}
 800412e:	1e44      	subs	r4, r0, #1
 8004130:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8004134:	b903      	cbnz	r3, 8004138 <uart0_puts+0xc>
 8004136:	bd10      	pop	{r4, pc}
 8004138:	2b0a      	cmp	r3, #10
 800413a:	d102      	bne.n	8004142 <uart0_puts+0x16>
 800413c:	200d      	movs	r0, #13
 800413e:	f7ff ffd5 	bl	80040ec <uart0_putc>
 8004142:	7820      	ldrb	r0, [r4, #0]
 8004144:	f7ff ffd2 	bl	80040ec <uart0_putc>
 8004148:	e7f2      	b.n	8004130 <uart0_puts+0x4>
	...

0800414c <mac_address_get>:
 800414c:	2102      	movs	r1, #2
 800414e:	4a07      	ldr	r2, [pc, #28]	; (800416c <mac_address_get+0x20>)
 8004150:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8004154:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8004158:	7001      	strb	r1, [r0, #0]
 800415a:	7042      	strb	r2, [r0, #1]
 800415c:	0e1a      	lsrs	r2, r3, #24
 800415e:	7082      	strb	r2, [r0, #2]
 8004160:	0c1a      	lsrs	r2, r3, #16
 8004162:	70c2      	strb	r2, [r0, #3]
 8004164:	0a1a      	lsrs	r2, r3, #8
 8004166:	7102      	strb	r2, [r0, #4]
 8004168:	7143      	strb	r3, [r0, #5]
 800416a:	4770      	bx	lr
 800416c:	1ffff000 	svcne	0x00fff000

08004170 <systick_config>:
 8004170:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004174:	4b0b      	ldr	r3, [pc, #44]	; (80041a4 <systick_config+0x34>)
 8004176:	681b      	ldr	r3, [r3, #0]
 8004178:	fbb3 f3f2 	udiv	r3, r3, r2
 800417c:	3b01      	subs	r3, #1
 800417e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004182:	d20d      	bcs.n	80041a0 <systick_config+0x30>
 8004184:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8004188:	21f0      	movs	r1, #240	; 0xf0
 800418a:	6153      	str	r3, [r2, #20]
 800418c:	4b06      	ldr	r3, [pc, #24]	; (80041a8 <systick_config+0x38>)
 800418e:	2007      	movs	r0, #7
 8004190:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8004194:	2100      	movs	r1, #0
 8004196:	6191      	str	r1, [r2, #24]
 8004198:	6110      	str	r0, [r2, #16]
 800419a:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800419e:	4770      	bx	lr
 80041a0:	e7fe      	b.n	80041a0 <systick_config+0x30>
 80041a2:	bf00      	nop
 80041a4:	200000e8 	andcs	r0, r0, r8, ror #1
 80041a8:	e000ed00 	and	lr, r0, r0, lsl #26

080041ac <SysTick_Handler>:
 80041ac:	4a02      	ldr	r2, [pc, #8]	; (80041b8 <SysTick_Handler+0xc>)
 80041ae:	6813      	ldr	r3, [r2, #0]
 80041b0:	3301      	adds	r3, #1
 80041b2:	6013      	str	r3, [r2, #0]
 80041b4:	4770      	bx	lr
 80041b6:	bf00      	nop
 80041b8:	20001814 	andcs	r1, r0, r4, lsl r8

080041bc <SystemInit>:
 80041bc:	4b30      	ldr	r3, [pc, #192]	; (8004280 <SystemInit+0xc4>)
 80041be:	4931      	ldr	r1, [pc, #196]	; (8004284 <SystemInit+0xc8>)
 80041c0:	681a      	ldr	r2, [r3, #0]
 80041c2:	f042 0201 	orr.w	r2, r2, #1
 80041c6:	601a      	str	r2, [r3, #0]
 80041c8:	685a      	ldr	r2, [r3, #4]
 80041ca:	f022 0203 	bic.w	r2, r2, #3
 80041ce:	605a      	str	r2, [r3, #4]
 80041d0:	681a      	ldr	r2, [r3, #0]
 80041d2:	400a      	ands	r2, r1
 80041d4:	601a      	str	r2, [r3, #0]
 80041d6:	6858      	ldr	r0, [r3, #4]
 80041d8:	4a2b      	ldr	r2, [pc, #172]	; (8004288 <SystemInit+0xcc>)
 80041da:	4002      	ands	r2, r0
 80041dc:	605a      	str	r2, [r3, #4]
 80041de:	681a      	ldr	r2, [r3, #0]
 80041e0:	400a      	ands	r2, r1
 80041e2:	601a      	str	r2, [r3, #0]
 80041e4:	681a      	ldr	r2, [r3, #0]
 80041e6:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80041ea:	601a      	str	r2, [r3, #0]
 80041ec:	685a      	ldr	r2, [r3, #4]
 80041ee:	f022 620f 	bic.w	r2, r2, #149946368	; 0x8f00000
 80041f2:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 80041f6:	605a      	str	r2, [r3, #4]
 80041f8:	681a      	ldr	r2, [r3, #0]
 80041fa:	400a      	ands	r2, r1
 80041fc:	601a      	str	r2, [r3, #0]
 80041fe:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 8004202:	609a      	str	r2, [r3, #8]
 8004204:	681a      	ldr	r2, [r3, #0]
 8004206:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800420a:	601a      	str	r2, [r3, #0]
 800420c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004210:	6819      	ldr	r1, [r3, #0]
 8004212:	0389      	lsls	r1, r1, #14
 8004214:	d401      	bmi.n	800421a <SystemInit+0x5e>
 8004216:	3a01      	subs	r2, #1
 8004218:	d1fa      	bne.n	8004210 <SystemInit+0x54>
 800421a:	681a      	ldr	r2, [r3, #0]
 800421c:	0390      	lsls	r0, r2, #14
 800421e:	d400      	bmi.n	8004222 <SystemInit+0x66>
 8004220:	e7fe      	b.n	8004220 <SystemInit+0x64>
 8004222:	685a      	ldr	r2, [r3, #4]
 8004224:	605a      	str	r2, [r3, #4]
 8004226:	685a      	ldr	r2, [r3, #4]
 8004228:	605a      	str	r2, [r3, #4]
 800422a:	685a      	ldr	r2, [r3, #4]
 800422c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004230:	605a      	str	r2, [r3, #4]
 8004232:	685a      	ldr	r2, [r3, #4]
 8004234:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8004238:	605a      	str	r2, [r3, #4]
 800423a:	685a      	ldr	r2, [r3, #4]
 800423c:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8004240:	605a      	str	r2, [r3, #4]
 8004242:	685a      	ldr	r2, [r3, #4]
 8004244:	f022 6203 	bic.w	r2, r2, #137363456	; 0x8300000
 8004248:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 800424c:	605a      	str	r2, [r3, #4]
 800424e:	685a      	ldr	r2, [r3, #4]
 8004250:	f042 6202 	orr.w	r2, r2, #136314880	; 0x8200000
 8004254:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8004258:	605a      	str	r2, [r3, #4]
 800425a:	681a      	ldr	r2, [r3, #0]
 800425c:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8004260:	601a      	str	r2, [r3, #0]
 8004262:	681a      	ldr	r2, [r3, #0]
 8004264:	0191      	lsls	r1, r2, #6
 8004266:	d5fc      	bpl.n	8004262 <SystemInit+0xa6>
 8004268:	685a      	ldr	r2, [r3, #4]
 800426a:	f022 0203 	bic.w	r2, r2, #3
 800426e:	605a      	str	r2, [r3, #4]
 8004270:	685a      	ldr	r2, [r3, #4]
 8004272:	f042 0202 	orr.w	r2, r2, #2
 8004276:	605a      	str	r2, [r3, #4]
 8004278:	685a      	ldr	r2, [r3, #4]
 800427a:	0712      	lsls	r2, r2, #28
 800427c:	d5fc      	bpl.n	8004278 <SystemInit+0xbc>
 800427e:	4770      	bx	lr
 8004280:	40021000 	andmi	r1, r2, r0
 8004284:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 8004288:	e8ff000c 	ldm	pc!, {r2, r3}^	; <UNPREDICTABLE>

0800428c <bkp_deinit>:
 800428c:	b508      	push	{r3, lr}
 800428e:	f000 f9cd 	bl	800462c <rcu_bkp_reset_enable>
 8004292:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004296:	f000 b9d1 	b.w	800463c <rcu_bkp_reset_disable>
	...

0800429c <bkp_data_write>:
 800429c:	f1a0 030b 	sub.w	r3, r0, #11
 80042a0:	2b1f      	cmp	r3, #31
 80042a2:	d804      	bhi.n	80042ae <bkp_data_write+0x12>
 80042a4:	4b07      	ldr	r3, [pc, #28]	; (80042c4 <bkp_data_write+0x28>)
 80042a6:	4403      	add	r3, r0
 80042a8:	009b      	lsls	r3, r3, #2
 80042aa:	8019      	strh	r1, [r3, #0]
 80042ac:	4770      	bx	lr
 80042ae:	1e43      	subs	r3, r0, #1
 80042b0:	2b09      	cmp	r3, #9
 80042b2:	bf9f      	itttt	ls
 80042b4:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 80042b8:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 80042bc:	0080      	lslls	r0, r0, #2
 80042be:	8001      	strhls	r1, [r0, #0]
 80042c0:	4770      	bx	lr
 80042c2:	bf00      	nop
 80042c4:	10001b05 	andne	r1, r0, r5, lsl #22

080042c8 <dma_deinit>:
 80042c8:	4b0c      	ldr	r3, [pc, #48]	; (80042fc <dma_deinit+0x34>)
 80042ca:	4298      	cmp	r0, r3
 80042cc:	d102      	bne.n	80042d4 <dma_deinit+0xc>
 80042ce:	2904      	cmp	r1, #4
 80042d0:	d900      	bls.n	80042d4 <dma_deinit+0xc>
 80042d2:	e7fe      	b.n	80042d2 <dma_deinit+0xa>
 80042d4:	2314      	movs	r3, #20
 80042d6:	fb03 0301 	mla	r3, r3, r1, r0
 80042da:	689a      	ldr	r2, [r3, #8]
 80042dc:	0089      	lsls	r1, r1, #2
 80042de:	f022 0201 	bic.w	r2, r2, #1
 80042e2:	609a      	str	r2, [r3, #8]
 80042e4:	2200      	movs	r2, #0
 80042e6:	609a      	str	r2, [r3, #8]
 80042e8:	60da      	str	r2, [r3, #12]
 80042ea:	611a      	str	r2, [r3, #16]
 80042ec:	615a      	str	r2, [r3, #20]
 80042ee:	230f      	movs	r3, #15
 80042f0:	6842      	ldr	r2, [r0, #4]
 80042f2:	408b      	lsls	r3, r1
 80042f4:	4313      	orrs	r3, r2
 80042f6:	6043      	str	r3, [r0, #4]
 80042f8:	4770      	bx	lr
 80042fa:	bf00      	nop
 80042fc:	40020400 	andmi	r0, r2, r0, lsl #8

08004300 <dma_init>:
 8004300:	4b1b      	ldr	r3, [pc, #108]	; (8004370 <dma_init+0x70>)
 8004302:	b510      	push	{r4, lr}
 8004304:	4298      	cmp	r0, r3
 8004306:	d102      	bne.n	800430e <dma_init+0xe>
 8004308:	2904      	cmp	r1, #4
 800430a:	d900      	bls.n	800430e <dma_init+0xe>
 800430c:	e7fe      	b.n	800430c <dma_init+0xc>
 800430e:	2314      	movs	r3, #20
 8004310:	fb03 0101 	mla	r1, r3, r1, r0
 8004314:	6813      	ldr	r3, [r2, #0]
 8004316:	610b      	str	r3, [r1, #16]
 8004318:	6893      	ldr	r3, [r2, #8]
 800431a:	614b      	str	r3, [r1, #20]
 800431c:	8a13      	ldrh	r3, [r2, #16]
 800431e:	60cb      	str	r3, [r1, #12]
 8004320:	68d4      	ldr	r4, [r2, #12]
 8004322:	6853      	ldr	r3, [r2, #4]
 8004324:	6888      	ldr	r0, [r1, #8]
 8004326:	4323      	orrs	r3, r4
 8004328:	6954      	ldr	r4, [r2, #20]
 800432a:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 800432e:	4323      	orrs	r3, r4
 8004330:	4303      	orrs	r3, r0
 8004332:	608b      	str	r3, [r1, #8]
 8004334:	7e13      	ldrb	r3, [r2, #24]
 8004336:	2b01      	cmp	r3, #1
 8004338:	688b      	ldr	r3, [r1, #8]
 800433a:	bf0c      	ite	eq
 800433c:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8004340:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8004344:	608b      	str	r3, [r1, #8]
 8004346:	7e53      	ldrb	r3, [r2, #25]
 8004348:	2b01      	cmp	r3, #1
 800434a:	688b      	ldr	r3, [r1, #8]
 800434c:	bf0c      	ite	eq
 800434e:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8004352:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8004356:	608b      	str	r3, [r1, #8]
 8004358:	7e93      	ldrb	r3, [r2, #26]
 800435a:	b923      	cbnz	r3, 8004366 <dma_init+0x66>
 800435c:	688b      	ldr	r3, [r1, #8]
 800435e:	f023 0310 	bic.w	r3, r3, #16
 8004362:	608b      	str	r3, [r1, #8]
 8004364:	bd10      	pop	{r4, pc}
 8004366:	688b      	ldr	r3, [r1, #8]
 8004368:	f043 0310 	orr.w	r3, r3, #16
 800436c:	e7f9      	b.n	8004362 <dma_init+0x62>
 800436e:	bf00      	nop
 8004370:	40020400 	andmi	r0, r2, r0, lsl #8

08004374 <dma_circulation_disable>:
 8004374:	4b06      	ldr	r3, [pc, #24]	; (8004390 <dma_circulation_disable+0x1c>)
 8004376:	4298      	cmp	r0, r3
 8004378:	d102      	bne.n	8004380 <dma_circulation_disable+0xc>
 800437a:	2904      	cmp	r1, #4
 800437c:	d900      	bls.n	8004380 <dma_circulation_disable+0xc>
 800437e:	e7fe      	b.n	800437e <dma_circulation_disable+0xa>
 8004380:	2314      	movs	r3, #20
 8004382:	4359      	muls	r1, r3
 8004384:	3008      	adds	r0, #8
 8004386:	580b      	ldr	r3, [r1, r0]
 8004388:	f023 0320 	bic.w	r3, r3, #32
 800438c:	500b      	str	r3, [r1, r0]
 800438e:	4770      	bx	lr
 8004390:	40020400 	andmi	r0, r2, r0, lsl #8

08004394 <dma_memory_to_memory_disable>:
 8004394:	4b06      	ldr	r3, [pc, #24]	; (80043b0 <dma_memory_to_memory_disable+0x1c>)
 8004396:	4298      	cmp	r0, r3
 8004398:	d102      	bne.n	80043a0 <dma_memory_to_memory_disable+0xc>
 800439a:	2904      	cmp	r1, #4
 800439c:	d900      	bls.n	80043a0 <dma_memory_to_memory_disable+0xc>
 800439e:	e7fe      	b.n	800439e <dma_memory_to_memory_disable+0xa>
 80043a0:	2314      	movs	r3, #20
 80043a2:	4359      	muls	r1, r3
 80043a4:	3008      	adds	r0, #8
 80043a6:	580b      	ldr	r3, [r1, r0]
 80043a8:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80043ac:	500b      	str	r3, [r1, r0]
 80043ae:	4770      	bx	lr
 80043b0:	40020400 	andmi	r0, r2, r0, lsl #8

080043b4 <fmc_bank0_unlock>:
 80043b4:	4b04      	ldr	r3, [pc, #16]	; (80043c8 <fmc_bank0_unlock+0x14>)
 80043b6:	691a      	ldr	r2, [r3, #16]
 80043b8:	0612      	lsls	r2, r2, #24
 80043ba:	bf41      	itttt	mi
 80043bc:	4a03      	ldrmi	r2, [pc, #12]	; (80043cc <fmc_bank0_unlock+0x18>)
 80043be:	605a      	strmi	r2, [r3, #4]
 80043c0:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80043c4:	605a      	strmi	r2, [r3, #4]
 80043c6:	4770      	bx	lr
 80043c8:	40022000 	andmi	r2, r2, r0
 80043cc:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080043d0 <fmc_bank1_unlock>:
 80043d0:	4b04      	ldr	r3, [pc, #16]	; (80043e4 <fmc_bank1_unlock+0x14>)
 80043d2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80043d4:	0612      	lsls	r2, r2, #24
 80043d6:	bf41      	itttt	mi
 80043d8:	4a03      	ldrmi	r2, [pc, #12]	; (80043e8 <fmc_bank1_unlock+0x18>)
 80043da:	645a      	strmi	r2, [r3, #68]	; 0x44
 80043dc:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80043e0:	645a      	strmi	r2, [r3, #68]	; 0x44
 80043e2:	4770      	bx	lr
 80043e4:	40022000 	andmi	r2, r2, r0
 80043e8:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080043ec <fmc_bank0_lock>:
 80043ec:	4a02      	ldr	r2, [pc, #8]	; (80043f8 <fmc_bank0_lock+0xc>)
 80043ee:	6913      	ldr	r3, [r2, #16]
 80043f0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80043f4:	6113      	str	r3, [r2, #16]
 80043f6:	4770      	bx	lr
 80043f8:	40022000 	andmi	r2, r2, r0

080043fc <fmc_bank1_lock>:
 80043fc:	4a02      	ldr	r2, [pc, #8]	; (8004408 <fmc_bank1_lock+0xc>)
 80043fe:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8004400:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004404:	6513      	str	r3, [r2, #80]	; 0x50
 8004406:	4770      	bx	lr
 8004408:	40022000 	andmi	r2, r2, r0

0800440c <fmc_bank0_state_get>:
 800440c:	4b07      	ldr	r3, [pc, #28]	; (800442c <fmc_bank0_state_get+0x20>)
 800440e:	68da      	ldr	r2, [r3, #12]
 8004410:	07d1      	lsls	r1, r2, #31
 8004412:	d407      	bmi.n	8004424 <fmc_bank0_state_get+0x18>
 8004414:	68da      	ldr	r2, [r3, #12]
 8004416:	06d2      	lsls	r2, r2, #27
 8004418:	d406      	bmi.n	8004428 <fmc_bank0_state_get+0x1c>
 800441a:	68d8      	ldr	r0, [r3, #12]
 800441c:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8004420:	0040      	lsls	r0, r0, #1
 8004422:	4770      	bx	lr
 8004424:	2001      	movs	r0, #1
 8004426:	4770      	bx	lr
 8004428:	2003      	movs	r0, #3
 800442a:	4770      	bx	lr
 800442c:	40022000 	andmi	r2, r2, r0

08004430 <fmc_bank1_state_get>:
 8004430:	4b07      	ldr	r3, [pc, #28]	; (8004450 <fmc_bank1_state_get+0x20>)
 8004432:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8004434:	07d1      	lsls	r1, r2, #31
 8004436:	d407      	bmi.n	8004448 <fmc_bank1_state_get+0x18>
 8004438:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800443a:	06d2      	lsls	r2, r2, #27
 800443c:	d406      	bmi.n	800444c <fmc_bank1_state_get+0x1c>
 800443e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004440:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8004444:	0040      	lsls	r0, r0, #1
 8004446:	4770      	bx	lr
 8004448:	2001      	movs	r0, #1
 800444a:	4770      	bx	lr
 800444c:	2003      	movs	r0, #3
 800444e:	4770      	bx	lr
 8004450:	40022000 	andmi	r2, r2, r0

08004454 <fwdgt_enable>:
 8004454:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8004458:	4b01      	ldr	r3, [pc, #4]	; (8004460 <fwdgt_enable+0xc>)
 800445a:	601a      	str	r2, [r3, #0]
 800445c:	4770      	bx	lr
 800445e:	bf00      	nop
 8004460:	40003000 	andmi	r3, r0, r0

08004464 <fwdgt_counter_reload>:
 8004464:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8004468:	4b01      	ldr	r3, [pc, #4]	; (8004470 <fwdgt_counter_reload+0xc>)
 800446a:	601a      	str	r2, [r3, #0]
 800446c:	4770      	bx	lr
 800446e:	bf00      	nop
 8004470:	40003000 	andmi	r3, r0, r0

08004474 <fwdgt_config>:
 8004474:	f245 5355 	movw	r3, #21845	; 0x5555
 8004478:	4a11      	ldr	r2, [pc, #68]	; (80044c0 <fwdgt_config+0x4c>)
 800447a:	b510      	push	{r4, lr}
 800447c:	4c11      	ldr	r4, [pc, #68]	; (80044c4 <fwdgt_config+0x50>)
 800447e:	6013      	str	r3, [r2, #0]
 8004480:	68d3      	ldr	r3, [r2, #12]
 8004482:	3c01      	subs	r4, #1
 8004484:	f003 0301 	and.w	r3, r3, #1
 8004488:	d013      	beq.n	80044b2 <fwdgt_config+0x3e>
 800448a:	2b00      	cmp	r3, #0
 800448c:	d1f8      	bne.n	8004480 <fwdgt_config+0xc>
 800448e:	6051      	str	r1, [r2, #4]
 8004490:	490c      	ldr	r1, [pc, #48]	; (80044c4 <fwdgt_config+0x50>)
 8004492:	4a0b      	ldr	r2, [pc, #44]	; (80044c0 <fwdgt_config+0x4c>)
 8004494:	68d3      	ldr	r3, [r2, #12]
 8004496:	3901      	subs	r1, #1
 8004498:	f003 0302 	and.w	r3, r3, #2
 800449c:	d00d      	beq.n	80044ba <fwdgt_config+0x46>
 800449e:	2b00      	cmp	r3, #0
 80044a0:	d1f8      	bne.n	8004494 <fwdgt_config+0x20>
 80044a2:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 80044a6:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80044aa:	6090      	str	r0, [r2, #8]
 80044ac:	2001      	movs	r0, #1
 80044ae:	6013      	str	r3, [r2, #0]
 80044b0:	e002      	b.n	80044b8 <fwdgt_config+0x44>
 80044b2:	2b00      	cmp	r3, #0
 80044b4:	d0eb      	beq.n	800448e <fwdgt_config+0x1a>
 80044b6:	2000      	movs	r0, #0
 80044b8:	bd10      	pop	{r4, pc}
 80044ba:	2b00      	cmp	r3, #0
 80044bc:	d1fb      	bne.n	80044b6 <fwdgt_config+0x42>
 80044be:	e7f0      	b.n	80044a2 <fwdgt_config+0x2e>
 80044c0:	40003000 	andmi	r3, r0, r0
 80044c4:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080044c8 <gpio_init>:
 80044c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80044cc:	f04f 0c0f 	mov.w	ip, #15
 80044d0:	06cf      	lsls	r7, r1, #27
 80044d2:	f04f 0400 	mov.w	r4, #0
 80044d6:	f04f 0701 	mov.w	r7, #1
 80044da:	f001 050f 	and.w	r5, r1, #15
 80044de:	bf48      	it	mi
 80044e0:	4315      	orrmi	r5, r2
 80044e2:	fa23 f204 	lsr.w	r2, r3, r4
 80044e6:	07d6      	lsls	r6, r2, #31
 80044e8:	d510      	bpl.n	800450c <gpio_init+0x44>
 80044ea:	00a2      	lsls	r2, r4, #2
 80044ec:	6806      	ldr	r6, [r0, #0]
 80044ee:	fa0c fe02 	lsl.w	lr, ip, r2
 80044f2:	ea26 060e 	bic.w	r6, r6, lr
 80044f6:	fa05 f202 	lsl.w	r2, r5, r2
 80044fa:	2928      	cmp	r1, #40	; 0x28
 80044fc:	ea42 0206 	orr.w	r2, r2, r6
 8004500:	d128      	bne.n	8004554 <gpio_init+0x8c>
 8004502:	fa07 f604 	lsl.w	r6, r7, r4
 8004506:	401e      	ands	r6, r3
 8004508:	6146      	str	r6, [r0, #20]
 800450a:	6002      	str	r2, [r0, #0]
 800450c:	3401      	adds	r4, #1
 800450e:	2c08      	cmp	r4, #8
 8004510:	d1e7      	bne.n	80044e2 <gpio_init+0x1a>
 8004512:	2600      	movs	r6, #0
 8004514:	f04f 0c0f 	mov.w	ip, #15
 8004518:	2701      	movs	r7, #1
 800451a:	f106 0208 	add.w	r2, r6, #8
 800451e:	fa23 f402 	lsr.w	r4, r3, r2
 8004522:	07e4      	lsls	r4, r4, #31
 8004524:	d511      	bpl.n	800454a <gpio_init+0x82>
 8004526:	00b4      	lsls	r4, r6, #2
 8004528:	f8d0 e004 	ldr.w	lr, [r0, #4]
 800452c:	fa0c f804 	lsl.w	r8, ip, r4
 8004530:	ea2e 0e08 	bic.w	lr, lr, r8
 8004534:	fa05 f404 	lsl.w	r4, r5, r4
 8004538:	2928      	cmp	r1, #40	; 0x28
 800453a:	ea44 040e 	orr.w	r4, r4, lr
 800453e:	d110      	bne.n	8004562 <gpio_init+0x9a>
 8004540:	fa07 f202 	lsl.w	r2, r7, r2
 8004544:	401a      	ands	r2, r3
 8004546:	6142      	str	r2, [r0, #20]
 8004548:	6044      	str	r4, [r0, #4]
 800454a:	3601      	adds	r6, #1
 800454c:	2e08      	cmp	r6, #8
 800454e:	d1e4      	bne.n	800451a <gpio_init+0x52>
 8004550:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004554:	2948      	cmp	r1, #72	; 0x48
 8004556:	bf02      	ittt	eq
 8004558:	fa07 f604 	lsleq.w	r6, r7, r4
 800455c:	401e      	andeq	r6, r3
 800455e:	6106      	streq	r6, [r0, #16]
 8004560:	e7d3      	b.n	800450a <gpio_init+0x42>
 8004562:	2948      	cmp	r1, #72	; 0x48
 8004564:	bf02      	ittt	eq
 8004566:	fa07 f202 	lsleq.w	r2, r7, r2
 800456a:	401a      	andeq	r2, r3
 800456c:	6102      	streq	r2, [r0, #16]
 800456e:	e7eb      	b.n	8004548 <gpio_init+0x80>

08004570 <gpio_input_bit_get>:
 8004570:	6883      	ldr	r3, [r0, #8]
 8004572:	420b      	tst	r3, r1
 8004574:	bf14      	ite	ne
 8004576:	2001      	movne	r0, #1
 8004578:	2000      	moveq	r0, #0
 800457a:	4770      	bx	lr

0800457c <gpio_pin_remap_config>:
 800457c:	2800      	cmp	r0, #0
 800457e:	4a16      	ldr	r2, [pc, #88]	; (80045d8 <gpio_pin_remap_config+0x5c>)
 8004580:	b530      	push	{r4, r5, lr}
 8004582:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8004586:	bfb4      	ite	lt
 8004588:	69d3      	ldrlt	r3, [r2, #28]
 800458a:	6853      	ldrge	r3, [r2, #4]
 800458c:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8004590:	b284      	uxth	r4, r0
 8004592:	d110      	bne.n	80045b6 <gpio_pin_remap_config+0x3a>
 8004594:	6855      	ldr	r5, [r2, #4]
 8004596:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 800459a:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 800459e:	6055      	str	r5, [r2, #4]
 80045a0:	b119      	cbz	r1, 80045aa <gpio_pin_remap_config+0x2e>
 80045a2:	0d42      	lsrs	r2, r0, #21
 80045a4:	0112      	lsls	r2, r2, #4
 80045a6:	4094      	lsls	r4, r2
 80045a8:	4323      	orrs	r3, r4
 80045aa:	4a0b      	ldr	r2, [pc, #44]	; (80045d8 <gpio_pin_remap_config+0x5c>)
 80045ac:	2800      	cmp	r0, #0
 80045ae:	bfb4      	ite	lt
 80045b0:	61d3      	strlt	r3, [r2, #28]
 80045b2:	6053      	strge	r3, [r2, #4]
 80045b4:	bd30      	pop	{r4, r5, pc}
 80045b6:	02c2      	lsls	r2, r0, #11
 80045b8:	bf4d      	iteet	mi
 80045ba:	2203      	movmi	r2, #3
 80045bc:	0d42      	lsrpl	r2, r0, #21
 80045be:	0112      	lslpl	r2, r2, #4
 80045c0:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 80045c4:	bf4c      	ite	mi
 80045c6:	40aa      	lslmi	r2, r5
 80045c8:	fa04 f202 	lslpl.w	r2, r4, r2
 80045cc:	ea23 0302 	bic.w	r3, r3, r2
 80045d0:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 80045d4:	e7e4      	b.n	80045a0 <gpio_pin_remap_config+0x24>
 80045d6:	bf00      	nop
 80045d8:	40010000 	andmi	r0, r1, r0

080045dc <pmu_backup_write_enable>:
 80045dc:	4a02      	ldr	r2, [pc, #8]	; (80045e8 <pmu_backup_write_enable+0xc>)
 80045de:	6813      	ldr	r3, [r2, #0]
 80045e0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80045e4:	6013      	str	r3, [r2, #0]
 80045e6:	4770      	bx	lr
 80045e8:	40007000 	andmi	r7, r0, r0

080045ec <rcu_periph_clock_enable>:
 80045ec:	2201      	movs	r2, #1
 80045ee:	0983      	lsrs	r3, r0, #6
 80045f0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80045f4:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80045f8:	6819      	ldr	r1, [r3, #0]
 80045fa:	f000 001f 	and.w	r0, r0, #31
 80045fe:	4082      	lsls	r2, r0
 8004600:	430a      	orrs	r2, r1
 8004602:	601a      	str	r2, [r3, #0]
 8004604:	4770      	bx	lr

08004606 <rcu_periph_clock_disable>:
 8004606:	2101      	movs	r1, #1
 8004608:	0983      	lsrs	r3, r0, #6
 800460a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800460e:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8004612:	681a      	ldr	r2, [r3, #0]
 8004614:	f000 001f 	and.w	r0, r0, #31
 8004618:	4081      	lsls	r1, r0
 800461a:	ea22 0201 	bic.w	r2, r2, r1
 800461e:	601a      	str	r2, [r3, #0]
 8004620:	4770      	bx	lr

08004622 <rcu_periph_reset_enable>:
 8004622:	f7ff bfe3 	b.w	80045ec <rcu_periph_clock_enable>

08004626 <rcu_periph_reset_disable>:
 8004626:	f7ff bfee 	b.w	8004606 <rcu_periph_clock_disable>
	...

0800462c <rcu_bkp_reset_enable>:
 800462c:	4a02      	ldr	r2, [pc, #8]	; (8004638 <rcu_bkp_reset_enable+0xc>)
 800462e:	6a13      	ldr	r3, [r2, #32]
 8004630:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004634:	6213      	str	r3, [r2, #32]
 8004636:	4770      	bx	lr
 8004638:	40021000 	andmi	r1, r2, r0

0800463c <rcu_bkp_reset_disable>:
 800463c:	4a02      	ldr	r2, [pc, #8]	; (8004648 <rcu_bkp_reset_disable+0xc>)
 800463e:	6a13      	ldr	r3, [r2, #32]
 8004640:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004644:	6213      	str	r3, [r2, #32]
 8004646:	4770      	bx	lr
 8004648:	40021000 	andmi	r1, r2, r0

0800464c <rcu_adc_clock_config>:
 800464c:	490c      	ldr	r1, [pc, #48]	; (8004680 <rcu_adc_clock_config+0x34>)
 800464e:	2805      	cmp	r0, #5
 8004650:	684b      	ldr	r3, [r1, #4]
 8004652:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004656:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800465a:	d006      	beq.n	800466a <rcu_adc_clock_config+0x1e>
 800465c:	d803      	bhi.n	8004666 <rcu_adc_clock_config+0x1a>
 800465e:	2804      	cmp	r0, #4
 8004660:	d10a      	bne.n	8004678 <rcu_adc_clock_config+0x2c>
 8004662:	604b      	str	r3, [r1, #4]
 8004664:	4770      	bx	lr
 8004666:	2807      	cmp	r0, #7
 8004668:	d1fb      	bne.n	8004662 <rcu_adc_clock_config+0x16>
 800466a:	4a06      	ldr	r2, [pc, #24]	; (8004684 <rcu_adc_clock_config+0x38>)
 800466c:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 8004670:	4313      	orrs	r3, r2
 8004672:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004676:	e7f4      	b.n	8004662 <rcu_adc_clock_config+0x16>
 8004678:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 800467c:	e7f1      	b.n	8004662 <rcu_adc_clock_config+0x16>
 800467e:	bf00      	nop
 8004680:	40021000 	andmi	r1, r2, r0
 8004684:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08004688 <rcu_clock_freq_get>:
 8004688:	4b2f      	ldr	r3, [pc, #188]	; (8004748 <rcu_clock_freq_get+0xc0>)
 800468a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800468c:	4604      	mov	r4, r0
 800468e:	461f      	mov	r7, r3
 8004690:	b089      	sub	sp, #36	; 0x24
 8004692:	ad04      	add	r5, sp, #16
 8004694:	f103 0610 	add.w	r6, r3, #16
 8004698:	462a      	mov	r2, r5
 800469a:	6818      	ldr	r0, [r3, #0]
 800469c:	6859      	ldr	r1, [r3, #4]
 800469e:	3308      	adds	r3, #8
 80046a0:	c203      	stmia	r2!, {r0, r1}
 80046a2:	42b3      	cmp	r3, r6
 80046a4:	4615      	mov	r5, r2
 80046a6:	d1f7      	bne.n	8004698 <rcu_clock_freq_get+0x10>
 80046a8:	466b      	mov	r3, sp
 80046aa:	6938      	ldr	r0, [r7, #16]
 80046ac:	6871      	ldr	r1, [r6, #4]
 80046ae:	4a27      	ldr	r2, [pc, #156]	; (800474c <rcu_clock_freq_get+0xc4>)
 80046b0:	c303      	stmia	r3!, {r0, r1}
 80046b2:	c303      	stmia	r3!, {r0, r1}
 80046b4:	6853      	ldr	r3, [r2, #4]
 80046b6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80046ba:	2b02      	cmp	r3, #2
 80046bc:	d137      	bne.n	800472e <rcu_clock_freq_get+0xa6>
 80046be:	6853      	ldr	r3, [r2, #4]
 80046c0:	03dd      	lsls	r5, r3, #15
 80046c2:	d510      	bpl.n	80046e6 <rcu_clock_freq_get+0x5e>
 80046c4:	6853      	ldr	r3, [r2, #4]
 80046c6:	4922      	ldr	r1, [pc, #136]	; (8004750 <rcu_clock_freq_get+0xc8>)
 80046c8:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80046cc:	4b21      	ldr	r3, [pc, #132]	; (8004754 <rcu_clock_freq_get+0xcc>)
 80046ce:	bf08      	it	eq
 80046d0:	4619      	moveq	r1, r3
 80046d2:	6853      	ldr	r3, [r2, #4]
 80046d4:	6850      	ldr	r0, [r2, #4]
 80046d6:	f3c3 4383 	ubfx	r3, r3, #18, #4
 80046da:	0100      	lsls	r0, r0, #4
 80046dc:	d505      	bpl.n	80046ea <rcu_clock_freq_get+0x62>
 80046de:	f043 0310 	orr.w	r3, r3, #16
 80046e2:	3301      	adds	r3, #1
 80046e4:	e004      	b.n	80046f0 <rcu_clock_freq_get+0x68>
 80046e6:	491a      	ldr	r1, [pc, #104]	; (8004750 <rcu_clock_freq_get+0xc8>)
 80046e8:	e7f3      	b.n	80046d2 <rcu_clock_freq_get+0x4a>
 80046ea:	2b0f      	cmp	r3, #15
 80046ec:	d0f9      	beq.n	80046e2 <rcu_clock_freq_get+0x5a>
 80046ee:	3302      	adds	r3, #2
 80046f0:	fb01 f003 	mul.w	r0, r1, r3
 80046f4:	6853      	ldr	r3, [r2, #4]
 80046f6:	6851      	ldr	r1, [r2, #4]
 80046f8:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80046fc:	6852      	ldr	r2, [r2, #4]
 80046fe:	3320      	adds	r3, #32
 8004700:	446b      	add	r3, sp
 8004702:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8004706:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 800470a:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 800470e:	3120      	adds	r1, #32
 8004710:	3220      	adds	r2, #32
 8004712:	4469      	add	r1, sp
 8004714:	446a      	add	r2, sp
 8004716:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 800471a:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 800471e:	fa20 f303 	lsr.w	r3, r0, r3
 8004722:	2c03      	cmp	r4, #3
 8004724:	d80e      	bhi.n	8004744 <rcu_clock_freq_get+0xbc>
 8004726:	e8df f004 	tbb	[pc, r4]
 800472a:	0a070405 	beq	81c5746 <__exidx_end+0x1bfafa>
 800472e:	4809      	ldr	r0, [pc, #36]	; (8004754 <rcu_clock_freq_get+0xcc>)
 8004730:	e7e0      	b.n	80046f4 <rcu_clock_freq_get+0x6c>
 8004732:	4618      	mov	r0, r3
 8004734:	b009      	add	sp, #36	; 0x24
 8004736:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004738:	fa23 f001 	lsr.w	r0, r3, r1
 800473c:	e7fa      	b.n	8004734 <rcu_clock_freq_get+0xac>
 800473e:	fa23 f002 	lsr.w	r0, r3, r2
 8004742:	e7f7      	b.n	8004734 <rcu_clock_freq_get+0xac>
 8004744:	2000      	movs	r0, #0
 8004746:	e7f5      	b.n	8004734 <rcu_clock_freq_get+0xac>
 8004748:	08005370 	stmdaeq	r0, {r4, r5, r6, r8, r9, ip, lr}
 800474c:	40021000 	andmi	r1, r2, r0
 8004750:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8004754:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08004758 <timer_deinit>:
 8004758:	b508      	push	{r3, lr}
 800475a:	4b2d      	ldr	r3, [pc, #180]	; (8004810 <timer_deinit+0xb8>)
 800475c:	4298      	cmp	r0, r3
 800475e:	d048      	beq.n	80047f2 <timer_deinit+0x9a>
 8004760:	d816      	bhi.n	8004790 <timer_deinit+0x38>
 8004762:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004766:	4298      	cmp	r0, r3
 8004768:	d03c      	beq.n	80047e4 <timer_deinit+0x8c>
 800476a:	d807      	bhi.n	800477c <timer_deinit+0x24>
 800476c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004770:	d02a      	beq.n	80047c8 <timer_deinit+0x70>
 8004772:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8004776:	4298      	cmp	r0, r3
 8004778:	d02d      	beq.n	80047d6 <timer_deinit+0x7e>
 800477a:	bd08      	pop	{r3, pc}
 800477c:	4b25      	ldr	r3, [pc, #148]	; (8004814 <timer_deinit+0xbc>)
 800477e:	4298      	cmp	r0, r3
 8004780:	d1fb      	bne.n	800477a <timer_deinit+0x22>
 8004782:	f240 4003 	movw	r0, #1027	; 0x403
 8004786:	f7ff ff4c 	bl	8004622 <rcu_periph_reset_enable>
 800478a:	f240 4003 	movw	r0, #1027	; 0x403
 800478e:	e017      	b.n	80047c0 <timer_deinit+0x68>
 8004790:	4b21      	ldr	r3, [pc, #132]	; (8004818 <timer_deinit+0xc0>)
 8004792:	4298      	cmp	r0, r3
 8004794:	d00e      	beq.n	80047b4 <timer_deinit+0x5c>
 8004796:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800479a:	4298      	cmp	r0, r3
 800479c:	d030      	beq.n	8004800 <timer_deinit+0xa8>
 800479e:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 80047a2:	4298      	cmp	r0, r3
 80047a4:	d1e9      	bne.n	800477a <timer_deinit+0x22>
 80047a6:	f240 4005 	movw	r0, #1029	; 0x405
 80047aa:	f7ff ff3a 	bl	8004622 <rcu_periph_reset_enable>
 80047ae:	f240 4005 	movw	r0, #1029	; 0x405
 80047b2:	e005      	b.n	80047c0 <timer_deinit+0x68>
 80047b4:	f240 300b 	movw	r0, #779	; 0x30b
 80047b8:	f7ff ff33 	bl	8004622 <rcu_periph_reset_enable>
 80047bc:	f240 300b 	movw	r0, #779	; 0x30b
 80047c0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80047c4:	f7ff bf2f 	b.w	8004626 <rcu_periph_reset_disable>
 80047c8:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80047cc:	f7ff ff29 	bl	8004622 <rcu_periph_reset_enable>
 80047d0:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80047d4:	e7f4      	b.n	80047c0 <timer_deinit+0x68>
 80047d6:	f240 4001 	movw	r0, #1025	; 0x401
 80047da:	f7ff ff22 	bl	8004622 <rcu_periph_reset_enable>
 80047de:	f240 4001 	movw	r0, #1025	; 0x401
 80047e2:	e7ed      	b.n	80047c0 <timer_deinit+0x68>
 80047e4:	f240 4002 	movw	r0, #1026	; 0x402
 80047e8:	f7ff ff1b 	bl	8004622 <rcu_periph_reset_enable>
 80047ec:	f240 4002 	movw	r0, #1026	; 0x402
 80047f0:	e7e6      	b.n	80047c0 <timer_deinit+0x68>
 80047f2:	f240 4004 	movw	r0, #1028	; 0x404
 80047f6:	f7ff ff14 	bl	8004622 <rcu_periph_reset_enable>
 80047fa:	f240 4004 	movw	r0, #1028	; 0x404
 80047fe:	e7df      	b.n	80047c0 <timer_deinit+0x68>
 8004800:	f240 300d 	movw	r0, #781	; 0x30d
 8004804:	f7ff ff0d 	bl	8004622 <rcu_periph_reset_enable>
 8004808:	f240 300d 	movw	r0, #781	; 0x30d
 800480c:	e7d8      	b.n	80047c0 <timer_deinit+0x68>
 800480e:	bf00      	nop
 8004810:	40001000 	andmi	r1, r0, r0
 8004814:	40000c00 	andmi	r0, r0, r0, lsl #24
 8004818:	40012c00 	andmi	r2, r1, r0, lsl #24

0800481c <timer_init>:
 800481c:	880b      	ldrh	r3, [r1, #0]
 800481e:	6283      	str	r3, [r0, #40]	; 0x28
 8004820:	4b26      	ldr	r3, [pc, #152]	; (80048bc <timer_init+0xa0>)
 8004822:	4298      	cmp	r0, r3
 8004824:	d018      	beq.n	8004858 <timer_init+0x3c>
 8004826:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 800482a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800482e:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8004832:	d011      	beq.n	8004858 <timer_init+0x3c>
 8004834:	4a22      	ldr	r2, [pc, #136]	; (80048c0 <timer_init+0xa4>)
 8004836:	4290      	cmp	r0, r2
 8004838:	d00e      	beq.n	8004858 <timer_init+0x3c>
 800483a:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 800483e:	4290      	cmp	r0, r2
 8004840:	d00a      	beq.n	8004858 <timer_init+0x3c>
 8004842:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004846:	4293      	cmp	r3, r2
 8004848:	d006      	beq.n	8004858 <timer_init+0x3c>
 800484a:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 800484e:	4293      	cmp	r3, r2
 8004850:	d002      	beq.n	8004858 <timer_init+0x3c>
 8004852:	4b1c      	ldr	r3, [pc, #112]	; (80048c4 <timer_init+0xa8>)
 8004854:	4298      	cmp	r0, r3
 8004856:	d10f      	bne.n	8004878 <timer_init+0x5c>
 8004858:	6803      	ldr	r3, [r0, #0]
 800485a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800485e:	6003      	str	r3, [r0, #0]
 8004860:	884b      	ldrh	r3, [r1, #2]
 8004862:	6802      	ldr	r2, [r0, #0]
 8004864:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8004868:	4313      	orrs	r3, r2
 800486a:	6003      	str	r3, [r0, #0]
 800486c:	888b      	ldrh	r3, [r1, #4]
 800486e:	6802      	ldr	r2, [r0, #0]
 8004870:	f003 0310 	and.w	r3, r3, #16
 8004874:	4313      	orrs	r3, r2
 8004876:	6003      	str	r3, [r0, #0]
 8004878:	688b      	ldr	r3, [r1, #8]
 800487a:	62c3      	str	r3, [r0, #44]	; 0x2c
 800487c:	4b12      	ldr	r3, [pc, #72]	; (80048c8 <timer_init+0xac>)
 800487e:	4298      	cmp	r0, r3
 8004880:	d003      	beq.n	800488a <timer_init+0x6e>
 8004882:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004886:	4298      	cmp	r0, r3
 8004888:	d104      	bne.n	8004894 <timer_init+0x78>
 800488a:	6943      	ldr	r3, [r0, #20]
 800488c:	f043 0301 	orr.w	r3, r3, #1
 8004890:	6143      	str	r3, [r0, #20]
 8004892:	4770      	bx	lr
 8004894:	6803      	ldr	r3, [r0, #0]
 8004896:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800489a:	6003      	str	r3, [r0, #0]
 800489c:	898b      	ldrh	r3, [r1, #12]
 800489e:	6802      	ldr	r2, [r0, #0]
 80048a0:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80048a4:	4313      	orrs	r3, r2
 80048a6:	6003      	str	r3, [r0, #0]
 80048a8:	4b04      	ldr	r3, [pc, #16]	; (80048bc <timer_init+0xa0>)
 80048aa:	4298      	cmp	r0, r3
 80048ac:	d002      	beq.n	80048b4 <timer_init+0x98>
 80048ae:	4b04      	ldr	r3, [pc, #16]	; (80048c0 <timer_init+0xa4>)
 80048b0:	4298      	cmp	r0, r3
 80048b2:	d1ea      	bne.n	800488a <timer_init+0x6e>
 80048b4:	7b8b      	ldrb	r3, [r1, #14]
 80048b6:	6303      	str	r3, [r0, #48]	; 0x30
 80048b8:	e7e7      	b.n	800488a <timer_init+0x6e>
 80048ba:	bf00      	nop
 80048bc:	40012c00 	andmi	r2, r1, r0, lsl #24
 80048c0:	40013400 	andmi	r3, r1, r0, lsl #8
 80048c4:	40002000 	andmi	r2, r0, r0
 80048c8:	40001000 	andmi	r1, r0, r0

080048cc <timer_enable>:
 80048cc:	6803      	ldr	r3, [r0, #0]
 80048ce:	f043 0301 	orr.w	r3, r3, #1
 80048d2:	6003      	str	r3, [r0, #0]
 80048d4:	4770      	bx	lr

080048d6 <timer_channel_output_mode_config>:
 80048d6:	2903      	cmp	r1, #3
 80048d8:	d81a      	bhi.n	8004910 <timer_channel_output_mode_config+0x3a>
 80048da:	e8df f001 	tbb	[pc, r1]
 80048de:	1a120a02 	bne	84870ee <__exidx_end+0x4814a2>
 80048e2:	6983      	ldr	r3, [r0, #24]
 80048e4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80048e8:	6183      	str	r3, [r0, #24]
 80048ea:	6983      	ldr	r3, [r0, #24]
 80048ec:	4313      	orrs	r3, r2
 80048ee:	6183      	str	r3, [r0, #24]
 80048f0:	4770      	bx	lr
 80048f2:	6983      	ldr	r3, [r0, #24]
 80048f4:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80048f8:	6183      	str	r3, [r0, #24]
 80048fa:	6983      	ldr	r3, [r0, #24]
 80048fc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8004900:	e7f5      	b.n	80048ee <timer_channel_output_mode_config+0x18>
 8004902:	69c3      	ldr	r3, [r0, #28]
 8004904:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004908:	61c3      	str	r3, [r0, #28]
 800490a:	69c3      	ldr	r3, [r0, #28]
 800490c:	4313      	orrs	r3, r2
 800490e:	61c3      	str	r3, [r0, #28]
 8004910:	4770      	bx	lr
 8004912:	69c3      	ldr	r3, [r0, #28]
 8004914:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004918:	61c3      	str	r3, [r0, #28]
 800491a:	69c3      	ldr	r3, [r0, #28]
 800491c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8004920:	e7f5      	b.n	800490e <timer_channel_output_mode_config+0x38>

08004922 <timer_channel_output_pulse_value_config>:
 8004922:	2903      	cmp	r1, #3
 8004924:	d80a      	bhi.n	800493c <timer_channel_output_pulse_value_config+0x1a>
 8004926:	e8df f001 	tbb	[pc, r1]
 800492a:	08060402 	stmdaeq	r6, {r1, sl}
 800492e:	6342      	str	r2, [r0, #52]	; 0x34
 8004930:	4770      	bx	lr
 8004932:	6382      	str	r2, [r0, #56]	; 0x38
 8004934:	4770      	bx	lr
 8004936:	63c2      	str	r2, [r0, #60]	; 0x3c
 8004938:	4770      	bx	lr
 800493a:	6402      	str	r2, [r0, #64]	; 0x40
 800493c:	4770      	bx	lr

0800493e <timer_interrupt_enable>:
 800493e:	68c3      	ldr	r3, [r0, #12]
 8004940:	430b      	orrs	r3, r1
 8004942:	60c3      	str	r3, [r0, #12]
 8004944:	4770      	bx	lr

08004946 <timer_interrupt_flag_clear>:
 8004946:	43c9      	mvns	r1, r1
 8004948:	6101      	str	r1, [r0, #16]
 800494a:	4770      	bx	lr

0800494c <timer_flag_clear>:
 800494c:	43c9      	mvns	r1, r1
 800494e:	6101      	str	r1, [r0, #16]
 8004950:	4770      	bx	lr
	...

08004954 <usart_deinit>:
 8004954:	b508      	push	{r3, lr}
 8004956:	4b1d      	ldr	r3, [pc, #116]	; (80049cc <usart_deinit+0x78>)
 8004958:	4298      	cmp	r0, r3
 800495a:	d028      	beq.n	80049ae <usart_deinit+0x5a>
 800495c:	d808      	bhi.n	8004970 <usart_deinit+0x1c>
 800495e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004962:	4298      	cmp	r0, r3
 8004964:	d015      	beq.n	8004992 <usart_deinit+0x3e>
 8004966:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800496a:	4298      	cmp	r0, r3
 800496c:	d018      	beq.n	80049a0 <usart_deinit+0x4c>
 800496e:	bd08      	pop	{r3, pc}
 8004970:	4b17      	ldr	r3, [pc, #92]	; (80049d0 <usart_deinit+0x7c>)
 8004972:	4298      	cmp	r0, r3
 8004974:	d022      	beq.n	80049bc <usart_deinit+0x68>
 8004976:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 800497a:	4298      	cmp	r0, r3
 800497c:	d1f7      	bne.n	800496e <usart_deinit+0x1a>
 800497e:	f240 300e 	movw	r0, #782	; 0x30e
 8004982:	f7ff fe4e 	bl	8004622 <rcu_periph_reset_enable>
 8004986:	f240 300e 	movw	r0, #782	; 0x30e
 800498a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800498e:	f7ff be4a 	b.w	8004626 <rcu_periph_reset_disable>
 8004992:	f240 4011 	movw	r0, #1041	; 0x411
 8004996:	f7ff fe44 	bl	8004622 <rcu_periph_reset_enable>
 800499a:	f240 4011 	movw	r0, #1041	; 0x411
 800499e:	e7f4      	b.n	800498a <usart_deinit+0x36>
 80049a0:	f240 4012 	movw	r0, #1042	; 0x412
 80049a4:	f7ff fe3d 	bl	8004622 <rcu_periph_reset_enable>
 80049a8:	f240 4012 	movw	r0, #1042	; 0x412
 80049ac:	e7ed      	b.n	800498a <usart_deinit+0x36>
 80049ae:	f240 4013 	movw	r0, #1043	; 0x413
 80049b2:	f7ff fe36 	bl	8004622 <rcu_periph_reset_enable>
 80049b6:	f240 4013 	movw	r0, #1043	; 0x413
 80049ba:	e7e6      	b.n	800498a <usart_deinit+0x36>
 80049bc:	f240 4014 	movw	r0, #1044	; 0x414
 80049c0:	f7ff fe2f 	bl	8004622 <rcu_periph_reset_enable>
 80049c4:	f240 4014 	movw	r0, #1044	; 0x414
 80049c8:	e7df      	b.n	800498a <usart_deinit+0x36>
 80049ca:	bf00      	nop
 80049cc:	40004c00 	andmi	r4, r0, r0, lsl #24
 80049d0:	40005000 	andmi	r5, r0, r0

080049d4 <usart_baudrate_set>:
 80049d4:	b538      	push	{r3, r4, r5, lr}
 80049d6:	4b11      	ldr	r3, [pc, #68]	; (8004a1c <usart_baudrate_set+0x48>)
 80049d8:	4604      	mov	r4, r0
 80049da:	4298      	cmp	r0, r3
 80049dc:	460d      	mov	r5, r1
 80049de:	d01b      	beq.n	8004a18 <usart_baudrate_set+0x44>
 80049e0:	d809      	bhi.n	80049f6 <usart_baudrate_set+0x22>
 80049e2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80049e6:	4298      	cmp	r0, r3
 80049e8:	d016      	beq.n	8004a18 <usart_baudrate_set+0x44>
 80049ea:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80049ee:	4298      	cmp	r0, r3
 80049f0:	d012      	beq.n	8004a18 <usart_baudrate_set+0x44>
 80049f2:	2000      	movs	r0, #0
 80049f4:	e009      	b.n	8004a0a <usart_baudrate_set+0x36>
 80049f6:	4b0a      	ldr	r3, [pc, #40]	; (8004a20 <usart_baudrate_set+0x4c>)
 80049f8:	4298      	cmp	r0, r3
 80049fa:	d00d      	beq.n	8004a18 <usart_baudrate_set+0x44>
 80049fc:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8004a00:	4298      	cmp	r0, r3
 8004a02:	d1f6      	bne.n	80049f2 <usart_baudrate_set+0x1e>
 8004a04:	2003      	movs	r0, #3
 8004a06:	f7ff fe3f 	bl	8004688 <rcu_clock_freq_get>
 8004a0a:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 8004a0e:	fbb1 f1f5 	udiv	r1, r1, r5
 8004a12:	b289      	uxth	r1, r1
 8004a14:	60a1      	str	r1, [r4, #8]
 8004a16:	bd38      	pop	{r3, r4, r5, pc}
 8004a18:	2002      	movs	r0, #2
 8004a1a:	e7f4      	b.n	8004a06 <usart_baudrate_set+0x32>
 8004a1c:	40004c00 	andmi	r4, r0, r0, lsl #24
 8004a20:	40005000 	andmi	r5, r0, r0

08004a24 <usart_parity_config>:
 8004a24:	68c3      	ldr	r3, [r0, #12]
 8004a26:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8004a2a:	60c3      	str	r3, [r0, #12]
 8004a2c:	68c3      	ldr	r3, [r0, #12]
 8004a2e:	430b      	orrs	r3, r1
 8004a30:	60c3      	str	r3, [r0, #12]
 8004a32:	4770      	bx	lr

08004a34 <usart_word_length_set>:
 8004a34:	68c3      	ldr	r3, [r0, #12]
 8004a36:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004a3a:	60c3      	str	r3, [r0, #12]
 8004a3c:	68c3      	ldr	r3, [r0, #12]
 8004a3e:	430b      	orrs	r3, r1
 8004a40:	60c3      	str	r3, [r0, #12]
 8004a42:	4770      	bx	lr

08004a44 <usart_stop_bit_set>:
 8004a44:	6903      	ldr	r3, [r0, #16]
 8004a46:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8004a4a:	6103      	str	r3, [r0, #16]
 8004a4c:	6903      	ldr	r3, [r0, #16]
 8004a4e:	430b      	orrs	r3, r1
 8004a50:	6103      	str	r3, [r0, #16]
 8004a52:	4770      	bx	lr

08004a54 <usart_transmit_config>:
 8004a54:	68c3      	ldr	r3, [r0, #12]
 8004a56:	f023 0308 	bic.w	r3, r3, #8
 8004a5a:	430b      	orrs	r3, r1
 8004a5c:	60c3      	str	r3, [r0, #12]
 8004a5e:	4770      	bx	lr

08004a60 <usart_receive_config>:
 8004a60:	68c3      	ldr	r3, [r0, #12]
 8004a62:	f023 0304 	bic.w	r3, r3, #4
 8004a66:	430b      	orrs	r3, r1
 8004a68:	60c3      	str	r3, [r0, #12]
 8004a6a:	4770      	bx	lr

08004a6c <usart_hardware_flow_rts_config>:
 8004a6c:	6943      	ldr	r3, [r0, #20]
 8004a6e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004a72:	430b      	orrs	r3, r1
 8004a74:	6143      	str	r3, [r0, #20]
 8004a76:	4770      	bx	lr

08004a78 <usart_hardware_flow_cts_config>:
 8004a78:	6943      	ldr	r3, [r0, #20]
 8004a7a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8004a7e:	430b      	orrs	r3, r1
 8004a80:	6143      	str	r3, [r0, #20]
 8004a82:	4770      	bx	lr

08004a84 <usart_dma_transmit_config>:
 8004a84:	6943      	ldr	r3, [r0, #20]
 8004a86:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004a8a:	430b      	orrs	r3, r1
 8004a8c:	6143      	str	r3, [r0, #20]
 8004a8e:	4770      	bx	lr

08004a90 <usart_flag_get>:
 8004a90:	098b      	lsrs	r3, r1, #6
 8004a92:	581a      	ldr	r2, [r3, r0]
 8004a94:	2301      	movs	r3, #1
 8004a96:	f001 011f 	and.w	r1, r1, #31
 8004a9a:	408b      	lsls	r3, r1
 8004a9c:	4213      	tst	r3, r2
 8004a9e:	bf14      	ite	ne
 8004aa0:	2001      	movne	r0, #1
 8004aa2:	2000      	moveq	r0, #0
 8004aa4:	4770      	bx	lr

08004aa6 <usart_interrupt_enable>:
 8004aa6:	2301      	movs	r3, #1
 8004aa8:	b510      	push	{r4, lr}
 8004aaa:	f3c1 1289 	ubfx	r2, r1, #6, #10
 8004aae:	5814      	ldr	r4, [r2, r0]
 8004ab0:	f001 011f 	and.w	r1, r1, #31
 8004ab4:	408b      	lsls	r3, r1
 8004ab6:	4323      	orrs	r3, r4
 8004ab8:	5013      	str	r3, [r2, r0]
 8004aba:	bd10      	pop	{r4, pc}

08004abc <usart_interrupt_disable>:
 8004abc:	2201      	movs	r2, #1
 8004abe:	b510      	push	{r4, lr}
 8004ac0:	f3c1 1489 	ubfx	r4, r1, #6, #10
 8004ac4:	5823      	ldr	r3, [r4, r0]
 8004ac6:	f001 011f 	and.w	r1, r1, #31
 8004aca:	408a      	lsls	r2, r1
 8004acc:	ea23 0302 	bic.w	r3, r3, r2
 8004ad0:	5023      	str	r3, [r4, r0]
 8004ad2:	bd10      	pop	{r4, pc}

08004ad4 <usart_interrupt_flag_clear>:
 8004ad4:	2201      	movs	r2, #1
 8004ad6:	b510      	push	{r4, lr}
 8004ad8:	0d8c      	lsrs	r4, r1, #22
 8004ada:	5823      	ldr	r3, [r4, r0]
 8004adc:	f3c1 4104 	ubfx	r1, r1, #16, #5
 8004ae0:	408a      	lsls	r2, r1
 8004ae2:	ea23 0302 	bic.w	r3, r3, r2
 8004ae6:	5023      	str	r3, [r4, r0]
 8004ae8:	bd10      	pop	{r4, pc}
	...

08004aec <gd32_adc_init()>:
 8004aec:	b510      	push	{r4, lr}
 8004aee:	f240 6009 	movw	r0, #1545	; 0x609
 8004af2:	4c21      	ldr	r4, [pc, #132]	; (8004b78 <gd32_adc_init()+0x8c>)
 8004af4:	f7ff fd7a 	bl	80045ec <rcu_periph_clock_enable>
 8004af8:	2005      	movs	r0, #5
 8004afa:	f7ff fda7 	bl	800464c <rcu_adc_clock_config>
 8004afe:	4620      	mov	r0, r4
 8004b00:	2201      	movs	r2, #1
 8004b02:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004b06:	f000 faad 	bl	8005064 <adc_special_function_config>
 8004b0a:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8004b0e:	4620      	mov	r0, r4
 8004b10:	2102      	movs	r1, #2
 8004b12:	f000 fb46 	bl	80051a2 <adc_external_trigger_source_config>
 8004b16:	2100      	movs	r1, #0
 8004b18:	4620      	mov	r0, r4
 8004b1a:	f000 facb 	bl	80050b4 <adc_data_alignment_config>
 8004b1e:	2000      	movs	r0, #0
 8004b20:	f000 fa90 	bl	8005044 <adc_mode_config>
 8004b24:	2202      	movs	r2, #2
 8004b26:	4620      	mov	r0, r4
 8004b28:	4611      	mov	r1, r2
 8004b2a:	f000 faef 	bl	800510c <adc_channel_length_config>
 8004b2e:	4620      	mov	r0, r4
 8004b30:	2307      	movs	r3, #7
 8004b32:	2210      	movs	r2, #16
 8004b34:	2100      	movs	r1, #0
 8004b36:	f000 fb06 	bl	8005146 <adc_inserted_channel_config>
 8004b3a:	2307      	movs	r3, #7
 8004b3c:	4620      	mov	r0, r4
 8004b3e:	2211      	movs	r2, #17
 8004b40:	2101      	movs	r1, #1
 8004b42:	f000 fb00 	bl	8005146 <adc_inserted_channel_config>
 8004b46:	2201      	movs	r2, #1
 8004b48:	2102      	movs	r1, #2
 8004b4a:	4620      	mov	r0, r4
 8004b4c:	f000 fb3a 	bl	80051c4 <adc_external_trigger_config>
 8004b50:	f000 fad2 	bl	80050f8 <adc_tempsensor_vrefint_enable>
 8004b54:	4620      	mov	r0, r4
 8004b56:	f000 fab6 	bl	80050c6 <adc_enable>
 8004b5a:	2100      	movs	r1, #0
 8004b5c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004b60:	f000 fa58 	bl	8005014 <udelay(unsigned int, unsigned int)>
 8004b64:	4620      	mov	r0, r4
 8004b66:	f000 fab6 	bl	80050d6 <adc_calibration_enable>
 8004b6a:	4620      	mov	r0, r4
 8004b6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004b70:	2102      	movs	r1, #2
 8004b72:	f000 bb42 	b.w	80051fa <adc_software_trigger_enable>
 8004b76:	bf00      	nop
 8004b78:	40012400 	andmi	r2, r1, r0, lsl #8

08004b7c <_stop() [clone .isra.0]>:
 8004b7c:	b508      	push	{r3, lr}
 8004b7e:	4806      	ldr	r0, [pc, #24]	; (8004b98 <_stop() [clone .isra.0]+0x1c>)
 8004b80:	f000 fbce 	bl	8005320 <i2c_stop_on_bus>
 8004b84:	f640 73ff 	movw	r3, #4095	; 0xfff
 8004b88:	4904      	ldr	r1, [pc, #16]	; (8004b9c <_stop() [clone .isra.0]+0x20>)
 8004b8a:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8004b8e:	0592      	lsls	r2, r2, #22
 8004b90:	d501      	bpl.n	8004b96 <_stop() [clone .isra.0]+0x1a>
 8004b92:	3b01      	subs	r3, #1
 8004b94:	d1f9      	bne.n	8004b8a <_stop() [clone .isra.0]+0xe>
 8004b96:	bd08      	pop	{r3, pc}
 8004b98:	40005400 	andmi	r5, r0, r0, lsl #8
 8004b9c:	40005000 	andmi	r5, r0, r0

08004ba0 <gd32_i2c_begin()>:
 8004ba0:	b510      	push	{r4, lr}
 8004ba2:	f240 7015 	movw	r0, #1813	; 0x715
 8004ba6:	f7ff fd21 	bl	80045ec <rcu_periph_clock_enable>
 8004baa:	4c15      	ldr	r4, [pc, #84]	; (8004c00 <gd32_i2c_begin()+0x60>)
 8004bac:	f240 6003 	movw	r0, #1539	; 0x603
 8004bb0:	f7ff fd1c 	bl	80045ec <rcu_periph_clock_enable>
 8004bb4:	f240 6003 	movw	r0, #1539	; 0x603
 8004bb8:	f7ff fd18 	bl	80045ec <rcu_periph_clock_enable>
 8004bbc:	4620      	mov	r0, r4
 8004bbe:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004bc2:	2203      	movs	r2, #3
 8004bc4:	211c      	movs	r1, #28
 8004bc6:	f7ff fc7f 	bl	80044c8 <gpio_init>
 8004bca:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004bce:	2203      	movs	r2, #3
 8004bd0:	4620      	mov	r0, r4
 8004bd2:	211c      	movs	r1, #28
 8004bd4:	f7ff fc78 	bl	80044c8 <gpio_init>
 8004bd8:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8004bdc:	2101      	movs	r1, #1
 8004bde:	2002      	movs	r0, #2
 8004be0:	f7ff fccc 	bl	800457c <gpio_pin_remap_config>
 8004be4:	4620      	mov	r0, r4
 8004be6:	4907      	ldr	r1, [pc, #28]	; (8004c04 <gd32_i2c_begin()+0x64>)
 8004be8:	2200      	movs	r2, #0
 8004bea:	f000 fb13 	bl	8005214 <i2c_clock_config>
 8004bee:	4620      	mov	r0, r4
 8004bf0:	f000 fb8c 	bl	800530c <i2c_enable>
 8004bf4:	4620      	mov	r0, r4
 8004bf6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004bfa:	2101      	movs	r1, #1
 8004bfc:	f000 bb6c 	b.w	80052d8 <i2c_ack_config>
 8004c00:	40010c00 	andmi	r0, r1, r0, lsl #24
 8004c04:	00061a80 	andeq	r1, r6, r0, lsl #21

08004c08 <gd32_i2c_set_baudrate(unsigned int)>:
 8004c08:	4601      	mov	r1, r0
 8004c0a:	2200      	movs	r2, #0
 8004c0c:	4801      	ldr	r0, [pc, #4]	; (8004c14 <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 8004c0e:	f000 bb01 	b.w	8005214 <i2c_clock_config>
 8004c12:	bf00      	nop
 8004c14:	40005400 	andmi	r5, r0, r0, lsl #8

08004c18 <gd32_i2c_set_address(unsigned char)>:
 8004c18:	4b01      	ldr	r3, [pc, #4]	; (8004c20 <gd32_i2c_set_address(unsigned char)+0x8>)
 8004c1a:	0040      	lsls	r0, r0, #1
 8004c1c:	7018      	strb	r0, [r3, #0]
 8004c1e:	4770      	bx	lr
 8004c20:	20001818 	andcs	r1, r0, r8, lsl r8

08004c24 <gd32_i2c_write(char const*, unsigned int)>:
 8004c24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004c26:	4604      	mov	r4, r0
 8004c28:	460f      	mov	r7, r1
 8004c2a:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004c2e:	4e2e      	ldr	r6, [pc, #184]	; (8004ce8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004c30:	f240 6101 	movw	r1, #1537	; 0x601
 8004c34:	4630      	mov	r0, r6
 8004c36:	f000 fb7d 	bl	8005334 <i2c_flag_get>
 8004c3a:	b9b0      	cbnz	r0, 8004c6a <gd32_i2c_write(char const*, unsigned int)+0x46>
 8004c3c:	482a      	ldr	r0, [pc, #168]	; (8004ce8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004c3e:	f000 fb6a 	bl	8005316 <i2c_start_on_bus>
 8004c42:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004c46:	4e28      	ldr	r6, [pc, #160]	; (8004ce8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004c48:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8004c4c:	4630      	mov	r0, r6
 8004c4e:	f000 fb71 	bl	8005334 <i2c_flag_get>
 8004c52:	b190      	cbz	r0, 8004c7a <gd32_i2c_write(char const*, unsigned int)+0x56>
 8004c54:	4b25      	ldr	r3, [pc, #148]	; (8004cec <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 8004c56:	f06f 0201 	mvn.w	r2, #1
 8004c5a:	7819      	ldrb	r1, [r3, #0]
 8004c5c:	4822      	ldr	r0, [pc, #136]	; (8004ce8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004c5e:	f000 fb4d 	bl	80052fc <i2c_master_addressing>
 8004c62:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004c66:	4e20      	ldr	r6, [pc, #128]	; (8004ce8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004c68:	e00c      	b.n	8004c84 <gd32_i2c_write(char const*, unsigned int)+0x60>
 8004c6a:	3d01      	subs	r5, #1
 8004c6c:	d1e0      	bne.n	8004c30 <gd32_i2c_write(char const*, unsigned int)+0xc>
 8004c6e:	f7ff ff85 	bl	8004b7c <_stop() [clone .isra.0]>
 8004c72:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004c76:	4240      	negs	r0, r0
 8004c78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004c7a:	3d01      	subs	r5, #1
 8004c7c:	d1e4      	bne.n	8004c48 <gd32_i2c_write(char const*, unsigned int)+0x24>
 8004c7e:	e7f6      	b.n	8004c6e <gd32_i2c_write(char const*, unsigned int)+0x4a>
 8004c80:	3d01      	subs	r5, #1
 8004c82:	d0f4      	beq.n	8004c6e <gd32_i2c_write(char const*, unsigned int)+0x4a>
 8004c84:	f240 5101 	movw	r1, #1281	; 0x501
 8004c88:	4630      	mov	r0, r6
 8004c8a:	f000 fb53 	bl	8005334 <i2c_flag_get>
 8004c8e:	2800      	cmp	r0, #0
 8004c90:	d0f6      	beq.n	8004c80 <gd32_i2c_write(char const*, unsigned int)+0x5c>
 8004c92:	f240 5101 	movw	r1, #1281	; 0x501
 8004c96:	4814      	ldr	r0, [pc, #80]	; (8004ce8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004c98:	f000 fb57 	bl	800534a <i2c_flag_clear>
 8004c9c:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004ca0:	4e11      	ldr	r6, [pc, #68]	; (8004ce8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004ca2:	f240 5107 	movw	r1, #1287	; 0x507
 8004ca6:	4630      	mov	r0, r6
 8004ca8:	f000 fb44 	bl	8005334 <i2c_flag_get>
 8004cac:	2801      	cmp	r0, #1
 8004cae:	d107      	bne.n	8004cc0 <gd32_i2c_write(char const*, unsigned int)+0x9c>
 8004cb0:	4e0d      	ldr	r6, [pc, #52]	; (8004ce8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004cb2:	4427      	add	r7, r4
 8004cb4:	42a7      	cmp	r7, r4
 8004cb6:	d106      	bne.n	8004cc6 <gd32_i2c_write(char const*, unsigned int)+0xa2>
 8004cb8:	f7ff ff60 	bl	8004b7c <_stop() [clone .isra.0]>
 8004cbc:	2000      	movs	r0, #0
 8004cbe:	e7da      	b.n	8004c76 <gd32_i2c_write(char const*, unsigned int)+0x52>
 8004cc0:	3d01      	subs	r5, #1
 8004cc2:	d1ee      	bne.n	8004ca2 <gd32_i2c_write(char const*, unsigned int)+0x7e>
 8004cc4:	e7d3      	b.n	8004c6e <gd32_i2c_write(char const*, unsigned int)+0x4a>
 8004cc6:	4630      	mov	r0, r6
 8004cc8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004ccc:	f000 fb2d 	bl	800532a <i2c_data_transmit>
 8004cd0:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004cd4:	f240 5102 	movw	r1, #1282	; 0x502
 8004cd8:	4630      	mov	r0, r6
 8004cda:	f000 fb2b 	bl	8005334 <i2c_flag_get>
 8004cde:	2800      	cmp	r0, #0
 8004ce0:	d1e8      	bne.n	8004cb4 <gd32_i2c_write(char const*, unsigned int)+0x90>
 8004ce2:	3d01      	subs	r5, #1
 8004ce4:	d1f6      	bne.n	8004cd4 <gd32_i2c_write(char const*, unsigned int)+0xb0>
 8004ce6:	e7c2      	b.n	8004c6e <gd32_i2c_write(char const*, unsigned int)+0x4a>
 8004ce8:	40005400 	andmi	r5, r0, r0, lsl #8
 8004cec:	20001818 	andcs	r1, r0, r8, lsl r8

08004cf0 <gd32_i2c_read(char*, unsigned int)>:
 8004cf0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004cf4:	4680      	mov	r8, r0
 8004cf6:	460c      	mov	r4, r1
 8004cf8:	f640 76ff 	movw	r6, #4095	; 0xfff
 8004cfc:	4f4b      	ldr	r7, [pc, #300]	; (8004e2c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8004cfe:	f240 6101 	movw	r1, #1537	; 0x601
 8004d02:	4638      	mov	r0, r7
 8004d04:	f000 fb16 	bl	8005334 <i2c_flag_get>
 8004d08:	4605      	mov	r5, r0
 8004d0a:	bb08      	cbnz	r0, 8004d50 <gd32_i2c_read(char*, unsigned int)+0x60>
 8004d0c:	2c02      	cmp	r4, #2
 8004d0e:	d103      	bne.n	8004d18 <gd32_i2c_read(char*, unsigned int)+0x28>
 8004d10:	4601      	mov	r1, r0
 8004d12:	4846      	ldr	r0, [pc, #280]	; (8004e2c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8004d14:	f000 fae9 	bl	80052ea <i2c_ackpos_config>
 8004d18:	4844      	ldr	r0, [pc, #272]	; (8004e2c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8004d1a:	f000 fafc 	bl	8005316 <i2c_start_on_bus>
 8004d1e:	f640 76ff 	movw	r6, #4095	; 0xfff
 8004d22:	4f42      	ldr	r7, [pc, #264]	; (8004e2c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8004d24:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8004d28:	4638      	mov	r0, r7
 8004d2a:	f000 fb03 	bl	8005334 <i2c_flag_get>
 8004d2e:	b1a8      	cbz	r0, 8004d5c <gd32_i2c_read(char*, unsigned int)+0x6c>
 8004d30:	4b3f      	ldr	r3, [pc, #252]	; (8004e30 <gd32_i2c_read(char*, unsigned int)+0x140>)
 8004d32:	2201      	movs	r2, #1
 8004d34:	7819      	ldrb	r1, [r3, #0]
 8004d36:	483d      	ldr	r0, [pc, #244]	; (8004e2c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8004d38:	f000 fae0 	bl	80052fc <i2c_master_addressing>
 8004d3c:	2c02      	cmp	r4, #2
 8004d3e:	d803      	bhi.n	8004d48 <gd32_i2c_read(char*, unsigned int)+0x58>
 8004d40:	2100      	movs	r1, #0
 8004d42:	483a      	ldr	r0, [pc, #232]	; (8004e2c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8004d44:	f000 fac8 	bl	80052d8 <i2c_ack_config>
 8004d48:	f640 76ff 	movw	r6, #4095	; 0xfff
 8004d4c:	4f37      	ldr	r7, [pc, #220]	; (8004e2c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8004d4e:	e00a      	b.n	8004d66 <gd32_i2c_read(char*, unsigned int)+0x76>
 8004d50:	3e01      	subs	r6, #1
 8004d52:	d1d4      	bne.n	8004cfe <gd32_i2c_read(char*, unsigned int)+0xe>
 8004d54:	f7ff ff12 	bl	8004b7c <_stop() [clone .isra.0]>
 8004d58:	2504      	movs	r5, #4
 8004d5a:	e04d      	b.n	8004df8 <gd32_i2c_read(char*, unsigned int)+0x108>
 8004d5c:	3e01      	subs	r6, #1
 8004d5e:	d1e1      	bne.n	8004d24 <gd32_i2c_read(char*, unsigned int)+0x34>
 8004d60:	e7f8      	b.n	8004d54 <gd32_i2c_read(char*, unsigned int)+0x64>
 8004d62:	3e01      	subs	r6, #1
 8004d64:	d0f6      	beq.n	8004d54 <gd32_i2c_read(char*, unsigned int)+0x64>
 8004d66:	f240 5101 	movw	r1, #1281	; 0x501
 8004d6a:	4638      	mov	r0, r7
 8004d6c:	f000 fae2 	bl	8005334 <i2c_flag_get>
 8004d70:	2800      	cmp	r0, #0
 8004d72:	d0f6      	beq.n	8004d62 <gd32_i2c_read(char*, unsigned int)+0x72>
 8004d74:	f240 5101 	movw	r1, #1281	; 0x501
 8004d78:	482c      	ldr	r0, [pc, #176]	; (8004e2c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8004d7a:	f000 fae6 	bl	800534a <i2c_flag_clear>
 8004d7e:	2c01      	cmp	r4, #1
 8004d80:	d102      	bne.n	8004d88 <gd32_i2c_read(char*, unsigned int)+0x98>
 8004d82:	482a      	ldr	r0, [pc, #168]	; (8004e2c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8004d84:	f000 facc 	bl	8005320 <i2c_stop_on_bus>
 8004d88:	f640 77ff 	movw	r7, #4095	; 0xfff
 8004d8c:	4e27      	ldr	r6, [pc, #156]	; (8004e2c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8004d8e:	e022      	b.n	8004dd6 <gd32_i2c_read(char*, unsigned int)+0xe6>
 8004d90:	2c03      	cmp	r4, #3
 8004d92:	d134      	bne.n	8004dfe <gd32_i2c_read(char*, unsigned int)+0x10e>
 8004d94:	f640 79ff 	movw	r9, #4095	; 0xfff
 8004d98:	e002      	b.n	8004da0 <gd32_i2c_read(char*, unsigned int)+0xb0>
 8004d9a:	f1b9 0901 	subs.w	r9, r9, #1
 8004d9e:	d0d9      	beq.n	8004d54 <gd32_i2c_read(char*, unsigned int)+0x64>
 8004da0:	f240 5102 	movw	r1, #1282	; 0x502
 8004da4:	4630      	mov	r0, r6
 8004da6:	f000 fac5 	bl	8005334 <i2c_flag_get>
 8004daa:	2800      	cmp	r0, #0
 8004dac:	d0f5      	beq.n	8004d9a <gd32_i2c_read(char*, unsigned int)+0xaa>
 8004dae:	2100      	movs	r1, #0
 8004db0:	4630      	mov	r0, r6
 8004db2:	f000 fa91 	bl	80052d8 <i2c_ack_config>
 8004db6:	f240 5106 	movw	r1, #1286	; 0x506
 8004dba:	4630      	mov	r0, r6
 8004dbc:	f000 faba 	bl	8005334 <i2c_flag_get>
 8004dc0:	b138      	cbz	r0, 8004dd2 <gd32_i2c_read(char*, unsigned int)+0xe2>
 8004dc2:	4630      	mov	r0, r6
 8004dc4:	f000 fab3 	bl	800532e <i2c_data_receive>
 8004dc8:	f640 77ff 	movw	r7, #4095	; 0xfff
 8004dcc:	f808 0b01 	strb.w	r0, [r8], #1
 8004dd0:	3c01      	subs	r4, #1
 8004dd2:	3f01      	subs	r7, #1
 8004dd4:	d0be      	beq.n	8004d54 <gd32_i2c_read(char*, unsigned int)+0x64>
 8004dd6:	2c00      	cmp	r4, #0
 8004dd8:	d1da      	bne.n	8004d90 <gd32_i2c_read(char*, unsigned int)+0xa0>
 8004dda:	f640 73ff 	movw	r3, #4095	; 0xfff
 8004dde:	4915      	ldr	r1, [pc, #84]	; (8004e34 <gd32_i2c_read(char*, unsigned int)+0x144>)
 8004de0:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8004de4:	0592      	lsls	r2, r2, #22
 8004de6:	d41d      	bmi.n	8004e24 <gd32_i2c_read(char*, unsigned int)+0x134>
 8004de8:	2101      	movs	r1, #1
 8004dea:	4810      	ldr	r0, [pc, #64]	; (8004e2c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8004dec:	f000 fa74 	bl	80052d8 <i2c_ack_config>
 8004df0:	2101      	movs	r1, #1
 8004df2:	480e      	ldr	r0, [pc, #56]	; (8004e2c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8004df4:	f000 fa79 	bl	80052ea <i2c_ackpos_config>
 8004df8:	4628      	mov	r0, r5
 8004dfa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004dfe:	2c02      	cmp	r4, #2
 8004e00:	d1d9      	bne.n	8004db6 <gd32_i2c_read(char*, unsigned int)+0xc6>
 8004e02:	f640 79ff 	movw	r9, #4095	; 0xfff
 8004e06:	e002      	b.n	8004e0e <gd32_i2c_read(char*, unsigned int)+0x11e>
 8004e08:	f1b9 0901 	subs.w	r9, r9, #1
 8004e0c:	d0a2      	beq.n	8004d54 <gd32_i2c_read(char*, unsigned int)+0x64>
 8004e0e:	f240 5102 	movw	r1, #1282	; 0x502
 8004e12:	4630      	mov	r0, r6
 8004e14:	f000 fa8e 	bl	8005334 <i2c_flag_get>
 8004e18:	2800      	cmp	r0, #0
 8004e1a:	d0f5      	beq.n	8004e08 <gd32_i2c_read(char*, unsigned int)+0x118>
 8004e1c:	4630      	mov	r0, r6
 8004e1e:	f000 fa7f 	bl	8005320 <i2c_stop_on_bus>
 8004e22:	e7c8      	b.n	8004db6 <gd32_i2c_read(char*, unsigned int)+0xc6>
 8004e24:	3b01      	subs	r3, #1
 8004e26:	d1db      	bne.n	8004de0 <gd32_i2c_read(char*, unsigned int)+0xf0>
 8004e28:	e796      	b.n	8004d58 <gd32_i2c_read(char*, unsigned int)+0x68>
 8004e2a:	bf00      	nop
 8004e2c:	40005400 	andmi	r5, r0, r0, lsl #8
 8004e30:	20001818 	andcs	r1, r0, r8, lsl r8
 8004e34:	40005000 	andmi	r5, r0, r0

08004e38 <gd32_uart_begin>:
 8004e38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e3a:	461e      	mov	r6, r3
 8004e3c:	4b63      	ldr	r3, [pc, #396]	; (8004fcc <gd32_uart_begin+0x194>)
 8004e3e:	4604      	mov	r4, r0
 8004e40:	4298      	cmp	r0, r3
 8004e42:	460f      	mov	r7, r1
 8004e44:	4615      	mov	r5, r2
 8004e46:	d03b      	beq.n	8004ec0 <gd32_uart_begin+0x88>
 8004e48:	d80a      	bhi.n	8004e60 <gd32_uart_begin+0x28>
 8004e4a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004e4e:	4298      	cmp	r0, r3
 8004e50:	d02f      	beq.n	8004eb2 <gd32_uart_begin+0x7a>
 8004e52:	f240 7012 	movw	r0, #1810	; 0x712
 8004e56:	f7ff fbc9 	bl	80045ec <rcu_periph_clock_enable>
 8004e5a:	f240 6004 	movw	r0, #1540	; 0x604
 8004e5e:	e008      	b.n	8004e72 <gd32_uart_begin+0x3a>
 8004e60:	4b5b      	ldr	r3, [pc, #364]	; (8004fd0 <gd32_uart_begin+0x198>)
 8004e62:	4298      	cmp	r0, r3
 8004e64:	d02f      	beq.n	8004ec6 <gd32_uart_begin+0x8e>
 8004e66:	f240 600e 	movw	r0, #1550	; 0x60e
 8004e6a:	f7ff fbbf 	bl	80045ec <rcu_periph_clock_enable>
 8004e6e:	f240 6003 	movw	r0, #1539	; 0x603
 8004e72:	f7ff fbbb 	bl	80045ec <rcu_periph_clock_enable>
 8004e76:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8004e7a:	f7ff fbb7 	bl	80045ec <rcu_periph_clock_enable>
 8004e7e:	4b53      	ldr	r3, [pc, #332]	; (8004fcc <gd32_uart_begin+0x194>)
 8004e80:	429c      	cmp	r4, r3
 8004e82:	f000 8084 	beq.w	8004f8e <gd32_uart_begin+0x156>
 8004e86:	d829      	bhi.n	8004edc <gd32_uart_begin+0xa4>
 8004e88:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004e8c:	429c      	cmp	r4, r3
 8004e8e:	d071      	beq.n	8004f74 <gd32_uart_begin+0x13c>
 8004e90:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004e94:	2203      	movs	r2, #3
 8004e96:	2118      	movs	r1, #24
 8004e98:	484e      	ldr	r0, [pc, #312]	; (8004fd4 <gd32_uart_begin+0x19c>)
 8004e9a:	f7ff fb15 	bl	80044c8 <gpio_init>
 8004e9e:	2104      	movs	r1, #4
 8004ea0:	484c      	ldr	r0, [pc, #304]	; (8004fd4 <gd32_uart_begin+0x19c>)
 8004ea2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8004ea6:	2203      	movs	r2, #3
 8004ea8:	f7ff fb0e 	bl	80044c8 <gpio_init>
 8004eac:	2101      	movs	r1, #1
 8004eae:	484a      	ldr	r0, [pc, #296]	; (8004fd8 <gd32_uart_begin+0x1a0>)
 8004eb0:	e025      	b.n	8004efe <gd32_uart_begin+0xc6>
 8004eb2:	f240 7011 	movw	r0, #1809	; 0x711
 8004eb6:	f7ff fb99 	bl	80045ec <rcu_periph_clock_enable>
 8004eba:	f240 6002 	movw	r0, #1538	; 0x602
 8004ebe:	e7d8      	b.n	8004e72 <gd32_uart_begin+0x3a>
 8004ec0:	f240 7013 	movw	r0, #1811	; 0x713
 8004ec4:	e7c7      	b.n	8004e56 <gd32_uart_begin+0x1e>
 8004ec6:	f240 7014 	movw	r0, #1812	; 0x714
 8004eca:	f7ff fb8f 	bl	80045ec <rcu_periph_clock_enable>
 8004ece:	f240 6004 	movw	r0, #1540	; 0x604
 8004ed2:	f7ff fb8b 	bl	80045ec <rcu_periph_clock_enable>
 8004ed6:	f240 6005 	movw	r0, #1541	; 0x605
 8004eda:	e7ca      	b.n	8004e72 <gd32_uart_begin+0x3a>
 8004edc:	4b3c      	ldr	r3, [pc, #240]	; (8004fd0 <gd32_uart_begin+0x198>)
 8004ede:	429c      	cmp	r4, r3
 8004ee0:	d062      	beq.n	8004fa8 <gd32_uart_begin+0x170>
 8004ee2:	2340      	movs	r3, #64	; 0x40
 8004ee4:	2203      	movs	r2, #3
 8004ee6:	2118      	movs	r1, #24
 8004ee8:	483c      	ldr	r0, [pc, #240]	; (8004fdc <gd32_uart_begin+0x1a4>)
 8004eea:	f7ff faed 	bl	80044c8 <gpio_init>
 8004eee:	2104      	movs	r1, #4
 8004ef0:	483a      	ldr	r0, [pc, #232]	; (8004fdc <gd32_uart_begin+0x1a4>)
 8004ef2:	2380      	movs	r3, #128	; 0x80
 8004ef4:	2203      	movs	r2, #3
 8004ef6:	f7ff fae7 	bl	80044c8 <gpio_init>
 8004efa:	2101      	movs	r1, #1
 8004efc:	2004      	movs	r0, #4
 8004efe:	f7ff fb3d 	bl	800457c <gpio_pin_remap_config>
 8004f02:	4620      	mov	r0, r4
 8004f04:	f7ff fd26 	bl	8004954 <usart_deinit>
 8004f08:	68e3      	ldr	r3, [r4, #12]
 8004f0a:	4639      	mov	r1, r7
 8004f0c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004f10:	4620      	mov	r0, r4
 8004f12:	60e3      	str	r3, [r4, #12]
 8004f14:	f7ff fd5e 	bl	80049d4 <usart_baudrate_set>
 8004f18:	f1a5 0309 	sub.w	r3, r5, #9
 8004f1c:	4259      	negs	r1, r3
 8004f1e:	4159      	adcs	r1, r3
 8004f20:	4620      	mov	r0, r4
 8004f22:	0309      	lsls	r1, r1, #12
 8004f24:	f7ff fd86 	bl	8004a34 <usart_word_length_set>
 8004f28:	9906      	ldr	r1, [sp, #24]
 8004f2a:	4620      	mov	r0, r4
 8004f2c:	1e8a      	subs	r2, r1, #2
 8004f2e:	4251      	negs	r1, r2
 8004f30:	4151      	adcs	r1, r2
 8004f32:	0349      	lsls	r1, r1, #13
 8004f34:	f7ff fd86 	bl	8004a44 <usart_stop_bit_set>
 8004f38:	2e01      	cmp	r6, #1
 8004f3a:	d041      	beq.n	8004fc0 <gd32_uart_begin+0x188>
 8004f3c:	2e02      	cmp	r6, #2
 8004f3e:	d142      	bne.n	8004fc6 <gd32_uart_begin+0x18e>
 8004f40:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8004f44:	4620      	mov	r0, r4
 8004f46:	f7ff fd6d 	bl	8004a24 <usart_parity_config>
 8004f4a:	2100      	movs	r1, #0
 8004f4c:	4620      	mov	r0, r4
 8004f4e:	f7ff fd8d 	bl	8004a6c <usart_hardware_flow_rts_config>
 8004f52:	2100      	movs	r1, #0
 8004f54:	4620      	mov	r0, r4
 8004f56:	f7ff fd8f 	bl	8004a78 <usart_hardware_flow_cts_config>
 8004f5a:	2104      	movs	r1, #4
 8004f5c:	4620      	mov	r0, r4
 8004f5e:	f7ff fd7f 	bl	8004a60 <usart_receive_config>
 8004f62:	2108      	movs	r1, #8
 8004f64:	4620      	mov	r0, r4
 8004f66:	f7ff fd75 	bl	8004a54 <usart_transmit_config>
 8004f6a:	68e3      	ldr	r3, [r4, #12]
 8004f6c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8004f70:	60e3      	str	r3, [r4, #12]
 8004f72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004f74:	2304      	movs	r3, #4
 8004f76:	2203      	movs	r2, #3
 8004f78:	2118      	movs	r1, #24
 8004f7a:	4819      	ldr	r0, [pc, #100]	; (8004fe0 <gd32_uart_begin+0x1a8>)
 8004f7c:	f7ff faa4 	bl	80044c8 <gpio_init>
 8004f80:	2308      	movs	r3, #8
 8004f82:	2203      	movs	r2, #3
 8004f84:	2104      	movs	r1, #4
 8004f86:	4816      	ldr	r0, [pc, #88]	; (8004fe0 <gd32_uart_begin+0x1a8>)
 8004f88:	f7ff fa9e 	bl	80044c8 <gpio_init>
 8004f8c:	e7b9      	b.n	8004f02 <gd32_uart_begin+0xca>
 8004f8e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004f92:	2203      	movs	r2, #3
 8004f94:	2118      	movs	r1, #24
 8004f96:	480f      	ldr	r0, [pc, #60]	; (8004fd4 <gd32_uart_begin+0x19c>)
 8004f98:	f7ff fa96 	bl	80044c8 <gpio_init>
 8004f9c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8004fa0:	2203      	movs	r2, #3
 8004fa2:	2104      	movs	r1, #4
 8004fa4:	480b      	ldr	r0, [pc, #44]	; (8004fd4 <gd32_uart_begin+0x19c>)
 8004fa6:	e7ef      	b.n	8004f88 <gd32_uart_begin+0x150>
 8004fa8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004fac:	2203      	movs	r2, #3
 8004fae:	2118      	movs	r1, #24
 8004fb0:	4808      	ldr	r0, [pc, #32]	; (8004fd4 <gd32_uart_begin+0x19c>)
 8004fb2:	f7ff fa89 	bl	80044c8 <gpio_init>
 8004fb6:	2304      	movs	r3, #4
 8004fb8:	2203      	movs	r2, #3
 8004fba:	4619      	mov	r1, r3
 8004fbc:	4809      	ldr	r0, [pc, #36]	; (8004fe4 <gd32_uart_begin+0x1ac>)
 8004fbe:	e7e3      	b.n	8004f88 <gd32_uart_begin+0x150>
 8004fc0:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8004fc4:	e7be      	b.n	8004f44 <gd32_uart_begin+0x10c>
 8004fc6:	2100      	movs	r1, #0
 8004fc8:	e7bc      	b.n	8004f44 <gd32_uart_begin+0x10c>
 8004fca:	bf00      	nop
 8004fcc:	40004c00 	andmi	r4, r0, r0, lsl #24
 8004fd0:	40005000 	andmi	r5, r0, r0
 8004fd4:	40011000 	andmi	r1, r1, r0
 8004fd8:	00140010 	andseq	r0, r4, r0, lsl r0
 8004fdc:	40010c00 	andmi	r0, r1, r0, lsl #24
 8004fe0:	40010800 	andmi	r0, r1, r0, lsl #16
 8004fe4:	40011400 	andmi	r1, r1, r0, lsl #8

08004fe8 <micros_init()>:
 8004fe8:	4770      	bx	lr
	...

08004fec <udelay_init()>:
 8004fec:	4a07      	ldr	r2, [pc, #28]	; (800500c <udelay_init()+0x20>)
 8004fee:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8004ff2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004ff6:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8004ffa:	2200      	movs	r2, #0
 8004ffc:	4b04      	ldr	r3, [pc, #16]	; (8005010 <udelay_init()+0x24>)
 8004ffe:	605a      	str	r2, [r3, #4]
 8005000:	681a      	ldr	r2, [r3, #0]
 8005002:	f042 0201 	orr.w	r2, r2, #1
 8005006:	601a      	str	r2, [r3, #0]
 8005008:	4770      	bx	lr
 800500a:	bf00      	nop
 800500c:	e000ed00 	and	lr, r0, r0, lsl #26
 8005010:	e0001000 	and	r1, r0, r0

08005014 <udelay(unsigned int, unsigned int)>:
 8005014:	236c      	movs	r3, #108	; 0x6c
 8005016:	b530      	push	{r4, r5, lr}
 8005018:	4358      	muls	r0, r3
 800501a:	b909      	cbnz	r1, 8005020 <udelay(unsigned int, unsigned int)+0xc>
 800501c:	4b08      	ldr	r3, [pc, #32]	; (8005040 <udelay(unsigned int, unsigned int)+0x2c>)
 800501e:	6859      	ldr	r1, [r3, #4]
 8005020:	2300      	movs	r3, #0
 8005022:	4c07      	ldr	r4, [pc, #28]	; (8005040 <udelay(unsigned int, unsigned int)+0x2c>)
 8005024:	6862      	ldr	r2, [r4, #4]
 8005026:	4291      	cmp	r1, r2
 8005028:	d0fc      	beq.n	8005024 <udelay(unsigned int, unsigned int)+0x10>
 800502a:	bf2a      	itet	cs
 800502c:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8005030:	189b      	addcc	r3, r3, r2
 8005032:	195b      	addcs	r3, r3, r5
 8005034:	1a5b      	subs	r3, r3, r1
 8005036:	4283      	cmp	r3, r0
 8005038:	d300      	bcc.n	800503c <udelay(unsigned int, unsigned int)+0x28>
 800503a:	bd30      	pop	{r4, r5, pc}
 800503c:	4611      	mov	r1, r2
 800503e:	e7f1      	b.n	8005024 <udelay(unsigned int, unsigned int)+0x10>
 8005040:	e0001000 	and	r1, r0, r0

08005044 <adc_mode_config>:
 8005044:	4b06      	ldr	r3, [pc, #24]	; (8005060 <adc_mode_config+0x1c>)
 8005046:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 800504a:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 800504e:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8005052:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8005056:	4302      	orrs	r2, r0
 8005058:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 800505c:	4770      	bx	lr
 800505e:	bf00      	nop
 8005060:	40012000 	andmi	r2, r1, r0

08005064 <adc_special_function_config>:
 8005064:	b510      	push	{r4, lr}
 8005066:	f401 7380 	and.w	r3, r1, #256	; 0x100
 800506a:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 800506e:	f001 0102 	and.w	r1, r1, #2
 8005072:	b17a      	cbz	r2, 8005094 <adc_special_function_config+0x30>
 8005074:	b11b      	cbz	r3, 800507e <adc_special_function_config+0x1a>
 8005076:	6843      	ldr	r3, [r0, #4]
 8005078:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800507c:	6043      	str	r3, [r0, #4]
 800507e:	b11c      	cbz	r4, 8005088 <adc_special_function_config+0x24>
 8005080:	6843      	ldr	r3, [r0, #4]
 8005082:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8005086:	6043      	str	r3, [r0, #4]
 8005088:	b119      	cbz	r1, 8005092 <adc_special_function_config+0x2e>
 800508a:	6883      	ldr	r3, [r0, #8]
 800508c:	f043 0302 	orr.w	r3, r3, #2
 8005090:	6083      	str	r3, [r0, #8]
 8005092:	bd10      	pop	{r4, pc}
 8005094:	b11b      	cbz	r3, 800509e <adc_special_function_config+0x3a>
 8005096:	6843      	ldr	r3, [r0, #4]
 8005098:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800509c:	6043      	str	r3, [r0, #4]
 800509e:	b11c      	cbz	r4, 80050a8 <adc_special_function_config+0x44>
 80050a0:	6843      	ldr	r3, [r0, #4]
 80050a2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80050a6:	6043      	str	r3, [r0, #4]
 80050a8:	2900      	cmp	r1, #0
 80050aa:	d0f2      	beq.n	8005092 <adc_special_function_config+0x2e>
 80050ac:	6883      	ldr	r3, [r0, #8]
 80050ae:	f023 0302 	bic.w	r3, r3, #2
 80050b2:	e7ed      	b.n	8005090 <adc_special_function_config+0x2c>

080050b4 <adc_data_alignment_config>:
 80050b4:	6883      	ldr	r3, [r0, #8]
 80050b6:	b119      	cbz	r1, 80050c0 <adc_data_alignment_config+0xc>
 80050b8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80050bc:	6083      	str	r3, [r0, #8]
 80050be:	4770      	bx	lr
 80050c0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80050c4:	e7fa      	b.n	80050bc <adc_data_alignment_config+0x8>

080050c6 <adc_enable>:
 80050c6:	6883      	ldr	r3, [r0, #8]
 80050c8:	07db      	lsls	r3, r3, #31
 80050ca:	bf5e      	ittt	pl
 80050cc:	6883      	ldrpl	r3, [r0, #8]
 80050ce:	f043 0301 	orrpl.w	r3, r3, #1
 80050d2:	6083      	strpl	r3, [r0, #8]
 80050d4:	4770      	bx	lr

080050d6 <adc_calibration_enable>:
 80050d6:	6883      	ldr	r3, [r0, #8]
 80050d8:	f100 0208 	add.w	r2, r0, #8
 80050dc:	f043 0308 	orr.w	r3, r3, #8
 80050e0:	6083      	str	r3, [r0, #8]
 80050e2:	6813      	ldr	r3, [r2, #0]
 80050e4:	0719      	lsls	r1, r3, #28
 80050e6:	d4fc      	bmi.n	80050e2 <adc_calibration_enable+0xc>
 80050e8:	6883      	ldr	r3, [r0, #8]
 80050ea:	f043 0304 	orr.w	r3, r3, #4
 80050ee:	6083      	str	r3, [r0, #8]
 80050f0:	6813      	ldr	r3, [r2, #0]
 80050f2:	075b      	lsls	r3, r3, #29
 80050f4:	d4fc      	bmi.n	80050f0 <adc_calibration_enable+0x1a>
 80050f6:	4770      	bx	lr

080050f8 <adc_tempsensor_vrefint_enable>:
 80050f8:	4a03      	ldr	r2, [pc, #12]	; (8005108 <adc_tempsensor_vrefint_enable+0x10>)
 80050fa:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 80050fe:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8005102:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8005106:	4770      	bx	lr
 8005108:	40012000 	andmi	r2, r1, r0

0800510c <adc_channel_length_config>:
 800510c:	2901      	cmp	r1, #1
 800510e:	d002      	beq.n	8005116 <adc_channel_length_config+0xa>
 8005110:	2902      	cmp	r1, #2
 8005112:	d00c      	beq.n	800512e <adc_channel_length_config+0x22>
 8005114:	4770      	bx	lr
 8005116:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8005118:	3a01      	subs	r2, #1
 800511a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800511e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8005120:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8005122:	0512      	lsls	r2, r2, #20
 8005124:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8005128:	431a      	orrs	r2, r3
 800512a:	62c2      	str	r2, [r0, #44]	; 0x2c
 800512c:	4770      	bx	lr
 800512e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8005130:	3a01      	subs	r2, #1
 8005132:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8005136:	6383      	str	r3, [r0, #56]	; 0x38
 8005138:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800513a:	0512      	lsls	r2, r2, #20
 800513c:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8005140:	431a      	orrs	r2, r3
 8005142:	6382      	str	r2, [r0, #56]	; 0x38
 8005144:	4770      	bx	lr

08005146 <adc_inserted_channel_config>:
 8005146:	b530      	push	{r4, r5, lr}
 8005148:	6b84      	ldr	r4, [r0, #56]	; 0x38
 800514a:	6b85      	ldr	r5, [r0, #56]	; 0x38
 800514c:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8005150:	1a61      	subs	r1, r4, r1
 8005152:	f06f 0404 	mvn.w	r4, #4
 8005156:	4361      	muls	r1, r4
 8005158:	241f      	movs	r4, #31
 800515a:	310f      	adds	r1, #15
 800515c:	408c      	lsls	r4, r1
 800515e:	ea25 0504 	bic.w	r5, r5, r4
 8005162:	fa02 f101 	lsl.w	r1, r2, r1
 8005166:	4329      	orrs	r1, r5
 8005168:	2a09      	cmp	r2, #9
 800516a:	6381      	str	r1, [r0, #56]	; 0x38
 800516c:	d80b      	bhi.n	8005186 <adc_inserted_channel_config+0x40>
 800516e:	2407      	movs	r4, #7
 8005170:	6901      	ldr	r1, [r0, #16]
 8005172:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8005176:	4094      	lsls	r4, r2
 8005178:	ea21 0104 	bic.w	r1, r1, r4
 800517c:	fa03 f202 	lsl.w	r2, r3, r2
 8005180:	430a      	orrs	r2, r1
 8005182:	6102      	str	r2, [r0, #16]
 8005184:	bd30      	pop	{r4, r5, pc}
 8005186:	2a11      	cmp	r2, #17
 8005188:	d8fc      	bhi.n	8005184 <adc_inserted_channel_config+0x3e>
 800518a:	2407      	movs	r4, #7
 800518c:	3a0a      	subs	r2, #10
 800518e:	68c1      	ldr	r1, [r0, #12]
 8005190:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8005194:	4094      	lsls	r4, r2
 8005196:	ea21 0104 	bic.w	r1, r1, r4
 800519a:	4093      	lsls	r3, r2
 800519c:	430b      	orrs	r3, r1
 800519e:	60c3      	str	r3, [r0, #12]
 80051a0:	e7f0      	b.n	8005184 <adc_inserted_channel_config+0x3e>

080051a2 <adc_external_trigger_source_config>:
 80051a2:	2901      	cmp	r1, #1
 80051a4:	d002      	beq.n	80051ac <adc_external_trigger_source_config+0xa>
 80051a6:	2902      	cmp	r1, #2
 80051a8:	d008      	beq.n	80051bc <adc_external_trigger_source_config+0x1a>
 80051aa:	4770      	bx	lr
 80051ac:	6883      	ldr	r3, [r0, #8]
 80051ae:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 80051b2:	6083      	str	r3, [r0, #8]
 80051b4:	6883      	ldr	r3, [r0, #8]
 80051b6:	4313      	orrs	r3, r2
 80051b8:	6083      	str	r3, [r0, #8]
 80051ba:	4770      	bx	lr
 80051bc:	6883      	ldr	r3, [r0, #8]
 80051be:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80051c2:	e7f6      	b.n	80051b2 <adc_external_trigger_source_config+0x10>

080051c4 <adc_external_trigger_config>:
 80051c4:	f001 0301 	and.w	r3, r1, #1
 80051c8:	f001 0102 	and.w	r1, r1, #2
 80051cc:	b152      	cbz	r2, 80051e4 <adc_external_trigger_config+0x20>
 80051ce:	b11b      	cbz	r3, 80051d8 <adc_external_trigger_config+0x14>
 80051d0:	6883      	ldr	r3, [r0, #8]
 80051d2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80051d6:	6083      	str	r3, [r0, #8]
 80051d8:	b119      	cbz	r1, 80051e2 <adc_external_trigger_config+0x1e>
 80051da:	6883      	ldr	r3, [r0, #8]
 80051dc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80051e0:	6083      	str	r3, [r0, #8]
 80051e2:	4770      	bx	lr
 80051e4:	b11b      	cbz	r3, 80051ee <adc_external_trigger_config+0x2a>
 80051e6:	6883      	ldr	r3, [r0, #8]
 80051e8:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80051ec:	6083      	str	r3, [r0, #8]
 80051ee:	2900      	cmp	r1, #0
 80051f0:	d0f7      	beq.n	80051e2 <adc_external_trigger_config+0x1e>
 80051f2:	6883      	ldr	r3, [r0, #8]
 80051f4:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80051f8:	e7f2      	b.n	80051e0 <adc_external_trigger_config+0x1c>

080051fa <adc_software_trigger_enable>:
 80051fa:	07ca      	lsls	r2, r1, #31
 80051fc:	bf42      	ittt	mi
 80051fe:	6883      	ldrmi	r3, [r0, #8]
 8005200:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8005204:	6083      	strmi	r3, [r0, #8]
 8005206:	078b      	lsls	r3, r1, #30
 8005208:	bf42      	ittt	mi
 800520a:	6883      	ldrmi	r3, [r0, #8]
 800520c:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8005210:	6083      	strmi	r3, [r0, #8]
 8005212:	4770      	bx	lr

08005214 <i2c_clock_config>:
 8005214:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005216:	4605      	mov	r5, r0
 8005218:	2002      	movs	r0, #2
 800521a:	460c      	mov	r4, r1
 800521c:	4617      	mov	r7, r2
 800521e:	f7ff fa33 	bl	8004688 <rcu_clock_freq_get>
 8005222:	4603      	mov	r3, r0
 8005224:	4828      	ldr	r0, [pc, #160]	; (80052c8 <i2c_clock_config+0xb4>)
 8005226:	4a29      	ldr	r2, [pc, #164]	; (80052cc <i2c_clock_config+0xb8>)
 8005228:	fbb3 f0f0 	udiv	r0, r3, r0
 800522c:	4293      	cmp	r3, r2
 800522e:	bf34      	ite	cc
 8005230:	4601      	movcc	r1, r0
 8005232:	2136      	movcs	r1, #54	; 0x36
 8005234:	686e      	ldr	r6, [r5, #4]
 8005236:	4a26      	ldr	r2, [pc, #152]	; (80052d0 <i2c_clock_config+0xbc>)
 8005238:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 800523c:	430e      	orrs	r6, r1
 800523e:	4294      	cmp	r4, r2
 8005240:	606e      	str	r6, [r5, #4]
 8005242:	d816      	bhi.n	8005272 <i2c_clock_config+0x5e>
 8005244:	3001      	adds	r0, #1
 8005246:	2835      	cmp	r0, #53	; 0x35
 8005248:	d90d      	bls.n	8005266 <i2c_clock_config+0x52>
 800524a:	2236      	movs	r2, #54	; 0x36
 800524c:	622a      	str	r2, [r5, #32]
 800524e:	0064      	lsls	r4, r4, #1
 8005250:	fbb3 f4f4 	udiv	r4, r3, r4
 8005254:	2c04      	cmp	r4, #4
 8005256:	bf38      	it	cc
 8005258:	2404      	movcc	r4, #4
 800525a:	69ea      	ldr	r2, [r5, #28]
 800525c:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8005260:	4314      	orrs	r4, r2
 8005262:	61ec      	str	r4, [r5, #28]
 8005264:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005266:	2802      	cmp	r0, #2
 8005268:	d801      	bhi.n	800526e <i2c_clock_config+0x5a>
 800526a:	2202      	movs	r2, #2
 800526c:	e7ee      	b.n	800524c <i2c_clock_config+0x38>
 800526e:	6228      	str	r0, [r5, #32]
 8005270:	e7ed      	b.n	800524e <i2c_clock_config+0x3a>
 8005272:	4a18      	ldr	r2, [pc, #96]	; (80052d4 <i2c_clock_config+0xc0>)
 8005274:	4294      	cmp	r4, r2
 8005276:	d8f5      	bhi.n	8005264 <i2c_clock_config+0x50>
 8005278:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800527c:	4351      	muls	r1, r2
 800527e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005282:	fbb1 f1f2 	udiv	r1, r1, r2
 8005286:	3101      	adds	r1, #1
 8005288:	6229      	str	r1, [r5, #32]
 800528a:	b9a7      	cbnz	r7, 80052b6 <i2c_clock_config+0xa2>
 800528c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8005290:	fbb3 f4f4 	udiv	r4, r3, r4
 8005294:	69eb      	ldr	r3, [r5, #28]
 8005296:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800529a:	61eb      	str	r3, [r5, #28]
 800529c:	f3c4 030b 	ubfx	r3, r4, #0, #12
 80052a0:	b90b      	cbnz	r3, 80052a6 <i2c_clock_config+0x92>
 80052a2:	f044 0401 	orr.w	r4, r4, #1
 80052a6:	69eb      	ldr	r3, [r5, #28]
 80052a8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80052ac:	61eb      	str	r3, [r5, #28]
 80052ae:	69eb      	ldr	r3, [r5, #28]
 80052b0:	4323      	orrs	r3, r4
 80052b2:	61eb      	str	r3, [r5, #28]
 80052b4:	e7d6      	b.n	8005264 <i2c_clock_config+0x50>
 80052b6:	2219      	movs	r2, #25
 80052b8:	4354      	muls	r4, r2
 80052ba:	fbb3 f4f4 	udiv	r4, r3, r4
 80052be:	69eb      	ldr	r3, [r5, #28]
 80052c0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80052c4:	e7e9      	b.n	800529a <i2c_clock_config+0x86>
 80052c6:	bf00      	nop
 80052c8:	000f4240 	andeq	r4, pc, r0, asr #4
 80052cc:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 80052d0:	000186a0 	andeq	r8, r1, r0, lsr #13
 80052d4:	00061a80 	andeq	r1, r6, r0, lsl #21

080052d8 <i2c_ack_config>:
 80052d8:	6803      	ldr	r3, [r0, #0]
 80052da:	2901      	cmp	r1, #1
 80052dc:	bf0c      	ite	eq
 80052de:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80052e2:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 80052e6:	6003      	str	r3, [r0, #0]
 80052e8:	4770      	bx	lr

080052ea <i2c_ackpos_config>:
 80052ea:	6803      	ldr	r3, [r0, #0]
 80052ec:	b919      	cbnz	r1, 80052f6 <i2c_ackpos_config+0xc>
 80052ee:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80052f2:	6003      	str	r3, [r0, #0]
 80052f4:	4770      	bx	lr
 80052f6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80052fa:	e7fa      	b.n	80052f2 <i2c_ackpos_config+0x8>

080052fc <i2c_master_addressing>:
 80052fc:	3202      	adds	r2, #2
 80052fe:	bf0c      	ite	eq
 8005300:	f021 0101 	biceq.w	r1, r1, #1
 8005304:	f041 0101 	orrne.w	r1, r1, #1
 8005308:	6101      	str	r1, [r0, #16]
 800530a:	4770      	bx	lr

0800530c <i2c_enable>:
 800530c:	6803      	ldr	r3, [r0, #0]
 800530e:	f043 0301 	orr.w	r3, r3, #1
 8005312:	6003      	str	r3, [r0, #0]
 8005314:	4770      	bx	lr

08005316 <i2c_start_on_bus>:
 8005316:	6803      	ldr	r3, [r0, #0]
 8005318:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800531c:	6003      	str	r3, [r0, #0]
 800531e:	4770      	bx	lr

08005320 <i2c_stop_on_bus>:
 8005320:	6803      	ldr	r3, [r0, #0]
 8005322:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005326:	6003      	str	r3, [r0, #0]
 8005328:	4770      	bx	lr

0800532a <i2c_data_transmit>:
 800532a:	6101      	str	r1, [r0, #16]
 800532c:	4770      	bx	lr

0800532e <i2c_data_receive>:
 800532e:	6900      	ldr	r0, [r0, #16]
 8005330:	b2c0      	uxtb	r0, r0
 8005332:	4770      	bx	lr

08005334 <i2c_flag_get>:
 8005334:	098b      	lsrs	r3, r1, #6
 8005336:	581a      	ldr	r2, [r3, r0]
 8005338:	2301      	movs	r3, #1
 800533a:	f001 011f 	and.w	r1, r1, #31
 800533e:	408b      	lsls	r3, r1
 8005340:	4213      	tst	r3, r2
 8005342:	bf14      	ite	ne
 8005344:	2001      	movne	r0, #1
 8005346:	2000      	moveq	r0, #0
 8005348:	4770      	bx	lr

0800534a <i2c_flag_clear>:
 800534a:	f240 5301 	movw	r3, #1281	; 0x501
 800534e:	4299      	cmp	r1, r3
 8005350:	b510      	push	{r4, lr}
 8005352:	d102      	bne.n	800535a <i2c_flag_clear+0x10>
 8005354:	6943      	ldr	r3, [r0, #20]
 8005356:	6983      	ldr	r3, [r0, #24]
 8005358:	bd10      	pop	{r4, pc}
 800535a:	2201      	movs	r2, #1
 800535c:	098c      	lsrs	r4, r1, #6
 800535e:	5823      	ldr	r3, [r4, r0]
 8005360:	f001 011f 	and.w	r1, r1, #31
 8005364:	408a      	lsls	r2, r1
 8005366:	ea23 0302 	bic.w	r3, r3, r2
 800536a:	5023      	str	r3, [r4, r0]
 800536c:	e7f4      	b.n	8005358 <i2c_flag_clear+0xe>
	...

Disassembly of section .rodata:

08005370 <deviceLabel-0x100>:
	...
 8005378:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 800537c:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8005380:	00000000 	andeq	r0, r0, r0
 8005384:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8005388:	2072614d 	rsbscs	r6, r2, sp, asr #2
 800538c:	32203931 	eorcc	r3, r0, #802816	; 0xc4000
 8005390:	00323230 	eorseq	r3, r2, r0, lsr r2
 8005394:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8005398:	33303146 	teqcc	r0, #-2147483631	; 0x80000011
 800539c:	565b0052 			; <UNDEFINED> instruction: 0x565b0052
 80053a0:	205d7325 	subscs	r7, sp, r5, lsr #6
 80053a4:	43207325 			; <UNDEFINED> instruction: 0x43207325
 80053a8:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 80053ac:	2064656c 	rsbcs	r6, r4, ip, ror #10
 80053b0:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 80053b4:	74612073 	strbtvc	r2, [r1], #-115	; 0xffffff8d
 80053b8:	0a732520 	beq	9cce840 <__exidx_end+0x1cc8bf4>
 80053bc:	3a383100 	bcc	8e117c4 <__exidx_end+0xe0bb78>
 80053c0:	343a3231 	ldrtcc	r3, [sl], #-561	; 0xfffffdcf
 80053c4:	44520030 	ldrbmi	r0, [r2], #-48	; 0xffffffd0
 80053c8:	6f43204d 	svcvs	0x0043204d
 80053cc:	6f72746e 	svcvs	0x0072746e
 80053d0:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
 80053d4:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 80053d8:	53552068 	cmppl	r5, #104	; 0x68
 80053dc:	435b2042 	cmpmi	fp, #66	; 0x42
 80053e0:	61706d6f 	cmnvs	r0, pc, ror #26
 80053e4:	6c626974 			; <UNDEFINED> instruction: 0x6c626974
 80053e8:	69772065 	ldmdbvs	r7!, {r0, r2, r5, r6, sp}^
 80053ec:	45206874 	strmi	r6, [r0, #-2164]!	; 0xfffff78c
 80053f0:	6574746e 	ldrbvs	r7, [r4, #-1134]!	; 0xfffffb92
 80053f4:	53552063 	cmppl	r5, #99	; 0x63
 80053f8:	72502042 	subsvc	r2, r0, #66	; 0x42
 80053fc:	7270206f 	rsbsvc	r2, r0, #111	; 0x6f
 8005400:	636f746f 	cmnvs	pc, #1862270976	; 0x6f000000
 8005404:	2c5d6c6f 	mrrccs	12, 6, r6, sp, cr15
 8005408:	64695720 	strbtvs	r5, [r9], #-1824	; 0xfffff8e0
 800540c:	20746567 	rsbscs	r6, r4, r7, ror #10
 8005410:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8005414:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8005418:	25282064 	strcs	r2, [r8, #-100]!	; 0xffffff9c
 800541c:	000a2973 	andeq	r2, sl, r3, ror r9
 8005420:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8005424:	55206563 	strpl	r6, [r0, #-1379]!	; 0xfffffa9d
 8005428:	20444955 	subcs	r4, r4, r5, asr r9
 800542c:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8005430:	2e257832 	mcrcs	8, 1, r7, cr5, cr2, {1}
 8005434:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8005438:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 800543c:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 8005440:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 8005444:	2c78322e 	lfmcs	f3, 2, [r8], #-184	; 0xffffff48
 8005448:	614c0020 	cmpvs	ip, r0, lsr #32
 800544c:	206c6562 	rsbcs	r6, ip, r2, ror #10
 8005450:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8005454:	000a732a 	andeq	r7, sl, sl, lsr #6
 8005458:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 800545c:	33303146 	teqcc	r0, #-2147483631	; 0x80000011
 8005460:	44204352 	strtmi	r4, [r0], #-850	; 0xfffffcae
 8005464:	5520584d 	strpl	r5, [r0, #-2125]!	; 0xfffff7b3
 8005468:	50204253 	eorpl	r4, r0, r3, asr r2
 800546c:	00006f72 	andeq	r6, r0, r2, ror pc

08005470 <deviceLabel>:
 8005470:	08005458 	stmdaeq	r0, {r3, r4, r6, sl, ip, lr}
 8005474:	00000016 	andeq	r0, r0, r6, lsl r0

08005478 <SOFTWARE_VERSION>:
 8005478:	00332e31 	eorseq	r2, r3, r1, lsr lr

0800547c <widget_mode_names>:
 800547c:	5f584d44 	svcpl	0x00584d44
 8005480:	004d4452 	subeq	r4, sp, r2, asr r4
 8005484:	00000000 	andeq	r0, r0, r0
 8005488:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8005494:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 80054a0:	5f4d4452 	svcpl	0x004d4452
 80054a4:	46494e53 			; <UNDEFINED> instruction: 0x46494e53
 80054a8:	00524546 	subseq	r4, r2, r6, asr #10
 80054ac:	5f544547 	svcpl	0x00544547
 80054b0:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 80054b4:	505f5445 	subspl	r5, pc, r5, asr #8
 80054b8:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 80054bc:	45525f53 	ldrbmi	r5, [r2, #-3923]	; 0xfffff0ad
 80054c0:	00594c50 	subseq	r4, r9, r0, asr ip
 80054c4:	5f544553 	svcpl	0x00544553
 80054c8:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 80054cc:	505f5445 	subspl	r5, pc, r5, asr #8
 80054d0:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 80054d4:	45520053 	ldrbmi	r0, [r2, #-83]	; 0xffffffad
 80054d8:	56494543 	strbpl	r4, [r9], -r3, asr #10
 80054dc:	445f4445 	ldrbmi	r4, [pc], #-1093	; 80054e4 <widget_mode_names+0x68>
 80054e0:	505f584d 	subspl	r5, pc, sp, asr #16
 80054e4:	454b4341 	strbmi	r4, [fp, #-833]	; 0xfffffcbf
 80054e8:	65530054 	ldrbvs	r0, [r3, #-84]	; 0xffffffac
 80054ec:	4420646e 	strtmi	r6, [r0], #-1134	; 0xfffffb92
 80054f0:	6420584d 	strtvs	r5, [r0], #-2125	; 0xfffff7b3
 80054f4:	20617461 	rsbcs	r7, r1, r1, ror #8
 80054f8:	48206f74 	stmdami	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}
 80054fc:	2c54534f 	mrrccs	3, 4, r5, r4, cr15
 8005500:	00642520 	rsbeq	r2, r4, r0, lsr #10
 8005504:	5054554f 	subspl	r5, r4, pc, asr #10
 8005508:	4f5f5455 	svcmi	0x005f5455
 800550c:	5f594c4e 	svcpl	0x00594c4e
 8005510:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 8005514:	584d445f 	stmdapl	sp, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8005518:	4341505f 	movtmi	r5, #4191	; 0x105f
 800551c:	5f54454b 	svcpl	0x0054454b
 8005520:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 8005524:	00545345 	subseq	r5, r4, r5, asr #6
 8005528:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 800552c:	4d44525f 	sfmmi	f5, 2, [r4, #-380]	; 0xfffffe84
 8005530:	4341505f 	movtmi	r5, #4191	; 0x105f
 8005534:	5f54454b 	svcpl	0x0054454b
 8005538:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 800553c:	00545345 	subseq	r5, r4, r5, asr #6
 8005540:	45434552 	strbmi	r4, [r3, #-1362]	; 0xfffffaae
 8005544:	5f455649 	svcpl	0x00455649
 8005548:	5f584d44 	svcpl	0x00584d44
 800554c:	435f4e4f 	cmpmi	pc, #1264	; 0x4f0
 8005550:	474e4148 	strbmi	r4, [lr, -r8, asr #2]
 8005554:	45520045 	ldrbmi	r0, [r2, #-69]	; 0xffffffbb
 8005558:	56494543 	strbpl	r4, [r9], -r3, asr #10
 800555c:	445f4445 	ldrbmi	r4, [pc], #-1093	; 8005564 <widget_mode_names+0xe8>
 8005560:	435f584d 	cmpmi	pc, #5046272	; 0x4d0000
 8005564:	545f534f 	ldrbpl	r5, [pc], #-847	; 800556c <widget_mode_names+0xf0>
 8005568:	00455059 	subeq	r5, r5, r9, asr r0
 800556c:	746e6553 	strbtvc	r6, [lr], #-1363	; 0xfffffaad
 8005570:	61686320 	cmnvs	r8, r0, lsr #6
 8005574:	6465676e 	strbtvs	r6, [r5], #-1902	; 0xfffff892
 8005578:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 800557c:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 8005580:	6f742061 	svcvs	0x00742061
 8005584:	534f4820 	movtpl	r4, #63520	; 0xf820
 8005588:	45530054 	ldrbmi	r0, [r3, #-84]	; 0xffffffac
 800558c:	525f444e 	subspl	r4, pc, #1308622848	; 0x4e000000
 8005590:	445f4d44 	ldrbmi	r4, [pc], #-3396	; 8005598 <widget_mode_names+0x11c>
 8005594:	4f435349 	svcmi	0x00435349
 8005598:	59524556 	ldmdbpl	r2, {r1, r2, r4, r6, r8, sl, lr}^
 800559c:	5145525f 	cmppl	r5, pc, asr r2
 80055a0:	54534555 	ldrbpl	r4, [r3], #-1365	; 0xfffffaab
 80055a4:	6e655300 	cdpvs	3, 6, cr5, cr5, cr0, {0}
 80055a8:	44522064 	ldrbmi	r2, [r2], #-100	; 0xffffff9c
 80055ac:	6164204d 	cmnvs	r4, sp, asr #32
 80055b0:	74206174 	strtvc	r6, [r0], #-372	; 0xfffffe8c
 80055b4:	4f48206f 	svcmi	0x0048206f
 80055b8:	202c5453 	eorcs	r5, ip, r3, asr r4
 80055bc:	64253a6c 	strtvs	r3, [r5], #-2668	; 0xfffff594
 80055c0:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 80055c4:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
 80055c8:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
 80055cc:	43455200 	movtmi	r5, #20992	; 0x5200
 80055d0:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 80055d4:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 80055d8:	41505f4d 	cmpmi	r0, sp, asr #30
 80055dc:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 80055e0:	3a435320 	bcc	90da268 <__exidx_end+0x10d461c>
 80055e4:	43437830 	movtmi	r7, #14384	; 0x3830
 80055e8:	43455200 	movtmi	r5, #20992	; 0x5200
 80055ec:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 80055f0:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 80055f4:	41505f4d 	cmpmi	r0, sp, asr #30
 80055f8:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 80055fc:	3a435320 	bcc	90da284 <__exidx_end+0x10d4638>
 8005600:	45467830 	strbmi	r7, [r6, #-2096]	; 0xfffff7d0
 8005604:	4e414d00 	cdpmi	13, 4, cr4, cr1, cr0, {0}
 8005608:	43414655 	movtmi	r4, #5717	; 0x1655
 800560c:	45525554 	ldrbmi	r5, [r2, #-1364]	; 0xfffffaac
 8005610:	414c5f52 	cmpmi	ip, r2, asr pc
 8005614:	004c4542 	subeq	r4, ip, r2, asr #10
 8005618:	5f544547 	svcpl	0x00544547
 800561c:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 8005620:	4e5f5445 	cdpmi	4, 5, cr5, cr15, cr5, {2}
 8005624:	5f454d41 	svcpl	0x00454d41
 8005628:	4542414c 	strbmi	r4, [r2, #-332]	; 0xfffffeb4
 800562c:	3a4c004c 	bcc	9305764 <__exidx_end+0x12ffb18>
 8005630:	253a6425 	ldrcs	r6, [sl, #-1061]!	; 0xfffffbdb
 8005634:	64252864 	strtvs	r2, [r5], #-2148	; 0xfffff79c
 8005638:	 	ldmdbvs	r7!, {r0, r3, r5}^

0800563a <WidgetParamsConst::WIDGET_MODE>:
 800563a:	67646977 			; <UNDEFINED> instruction: 0x67646977
 800563e:	6d5f7465 	cfldrdvs	mvd7, [pc, #-404]	; 80054b0 <widget_mode_names+0x34>
 8005642:	0065646f 	rsbeq	r6, r5, pc, ror #8

08005646 <WidgetParamsConst::DMXUSBPRO_MAB_TIME>:
 8005646:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 800564a:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 800564e:	616d5f6f 	cmnvs	sp, pc, ror #30
 8005652:	69745f62 	ldmdbvs	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 8005656:	 	strvs	r6, [r0], #-1389	; 0xfffffa93

08005659 <WidgetParamsConst::DMXUSBPRO_BREAK_TIME>:
 8005659:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 800565d:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8005661:	72625f6f 	rsbvc	r5, r2, #444	; 0x1bc
 8005665:	5f6b6165 	svcpl	0x006b6165
 8005669:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

0800566e <WidgetParamsConst::DMXUSBPRO_REFRESH_RATE>:
 800566e:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 8005672:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8005676:	65725f6f 	ldrbvs	r5, [r2, #-3951]!	; 0xfffff091
 800567a:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 800567e:	61725f68 	cmnvs	r2, r8, ror #30
 8005682:	 	strvs	r6, [r0], #-1396	; 0xfffffa8c

08005685 <WidgetParamsConst::DMX_SEND_TO_HOST_THROTTLE>:
 8005685:	5f786d64 	svcpl	0x00786d64
 8005689:	646e6573 	strbtvs	r6, [lr], #-1395	; 0xfffffa8d
 800568d:	5f6f745f 	svcpl	0x006f745f
 8005691:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8005695:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
 8005699:	6c74746f 	cfldrdvs	mvd7, [r4], #-444	; 0xfffffe44
 800569d:	46210065 	strtmi	r0, [r1], -r5, rrx
 80056a1:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 80056a5:	43202164 			; <UNDEFINED> instruction: 0x43202164
 80056a9:	6f6e6e61 	svcvs	0x006e6e61
 80056ad:	65732074 	ldrbvs	r2, [r3, #-116]!	; 0xffffff8c
 80056b1:	7420646e 	strtvc	r6, [r0], #-1134	; 0xfffffb92
 80056b5:	6f68206f 	svcvs	0x0068206f
 80056b9:	53007473 	movwpl	r7, #1139	; 0x473
 80056bd:	20646e65 	rsbcs	r6, r4, r5, ror #28
 80056c1:	20584d44 	subscs	r4, r8, r4, asr #26
 80056c5:	61746164 	cmnvs	r4, r4, ror #2
 80056c9:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 80056cd:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
 80056d1:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 80056d5:	53006425 	movwpl	r6, #1061	; 0x425
 80056d9:	20646e65 	rsbcs	r6, r4, r5, ror #28
 80056dd:	204d4452 	subcs	r4, sp, r2, asr r4
 80056e1:	61746164 	cmnvs	r4, r4, ror #2
 80056e5:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 80056e9:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
	...

080056ee <RDMConst::MANUFACTURER_ID>:
 80056ee:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

080056f0 <RDMConst::MANUFACTURER_NAME>:
 80056f0:	70747468 	rsbsvc	r7, r4, r8, ror #8
 80056f4:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 80056f8:	6f2e7777 	svcvs	0x002e7777
 80056fc:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 8005700:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 8005704:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8005708:	0067726f 	rsbeq	r7, r7, pc, ror #4
 800570c:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8005710:	672f2f3a 			; <UNDEFINED> instruction: 0x672f2f3a
 8005714:	2d323364 	ldccs	3, cr3, [r2, #-400]!	; 0xfffffe70
 8005718:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 800571c:	0067726f 	rsbeq	r7, r7, pc, ror #4

08005720 <DEVICE_LABEL>:
 8005720:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8005724:	33303146 	teqcc	r0, #-2147483631	; 0x80000011
 8005728:	44522052 	ldrbmi	r2, [r2], #-82	; 0xffffffae
 800572c:	6544204d 	strbvs	r2, [r4, #-77]	; 0xffffffb3
 8005730:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8005734:	00000000 	andeq	r0, r0, r0

08005738 <s_aStorSize>:
 8005738:	00000060 	andeq	r0, r0, r0, rrx
 800573c:	00000090 	muleq	r0, r0, r0
 8005740:	00000020 	andeq	r0, r0, r0, lsr #32
 8005744:	00000040 	andeq	r0, r0, r0, asr #32
 8005748:	00000060 	andeq	r0, r0, r0, rrx
 800574c:	00000040 	andeq	r0, r0, r0, asr #32
 8005750:	00000020 	andeq	r0, r0, r0, lsr #32
 8005754:	00000020 	andeq	r0, r0, r0, lsr #32
 8005758:	000001e0 	andeq	r0, r0, r0, ror #3
 800575c:	00000040 	andeq	r0, r0, r0, asr #32
 8005760:	00000020 	andeq	r0, r0, r0, lsr #32
 8005764:	00000060 	andeq	r0, r0, r0, rrx
 8005768:	00000030 	andeq	r0, r0, r0, lsr r0
 800576c:	00000020 	andeq	r0, r0, r0, lsr #32
 8005770:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8005774:	00000030 	andeq	r0, r0, r0, lsr r0
 8005778:	00000040 	andeq	r0, r0, r0, asr #32
 800577c:	00000020 	andeq	r0, r0, r0, lsr #32
 8005780:	00000060 	andeq	r0, r0, r0, rrx
 8005784:	00000020 	andeq	r0, r0, r0, lsr #32
 8005788:	00000400 	andeq	r0, r0, r0, lsl #8
 800578c:	00000020 	andeq	r0, r0, r0, lsr #32
 8005790:	00000020 	andeq	r0, r0, r0, lsr #32
 8005794:	00000040 	andeq	r0, r0, r0, asr #32
 8005798:	00000060 	andeq	r0, r0, r0, rrx
 800579c:	00000020 	andeq	r0, r0, r0, lsr #32
 80057a0:	00000020 	andeq	r0, r0, r0, lsr #32
 80057a4:	00000020 	andeq	r0, r0, r0, lsr #32

080057a8 <vtable for StoreRDMDevice>:
	...
 80057b0:	08003375 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, ip, sp}
 80057b4:	080033e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, ip, sp}
 80057b8:	0800337d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, ip, sp}
 80057bc:	080033f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, ip, sp}
 80057c0:	080033a1 	stmdaeq	r0, {r0, r5, r7, r8, r9, ip, sp}
 80057c4:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80057c8:	00000000 	andeq	r0, r0, r0
 80057cc:	08003377 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r8, r9, ip, sp}
 80057d0:	080033f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, ip, sp}
 80057d4:	080033dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, sp}

080057d8 <vtable for StoreWidget>:
	...
 80057e0:	08003431 	stmdaeq	r0, {r0, r4, r5, sl, ip, sp}
 80057e4:	0800345d 	stmdaeq	r0, {r0, r2, r3, r4, r6, sl, ip, sp}
 80057e8:	08003439 	stmdaeq	r0, {r0, r3, r4, r5, sl, ip, sp}
 80057ec:	08003471 	stmdaeq	r0, {r0, r4, r5, r6, sl, ip, sp}
 80057f0:	08002181 	stmdaeq	r0, {r0, r7, r8, sp}
 80057f4:	080021b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sp}
 80057f8:	080021e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, sp}
 80057fc:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8005800:	00000000 	andeq	r0, r0, r0
 8005804:	08003433 	stmdaeq	r0, {r0, r1, r4, r5, sl, ip, sp}
 8005808:	08003469 	stmdaeq	r0, {r0, r3, r5, r6, sl, ip, sp}
 800580c:	080021ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, sp}
 8005810:	080021e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, sp}
 8005814:	08002215 	stmdaeq	r0, {r0, r2, r4, r9, sp}
 8005818:	3a434d46 	bcc	90d8d38 <__exidx_end+0x10d30ec>
 800581c:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8005820:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8005824:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8005828:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 800582c:	6f742068 	svcvs	0x00742068
 8005830:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8005834:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8005838:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 800583c:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8005840:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8005844:	6f6c000a 	svcvs	0x006c000a
 8005848:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
 800584c:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8005850:	2079616c 	rsbscs	r6, r9, ip, ror #2
 8005854:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
 8005858:	48530064 	ldmdami	r3, {r2, r5, r6}^
 800585c:	36303131 			; <UNDEFINED> instruction: 0x36303131
 8005860:	44535300 	ldrbmi	r5, [r3], #-768	; 0xfffffd00
 8005864:	36303331 			; <UNDEFINED> instruction: 0x36303331
 8005868:	20732500 	rsbscs	r2, r3, r0, lsl #10
 800586c:	2c642528 	cfstr64cs	mvdx2, [r4], #-160	; 0xffffff60
 8005870:	0a296425 	beq	8a5e90c <__exidx_end+0xa58cc0>
 8005874:	eeaa4000 	cdp	0, 10, cr4, cr10, cr0, {0}
 8005878:	0000eeaa 	andeq	lr, r0, sl, lsr #29

0800587c <_OledFont8x6>:
 800587c:	00000040 	andeq	r0, r0, r0, asr #32
 8005880:	40000000 	andmi	r0, r0, r0
 8005884:	005f0000 	subseq	r0, pc, r0
 8005888:	00400000 	subeq	r0, r0, r0
 800588c:	00070007 	andeq	r0, r7, r7
 8005890:	7f144000 	svcvc	0x00144000
 8005894:	00147f14 	andseq	r7, r4, r4, lsl pc
 8005898:	7f2a2440 	svcvc	0x002a2440
 800589c:	4000122a 	andmi	r1, r0, sl, lsr #4
 80058a0:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 80058a4:	36400062 	strbcc	r0, [r0], -r2, rrx
 80058a8:	50205649 	eorpl	r5, r0, r9, asr #12
 80058ac:	08004000 	stmdaeq	r0, {lr}
 80058b0:	00000307 	andeq	r0, r0, r7, lsl #6
 80058b4:	221c0040 	andscs	r0, ip, #64	; 0x40
 80058b8:	40000041 	andmi	r0, r0, r1, asr #32
 80058bc:	1c224100 	stfnes	f4, [r2], #-0
 80058c0:	2a400000 	bcs	90058c8 <__exidx_end+0xfffc7c>
 80058c4:	2a1c7f1c 	bcs	872553c <__exidx_end+0x71f8f0>
 80058c8:	08084000 	stmdaeq	r8, {lr}
 80058cc:	0008083e 	andeq	r0, r8, lr, lsr r8
 80058d0:	70800040 	addvc	r0, r0, r0, asr #32
 80058d4:	40000030 	andmi	r0, r0, r0, lsr r0
 80058d8:	08080808 	stmdaeq	r8, {r3, fp}
 80058dc:	00400008 	subeq	r0, r0, r8
 80058e0:	00606000 	rsbeq	r6, r0, r0
 80058e4:	10204000 	eorne	r4, r0, r0
 80058e8:	00020408 	andeq	r0, r2, r8, lsl #8
 80058ec:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 80058f0:	40003e45 	andmi	r3, r0, r5, asr #28
 80058f4:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 80058f8:	72400000 	subvc	r0, r0, #0
 80058fc:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8005900:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8005904:	00334d49 	eorseq	r4, r3, r9, asr #26
 8005908:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 800590c:	4000107f 	andmi	r1, r0, pc, ror r0
 8005910:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8005914:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8005918:	3149494a 	cmpcc	r9, sl, asr #18
 800591c:	21414000 	mrscs	r4, (UNDEF: 65)
 8005920:	00070911 	andeq	r0, r7, r1, lsl r9
 8005924:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8005928:	40003649 	andmi	r3, r0, r9, asr #12
 800592c:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8005930:	0040001e 	subeq	r0, r0, lr, lsl r0
 8005934:	00001400 	andeq	r1, r0, r0, lsl #8
 8005938:	40004000 	andmi	r4, r0, r0
 800593c:	00000034 	andeq	r0, r0, r4, lsr r0
 8005940:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8005944:	40004122 	andmi	r4, r0, r2, lsr #2
 8005948:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 800594c:	00400014 	subeq	r0, r0, r4, lsl r0
 8005950:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8005954:	01024000 	mrseq	r4, (UNDEF: 2)
 8005958:	00060959 	andeq	r0, r6, r9, asr r9
 800595c:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8005960:	40004e59 	andmi	r4, r0, r9, asr lr
 8005964:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8005968:	7f40007c 	svcvc	0x0040007c
 800596c:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8005970:	413e4000 	teqmi	lr, r0
 8005974:	00224141 	eoreq	r4, r2, r1, asr #2
 8005978:	41417f40 	cmpmi	r1, r0, asr #30
 800597c:	40003e41 	andmi	r3, r0, r1, asr #28
 8005980:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8005984:	7f400041 	svcvc	0x00400041
 8005988:	01090909 	tsteq	r9, r9, lsl #18
 800598c:	413e4000 	teqmi	lr, r0
 8005990:	00735141 	rsbseq	r5, r3, r1, asr #2
 8005994:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8005998:	40007f08 	andmi	r7, r0, r8, lsl #30
 800599c:	417f4100 	cmnmi	pc, r0, lsl #2
 80059a0:	20400000 	subcs	r0, r0, r0
 80059a4:	013f4140 	teqeq	pc, r0, asr #2
 80059a8:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 80059ac:	00412214 	subeq	r2, r1, r4, lsl r2
 80059b0:	40407f40 	submi	r7, r0, r0, asr #30
 80059b4:	40004040 	andmi	r4, r0, r0, asr #32
 80059b8:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 80059bc:	7f40007f 	svcvc	0x0040007f
 80059c0:	7f100804 	svcvc	0x00100804
 80059c4:	413e4000 	teqmi	lr, r0
 80059c8:	003e4141 	eorseq	r4, lr, r1, asr #2
 80059cc:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 80059d0:	40000609 	andmi	r0, r0, r9, lsl #12
 80059d4:	2151413e 	cmpcs	r1, lr, lsr r1
 80059d8:	7f40005e 	svcvc	0x0040005e
 80059dc:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 80059e0:	49264000 	stmdbmi	r6!, {lr}
 80059e4:	00324949 	eorseq	r4, r2, r9, asr #18
 80059e8:	7f010340 	svcvc	0x00010340
 80059ec:	40000301 	andmi	r0, r0, r1, lsl #6
 80059f0:	4040403f 	submi	r4, r0, pc, lsr r0
 80059f4:	1f40003f 	svcne	0x0040003f
 80059f8:	1f204020 	svcne	0x00204020
 80059fc:	403f4000 	eorsmi	r4, pc, r0
 8005a00:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8005a04:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8005a08:	40006314 	andmi	r6, r0, r4, lsl r3
 8005a0c:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8005a10:	61400003 	cmpvs	r0, r3
 8005a14:	434d4959 	movtmi	r4, #55641	; 0xd959
 8005a18:	7f004000 	svcvc	0x00004000
 8005a1c:	00414141 	subeq	r4, r1, r1, asr #2
 8005a20:	08040240 	stmdaeq	r4, {r6, r9}
 8005a24:	40002010 	andmi	r2, r0, r0, lsl r0
 8005a28:	41414100 	mrsmi	r4, (UNDEF: 81)
 8005a2c:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8005a30:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8005a34:	40404000 	submi	r4, r0, r0
 8005a38:	00404040 	subeq	r4, r0, r0, asr #32
 8005a3c:	07030040 	streq	r0, [r3, -r0, asr #32]
 8005a40:	40000008 	andmi	r0, r0, r8
 8005a44:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8005a48:	7f400040 	svcvc	0x00400040
 8005a4c:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8005a50:	44384000 	ldrtmi	r4, [r8], #-0
 8005a54:	00284444 	eoreq	r4, r8, r4, asr #8
 8005a58:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8005a5c:	40007f28 	andmi	r7, r0, r8, lsr #30
 8005a60:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8005a64:	00400018 	subeq	r0, r0, r8, lsl r0
 8005a68:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8005a6c:	a4184000 	ldrge	r4, [r8], #-0
 8005a70:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8005a74:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8005a78:	40007804 	andmi	r7, r0, r4, lsl #16
 8005a7c:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8005a80:	20400000 	subcs	r0, r0, r0
 8005a84:	003d4040 	eorseq	r4, sp, r0, asr #32
 8005a88:	107f4000 	rsbsne	r4, pc, r0
 8005a8c:	00004428 	andeq	r4, r0, r8, lsr #8
 8005a90:	7f410040 	svcvc	0x00410040
 8005a94:	40000040 	andmi	r0, r0, r0, asr #32
 8005a98:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8005a9c:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8005aa0:	78040408 	stmdavc	r4, {r3, sl}
 8005aa4:	44384000 	ldrtmi	r4, [r8], #-0
 8005aa8:	00384444 	eorseq	r4, r8, r4, asr #8
 8005aac:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8005ab0:	40001824 	andmi	r1, r0, r4, lsr #16
 8005ab4:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8005ab8:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8005abc:	08040408 	stmdaeq	r4, {r3, sl}
 8005ac0:	54484000 	strbpl	r4, [r8], #-0
 8005ac4:	00245454 	eoreq	r5, r4, r4, asr r4
 8005ac8:	3f040440 	svccc	0x00040440
 8005acc:	40002444 	andmi	r2, r0, r4, asr #8
 8005ad0:	2040403c 	subcs	r4, r0, ip, lsr r0
 8005ad4:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8005ad8:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8005adc:	403c4000 	eorsmi	r4, ip, r0
 8005ae0:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8005ae4:	10284440 	eorne	r4, r8, r0, asr #8
 8005ae8:	40004428 	andmi	r4, r0, r8, lsr #8
 8005aec:	9090904c 	addsls	r9, r0, ip, asr #32
 8005af0:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8005af4:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8005af8:	08004000 	stmdaeq	r0, {lr}
 8005afc:	00004136 	andeq	r4, r0, r6, lsr r1
 8005b00:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8005b04:	40000000 	andmi	r0, r0, r0
 8005b08:	08364100 	ldmdaeq	r6!, {r8, lr}
 8005b0c:	02400000 	subeq	r0, r0, #0
 8005b10:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8005b14:	263c4000 	ldrtcs	r4, [ip], -r0
 8005b18:	003c2623 	eorseq	r2, ip, r3, lsr #12

08005b1c <oled_128x32_init>:
 8005b1c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8005b20:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8005b24:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8005b28:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8005b2c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8005b30:	a6a440db 	ssatge	r4, #5, fp, asr #1

08005b34 <oled_128x64_init>:
 8005b34:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8005b38:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8005b3c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8005b40:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8005b44:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8005b48:	a6a440db 	ssatge	r4, #5, fp, asr #1

08005b4c <vtable for Ssd1306>:
	...
 8005b54:	08003983 	stmdaeq	r0, {r0, r1, r7, r8, fp, ip, sp}
 8005b58:	080039b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, fp, ip, sp}
 8005b5c:	08003cc1 	stmdaeq	r0, {r0, r6, r7, sl, fp, ip, sp}
 8005b60:	08003c49 	stmdaeq	r0, {r0, r3, r6, sl, fp, ip, sp}
 8005b64:	08003b15 	stmdaeq	r0, {r0, r2, r4, r8, r9, fp, ip, sp}
 8005b68:	080039d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, fp, ip, sp}
 8005b6c:	080039f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, fp, ip, sp}
 8005b70:	08003aeb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, r9, fp, ip, sp}
 8005b74:	08003aa5 	stmdaeq	r0, {r0, r2, r5, r7, r9, fp, ip, sp}
 8005b78:	08003985 	stmdaeq	r0, {r0, r2, r7, r8, fp, ip, sp}
 8005b7c:	08003b51 	stmdaeq	r0, {r0, r4, r6, r8, r9, fp, ip, sp}
 8005b80:	08003b5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, r9, fp, ip, sp}
 8005b84:	08003b77 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r8, r9, fp, ip, sp}
 8005b88:	08003989 	stmdaeq	r0, {r0, r3, r7, r8, fp, ip, sp}
 8005b8c:	37335b1b 			; <UNDEFINED> instruction: 0x37335b1b
 8005b90:	5b1b006d 	blpl	86c5d4c <__exidx_end+0x6c0100>
 8005b94:	006d3034 	rsbeq	r3, sp, r4, lsr r0
 8005b98:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005b9c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005ba0:	000a7525 	andeq	r7, sl, r5, lsr #10
 8005ba4:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005ba8:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005bac:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8005bb0:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8005bb4:	6b636f6c 	blvs	98e196c <__exidx_end+0x18dbd20>
 8005bb8:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8005bbc:	000a7469 	andeq	r7, sl, r9, ror #8
 8005bc0:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005bc4:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005bc8:	6f6c4270 	svcvs	0x006c4270
 8005bcc:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8005bd0:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8005bd4:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8005bd8:	7a697320 	bvc	9a62860 <__exidx_end+0x1a5cc14>
 8005bdc:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8005be0:	6164202c 	cmnvs	r4, ip, lsr #32
 8005be4:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8005be8:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8005bec:	3a656572 	bcc	995f1bc <__exidx_end+0x1959570>
 8005bf0:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8005bf4:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8005bf8:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8005bfc:	203d2072 	eorscs	r2, sp, r2, ror r0
 8005c00:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8005c04:	6f6c4270 	svcvs	0x006c4270
 8005c08:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8005c0c:	0a702520 	beq	9c0f094 <__exidx_end+0x1c09448>
 8005c10:	00000000 	andeq	r0, r0, r0

08005c14 <days_of_month>:
 8005c14:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005c18:	0000001c 	andeq	r0, r0, ip, lsl r0
 8005c1c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005c20:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005c24:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005c28:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005c2c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005c30:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005c34:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005c38:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005c3c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005c40:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08005c44 <__exidx_start>:
 8005c44:	7fffb76c 	svcvc	0x00ffb76c
 8005c48:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08005c4c <.ARM.attributes>:
 8005c4c:	00002e41 	andeq	r2, r0, r1, asr #28
 8005c50:	61656100 	cmnvs	r5, r0, lsl #2
 8005c54:	01006962 	tsteq	r0, r2, ror #18
 8005c58:	00000024 	andeq	r0, r0, r4, lsr #32
 8005c5c:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8005c60:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8005c64:	0600334d 	streq	r3, [r0], -sp, asr #6
 8005c68:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8005c6c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8005c70:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8005c74:	1a011803 	bne	804bc88 <__exidx_end+0x4603c>
 8005c78:	Address 0x0000000008005c78 is out of bounds.


Disassembly of section .data:

20000000 <WidgetConfiguration::s_nMabTime>:
20000000:	 	andeq	r0, r4, #16384	; 0x4000

20000001 <WidgetConfiguration::s_nBreakTime>:
20000001:	 	stmdacs	r2, {r0, r3, sl}

20000002 <WidgetConfiguration::s_nFirmwareLsb>:
20000002:	 			; <UNDEFINED> instruction: 0x01280204

20000003 <WidgetConfiguration::s_nFirmwareMsb>:
20000003:	 	andeq	r2, r1, r2, lsl #16

20000004 <WidgetConfiguration::s_nRefreshRate>:
20000004:	 	andeq	r0, r0, r8, lsr #2

20000005 <WidgetConfiguration::s_aDeviceTypeId>:
20000005:	 	stmdage	r0, {r0}

20000008 <s_nDmxTransmitPeriod>:
20000008:	000061a8 	andeq	r6, r0, r8, lsr #3

2000000c <s_nDmxTransmitMabTime>:
2000000c:	0000000c 	andeq	r0, r0, ip

20000010 <s_nDmxTransmitBreakTime>:
20000010:	0000005c 	andeq	r0, r0, ip, asr r0

20000014 <next_block>:
20000014:	2000a000 	andcs	sl, r0, r0

20000018 <s_block_bucket>:
20000018:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000028:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000038:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000048:	00000060 	andeq	r0, r0, r0, rrx
	...
20000058:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000068:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000078:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000088:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000098:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a8:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b8:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c8:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e8 <SystemCoreClock>:
200000e8:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000f0 <outptr>:
200000f0:	00000000 	andeq	r0, r0, r0

200000f4 <Widget::s_pThis>:
200000f4:	00000000 	andeq	r0, r0, r0

200000f8 <s_RxBuffer>:
	...

20000308 <s_TxBuffer>:
	...

2000050c <sv_PortState>:
2000050c:	00000000 	andeq	r0, r0, r0

20000510 <s_RxDmxPrevious>:
	...

20000712 <s_nUartsSending>:
	...

20000714 <sv_nRxDmxPackets>:
	...

20000724 <Dmx::s_pThis>:
20000724:	00000000 	andeq	r0, r0, r0

20000728 <gv_RdmDataReceiveEnd>:
20000728:	00000000 	andeq	r0, r0, r0

2000072c <SpiFlashStore::s_nWaitMillis>:
2000072c:	00000000 	andeq	r0, r0, r0

20000730 <SpiFlashStore::s_SpiFlashData>:
	...

20001730 <SpiFlashStore::s_nStartAddress>:
20001730:	00000000 	andeq	r0, r0, r0

20001734 <SpiFlashStore::s_bHaveFlashChip>:
20001734:	00000000 	andeq	r0, r0, r0

20001738 <SpiFlashStore::s_nSpiFlashStoreSize>:
20001738:	00000000 	andeq	r0, r0, r0

2000173c <SpiFlashStore::s_State>:
2000173c:	00000000 	andeq	r0, r0, r0

20001740 <SpiFlashStore::s_pThis>:
20001740:	00000000 	andeq	r0, r0, r0

20001744 <SpiFlashStore::s_bIsNew>:
20001744:	00000000 	andeq	r0, r0, r0

20001748 <StoreRDMDevice::s_pThis>:
20001748:	00000000 	andeq	r0, r0, r0

2000174c <StoreWidget::s_pThis>:
2000174c:	00000000 	andeq	r0, r0, r0

20001750 <FlashRom::s_pThis>:
20001750:	00000000 	andeq	r0, r0, r0

20001754 <flashrom::s_nAddress>:
20001754:	00000000 	andeq	r0, r0, r0

20001758 <flashrom::s_State>:
20001758:	00000000 	andeq	r0, r0, r0

2000175c <flashrom::s_nPage>:
2000175c:	00000000 	andeq	r0, r0, r0

20001760 <flashrom::s_pData>:
20001760:	00000000 	andeq	r0, r0, r0

20001764 <flashrom::s_isBank0>:
20001764:	00000000 	andeq	r0, r0, r0

20001768 <flashrom::s_nLength>:
20001768:	00000000 	andeq	r0, r0, r0

2000176c <Network::s_pThis>:
2000176c:	00000000 	andeq	r0, r0, r0

20001770 <Display::s_pThis>:
20001770:	00000000 	andeq	r0, r0, r0

20001774 <_ClearBuffer>:
	...

200017fc <Ssd1306::s_pThis>:
200017fc:	00000000 	andeq	r0, r0, r0

20001800 <LedBlink::s_pThis>:
20001800:	00000000 	andeq	r0, r0, r0

20001804 <Hardware::s_pThis>:
20001804:	00000000 	andeq	r0, r0, r0

20001808 <s_micros>:
	...

20001810 <set_timer>:
20001810:	00000000 	andeq	r0, r0, r0

20001814 <s_nSysTickMillis>:
20001814:	00000000 	andeq	r0, r0, r0

20001818 <s_nAddress>:
20001818:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

2000a000 <heap_low>:
	...

Disassembly of section .stack:

2000b000 <_sp-0x1000>:
	...
