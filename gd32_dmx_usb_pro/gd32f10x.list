
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08000000 <__gVectors>:
 8000000:	2000c000 	andcs	ip, r0, r0
 8000004:	08000efd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, sl, fp}
 8000008:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800000c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000010:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000014:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000018:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
	...
 800002c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000030:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800003c:	080045c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sl, lr}
 8000040:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000044:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000048:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800004c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000050:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000054:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000058:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800005c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000060:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000064:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000068:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800006c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000070:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000074:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000078:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800007c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000080:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000084:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000088:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800008c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000090:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000094:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000098:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800009c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000a0:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000a4:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000a8:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000ac:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000b0:	08002965 	stmdaeq	r0, {r0, r2, r5, r6, r8, fp, sp}
 80000b4:	08002a1d 	stmdaeq	r0, {r0, r2, r3, r4, r9, fp, sp}
 80000b8:	08002a6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, fp, sp}
 80000bc:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000c0:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000c4:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000c8:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000cc:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000d0:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000d4:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000d8:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000dc:	0800270d 	stmdaeq	r0, {r0, r2, r3, r8, r9, sl, sp}
 80000e0:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000e4:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000e8:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000ec:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000f0:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000f4:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000f8:	00000000 	andeq	r0, r0, r0
 80000fc:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000100:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000104:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000108:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800010c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000110:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000114:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000118:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800011c:	08002a8d 	stmdaeq	r0, {r0, r2, r3, r7, r9, fp, sp}
 8000120:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000124:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000128:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800012c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}

Disassembly of section .text:

08000130 <console_init>:
 8000130:	b508      	push	{r3, lr}
 8000132:	f004 f9eb 	bl	800450c <uart0_init>
 8000136:	4804      	ldr	r0, [pc, #16]	; (8000148 <console_init+0x18>)
 8000138:	f004 fa18 	bl	800456c <uart0_puts>
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <console_init+0x1c>)
 800013e:	f004 fa15 	bl	800456c <uart0_puts>
 8000142:	2000      	movs	r0, #0
 8000144:	bd08      	pop	{r3, pc}
 8000146:	bf00      	nop
 8000148:	08005f9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl, fp, ip, lr}
 800014c:	08005fa2 	stmdaeq	r0, {r1, r5, r7, r8, r9, sl, fp, ip, lr}

08000150 <__aeabi_fmul>:
 8000150:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000154:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000158:	bf1e      	ittt	ne
 800015a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800015e:	ea92 0f0c 	teqne	r2, ip
 8000162:	ea93 0f0c 	teqne	r3, ip
 8000166:	d06f      	beq.n	8000248 <__aeabi_fmul+0xf8>
 8000168:	441a      	add	r2, r3
 800016a:	ea80 0c01 	eor.w	ip, r0, r1
 800016e:	0240      	lsls	r0, r0, #9
 8000170:	bf18      	it	ne
 8000172:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000176:	d01e      	beq.n	80001b6 <__aeabi_fmul+0x66>
 8000178:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800017c:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000180:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000184:	fba0 3101 	umull	r3, r1, r0, r1
 8000188:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 800018c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000190:	bf3e      	ittt	cc
 8000192:	0049      	lslcc	r1, r1, #1
 8000194:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000198:	005b      	lslcc	r3, r3, #1
 800019a:	ea40 0001 	orr.w	r0, r0, r1
 800019e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80001a2:	2afd      	cmp	r2, #253	; 0xfd
 80001a4:	d81d      	bhi.n	80001e2 <__aeabi_fmul+0x92>
 80001a6:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80001aa:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80001ae:	bf08      	it	eq
 80001b0:	f020 0001 	biceq.w	r0, r0, #1
 80001b4:	4770      	bx	lr
 80001b6:	f090 0f00 	teq	r0, #0
 80001ba:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80001be:	bf08      	it	eq
 80001c0:	0249      	lsleq	r1, r1, #9
 80001c2:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80001c6:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80001ca:	3a7f      	subs	r2, #127	; 0x7f
 80001cc:	bfc2      	ittt	gt
 80001ce:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80001d2:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80001d6:	4770      	bxgt	lr
 80001d8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80001dc:	f04f 0300 	mov.w	r3, #0
 80001e0:	3a01      	subs	r2, #1
 80001e2:	dc5d      	bgt.n	80002a0 <__aeabi_fmul+0x150>
 80001e4:	f112 0f19 	cmn.w	r2, #25
 80001e8:	bfdc      	itt	le
 80001ea:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 80001ee:	4770      	bxle	lr
 80001f0:	f1c2 0200 	rsb	r2, r2, #0
 80001f4:	0041      	lsls	r1, r0, #1
 80001f6:	fa21 f102 	lsr.w	r1, r1, r2
 80001fa:	f1c2 0220 	rsb	r2, r2, #32
 80001fe:	fa00 fc02 	lsl.w	ip, r0, r2
 8000202:	ea5f 0031 	movs.w	r0, r1, rrx
 8000206:	f140 0000 	adc.w	r0, r0, #0
 800020a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800020e:	bf08      	it	eq
 8000210:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000214:	4770      	bx	lr
 8000216:	f092 0f00 	teq	r2, #0
 800021a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 800021e:	bf02      	ittt	eq
 8000220:	0040      	lsleq	r0, r0, #1
 8000222:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000226:	3a01      	subeq	r2, #1
 8000228:	d0f9      	beq.n	800021e <__aeabi_fmul+0xce>
 800022a:	ea40 000c 	orr.w	r0, r0, ip
 800022e:	f093 0f00 	teq	r3, #0
 8000232:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000236:	bf02      	ittt	eq
 8000238:	0049      	lsleq	r1, r1, #1
 800023a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 800023e:	3b01      	subeq	r3, #1
 8000240:	d0f9      	beq.n	8000236 <__aeabi_fmul+0xe6>
 8000242:	ea41 010c 	orr.w	r1, r1, ip
 8000246:	e78f      	b.n	8000168 <__aeabi_fmul+0x18>
 8000248:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 800024c:	ea92 0f0c 	teq	r2, ip
 8000250:	bf18      	it	ne
 8000252:	ea93 0f0c 	teqne	r3, ip
 8000256:	d00a      	beq.n	800026e <__aeabi_fmul+0x11e>
 8000258:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 800025c:	bf18      	it	ne
 800025e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000262:	d1d8      	bne.n	8000216 <__aeabi_fmul+0xc6>
 8000264:	ea80 0001 	eor.w	r0, r0, r1
 8000268:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 800026c:	4770      	bx	lr
 800026e:	f090 0f00 	teq	r0, #0
 8000272:	bf17      	itett	ne
 8000274:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000278:	4608      	moveq	r0, r1
 800027a:	f091 0f00 	teqne	r1, #0
 800027e:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000282:	d014      	beq.n	80002ae <__aeabi_fmul+0x15e>
 8000284:	ea92 0f0c 	teq	r2, ip
 8000288:	d101      	bne.n	800028e <__aeabi_fmul+0x13e>
 800028a:	0242      	lsls	r2, r0, #9
 800028c:	d10f      	bne.n	80002ae <__aeabi_fmul+0x15e>
 800028e:	ea93 0f0c 	teq	r3, ip
 8000292:	d103      	bne.n	800029c <__aeabi_fmul+0x14c>
 8000294:	024b      	lsls	r3, r1, #9
 8000296:	bf18      	it	ne
 8000298:	4608      	movne	r0, r1
 800029a:	d108      	bne.n	80002ae <__aeabi_fmul+0x15e>
 800029c:	ea80 0001 	eor.w	r0, r0, r1
 80002a0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80002a4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80002a8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80002ac:	4770      	bx	lr
 80002ae:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80002b2:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80002b6:	4770      	bx	lr

080002b8 <__aeabi_d2f>:
 80002b8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80002bc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 80002c0:	bf24      	itt	cs
 80002c2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 80002c6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 80002ca:	d90d      	bls.n	80002e8 <__aeabi_d2f+0x30>
 80002cc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80002d0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 80002d4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 80002d8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 80002dc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 80002e0:	bf08      	it	eq
 80002e2:	f020 0001 	biceq.w	r0, r0, #1
 80002e6:	4770      	bx	lr
 80002e8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 80002ec:	d121      	bne.n	8000332 <__aeabi_d2f+0x7a>
 80002ee:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 80002f2:	bfbc      	itt	lt
 80002f4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 80002f8:	4770      	bxlt	lr
 80002fa:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80002fe:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000302:	f1c2 0218 	rsb	r2, r2, #24
 8000306:	f1c2 0c20 	rsb	ip, r2, #32
 800030a:	fa10 f30c 	lsls.w	r3, r0, ip
 800030e:	fa20 f002 	lsr.w	r0, r0, r2
 8000312:	bf18      	it	ne
 8000314:	f040 0001 	orrne.w	r0, r0, #1
 8000318:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 800031c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000320:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000324:	ea40 000c 	orr.w	r0, r0, ip
 8000328:	fa23 f302 	lsr.w	r3, r3, r2
 800032c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000330:	e7cc      	b.n	80002cc <__aeabi_d2f+0x14>
 8000332:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000336:	d107      	bne.n	8000348 <__aeabi_d2f+0x90>
 8000338:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 800033c:	bf1e      	ittt	ne
 800033e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000342:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000346:	4770      	bxne	lr
 8000348:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 800034c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000350:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000354:	4770      	bx	lr
 8000356:	bf00      	nop

08000358 <__aeabi_frsub>:
 8000358:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 800035c:	e002      	b.n	8000364 <__addsf3>
 800035e:	bf00      	nop

08000360 <__aeabi_fsub>:
 8000360:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000364 <__addsf3>:
 8000364:	0042      	lsls	r2, r0, #1
 8000366:	bf1f      	itttt	ne
 8000368:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 800036c:	ea92 0f03 	teqne	r2, r3
 8000370:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000374:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000378:	d06a      	beq.n	8000450 <__addsf3+0xec>
 800037a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 800037e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000382:	bfc1      	itttt	gt
 8000384:	18d2      	addgt	r2, r2, r3
 8000386:	4041      	eorgt	r1, r0
 8000388:	4048      	eorgt	r0, r1
 800038a:	4041      	eorgt	r1, r0
 800038c:	bfb8      	it	lt
 800038e:	425b      	neglt	r3, r3
 8000390:	2b19      	cmp	r3, #25
 8000392:	bf88      	it	hi
 8000394:	4770      	bxhi	lr
 8000396:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 800039a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800039e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 80003a2:	bf18      	it	ne
 80003a4:	4240      	negne	r0, r0
 80003a6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80003aa:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 80003ae:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 80003b2:	bf18      	it	ne
 80003b4:	4249      	negne	r1, r1
 80003b6:	ea92 0f03 	teq	r2, r3
 80003ba:	d03f      	beq.n	800043c <__addsf3+0xd8>
 80003bc:	f1a2 0201 	sub.w	r2, r2, #1
 80003c0:	fa41 fc03 	asr.w	ip, r1, r3
 80003c4:	eb10 000c 	adds.w	r0, r0, ip
 80003c8:	f1c3 0320 	rsb	r3, r3, #32
 80003cc:	fa01 f103 	lsl.w	r1, r1, r3
 80003d0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 80003d4:	d502      	bpl.n	80003dc <__addsf3+0x78>
 80003d6:	4249      	negs	r1, r1
 80003d8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 80003dc:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 80003e0:	d313      	bcc.n	800040a <__addsf3+0xa6>
 80003e2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80003e6:	d306      	bcc.n	80003f6 <__addsf3+0x92>
 80003e8:	0840      	lsrs	r0, r0, #1
 80003ea:	ea4f 0131 	mov.w	r1, r1, rrx
 80003ee:	f102 0201 	add.w	r2, r2, #1
 80003f2:	2afe      	cmp	r2, #254	; 0xfe
 80003f4:	d251      	bcs.n	800049a <__addsf3+0x136>
 80003f6:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 80003fa:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80003fe:	bf08      	it	eq
 8000400:	f020 0001 	biceq.w	r0, r0, #1
 8000404:	ea40 0003 	orr.w	r0, r0, r3
 8000408:	4770      	bx	lr
 800040a:	0049      	lsls	r1, r1, #1
 800040c:	eb40 0000 	adc.w	r0, r0, r0
 8000410:	3a01      	subs	r2, #1
 8000412:	bf28      	it	cs
 8000414:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000418:	d2ed      	bcs.n	80003f6 <__addsf3+0x92>
 800041a:	fab0 fc80 	clz	ip, r0
 800041e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000422:	ebb2 020c 	subs.w	r2, r2, ip
 8000426:	fa00 f00c 	lsl.w	r0, r0, ip
 800042a:	bfaa      	itet	ge
 800042c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000430:	4252      	neglt	r2, r2
 8000432:	4318      	orrge	r0, r3
 8000434:	bfbc      	itt	lt
 8000436:	40d0      	lsrlt	r0, r2
 8000438:	4318      	orrlt	r0, r3
 800043a:	4770      	bx	lr
 800043c:	f092 0f00 	teq	r2, #0
 8000440:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000444:	bf06      	itte	eq
 8000446:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 800044a:	3201      	addeq	r2, #1
 800044c:	3b01      	subne	r3, #1
 800044e:	e7b5      	b.n	80003bc <__addsf3+0x58>
 8000450:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000454:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000458:	bf18      	it	ne
 800045a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800045e:	d021      	beq.n	80004a4 <__addsf3+0x140>
 8000460:	ea92 0f03 	teq	r2, r3
 8000464:	d004      	beq.n	8000470 <__addsf3+0x10c>
 8000466:	f092 0f00 	teq	r2, #0
 800046a:	bf08      	it	eq
 800046c:	4608      	moveq	r0, r1
 800046e:	4770      	bx	lr
 8000470:	ea90 0f01 	teq	r0, r1
 8000474:	bf1c      	itt	ne
 8000476:	2000      	movne	r0, #0
 8000478:	4770      	bxne	lr
 800047a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 800047e:	d104      	bne.n	800048a <__addsf3+0x126>
 8000480:	0040      	lsls	r0, r0, #1
 8000482:	bf28      	it	cs
 8000484:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000488:	4770      	bx	lr
 800048a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 800048e:	bf3c      	itt	cc
 8000490:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000494:	4770      	bxcc	lr
 8000496:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 800049a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 800049e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80004a2:	4770      	bx	lr
 80004a4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 80004a8:	bf16      	itet	ne
 80004aa:	4608      	movne	r0, r1
 80004ac:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 80004b0:	4601      	movne	r1, r0
 80004b2:	0242      	lsls	r2, r0, #9
 80004b4:	bf06      	itte	eq
 80004b6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 80004ba:	ea90 0f01 	teqeq	r0, r1
 80004be:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 80004c2:	4770      	bx	lr

080004c4 <__aeabi_ui2f>:
 80004c4:	f04f 0300 	mov.w	r3, #0
 80004c8:	e004      	b.n	80004d4 <__aeabi_i2f+0x8>
 80004ca:	bf00      	nop

080004cc <__aeabi_i2f>:
 80004cc:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 80004d0:	bf48      	it	mi
 80004d2:	4240      	negmi	r0, r0
 80004d4:	ea5f 0c00 	movs.w	ip, r0
 80004d8:	bf08      	it	eq
 80004da:	4770      	bxeq	lr
 80004dc:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 80004e0:	4601      	mov	r1, r0
 80004e2:	f04f 0000 	mov.w	r0, #0
 80004e6:	e01c      	b.n	8000522 <__aeabi_l2f+0x2a>

080004e8 <__aeabi_ul2f>:
 80004e8:	ea50 0201 	orrs.w	r2, r0, r1
 80004ec:	bf08      	it	eq
 80004ee:	4770      	bxeq	lr
 80004f0:	f04f 0300 	mov.w	r3, #0
 80004f4:	e00a      	b.n	800050c <__aeabi_l2f+0x14>
 80004f6:	bf00      	nop

080004f8 <__aeabi_l2f>:
 80004f8:	ea50 0201 	orrs.w	r2, r0, r1
 80004fc:	bf08      	it	eq
 80004fe:	4770      	bxeq	lr
 8000500:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000504:	d502      	bpl.n	800050c <__aeabi_l2f+0x14>
 8000506:	4240      	negs	r0, r0
 8000508:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800050c:	ea5f 0c01 	movs.w	ip, r1
 8000510:	bf02      	ittt	eq
 8000512:	4684      	moveq	ip, r0
 8000514:	4601      	moveq	r1, r0
 8000516:	2000      	moveq	r0, #0
 8000518:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 800051c:	bf08      	it	eq
 800051e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000522:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000526:	fabc f28c 	clz	r2, ip
 800052a:	3a08      	subs	r2, #8
 800052c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000530:	db10      	blt.n	8000554 <__aeabi_l2f+0x5c>
 8000532:	fa01 fc02 	lsl.w	ip, r1, r2
 8000536:	4463      	add	r3, ip
 8000538:	fa00 fc02 	lsl.w	ip, r0, r2
 800053c:	f1c2 0220 	rsb	r2, r2, #32
 8000540:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000544:	fa20 f202 	lsr.w	r2, r0, r2
 8000548:	eb43 0002 	adc.w	r0, r3, r2
 800054c:	bf08      	it	eq
 800054e:	f020 0001 	biceq.w	r0, r0, #1
 8000552:	4770      	bx	lr
 8000554:	f102 0220 	add.w	r2, r2, #32
 8000558:	fa01 fc02 	lsl.w	ip, r1, r2
 800055c:	f1c2 0220 	rsb	r2, r2, #32
 8000560:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000564:	fa21 f202 	lsr.w	r2, r1, r2
 8000568:	eb43 0002 	adc.w	r0, r3, r2
 800056c:	bf08      	it	eq
 800056e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000572:	4770      	bx	lr

08000574 <__gesf2>:
 8000574:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000578:	e006      	b.n	8000588 <__cmpsf2+0x4>
 800057a:	bf00      	nop

0800057c <__lesf2>:
 800057c:	f04f 0c01 	mov.w	ip, #1
 8000580:	e002      	b.n	8000588 <__cmpsf2+0x4>
 8000582:	bf00      	nop

08000584 <__cmpsf2>:
 8000584:	f04f 0c01 	mov.w	ip, #1
 8000588:	f84d cd04 	str.w	ip, [sp, #-4]!
 800058c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000590:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000594:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000598:	bf18      	it	ne
 800059a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800059e:	d011      	beq.n	80005c4 <__cmpsf2+0x40>
 80005a0:	b001      	add	sp, #4
 80005a2:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 80005a6:	bf18      	it	ne
 80005a8:	ea90 0f01 	teqne	r0, r1
 80005ac:	bf58      	it	pl
 80005ae:	ebb2 0003 	subspl.w	r0, r2, r3
 80005b2:	bf88      	it	hi
 80005b4:	17c8      	asrhi	r0, r1, #31
 80005b6:	bf38      	it	cc
 80005b8:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 80005bc:	bf18      	it	ne
 80005be:	f040 0001 	orrne.w	r0, r0, #1
 80005c2:	4770      	bx	lr
 80005c4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80005c8:	d102      	bne.n	80005d0 <__cmpsf2+0x4c>
 80005ca:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 80005ce:	d105      	bne.n	80005dc <__cmpsf2+0x58>
 80005d0:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80005d4:	d1e4      	bne.n	80005a0 <__cmpsf2+0x1c>
 80005d6:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80005da:	d0e1      	beq.n	80005a0 <__cmpsf2+0x1c>
 80005dc:	f85d 0b04 	ldr.w	r0, [sp], #4
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop

080005e4 <__aeabi_cfrcmple>:
 80005e4:	4684      	mov	ip, r0
 80005e6:	4608      	mov	r0, r1
 80005e8:	4661      	mov	r1, ip
 80005ea:	e7ff      	b.n	80005ec <__aeabi_cfcmpeq>

080005ec <__aeabi_cfcmpeq>:
 80005ec:	b50f      	push	{r0, r1, r2, r3, lr}
 80005ee:	f7ff ffc9 	bl	8000584 <__cmpsf2>
 80005f2:	2800      	cmp	r0, #0
 80005f4:	bf48      	it	mi
 80005f6:	f110 0f00 	cmnmi.w	r0, #0
 80005fa:	bd0f      	pop	{r0, r1, r2, r3, pc}

080005fc <__aeabi_fcmpeq>:
 80005fc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000600:	f7ff fff4 	bl	80005ec <__aeabi_cfcmpeq>
 8000604:	bf0c      	ite	eq
 8000606:	2001      	moveq	r0, #1
 8000608:	2000      	movne	r0, #0
 800060a:	f85d fb08 	ldr.w	pc, [sp], #8
 800060e:	bf00      	nop

08000610 <__aeabi_fcmplt>:
 8000610:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000614:	f7ff ffea 	bl	80005ec <__aeabi_cfcmpeq>
 8000618:	bf34      	ite	cc
 800061a:	2001      	movcc	r0, #1
 800061c:	2000      	movcs	r0, #0
 800061e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000622:	bf00      	nop

08000624 <__aeabi_fcmple>:
 8000624:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000628:	f7ff ffe0 	bl	80005ec <__aeabi_cfcmpeq>
 800062c:	bf94      	ite	ls
 800062e:	2001      	movls	r0, #1
 8000630:	2000      	movhi	r0, #0
 8000632:	f85d fb08 	ldr.w	pc, [sp], #8
 8000636:	bf00      	nop

08000638 <__aeabi_fcmpge>:
 8000638:	f84d ed08 	str.w	lr, [sp, #-8]!
 800063c:	f7ff ffd2 	bl	80005e4 <__aeabi_cfrcmple>
 8000640:	bf94      	ite	ls
 8000642:	2001      	movls	r0, #1
 8000644:	2000      	movhi	r0, #0
 8000646:	f85d fb08 	ldr.w	pc, [sp], #8
 800064a:	bf00      	nop

0800064c <__aeabi_fcmpgt>:
 800064c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000650:	f7ff ffc8 	bl	80005e4 <__aeabi_cfrcmple>
 8000654:	bf34      	ite	cc
 8000656:	2001      	movcc	r0, #1
 8000658:	2000      	movcs	r0, #0
 800065a:	f85d fb08 	ldr.w	pc, [sp], #8
 800065e:	bf00      	nop

08000660 <__aeabi_f2iz>:
 8000660:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000664:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8000668:	d30f      	bcc.n	800068a <__aeabi_f2iz+0x2a>
 800066a:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800066e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000672:	d90d      	bls.n	8000690 <__aeabi_f2iz+0x30>
 8000674:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000678:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800067c:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000680:	fa23 f002 	lsr.w	r0, r3, r2
 8000684:	bf18      	it	ne
 8000686:	4240      	negne	r0, r0
 8000688:	4770      	bx	lr
 800068a:	f04f 0000 	mov.w	r0, #0
 800068e:	4770      	bx	lr
 8000690:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8000694:	d101      	bne.n	800069a <__aeabi_f2iz+0x3a>
 8000696:	0242      	lsls	r2, r0, #9
 8000698:	d105      	bne.n	80006a6 <__aeabi_f2iz+0x46>
 800069a:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 800069e:	bf08      	it	eq
 80006a0:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 80006a4:	4770      	bx	lr
 80006a6:	f04f 0000 	mov.w	r0, #0
 80006aa:	4770      	bx	lr

080006ac <__aeabi_uldivmod>:
 80006ac:	b953      	cbnz	r3, 80006c4 <__aeabi_uldivmod+0x18>
 80006ae:	b94a      	cbnz	r2, 80006c4 <__aeabi_uldivmod+0x18>
 80006b0:	2900      	cmp	r1, #0
 80006b2:	bf08      	it	eq
 80006b4:	2800      	cmpeq	r0, #0
 80006b6:	bf1c      	itt	ne
 80006b8:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 80006bc:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80006c0:	f000 b80c 	b.w	80006dc <__aeabi_idiv0>
 80006c4:	f1ad 0c08 	sub.w	ip, sp, #8
 80006c8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80006cc:	f001 f864 	bl	8001798 <__udivmoddi4>
 80006d0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80006d4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80006d8:	b004      	add	sp, #16
 80006da:	4770      	bx	lr

080006dc <__aeabi_idiv0>:
 80006dc:	4770      	bx	lr
 80006de:	bf00      	nop

080006e0 <__aeabi_drsub>:
 80006e0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80006e4:	e002      	b.n	80006ec <__adddf3>
 80006e6:	bf00      	nop

080006e8 <__aeabi_dsub>:
 80006e8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080006ec <__adddf3>:
 80006ec:	b530      	push	{r4, r5, lr}
 80006ee:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80006f2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80006f6:	ea94 0f05 	teq	r4, r5
 80006fa:	bf08      	it	eq
 80006fc:	ea90 0f02 	teqeq	r0, r2
 8000700:	bf1f      	itttt	ne
 8000702:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000706:	ea55 0c02 	orrsne.w	ip, r5, r2
 800070a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800070e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000712:	f000 80e2 	beq.w	80008da <__adddf3+0x1ee>
 8000716:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800071a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800071e:	bfb8      	it	lt
 8000720:	426d      	neglt	r5, r5
 8000722:	dd0c      	ble.n	800073e <__adddf3+0x52>
 8000724:	442c      	add	r4, r5
 8000726:	ea80 0202 	eor.w	r2, r0, r2
 800072a:	ea81 0303 	eor.w	r3, r1, r3
 800072e:	ea82 0000 	eor.w	r0, r2, r0
 8000732:	ea83 0101 	eor.w	r1, r3, r1
 8000736:	ea80 0202 	eor.w	r2, r0, r2
 800073a:	ea81 0303 	eor.w	r3, r1, r3
 800073e:	2d36      	cmp	r5, #54	; 0x36
 8000740:	bf88      	it	hi
 8000742:	bd30      	pophi	{r4, r5, pc}
 8000744:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000748:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800074c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000750:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000754:	d002      	beq.n	800075c <__adddf3+0x70>
 8000756:	4240      	negs	r0, r0
 8000758:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800075c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000768:	d002      	beq.n	8000770 <__adddf3+0x84>
 800076a:	4252      	negs	r2, r2
 800076c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000770:	ea94 0f05 	teq	r4, r5
 8000774:	f000 80a7 	beq.w	80008c6 <__adddf3+0x1da>
 8000778:	f1a4 0401 	sub.w	r4, r4, #1
 800077c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000780:	db0d      	blt.n	800079e <__adddf3+0xb2>
 8000782:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000786:	fa22 f205 	lsr.w	r2, r2, r5
 800078a:	1880      	adds	r0, r0, r2
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	fa03 f20e 	lsl.w	r2, r3, lr
 8000794:	1880      	adds	r0, r0, r2
 8000796:	fa43 f305 	asr.w	r3, r3, r5
 800079a:	4159      	adcs	r1, r3
 800079c:	e00e      	b.n	80007bc <__adddf3+0xd0>
 800079e:	f1a5 0520 	sub.w	r5, r5, #32
 80007a2:	f10e 0e20 	add.w	lr, lr, #32
 80007a6:	2a01      	cmp	r2, #1
 80007a8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80007ac:	bf28      	it	cs
 80007ae:	f04c 0c02 	orrcs.w	ip, ip, #2
 80007b2:	fa43 f305 	asr.w	r3, r3, r5
 80007b6:	18c0      	adds	r0, r0, r3
 80007b8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80007bc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007c0:	d507      	bpl.n	80007d2 <__adddf3+0xe6>
 80007c2:	f04f 0e00 	mov.w	lr, #0
 80007c6:	f1dc 0c00 	rsbs	ip, ip, #0
 80007ca:	eb7e 0000 	sbcs.w	r0, lr, r0
 80007ce:	eb6e 0101 	sbc.w	r1, lr, r1
 80007d2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80007d6:	d31b      	bcc.n	8000810 <__adddf3+0x124>
 80007d8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80007dc:	d30c      	bcc.n	80007f8 <__adddf3+0x10c>
 80007de:	0849      	lsrs	r1, r1, #1
 80007e0:	ea5f 0030 	movs.w	r0, r0, rrx
 80007e4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80007e8:	f104 0401 	add.w	r4, r4, #1
 80007ec:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80007f0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80007f4:	f080 809a 	bcs.w	800092c <__adddf3+0x240>
 80007f8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80007fc:	bf08      	it	eq
 80007fe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000802:	f150 0000 	adcs.w	r0, r0, #0
 8000806:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800080a:	ea41 0105 	orr.w	r1, r1, r5
 800080e:	bd30      	pop	{r4, r5, pc}
 8000810:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000814:	4140      	adcs	r0, r0
 8000816:	eb41 0101 	adc.w	r1, r1, r1
 800081a:	3c01      	subs	r4, #1
 800081c:	bf28      	it	cs
 800081e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000822:	d2e9      	bcs.n	80007f8 <__adddf3+0x10c>
 8000824:	f091 0f00 	teq	r1, #0
 8000828:	bf04      	itt	eq
 800082a:	4601      	moveq	r1, r0
 800082c:	2000      	moveq	r0, #0
 800082e:	fab1 f381 	clz	r3, r1
 8000832:	bf08      	it	eq
 8000834:	3320      	addeq	r3, #32
 8000836:	f1a3 030b 	sub.w	r3, r3, #11
 800083a:	f1b3 0220 	subs.w	r2, r3, #32
 800083e:	da0c      	bge.n	800085a <__adddf3+0x16e>
 8000840:	320c      	adds	r2, #12
 8000842:	dd08      	ble.n	8000856 <__adddf3+0x16a>
 8000844:	f102 0c14 	add.w	ip, r2, #20
 8000848:	f1c2 020c 	rsb	r2, r2, #12
 800084c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000850:	fa21 f102 	lsr.w	r1, r1, r2
 8000854:	e00c      	b.n	8000870 <__adddf3+0x184>
 8000856:	f102 0214 	add.w	r2, r2, #20
 800085a:	bfd8      	it	le
 800085c:	f1c2 0c20 	rsble	ip, r2, #32
 8000860:	fa01 f102 	lsl.w	r1, r1, r2
 8000864:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000868:	bfdc      	itt	le
 800086a:	ea41 010c 	orrle.w	r1, r1, ip
 800086e:	4090      	lslle	r0, r2
 8000870:	1ae4      	subs	r4, r4, r3
 8000872:	bfa2      	ittt	ge
 8000874:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000878:	4329      	orrge	r1, r5
 800087a:	bd30      	popge	{r4, r5, pc}
 800087c:	ea6f 0404 	mvn.w	r4, r4
 8000880:	3c1f      	subs	r4, #31
 8000882:	da1c      	bge.n	80008be <__adddf3+0x1d2>
 8000884:	340c      	adds	r4, #12
 8000886:	dc0e      	bgt.n	80008a6 <__adddf3+0x1ba>
 8000888:	f104 0414 	add.w	r4, r4, #20
 800088c:	f1c4 0220 	rsb	r2, r4, #32
 8000890:	fa20 f004 	lsr.w	r0, r0, r4
 8000894:	fa01 f302 	lsl.w	r3, r1, r2
 8000898:	ea40 0003 	orr.w	r0, r0, r3
 800089c:	fa21 f304 	lsr.w	r3, r1, r4
 80008a0:	ea45 0103 	orr.w	r1, r5, r3
 80008a4:	bd30      	pop	{r4, r5, pc}
 80008a6:	f1c4 040c 	rsb	r4, r4, #12
 80008aa:	f1c4 0220 	rsb	r2, r4, #32
 80008ae:	fa20 f002 	lsr.w	r0, r0, r2
 80008b2:	fa01 f304 	lsl.w	r3, r1, r4
 80008b6:	ea40 0003 	orr.w	r0, r0, r3
 80008ba:	4629      	mov	r1, r5
 80008bc:	bd30      	pop	{r4, r5, pc}
 80008be:	fa21 f004 	lsr.w	r0, r1, r4
 80008c2:	4629      	mov	r1, r5
 80008c4:	bd30      	pop	{r4, r5, pc}
 80008c6:	f094 0f00 	teq	r4, #0
 80008ca:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80008ce:	bf06      	itte	eq
 80008d0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80008d4:	3401      	addeq	r4, #1
 80008d6:	3d01      	subne	r5, #1
 80008d8:	e74e      	b.n	8000778 <__adddf3+0x8c>
 80008da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80008de:	bf18      	it	ne
 80008e0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80008e4:	d029      	beq.n	800093a <__adddf3+0x24e>
 80008e6:	ea94 0f05 	teq	r4, r5
 80008ea:	bf08      	it	eq
 80008ec:	ea90 0f02 	teqeq	r0, r2
 80008f0:	d005      	beq.n	80008fe <__adddf3+0x212>
 80008f2:	ea54 0c00 	orrs.w	ip, r4, r0
 80008f6:	bf04      	itt	eq
 80008f8:	4619      	moveq	r1, r3
 80008fa:	4610      	moveq	r0, r2
 80008fc:	bd30      	pop	{r4, r5, pc}
 80008fe:	ea91 0f03 	teq	r1, r3
 8000902:	bf1e      	ittt	ne
 8000904:	2100      	movne	r1, #0
 8000906:	2000      	movne	r0, #0
 8000908:	bd30      	popne	{r4, r5, pc}
 800090a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800090e:	d105      	bne.n	800091c <__adddf3+0x230>
 8000910:	0040      	lsls	r0, r0, #1
 8000912:	4149      	adcs	r1, r1
 8000914:	bf28      	it	cs
 8000916:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800091a:	bd30      	pop	{r4, r5, pc}
 800091c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000920:	bf3c      	itt	cc
 8000922:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000926:	bd30      	popcc	{r4, r5, pc}
 8000928:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800092c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000930:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000934:	f04f 0000 	mov.w	r0, #0
 8000938:	bd30      	pop	{r4, r5, pc}
 800093a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800093e:	bf1a      	itte	ne
 8000940:	4619      	movne	r1, r3
 8000942:	4610      	movne	r0, r2
 8000944:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000948:	bf1c      	itt	ne
 800094a:	460b      	movne	r3, r1
 800094c:	4602      	movne	r2, r0
 800094e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000952:	bf06      	itte	eq
 8000954:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000958:	ea91 0f03 	teqeq	r1, r3
 800095c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000960:	bd30      	pop	{r4, r5, pc}
 8000962:	bf00      	nop

08000964 <__aeabi_ui2d>:
 8000964:	f090 0f00 	teq	r0, #0
 8000968:	bf04      	itt	eq
 800096a:	2100      	moveq	r1, #0
 800096c:	4770      	bxeq	lr
 800096e:	b530      	push	{r4, r5, lr}
 8000970:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000974:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000978:	f04f 0500 	mov.w	r5, #0
 800097c:	f04f 0100 	mov.w	r1, #0
 8000980:	e750      	b.n	8000824 <__adddf3+0x138>
 8000982:	bf00      	nop

08000984 <__aeabi_i2d>:
 8000984:	f090 0f00 	teq	r0, #0
 8000988:	bf04      	itt	eq
 800098a:	2100      	moveq	r1, #0
 800098c:	4770      	bxeq	lr
 800098e:	b530      	push	{r4, r5, lr}
 8000990:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000994:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000998:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800099c:	bf48      	it	mi
 800099e:	4240      	negmi	r0, r0
 80009a0:	f04f 0100 	mov.w	r1, #0
 80009a4:	e73e      	b.n	8000824 <__adddf3+0x138>
 80009a6:	bf00      	nop

080009a8 <__aeabi_f2d>:
 80009a8:	0042      	lsls	r2, r0, #1
 80009aa:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80009ae:	ea4f 0131 	mov.w	r1, r1, rrx
 80009b2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80009b6:	bf1f      	itttt	ne
 80009b8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80009bc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80009c0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80009c4:	4770      	bxne	lr
 80009c6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80009ca:	bf08      	it	eq
 80009cc:	4770      	bxeq	lr
 80009ce:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80009d2:	bf04      	itt	eq
 80009d4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80009d8:	4770      	bxeq	lr
 80009da:	b530      	push	{r4, r5, lr}
 80009dc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80009e0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80009e4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80009e8:	e71c      	b.n	8000824 <__adddf3+0x138>
 80009ea:	bf00      	nop

080009ec <__aeabi_ul2d>:
 80009ec:	ea50 0201 	orrs.w	r2, r0, r1
 80009f0:	bf08      	it	eq
 80009f2:	4770      	bxeq	lr
 80009f4:	b530      	push	{r4, r5, lr}
 80009f6:	f04f 0500 	mov.w	r5, #0
 80009fa:	e00a      	b.n	8000a12 <__aeabi_l2d+0x16>

080009fc <__aeabi_l2d>:
 80009fc:	ea50 0201 	orrs.w	r2, r0, r1
 8000a00:	bf08      	it	eq
 8000a02:	4770      	bxeq	lr
 8000a04:	b530      	push	{r4, r5, lr}
 8000a06:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000a0a:	d502      	bpl.n	8000a12 <__aeabi_l2d+0x16>
 8000a0c:	4240      	negs	r0, r0
 8000a0e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000a12:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000a16:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000a1a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000a1e:	f43f aed8 	beq.w	80007d2 <__adddf3+0xe6>
 8000a22:	f04f 0203 	mov.w	r2, #3
 8000a26:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000a2a:	bf18      	it	ne
 8000a2c:	3203      	addne	r2, #3
 8000a2e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000a32:	bf18      	it	ne
 8000a34:	3203      	addne	r2, #3
 8000a36:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000a3a:	f1c2 0320 	rsb	r3, r2, #32
 8000a3e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000a42:	fa20 f002 	lsr.w	r0, r0, r2
 8000a46:	fa01 fe03 	lsl.w	lr, r1, r3
 8000a4a:	ea40 000e 	orr.w	r0, r0, lr
 8000a4e:	fa21 f102 	lsr.w	r1, r1, r2
 8000a52:	4414      	add	r4, r2
 8000a54:	e6bd      	b.n	80007d2 <__adddf3+0xe6>
 8000a56:	bf00      	nop

08000a58 <__aeabi_dmul>:
 8000a58:	b570      	push	{r4, r5, r6, lr}
 8000a5a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000a5e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000a62:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000a66:	bf1d      	ittte	ne
 8000a68:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000a6c:	ea94 0f0c 	teqne	r4, ip
 8000a70:	ea95 0f0c 	teqne	r5, ip
 8000a74:	f000 f8de 	bleq	8000c34 <__aeabi_dmul+0x1dc>
 8000a78:	442c      	add	r4, r5
 8000a7a:	ea81 0603 	eor.w	r6, r1, r3
 8000a7e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000a82:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000a86:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000a8a:	bf18      	it	ne
 8000a8c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000a90:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a94:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000a98:	d038      	beq.n	8000b0c <__aeabi_dmul+0xb4>
 8000a9a:	fba0 ce02 	umull	ip, lr, r0, r2
 8000a9e:	f04f 0500 	mov.w	r5, #0
 8000aa2:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000aa6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000aaa:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000aae:	f04f 0600 	mov.w	r6, #0
 8000ab2:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000ab6:	f09c 0f00 	teq	ip, #0
 8000aba:	bf18      	it	ne
 8000abc:	f04e 0e01 	orrne.w	lr, lr, #1
 8000ac0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000ac4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000ac8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000acc:	d204      	bcs.n	8000ad8 <__aeabi_dmul+0x80>
 8000ace:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000ad2:	416d      	adcs	r5, r5
 8000ad4:	eb46 0606 	adc.w	r6, r6, r6
 8000ad8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000adc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000ae0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000ae4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000ae8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000aec:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000af0:	bf88      	it	hi
 8000af2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000af6:	d81e      	bhi.n	8000b36 <__aeabi_dmul+0xde>
 8000af8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000afc:	bf08      	it	eq
 8000afe:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000b02:	f150 0000 	adcs.w	r0, r0, #0
 8000b06:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000b0a:	bd70      	pop	{r4, r5, r6, pc}
 8000b0c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000b10:	ea46 0101 	orr.w	r1, r6, r1
 8000b14:	ea40 0002 	orr.w	r0, r0, r2
 8000b18:	ea81 0103 	eor.w	r1, r1, r3
 8000b1c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000b20:	bfc2      	ittt	gt
 8000b22:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000b26:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000b2a:	bd70      	popgt	{r4, r5, r6, pc}
 8000b2c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b30:	f04f 0e00 	mov.w	lr, #0
 8000b34:	3c01      	subs	r4, #1
 8000b36:	f300 80ab 	bgt.w	8000c90 <__aeabi_dmul+0x238>
 8000b3a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000b3e:	bfde      	ittt	le
 8000b40:	2000      	movle	r0, #0
 8000b42:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000b46:	bd70      	pople	{r4, r5, r6, pc}
 8000b48:	f1c4 0400 	rsb	r4, r4, #0
 8000b4c:	3c20      	subs	r4, #32
 8000b4e:	da35      	bge.n	8000bbc <__aeabi_dmul+0x164>
 8000b50:	340c      	adds	r4, #12
 8000b52:	dc1b      	bgt.n	8000b8c <__aeabi_dmul+0x134>
 8000b54:	f104 0414 	add.w	r4, r4, #20
 8000b58:	f1c4 0520 	rsb	r5, r4, #32
 8000b5c:	fa00 f305 	lsl.w	r3, r0, r5
 8000b60:	fa20 f004 	lsr.w	r0, r0, r4
 8000b64:	fa01 f205 	lsl.w	r2, r1, r5
 8000b68:	ea40 0002 	orr.w	r0, r0, r2
 8000b6c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000b70:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000b74:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000b78:	fa21 f604 	lsr.w	r6, r1, r4
 8000b7c:	eb42 0106 	adc.w	r1, r2, r6
 8000b80:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000b84:	bf08      	it	eq
 8000b86:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000b8a:	bd70      	pop	{r4, r5, r6, pc}
 8000b8c:	f1c4 040c 	rsb	r4, r4, #12
 8000b90:	f1c4 0520 	rsb	r5, r4, #32
 8000b94:	fa00 f304 	lsl.w	r3, r0, r4
 8000b98:	fa20 f005 	lsr.w	r0, r0, r5
 8000b9c:	fa01 f204 	lsl.w	r2, r1, r4
 8000ba0:	ea40 0002 	orr.w	r0, r0, r2
 8000ba4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000ba8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000bac:	f141 0100 	adc.w	r1, r1, #0
 8000bb0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000bb4:	bf08      	it	eq
 8000bb6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000bba:	bd70      	pop	{r4, r5, r6, pc}
 8000bbc:	f1c4 0520 	rsb	r5, r4, #32
 8000bc0:	fa00 f205 	lsl.w	r2, r0, r5
 8000bc4:	ea4e 0e02 	orr.w	lr, lr, r2
 8000bc8:	fa20 f304 	lsr.w	r3, r0, r4
 8000bcc:	fa01 f205 	lsl.w	r2, r1, r5
 8000bd0:	ea43 0302 	orr.w	r3, r3, r2
 8000bd4:	fa21 f004 	lsr.w	r0, r1, r4
 8000bd8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000bdc:	fa21 f204 	lsr.w	r2, r1, r4
 8000be0:	ea20 0002 	bic.w	r0, r0, r2
 8000be4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000be8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000bec:	bf08      	it	eq
 8000bee:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000bf2:	bd70      	pop	{r4, r5, r6, pc}
 8000bf4:	f094 0f00 	teq	r4, #0
 8000bf8:	d10f      	bne.n	8000c1a <__aeabi_dmul+0x1c2>
 8000bfa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000bfe:	0040      	lsls	r0, r0, #1
 8000c00:	eb41 0101 	adc.w	r1, r1, r1
 8000c04:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000c08:	bf08      	it	eq
 8000c0a:	3c01      	subeq	r4, #1
 8000c0c:	d0f7      	beq.n	8000bfe <__aeabi_dmul+0x1a6>
 8000c0e:	ea41 0106 	orr.w	r1, r1, r6
 8000c12:	f095 0f00 	teq	r5, #0
 8000c16:	bf18      	it	ne
 8000c18:	4770      	bxne	lr
 8000c1a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000c1e:	0052      	lsls	r2, r2, #1
 8000c20:	eb43 0303 	adc.w	r3, r3, r3
 8000c24:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000c28:	bf08      	it	eq
 8000c2a:	3d01      	subeq	r5, #1
 8000c2c:	d0f7      	beq.n	8000c1e <__aeabi_dmul+0x1c6>
 8000c2e:	ea43 0306 	orr.w	r3, r3, r6
 8000c32:	4770      	bx	lr
 8000c34:	ea94 0f0c 	teq	r4, ip
 8000c38:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000c3c:	bf18      	it	ne
 8000c3e:	ea95 0f0c 	teqne	r5, ip
 8000c42:	d00c      	beq.n	8000c5e <__aeabi_dmul+0x206>
 8000c44:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000c48:	bf18      	it	ne
 8000c4a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000c4e:	d1d1      	bne.n	8000bf4 <__aeabi_dmul+0x19c>
 8000c50:	ea81 0103 	eor.w	r1, r1, r3
 8000c54:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000c58:	f04f 0000 	mov.w	r0, #0
 8000c5c:	bd70      	pop	{r4, r5, r6, pc}
 8000c5e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000c62:	bf06      	itte	eq
 8000c64:	4610      	moveq	r0, r2
 8000c66:	4619      	moveq	r1, r3
 8000c68:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000c6c:	d019      	beq.n	8000ca2 <__aeabi_dmul+0x24a>
 8000c6e:	ea94 0f0c 	teq	r4, ip
 8000c72:	d102      	bne.n	8000c7a <__aeabi_dmul+0x222>
 8000c74:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000c78:	d113      	bne.n	8000ca2 <__aeabi_dmul+0x24a>
 8000c7a:	ea95 0f0c 	teq	r5, ip
 8000c7e:	d105      	bne.n	8000c8c <__aeabi_dmul+0x234>
 8000c80:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000c84:	bf1c      	itt	ne
 8000c86:	4610      	movne	r0, r2
 8000c88:	4619      	movne	r1, r3
 8000c8a:	d10a      	bne.n	8000ca2 <__aeabi_dmul+0x24a>
 8000c8c:	ea81 0103 	eor.w	r1, r1, r3
 8000c90:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000c94:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000c98:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000c9c:	f04f 0000 	mov.w	r0, #0
 8000ca0:	bd70      	pop	{r4, r5, r6, pc}
 8000ca2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000ca6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000caa:	bd70      	pop	{r4, r5, r6, pc}

08000cac <__aeabi_ddiv>:
 8000cac:	b570      	push	{r4, r5, r6, lr}
 8000cae:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000cb2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000cb6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000cba:	bf1d      	ittte	ne
 8000cbc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000cc0:	ea94 0f0c 	teqne	r4, ip
 8000cc4:	ea95 0f0c 	teqne	r5, ip
 8000cc8:	f000 f8a7 	bleq	8000e1a <__aeabi_ddiv+0x16e>
 8000ccc:	eba4 0405 	sub.w	r4, r4, r5
 8000cd0:	ea81 0e03 	eor.w	lr, r1, r3
 8000cd4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000cd8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000cdc:	f000 8088 	beq.w	8000df0 <__aeabi_ddiv+0x144>
 8000ce0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000ce4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000ce8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000cec:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000cf0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000cf4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000cf8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000cfc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000d00:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000d04:	429d      	cmp	r5, r3
 8000d06:	bf08      	it	eq
 8000d08:	4296      	cmpeq	r6, r2
 8000d0a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000d0e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000d12:	d202      	bcs.n	8000d1a <__aeabi_ddiv+0x6e>
 8000d14:	085b      	lsrs	r3, r3, #1
 8000d16:	ea4f 0232 	mov.w	r2, r2, rrx
 8000d1a:	1ab6      	subs	r6, r6, r2
 8000d1c:	eb65 0503 	sbc.w	r5, r5, r3
 8000d20:	085b      	lsrs	r3, r3, #1
 8000d22:	ea4f 0232 	mov.w	r2, r2, rrx
 8000d26:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000d2a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000d2e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000d32:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000d36:	bf22      	ittt	cs
 8000d38:	1ab6      	subcs	r6, r6, r2
 8000d3a:	4675      	movcs	r5, lr
 8000d3c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000d40:	085b      	lsrs	r3, r3, #1
 8000d42:	ea4f 0232 	mov.w	r2, r2, rrx
 8000d46:	ebb6 0e02 	subs.w	lr, r6, r2
 8000d4a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000d4e:	bf22      	ittt	cs
 8000d50:	1ab6      	subcs	r6, r6, r2
 8000d52:	4675      	movcs	r5, lr
 8000d54:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000d58:	085b      	lsrs	r3, r3, #1
 8000d5a:	ea4f 0232 	mov.w	r2, r2, rrx
 8000d5e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000d62:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000d66:	bf22      	ittt	cs
 8000d68:	1ab6      	subcs	r6, r6, r2
 8000d6a:	4675      	movcs	r5, lr
 8000d6c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000d70:	085b      	lsrs	r3, r3, #1
 8000d72:	ea4f 0232 	mov.w	r2, r2, rrx
 8000d76:	ebb6 0e02 	subs.w	lr, r6, r2
 8000d7a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000d7e:	bf22      	ittt	cs
 8000d80:	1ab6      	subcs	r6, r6, r2
 8000d82:	4675      	movcs	r5, lr
 8000d84:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000d88:	ea55 0e06 	orrs.w	lr, r5, r6
 8000d8c:	d018      	beq.n	8000dc0 <__aeabi_ddiv+0x114>
 8000d8e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000d92:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000d96:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000d9a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000d9e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000da2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000da6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000daa:	d1c0      	bne.n	8000d2e <__aeabi_ddiv+0x82>
 8000dac:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000db0:	d10b      	bne.n	8000dca <__aeabi_ddiv+0x11e>
 8000db2:	ea41 0100 	orr.w	r1, r1, r0
 8000db6:	f04f 0000 	mov.w	r0, #0
 8000dba:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000dbe:	e7b6      	b.n	8000d2e <__aeabi_ddiv+0x82>
 8000dc0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000dc4:	bf04      	itt	eq
 8000dc6:	4301      	orreq	r1, r0
 8000dc8:	2000      	moveq	r0, #0
 8000dca:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000dce:	bf88      	it	hi
 8000dd0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000dd4:	f63f aeaf 	bhi.w	8000b36 <__aeabi_dmul+0xde>
 8000dd8:	ebb5 0c03 	subs.w	ip, r5, r3
 8000ddc:	bf04      	itt	eq
 8000dde:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000de2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000de6:	f150 0000 	adcs.w	r0, r0, #0
 8000dea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000dee:	bd70      	pop	{r4, r5, r6, pc}
 8000df0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000df4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000df8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000dfc:	bfc2      	ittt	gt
 8000dfe:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000e02:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000e06:	bd70      	popgt	{r4, r5, r6, pc}
 8000e08:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000e0c:	f04f 0e00 	mov.w	lr, #0
 8000e10:	3c01      	subs	r4, #1
 8000e12:	e690      	b.n	8000b36 <__aeabi_dmul+0xde>
 8000e14:	ea45 0e06 	orr.w	lr, r5, r6
 8000e18:	e68d      	b.n	8000b36 <__aeabi_dmul+0xde>
 8000e1a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000e1e:	ea94 0f0c 	teq	r4, ip
 8000e22:	bf08      	it	eq
 8000e24:	ea95 0f0c 	teqeq	r5, ip
 8000e28:	f43f af3b 	beq.w	8000ca2 <__aeabi_dmul+0x24a>
 8000e2c:	ea94 0f0c 	teq	r4, ip
 8000e30:	d10a      	bne.n	8000e48 <__aeabi_ddiv+0x19c>
 8000e32:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000e36:	f47f af34 	bne.w	8000ca2 <__aeabi_dmul+0x24a>
 8000e3a:	ea95 0f0c 	teq	r5, ip
 8000e3e:	f47f af25 	bne.w	8000c8c <__aeabi_dmul+0x234>
 8000e42:	4610      	mov	r0, r2
 8000e44:	4619      	mov	r1, r3
 8000e46:	e72c      	b.n	8000ca2 <__aeabi_dmul+0x24a>
 8000e48:	ea95 0f0c 	teq	r5, ip
 8000e4c:	d106      	bne.n	8000e5c <__aeabi_ddiv+0x1b0>
 8000e4e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000e52:	f43f aefd 	beq.w	8000c50 <__aeabi_dmul+0x1f8>
 8000e56:	4610      	mov	r0, r2
 8000e58:	4619      	mov	r1, r3
 8000e5a:	e722      	b.n	8000ca2 <__aeabi_dmul+0x24a>
 8000e5c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000e60:	bf18      	it	ne
 8000e62:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000e66:	f47f aec5 	bne.w	8000bf4 <__aeabi_dmul+0x19c>
 8000e6a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000e6e:	f47f af0d 	bne.w	8000c8c <__aeabi_dmul+0x234>
 8000e72:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000e76:	f47f aeeb 	bne.w	8000c50 <__aeabi_dmul+0x1f8>
 8000e7a:	e712      	b.n	8000ca2 <__aeabi_dmul+0x24a>

08000e7c <__aeabi_d2uiz>:
 8000e7c:	004a      	lsls	r2, r1, #1
 8000e7e:	d211      	bcs.n	8000ea4 <__aeabi_d2uiz+0x28>
 8000e80:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000e84:	d211      	bcs.n	8000eaa <__aeabi_d2uiz+0x2e>
 8000e86:	d50d      	bpl.n	8000ea4 <__aeabi_d2uiz+0x28>
 8000e88:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000e8c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000e90:	d40e      	bmi.n	8000eb0 <__aeabi_d2uiz+0x34>
 8000e92:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000e96:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000e9a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000e9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ea2:	4770      	bx	lr
 8000ea4:	f04f 0000 	mov.w	r0, #0
 8000ea8:	4770      	bx	lr
 8000eaa:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000eae:	d102      	bne.n	8000eb6 <__aeabi_d2uiz+0x3a>
 8000eb0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000eb4:	4770      	bx	lr
 8000eb6:	f04f 0000 	mov.w	r0, #0
 8000eba:	4770      	bx	lr

08000ebc <__aeabi_f2uiz>:
 8000ebc:	0042      	lsls	r2, r0, #1
 8000ebe:	d20e      	bcs.n	8000ede <__aeabi_f2uiz+0x22>
 8000ec0:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8000ec4:	d30b      	bcc.n	8000ede <__aeabi_f2uiz+0x22>
 8000ec6:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8000eca:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000ece:	d409      	bmi.n	8000ee4 <__aeabi_f2uiz+0x28>
 8000ed0:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000ed4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ed8:	fa23 f002 	lsr.w	r0, r3, r2
 8000edc:	4770      	bx	lr
 8000ede:	f04f 0000 	mov.w	r0, #0
 8000ee2:	4770      	bx	lr
 8000ee4:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8000ee8:	d101      	bne.n	8000eee <__aeabi_f2uiz+0x32>
 8000eea:	0242      	lsls	r2, r0, #9
 8000eec:	d102      	bne.n	8000ef4 <__aeabi_f2uiz+0x38>
 8000eee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ef2:	4770      	bx	lr
 8000ef4:	f04f 0000 	mov.w	r0, #0
 8000ef8:	4770      	bx	lr
 8000efa:	bf00      	nop

08000efc <Reset_Handler>:
 8000efc:	480c      	ldr	r0, [pc, #48]	; (8000f30 <Zerobss+0x10>)
 8000efe:	4685      	mov	sp, r0
 8000f00:	2100      	movs	r1, #0
 8000f02:	e003      	b.n	8000f0c <DataInit>

08000f04 <CopyData>:
 8000f04:	4b0b      	ldr	r3, [pc, #44]	; (8000f34 <Zerobss+0x14>)
 8000f06:	585b      	ldr	r3, [r3, r1]
 8000f08:	5043      	str	r3, [r0, r1]
 8000f0a:	3104      	adds	r1, #4

08000f0c <DataInit>:
 8000f0c:	480a      	ldr	r0, [pc, #40]	; (8000f38 <Zerobss+0x18>)
 8000f0e:	4b0b      	ldr	r3, [pc, #44]	; (8000f3c <Zerobss+0x1c>)
 8000f10:	1842      	adds	r2, r0, r1
 8000f12:	429a      	cmp	r2, r3
 8000f14:	d3f6      	bcc.n	8000f04 <CopyData>
 8000f16:	4a0a      	ldr	r2, [pc, #40]	; (8000f40 <Zerobss+0x20>)
 8000f18:	e002      	b.n	8000f20 <Zerobss>

08000f1a <FillZerobss>:
 8000f1a:	2300      	movs	r3, #0
 8000f1c:	f842 3b04 	str.w	r3, [r2], #4

08000f20 <Zerobss>:
 8000f20:	4b08      	ldr	r3, [pc, #32]	; (8000f44 <Zerobss+0x24>)
 8000f22:	429a      	cmp	r2, r3
 8000f24:	d3f9      	bcc.n	8000f1a <FillZerobss>
 8000f26:	f003 fb57 	bl	80045d8 <SystemInit>
 8000f2a:	f000 f839 	bl	8000fa0 <main>
 8000f2e:	4770      	bx	lr
 8000f30:	2000c000 	andcs	ip, r0, r0
 8000f34:	0800605c 	stmdaeq	r0, {r2, r3, r4, r6, sp, lr}
 8000f38:	20000000 	andcs	r0, r0, r0
 8000f3c:	200000ec 	andcs	r0, r0, ip, ror #1
 8000f40:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8000f44:	20001824 	andcs	r1, r0, r4, lsr #16

08000f48 <ADC0_1_IRQHandler>:
 8000f48:	e7fe      	b.n	8000f48 <ADC0_1_IRQHandler>

08000f4a <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 8000f4a:	b470      	push	{r4, r5, r6}
 8000f4c:	790a      	ldrb	r2, [r1, #4]
 8000f4e:	680b      	ldr	r3, [r1, #0]
 8000f50:	2a20      	cmp	r2, #32
 8000f52:	bf28      	it	cs
 8000f54:	2220      	movcs	r2, #32
 8000f56:	f890 1050 	ldrb.w	r1, [r0, #80]	; 0x50
 8000f5a:	189c      	adds	r4, r3, r2
 8000f5c:	b191      	cbz	r1, 8000f84 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3a>
 8000f5e:	f100 010a 	add.w	r1, r0, #10
 8000f62:	f100 0509 	add.w	r5, r0, #9
 8000f66:	42a3      	cmp	r3, r4
 8000f68:	d107      	bne.n	8000f7a <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x30>
 8000f6a:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 8000f6e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8000f70:	b170      	cbz	r0, 8000f90 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x46>
 8000f72:	bc70      	pop	{r4, r5, r6}
 8000f74:	6803      	ldr	r3, [r0, #0]
 8000f76:	689b      	ldr	r3, [r3, #8]
 8000f78:	4718      	bx	r3
 8000f7a:	f813 6b01 	ldrb.w	r6, [r3], #1
 8000f7e:	f805 6f01 	strb.w	r6, [r5, #1]!
 8000f82:	e7f0      	b.n	8000f66 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x1c>
 8000f84:	f100 0150 	add.w	r1, r0, #80	; 0x50
 8000f88:	42a3      	cmp	r3, r4
 8000f8a:	d103      	bne.n	8000f94 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x4a>
 8000f8c:	f880 2071 	strb.w	r2, [r0, #113]	; 0x71
 8000f90:	bc70      	pop	{r4, r5, r6}
 8000f92:	4770      	bx	lr
 8000f94:	f813 5b01 	ldrb.w	r5, [r3], #1
 8000f98:	f801 5f01 	strb.w	r5, [r1, #1]!
 8000f9c:	e7f4      	b.n	8000f88 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3e>
	...

08000fa0 <main>:
 8000fa0:	b570      	push	{r4, r5, r6, lr}
 8000fa2:	f5ad 7d74 	sub.w	sp, sp, #976	; 0x3d0
 8000fa6:	a804      	add	r0, sp, #16
 8000fa8:	f003 f92e 	bl	8004208 <Hardware::Hardware()>
 8000fac:	a80d      	add	r0, sp, #52	; 0x34
 8000fae:	f002 fe17 	bl	8003be0 <Network::Network()>
 8000fb2:	a815      	add	r0, sp, #84	; 0x54
 8000fb4:	f003 f906 	bl	80041c4 <LedBlink::LedBlink()>
 8000fb8:	a81b      	add	r0, sp, #108	; 0x6c
 8000fba:	f002 fedb 	bl	8003d74 <Display::Display()>
 8000fbe:	a805      	add	r0, sp, #20
 8000fc0:	f002 fc96 	bl	80038f0 <FlashRom::FlashRom()>
 8000fc4:	a806      	add	r0, sp, #24
 8000fc6:	f002 fb03 	bl	80035d0 <SpiFlashStore::SpiFlashStore()>
 8000fca:	a82e      	add	r0, sp, #184	; 0xb8
 8000fcc:	f000 fd4a 	bl	8001a64 <Widget::Widget()>
 8000fd0:	2300      	movs	r3, #0
 8000fd2:	2201      	movs	r2, #1
 8000fd4:	4619      	mov	r1, r3
 8000fd6:	a82e      	add	r0, sp, #184	; 0xb8
 8000fd8:	f001 fe7c 	bl	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000fdc:	a807      	add	r0, sp, #28
 8000fde:	f002 fc7b 	bl	80038d8 <StoreWidget::StoreWidget()>
 8000fe2:	a907      	add	r1, sp, #28
 8000fe4:	a811      	add	r0, sp, #68	; 0x44
 8000fe6:	f001 f8ef 	bl	80021c8 <WidgetParams::WidgetParams(WidgetParamsStore*)>
 8000fea:	a811      	add	r0, sp, #68	; 0x44
 8000fec:	f001 f8f4 	bl	80021d8 <WidgetParams::Load()>
 8000ff0:	b128      	cbz	r0, 8000ffe <main+0x5e>
 8000ff2:	a811      	add	r0, sp, #68	; 0x44
 8000ff4:	f001 f98f 	bl	8002316 <WidgetParams::Dump()>
 8000ff8:	a811      	add	r0, sp, #68	; 0x44
 8000ffa:	f001 f969 	bl	80022d0 <WidgetParams::Set()>
 8000ffe:	a809      	add	r0, sp, #36	; 0x24
 8001000:	f002 fc2c 	bl	800385c <StoreRDMDevice::StoreRDMDevice()>
 8001004:	a909      	add	r1, sp, #36	; 0x24
 8001006:	a822      	add	r0, sp, #136	; 0x88
 8001008:	f002 f9e6 	bl	80033d8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 800100c:	a835      	add	r0, sp, #212	; 0xd4
 800100e:	4950      	ldr	r1, [pc, #320]	; (8001150 <main+0x1b0>)
 8001010:	f7ff ff9b 	bl	8000f4a <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 8001014:	a822      	add	r0, sp, #136	; 0x88
 8001016:	f002 f9f1 	bl	80033fc <RDMDeviceParams::Load()>
 800101a:	b130      	cbz	r0, 800102a <main+0x8a>
 800101c:	a822      	add	r0, sp, #136	; 0x88
 800101e:	f002 fa2d 	bl	800347c <RDMDeviceParams::Dump()>
 8001022:	a935      	add	r1, sp, #212	; 0xd4
 8001024:	a822      	add	r0, sp, #136	; 0x88
 8001026:	f002 f9f4 	bl	8003412 <RDMDeviceParams::Set(RDMDevice*)>
 800102a:	2301      	movs	r3, #1
 800102c:	f88d 3124 	strb.w	r3, [sp, #292]	; 0x124
 8001030:	f20d 1325 	addw	r3, sp, #293	; 0x125
 8001034:	930b      	str	r3, [sp, #44]	; 0x2c
 8001036:	f89d 3145 	ldrb.w	r3, [sp, #325]	; 0x145
 800103a:	a90b      	add	r1, sp, #44	; 0x2c
 800103c:	a835      	add	r0, sp, #212	; 0xd4
 800103e:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8001042:	f7ff ff82 	bl	8000f4a <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 8001046:	2200      	movs	r2, #0
 8001048:	f89d 3145 	ldrb.w	r3, [sp, #325]	; 0x145
 800104c:	f89d 50fe 	ldrb.w	r5, [sp, #254]	; 0xfe
 8001050:	f10d 01dd 	add.w	r1, sp, #221	; 0xdd
 8001054:	42aa      	cmp	r2, r5
 8001056:	d374      	bcc.n	8001142 <main+0x1a2>
 8001058:	f8ad 3146 	strh.w	r3, [sp, #326]	; 0x146
 800105c:	4b3d      	ldr	r3, [pc, #244]	; (8001154 <main+0x1b4>)
 800105e:	4a3e      	ldr	r2, [pc, #248]	; (8001158 <main+0x1b8>)
 8001060:	493e      	ldr	r1, [pc, #248]	; (800115c <main+0x1bc>)
 8001062:	9300      	str	r3, [sp, #0]
 8001064:	483e      	ldr	r0, [pc, #248]	; (8001160 <main+0x1c0>)
 8001066:	4b3f      	ldr	r3, [pc, #252]	; (8001164 <main+0x1c4>)
 8001068:	f89d 404f 	ldrb.w	r4, [sp, #79]	; 0x4f
 800106c:	f000 fb84 	bl	8001778 <printf>
 8001070:	220c      	movs	r2, #12
 8001072:	4b3d      	ldr	r3, [pc, #244]	; (8001168 <main+0x1c8>)
 8001074:	4621      	mov	r1, r4
 8001076:	fb02 3204 	mla	r2, r2, r4, r3
 800107a:	483c      	ldr	r0, [pc, #240]	; (800116c <main+0x1cc>)
 800107c:	f000 fb7c 	bl	8001778 <printf>
 8001080:	f89d 30d9 	ldrb.w	r3, [sp, #217]	; 0xd9
 8001084:	f89d 20d5 	ldrb.w	r2, [sp, #213]	; 0xd5
 8001088:	9302      	str	r3, [sp, #8]
 800108a:	f89d 30d8 	ldrb.w	r3, [sp, #216]	; 0xd8
 800108e:	f89d 10d4 	ldrb.w	r1, [sp, #212]	; 0xd4
 8001092:	9301      	str	r3, [sp, #4]
 8001094:	f89d 30d7 	ldrb.w	r3, [sp, #215]	; 0xd7
 8001098:	4835      	ldr	r0, [pc, #212]	; (8001170 <main+0x1d0>)
 800109a:	9300      	str	r3, [sp, #0]
 800109c:	f89d 30d6 	ldrb.w	r3, [sp, #214]	; 0xd6
 80010a0:	f000 fb6a 	bl	8001778 <printf>
 80010a4:	4629      	mov	r1, r5
 80010a6:	f10d 02de 	add.w	r2, sp, #222	; 0xde
 80010aa:	4832      	ldr	r0, [pc, #200]	; (8001174 <main+0x1d4>)
 80010ac:	f000 fb64 	bl	8001778 <printf>
 80010b0:	2102      	movs	r1, #2
 80010b2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80010b6:	f003 fbe3 	bl	8004880 <fwdgt_config>
 80010ba:	2801      	cmp	r0, #1
 80010bc:	bf0c      	ite	eq
 80010be:	2301      	moveq	r3, #1
 80010c0:	2300      	movne	r3, #0
 80010c2:	f88d 3010 	strb.w	r3, [sp, #16]
 80010c6:	d101      	bne.n	80010cc <main+0x12c>
 80010c8:	f003 fbca 	bl	8004860 <fwdgt_enable>
 80010cc:	2c03      	cmp	r4, #3
 80010ce:	d108      	bne.n	80010e2 <main+0x142>
 80010d0:	2301      	movs	r3, #1
 80010d2:	a82e      	add	r0, sp, #184	; 0xb8
 80010d4:	461a      	mov	r2, r3
 80010d6:	2100      	movs	r1, #0
 80010d8:	f001 fdfc 	bl	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80010dc:	a82e      	add	r0, sp, #184	; 0xb8
 80010de:	f001 f9fd 	bl	80024dc <Widget::SnifferFillTransmitBuffer()>
 80010e2:	2601      	movs	r6, #1
 80010e4:	4d24      	ldr	r5, [pc, #144]	; (8001178 <main+0x1d8>)
 80010e6:	4c25      	ldr	r4, [pc, #148]	; (800117c <main+0x1dc>)
 80010e8:	f003 fbc2 	bl	8004870 <fwdgt_counter_reload>
 80010ec:	a82e      	add	r0, sp, #184	; 0xb8
 80010ee:	f000 ff83 	bl	8001ff8 <Widget::ReceiveDataFromHost()>
 80010f2:	a82e      	add	r0, sp, #184	; 0xb8
 80010f4:	f000 fd30 	bl	8001b58 <Widget::ReceivedDmxPacket()>
 80010f8:	a82e      	add	r0, sp, #184	; 0xb8
 80010fa:	f000 fdf5 	bl	8001ce8 <Widget::ReceivedDmxChangeOfStatePacket()>
 80010fe:	a82e      	add	r0, sp, #184	; 0xb8
 8001100:	f000 fe80 	bl	8001e04 <Widget::ReceivedRdmPacket()>
 8001104:	a82e      	add	r0, sp, #184	; 0xb8
 8001106:	f000 fef3 	bl	8001ef0 <Widget::RdmTimeout()>
 800110a:	a82e      	add	r0, sp, #184	; 0xb8
 800110c:	f001 f990 	bl	8002430 <Widget::SnifferRdm()>
 8001110:	a82e      	add	r0, sp, #184	; 0xb8
 8001112:	f001 f967 	bl	80023e4 <Widget::SnifferDmx()>
 8001116:	a806      	add	r0, sp, #24
 8001118:	f002 faf2 	bl	8003700 <SpiFlashStore::Flash()>
 800111c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800111e:	2a00      	cmp	r2, #0
 8001120:	d0e2      	beq.n	80010e8 <main+0x148>
 8001122:	682b      	ldr	r3, [r5, #0]
 8001124:	991a      	ldr	r1, [sp, #104]	; 0x68
 8001126:	1a5b      	subs	r3, r3, r1
 8001128:	429a      	cmp	r2, r3
 800112a:	d8dd      	bhi.n	80010e8 <main+0x148>
 800112c:	682b      	ldr	r3, [r5, #0]
 800112e:	931a      	str	r3, [sp, #104]	; 0x68
 8001130:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8001132:	2b01      	cmp	r3, #1
 8001134:	f083 0201 	eor.w	r2, r3, #1
 8001138:	9219      	str	r2, [sp, #100]	; 0x64
 800113a:	bf14      	ite	ne
 800113c:	6126      	strne	r6, [r4, #16]
 800113e:	6163      	streq	r3, [r4, #20]
 8001140:	e7d2      	b.n	80010e8 <main+0x148>
 8001142:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8001146:	3201      	adds	r2, #1
 8001148:	4403      	add	r3, r0
 800114a:	b29b      	uxth	r3, r3
 800114c:	e782      	b.n	8001054 <main+0xb4>
 800114e:	bf00      	nop
 8001150:	08005880 	stmdaeq	r0, {r7, fp, ip, lr}
 8001154:	080057ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, r9, sl, ip, lr}
 8001158:	080057a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, ip, lr}
 800115c:	08005888 	stmdaeq	r0, {r3, r7, fp, ip, lr}
 8001160:	080057af 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, r8, r9, sl, ip, lr}
 8001164:	08005798 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl, ip, lr}
 8001168:	0800588c 	stmdaeq	r0, {r2, r3, r7, fp, ip, lr}
 800116c:	080057d7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r8, r9, sl, ip, lr}
 8001170:	08005831 	stmdaeq	r0, {r0, r4, r5, fp, ip, lr}
 8001174:	0800585b 	stmdaeq	r0, {r0, r1, r3, r4, r6, fp, ip, lr}
 8001178:	2000181c 	andcs	r1, r0, ip, lsl r8
 800117c:	40011000 	andmi	r1, r1, r0

08001180 <_itostr>:
 8001180:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001182:	0fc7      	lsrs	r7, r0, #31
 8001184:	b091      	sub	sp, #68	; 0x44
 8001186:	bf18      	it	ne
 8001188:	4240      	negne	r0, r0
 800118a:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 800118e:	b9c8      	cbnz	r0, 80011c4 <_itostr+0x44>
 8001190:	2330      	movs	r3, #48	; 0x30
 8001192:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8001196:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 800119a:	b132      	cbz	r2, 80011aa <_itostr+0x2a>
 800119c:	4668      	mov	r0, sp
 800119e:	2530      	movs	r5, #48	; 0x30
 80011a0:	1ae6      	subs	r6, r4, r3
 80011a2:	4296      	cmp	r6, r2
 80011a4:	da01      	bge.n	80011aa <_itostr+0x2a>
 80011a6:	4283      	cmp	r3, r0
 80011a8:	d81c      	bhi.n	80011e4 <_itostr+0x64>
 80011aa:	b117      	cbz	r7, 80011b2 <_itostr+0x32>
 80011ac:	222d      	movs	r2, #45	; 0x2d
 80011ae:	f803 2901 	strb.w	r2, [r3], #-1
 80011b2:	3301      	adds	r3, #1
 80011b4:	1ae0      	subs	r0, r4, r3
 80011b6:	3901      	subs	r1, #1
 80011b8:	aa10      	add	r2, sp, #64	; 0x40
 80011ba:	4293      	cmp	r3, r2
 80011bc:	d315      	bcc.n	80011ea <_itostr+0x6a>
 80011be:	3001      	adds	r0, #1
 80011c0:	b011      	add	sp, #68	; 0x44
 80011c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011c4:	4623      	mov	r3, r4
 80011c6:	250a      	movs	r5, #10
 80011c8:	46ec      	mov	ip, sp
 80011ca:	fb90 f6f5 	sdiv	r6, r0, r5
 80011ce:	fb05 0016 	mls	r0, r5, r6, r0
 80011d2:	3030      	adds	r0, #48	; 0x30
 80011d4:	f803 0901 	strb.w	r0, [r3], #-1
 80011d8:	4630      	mov	r0, r6
 80011da:	2e00      	cmp	r6, #0
 80011dc:	d0dd      	beq.n	800119a <_itostr+0x1a>
 80011de:	4563      	cmp	r3, ip
 80011e0:	d1f3      	bne.n	80011ca <_itostr+0x4a>
 80011e2:	e7da      	b.n	800119a <_itostr+0x1a>
 80011e4:	f803 5901 	strb.w	r5, [r3], #-1
 80011e8:	e7da      	b.n	80011a0 <_itostr+0x20>
 80011ea:	f813 2b01 	ldrb.w	r2, [r3], #1
 80011ee:	f801 2f01 	strb.w	r2, [r1, #1]!
 80011f2:	e7e1      	b.n	80011b8 <_itostr+0x38>

080011f4 <_xputch>:
 80011f4:	4603      	mov	r3, r0
 80011f6:	b410      	push	{r4}
 80011f8:	4c08      	ldr	r4, [pc, #32]	; (800121c <_xputch+0x28>)
 80011fa:	68da      	ldr	r2, [r3, #12]
 80011fc:	4608      	mov	r0, r1
 80011fe:	6821      	ldr	r1, [r4, #0]
 8001200:	3201      	adds	r2, #1
 8001202:	60da      	str	r2, [r3, #12]
 8001204:	b139      	cbz	r1, 8001216 <_xputch+0x22>
 8001206:	691b      	ldr	r3, [r3, #16]
 8001208:	429a      	cmp	r2, r3
 800120a:	da02      	bge.n	8001212 <_xputch+0x1e>
 800120c:	1c4b      	adds	r3, r1, #1
 800120e:	6023      	str	r3, [r4, #0]
 8001210:	7008      	strb	r0, [r1, #0]
 8001212:	bc10      	pop	{r4}
 8001214:	4770      	bx	lr
 8001216:	bc10      	pop	{r4}
 8001218:	f002 bfcf 	b.w	80041ba <console_putc>
 800121c:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08001220 <_format_int>:
 8001220:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001224:	4698      	mov	r8, r3
 8001226:	b091      	sub	sp, #68	; 0x44
 8001228:	ea52 0308 	orrs.w	r3, r2, r8
 800122c:	4606      	mov	r6, r0
 800122e:	4617      	mov	r7, r2
 8001230:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8001234:	d133      	bne.n	800129e <_format_int+0x7e>
 8001236:	2330      	movs	r3, #48	; 0x30
 8001238:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 800123c:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8001240:	6833      	ldr	r3, [r6, #0]
 8001242:	07d8      	lsls	r0, r3, #31
 8001244:	d507      	bpl.n	8001256 <_format_int+0x36>
 8001246:	466a      	mov	r2, sp
 8001248:	2030      	movs	r0, #48	; 0x30
 800124a:	6871      	ldr	r1, [r6, #4]
 800124c:	1b2f      	subs	r7, r5, r4
 800124e:	428f      	cmp	r7, r1
 8001250:	da01      	bge.n	8001256 <_format_int+0x36>
 8001252:	4294      	cmp	r4, r2
 8001254:	d839      	bhi.n	80012ca <_format_int+0xaa>
 8001256:	0699      	lsls	r1, r3, #26
 8001258:	d507      	bpl.n	800126a <_format_int+0x4a>
 800125a:	466a      	mov	r2, sp
 800125c:	2030      	movs	r0, #48	; 0x30
 800125e:	68b1      	ldr	r1, [r6, #8]
 8001260:	1b2f      	subs	r7, r5, r4
 8001262:	428f      	cmp	r7, r1
 8001264:	da01      	bge.n	800126a <_format_int+0x4a>
 8001266:	4294      	cmp	r4, r2
 8001268:	d832      	bhi.n	80012d0 <_format_int+0xb0>
 800126a:	071a      	lsls	r2, r3, #28
 800126c:	bf44      	itt	mi
 800126e:	222d      	movmi	r2, #45	; 0x2d
 8001270:	f804 2901 	strbmi.w	r2, [r4], #-1
 8001274:	065b      	lsls	r3, r3, #25
 8001276:	d407      	bmi.n	8001288 <_format_int+0x68>
 8001278:	466b      	mov	r3, sp
 800127a:	2120      	movs	r1, #32
 800127c:	68b2      	ldr	r2, [r6, #8]
 800127e:	1b28      	subs	r0, r5, r4
 8001280:	4290      	cmp	r0, r2
 8001282:	da01      	bge.n	8001288 <_format_int+0x68>
 8001284:	429c      	cmp	r4, r3
 8001286:	d826      	bhi.n	80012d6 <_format_int+0xb6>
 8001288:	1b2d      	subs	r5, r5, r4
 800128a:	3401      	adds	r4, #1
 800128c:	ab10      	add	r3, sp, #64	; 0x40
 800128e:	429c      	cmp	r4, r3
 8001290:	d324      	bcc.n	80012dc <_format_int+0xbc>
 8001292:	68b3      	ldr	r3, [r6, #8]
 8001294:	42ab      	cmp	r3, r5
 8001296:	dc27      	bgt.n	80012e8 <_format_int+0xc8>
 8001298:	b011      	add	sp, #68	; 0x44
 800129a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800129e:	462c      	mov	r4, r5
 80012a0:	46e9      	mov	r9, sp
 80012a2:	4638      	mov	r0, r7
 80012a4:	4641      	mov	r1, r8
 80012a6:	220a      	movs	r2, #10
 80012a8:	2300      	movs	r3, #0
 80012aa:	f7ff f9ff 	bl	80006ac <__aeabi_uldivmod>
 80012ae:	3230      	adds	r2, #48	; 0x30
 80012b0:	f804 2901 	strb.w	r2, [r4], #-1
 80012b4:	463a      	mov	r2, r7
 80012b6:	4643      	mov	r3, r8
 80012b8:	2a0a      	cmp	r2, #10
 80012ba:	f173 0300 	sbcs.w	r3, r3, #0
 80012be:	4607      	mov	r7, r0
 80012c0:	4688      	mov	r8, r1
 80012c2:	d3bd      	bcc.n	8001240 <_format_int+0x20>
 80012c4:	454c      	cmp	r4, r9
 80012c6:	d1ec      	bne.n	80012a2 <_format_int+0x82>
 80012c8:	e7ba      	b.n	8001240 <_format_int+0x20>
 80012ca:	f804 0901 	strb.w	r0, [r4], #-1
 80012ce:	e7bd      	b.n	800124c <_format_int+0x2c>
 80012d0:	f804 0901 	strb.w	r0, [r4], #-1
 80012d4:	e7c4      	b.n	8001260 <_format_int+0x40>
 80012d6:	f804 1901 	strb.w	r1, [r4], #-1
 80012da:	e7d0      	b.n	800127e <_format_int+0x5e>
 80012dc:	4630      	mov	r0, r6
 80012de:	f814 1b01 	ldrb.w	r1, [r4], #1
 80012e2:	f7ff ff87 	bl	80011f4 <_xputch>
 80012e6:	e7d1      	b.n	800128c <_format_int+0x6c>
 80012e8:	2120      	movs	r1, #32
 80012ea:	4630      	mov	r0, r6
 80012ec:	f7ff ff82 	bl	80011f4 <_xputch>
 80012f0:	3501      	adds	r5, #1
 80012f2:	e7ce      	b.n	8001292 <_format_int+0x72>

080012f4 <_format_hex>:
 80012f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80012f6:	b091      	sub	sp, #68	; 0x44
 80012f8:	4606      	mov	r6, r0
 80012fa:	6804      	ldr	r4, [r0, #0]
 80012fc:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8001300:	bb61      	cbnz	r1, 800135c <_format_hex+0x68>
 8001302:	2330      	movs	r3, #48	; 0x30
 8001304:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8001308:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 800130c:	07e5      	lsls	r5, r4, #31
 800130e:	d507      	bpl.n	8001320 <_format_hex+0x2c>
 8001310:	4669      	mov	r1, sp
 8001312:	2530      	movs	r5, #48	; 0x30
 8001314:	6870      	ldr	r0, [r6, #4]
 8001316:	1ad7      	subs	r7, r2, r3
 8001318:	4287      	cmp	r7, r0
 800131a:	da01      	bge.n	8001320 <_format_hex+0x2c>
 800131c:	428b      	cmp	r3, r1
 800131e:	d831      	bhi.n	8001384 <_format_hex+0x90>
 8001320:	06a0      	lsls	r0, r4, #26
 8001322:	d507      	bpl.n	8001334 <_format_hex+0x40>
 8001324:	4669      	mov	r1, sp
 8001326:	2530      	movs	r5, #48	; 0x30
 8001328:	68b0      	ldr	r0, [r6, #8]
 800132a:	1ad7      	subs	r7, r2, r3
 800132c:	4287      	cmp	r7, r0
 800132e:	da01      	bge.n	8001334 <_format_hex+0x40>
 8001330:	428b      	cmp	r3, r1
 8001332:	d82a      	bhi.n	800138a <_format_hex+0x96>
 8001334:	0661      	lsls	r1, r4, #25
 8001336:	d407      	bmi.n	8001348 <_format_hex+0x54>
 8001338:	4669      	mov	r1, sp
 800133a:	2420      	movs	r4, #32
 800133c:	68b0      	ldr	r0, [r6, #8]
 800133e:	1ad5      	subs	r5, r2, r3
 8001340:	4285      	cmp	r5, r0
 8001342:	da01      	bge.n	8001348 <_format_hex+0x54>
 8001344:	428b      	cmp	r3, r1
 8001346:	d823      	bhi.n	8001390 <_format_hex+0x9c>
 8001348:	1ad5      	subs	r5, r2, r3
 800134a:	1c5c      	adds	r4, r3, #1
 800134c:	ab10      	add	r3, sp, #64	; 0x40
 800134e:	429c      	cmp	r4, r3
 8001350:	d321      	bcc.n	8001396 <_format_hex+0xa2>
 8001352:	68b3      	ldr	r3, [r6, #8]
 8001354:	429d      	cmp	r5, r3
 8001356:	db24      	blt.n	80013a2 <_format_hex+0xae>
 8001358:	b011      	add	sp, #68	; 0x44
 800135a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800135c:	f014 0f02 	tst.w	r4, #2
 8001360:	bf0c      	ite	eq
 8001362:	2757      	moveq	r7, #87	; 0x57
 8001364:	2737      	movne	r7, #55	; 0x37
 8001366:	4613      	mov	r3, r2
 8001368:	466d      	mov	r5, sp
 800136a:	f001 000f 	and.w	r0, r1, #15
 800136e:	2809      	cmp	r0, #9
 8001370:	bf94      	ite	ls
 8001372:	3030      	addls	r0, #48	; 0x30
 8001374:	19c0      	addhi	r0, r0, r7
 8001376:	0909      	lsrs	r1, r1, #4
 8001378:	f803 0901 	strb.w	r0, [r3], #-1
 800137c:	d0c6      	beq.n	800130c <_format_hex+0x18>
 800137e:	42ab      	cmp	r3, r5
 8001380:	d1f3      	bne.n	800136a <_format_hex+0x76>
 8001382:	e7c3      	b.n	800130c <_format_hex+0x18>
 8001384:	f803 5901 	strb.w	r5, [r3], #-1
 8001388:	e7c5      	b.n	8001316 <_format_hex+0x22>
 800138a:	f803 5901 	strb.w	r5, [r3], #-1
 800138e:	e7cc      	b.n	800132a <_format_hex+0x36>
 8001390:	f803 4901 	strb.w	r4, [r3], #-1
 8001394:	e7d3      	b.n	800133e <_format_hex+0x4a>
 8001396:	4630      	mov	r0, r6
 8001398:	f814 1b01 	ldrb.w	r1, [r4], #1
 800139c:	f7ff ff2a 	bl	80011f4 <_xputch>
 80013a0:	e7d4      	b.n	800134c <_format_hex+0x58>
 80013a2:	2120      	movs	r1, #32
 80013a4:	4630      	mov	r0, r6
 80013a6:	f7ff ff25 	bl	80011f4 <_xputch>
 80013aa:	3501      	adds	r5, #1
 80013ac:	e7d1      	b.n	8001352 <_format_hex+0x5e>
	...

080013b0 <_vprintf>:
 80013b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80013b4:	4614      	mov	r4, r2
 80013b6:	2200      	movs	r2, #0
 80013b8:	460b      	mov	r3, r1
 80013ba:	f04f 0800 	mov.w	r8, #0
 80013be:	b099      	sub	sp, #100	; 0x64
 80013c0:	e9cd 2006 	strd	r2, r0, [sp, #24]
 80013c4:	af08      	add	r7, sp, #32
 80013c6:	7819      	ldrb	r1, [r3, #0]
 80013c8:	b919      	cbnz	r1, 80013d2 <_vprintf+0x22>
 80013ca:	9806      	ldr	r0, [sp, #24]
 80013cc:	b019      	add	sp, #100	; 0x64
 80013ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80013d2:	2925      	cmp	r1, #37	; 0x25
 80013d4:	f103 0601 	add.w	r6, r3, #1
 80013d8:	d004      	beq.n	80013e4 <_vprintf+0x34>
 80013da:	a803      	add	r0, sp, #12
 80013dc:	f7ff ff0a 	bl	80011f4 <_xputch>
 80013e0:	4633      	mov	r3, r6
 80013e2:	e7f0      	b.n	80013c6 <_vprintf+0x16>
 80013e4:	2200      	movs	r2, #0
 80013e6:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80013ea:	9205      	str	r2, [sp, #20]
 80013ec:	785a      	ldrb	r2, [r3, #1]
 80013ee:	2a30      	cmp	r2, #48	; 0x30
 80013f0:	d129      	bne.n	8001446 <_vprintf+0x96>
 80013f2:	2220      	movs	r2, #32
 80013f4:	9203      	str	r2, [sp, #12]
 80013f6:	1c9e      	adds	r6, r3, #2
 80013f8:	2200      	movs	r2, #0
 80013fa:	4635      	mov	r5, r6
 80013fc:	4613      	mov	r3, r2
 80013fe:	f04f 0c0a 	mov.w	ip, #10
 8001402:	7829      	ldrb	r1, [r5, #0]
 8001404:	462e      	mov	r6, r5
 8001406:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 800140a:	2809      	cmp	r0, #9
 800140c:	f105 0501 	add.w	r5, r5, #1
 8001410:	d91d      	bls.n	800144e <_vprintf+0x9e>
 8001412:	b12a      	cbz	r2, 8001420 <_vprintf+0x70>
 8001414:	9305      	str	r3, [sp, #20]
 8001416:	b11b      	cbz	r3, 8001420 <_vprintf+0x70>
 8001418:	9b03      	ldr	r3, [sp, #12]
 800141a:	f043 0310 	orr.w	r3, r3, #16
 800141e:	9303      	str	r3, [sp, #12]
 8001420:	292e      	cmp	r1, #46	; 0x2e
 8001422:	d123      	bne.n	800146c <_vprintf+0xbc>
 8001424:	7873      	ldrb	r3, [r6, #1]
 8001426:	2b2a      	cmp	r3, #42	; 0x2a
 8001428:	d015      	beq.n	8001456 <_vprintf+0xa6>
 800142a:	2100      	movs	r1, #0
 800142c:	250a      	movs	r5, #10
 800142e:	460a      	mov	r2, r1
 8001430:	1c70      	adds	r0, r6, #1
 8001432:	7803      	ldrb	r3, [r0, #0]
 8001434:	4606      	mov	r6, r0
 8001436:	3b30      	subs	r3, #48	; 0x30
 8001438:	2b09      	cmp	r3, #9
 800143a:	f100 0001 	add.w	r0, r0, #1
 800143e:	d959      	bls.n	80014f4 <_vprintf+0x144>
 8001440:	b181      	cbz	r1, 8001464 <_vprintf+0xb4>
 8001442:	9204      	str	r2, [sp, #16]
 8001444:	e00e      	b.n	8001464 <_vprintf+0xb4>
 8001446:	2a2d      	cmp	r2, #45	; 0x2d
 8001448:	d1d6      	bne.n	80013f8 <_vprintf+0x48>
 800144a:	2240      	movs	r2, #64	; 0x40
 800144c:	e7d2      	b.n	80013f4 <_vprintf+0x44>
 800144e:	2201      	movs	r2, #1
 8001450:	fb0c 0303 	mla	r3, ip, r3, r0
 8001454:	e7d5      	b.n	8001402 <_vprintf+0x52>
 8001456:	f854 3b04 	ldr.w	r3, [r4], #4
 800145a:	3602      	adds	r6, #2
 800145c:	2b00      	cmp	r3, #0
 800145e:	bfb8      	it	lt
 8001460:	425b      	neglt	r3, r3
 8001462:	9304      	str	r3, [sp, #16]
 8001464:	9b03      	ldr	r3, [sp, #12]
 8001466:	f043 0301 	orr.w	r3, r3, #1
 800146a:	9303      	str	r3, [sp, #12]
 800146c:	7833      	ldrb	r3, [r6, #0]
 800146e:	2b6c      	cmp	r3, #108	; 0x6c
 8001470:	bf04      	itt	eq
 8001472:	9b03      	ldreq	r3, [sp, #12]
 8001474:	3601      	addeq	r6, #1
 8001476:	7831      	ldrb	r1, [r6, #0]
 8001478:	bf04      	itt	eq
 800147a:	f043 0304 	orreq.w	r3, r3, #4
 800147e:	9303      	streq	r3, [sp, #12]
 8001480:	2958      	cmp	r1, #88	; 0x58
 8001482:	f000 8171 	beq.w	8001768 <_vprintf+0x3b8>
 8001486:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 800148a:	b2da      	uxtb	r2, r3
 800148c:	2a15      	cmp	r2, #21
 800148e:	d8a4      	bhi.n	80013da <_vprintf+0x2a>
 8001490:	2b15      	cmp	r3, #21
 8001492:	d8a2      	bhi.n	80013da <_vprintf+0x2a>
 8001494:	a201      	add	r2, pc, #4	; (adr r2, 800149c <_vprintf+0xec>)
 8001496:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800149a:	bf00      	nop
 800149c:	080014fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, ip}
 80014a0:	0800150f 	stmdaeq	r0, {r0, r1, r2, r3, r8, sl, ip}
 80014a4:	080013db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, ip}
 80014a8:	08001545 	stmdaeq	r0, {r0, r2, r6, r8, sl, ip}
 80014ac:	080013db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, ip}
 80014b0:	080013db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, ip}
 80014b4:	0800150f 	stmdaeq	r0, {r0, r1, r2, r3, r8, sl, ip}
 80014b8:	080013db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, ip}
 80014bc:	080013db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, ip}
 80014c0:	080013db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, ip}
 80014c4:	080013db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, ip}
 80014c8:	080013db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, ip}
 80014cc:	080013db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, ip}
 80014d0:	080016ab 	stmdaeq	r0, {r0, r1, r3, r5, r7, r9, sl, ip}
 80014d4:	080013db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, ip}
 80014d8:	080013db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, ip}
 80014dc:	080016d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r9, sl, ip}
 80014e0:	080013db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, ip}
 80014e4:	08001749 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, ip}
 80014e8:	080013db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, ip}
 80014ec:	080013db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, ip}
 80014f0:	08001771 	stmdaeq	r0, {r0, r4, r5, r6, r8, r9, sl, ip}
 80014f4:	2101      	movs	r1, #1
 80014f6:	fb05 3202 	mla	r2, r5, r2, r3
 80014fa:	e79a      	b.n	8001432 <_vprintf+0x82>
 80014fc:	4625      	mov	r5, r4
 80014fe:	a803      	add	r0, sp, #12
 8001500:	f855 1b04 	ldr.w	r1, [r5], #4
 8001504:	f7ff fe76 	bl	80011f4 <_xputch>
 8001508:	462c      	mov	r4, r5
 800150a:	3601      	adds	r6, #1
 800150c:	e768      	b.n	80013e0 <_vprintf+0x30>
 800150e:	9903      	ldr	r1, [sp, #12]
 8001510:	074d      	lsls	r5, r1, #29
 8001512:	bf51      	iteee	pl
 8001514:	4625      	movpl	r5, r4
 8001516:	3407      	addmi	r4, #7
 8001518:	f024 0407 	bicmi.w	r4, r4, #7
 800151c:	4625      	movmi	r5, r4
 800151e:	bf55      	itete	pl
 8001520:	f855 2b04 	ldrpl.w	r2, [r5], #4
 8001524:	6863      	ldrmi	r3, [r4, #4]
 8001526:	17d3      	asrpl	r3, r2, #31
 8001528:	f855 2b08 	ldrmi.w	r2, [r5], #8
 800152c:	2b00      	cmp	r3, #0
 800152e:	da05      	bge.n	800153c <_vprintf+0x18c>
 8001530:	f041 0108 	orr.w	r1, r1, #8
 8001534:	4252      	negs	r2, r2
 8001536:	9103      	str	r1, [sp, #12]
 8001538:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800153c:	a803      	add	r0, sp, #12
 800153e:	f7ff fe6f 	bl	8001220 <_format_int>
 8001542:	e7e1      	b.n	8001508 <_vprintf+0x158>
 8001544:	3407      	adds	r4, #7
 8001546:	f024 0507 	bic.w	r5, r4, #7
 800154a:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 800154e:	f7fe feb3 	bl	80002b8 <__aeabi_d2f>
 8001552:	9b03      	ldr	r3, [sp, #12]
 8001554:	4641      	mov	r1, r8
 8001556:	07dc      	lsls	r4, r3, #31
 8001558:	bf54      	ite	pl
 800155a:	f04f 0a06 	movpl.w	sl, #6
 800155e:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 8001562:	4681      	mov	r9, r0
 8001564:	f7ff f854 	bl	8000610 <__aeabi_fcmplt>
 8001568:	2800      	cmp	r0, #0
 800156a:	d063      	beq.n	8001634 <_vprintf+0x284>
 800156c:	232d      	movs	r3, #45	; 0x2d
 800156e:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 8001572:	f88d 3020 	strb.w	r3, [sp, #32]
 8001576:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 800157a:	4648      	mov	r0, r9
 800157c:	f7ff f870 	bl	8000660 <__aeabi_f2iz>
 8001580:	4659      	mov	r1, fp
 8001582:	2200      	movs	r2, #0
 8001584:	4604      	mov	r4, r0
 8001586:	f7ff fdfb 	bl	8001180 <_itostr>
 800158a:	eb0b 0200 	add.w	r2, fp, r0
 800158e:	e9cd 2000 	strd	r2, r0, [sp]
 8001592:	4620      	mov	r0, r4
 8001594:	f7fe ff9a 	bl	80004cc <__aeabi_i2f>
 8001598:	4601      	mov	r1, r0
 800159a:	4648      	mov	r0, r9
 800159c:	f7fe fee0 	bl	8000360 <__aeabi_fsub>
 80015a0:	222e      	movs	r2, #46	; 0x2e
 80015a2:	4601      	mov	r1, r0
 80015a4:	200a      	movs	r0, #10
 80015a6:	9b00      	ldr	r3, [sp, #0]
 80015a8:	f10a 0901 	add.w	r9, sl, #1
 80015ac:	1c5c      	adds	r4, r3, #1
 80015ae:	9b01      	ldr	r3, [sp, #4]
 80015b0:	f80b 2003 	strb.w	r2, [fp, r3]
 80015b4:	4603      	mov	r3, r0
 80015b6:	f1ba 0f00 	cmp.w	sl, #0
 80015ba:	dc3d      	bgt.n	8001638 <_vprintf+0x288>
 80015bc:	9100      	str	r1, [sp, #0]
 80015be:	f7fe ff85 	bl	80004cc <__aeabi_i2f>
 80015c2:	9900      	ldr	r1, [sp, #0]
 80015c4:	f7fe fdc4 	bl	8000150 <__aeabi_fmul>
 80015c8:	f7ff f84a 	bl	8000660 <__aeabi_f2iz>
 80015cc:	464a      	mov	r2, r9
 80015ce:	4621      	mov	r1, r4
 80015d0:	f7ff fdd6 	bl	8001180 <_itostr>
 80015d4:	4404      	add	r4, r0
 80015d6:	1be0      	subs	r0, r4, r7
 80015d8:	1e44      	subs	r4, r0, #1
 80015da:	5d3b      	ldrb	r3, [r7, r4]
 80015dc:	193a      	adds	r2, r7, r4
 80015de:	2b34      	cmp	r3, #52	; 0x34
 80015e0:	d910      	bls.n	8001604 <_vprintf+0x254>
 80015e2:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 80015e6:	1e53      	subs	r3, r2, #1
 80015e8:	292e      	cmp	r1, #46	; 0x2e
 80015ea:	d02c      	beq.n	8001646 <_vprintf+0x296>
 80015ec:	469c      	mov	ip, r3
 80015ee:	f04f 0e30 	mov.w	lr, #48	; 0x30
 80015f2:	4663      	mov	r3, ip
 80015f4:	f81c 1901 	ldrb.w	r1, [ip], #-1
 80015f8:	2939      	cmp	r1, #57	; 0x39
 80015fa:	d021      	beq.n	8001640 <_vprintf+0x290>
 80015fc:	292e      	cmp	r1, #46	; 0x2e
 80015fe:	d022      	beq.n	8001646 <_vprintf+0x296>
 8001600:	3101      	adds	r1, #1
 8001602:	7019      	strb	r1, [r3, #0]
 8001604:	f104 0360 	add.w	r3, r4, #96	; 0x60
 8001608:	446b      	add	r3, sp
 800160a:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 800160e:	2b2e      	cmp	r3, #46	; 0x2e
 8001610:	bf08      	it	eq
 8001612:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 8001616:	46a1      	mov	r9, r4
 8001618:	9b05      	ldr	r3, [sp, #20]
 800161a:	4599      	cmp	r9, r3
 800161c:	db3e      	blt.n	800169c <_vprintf+0x2ec>
 800161e:	46b9      	mov	r9, r7
 8001620:	2c00      	cmp	r4, #0
 8001622:	f77f af71 	ble.w	8001508 <_vprintf+0x158>
 8001626:	f819 1b01 	ldrb.w	r1, [r9], #1
 800162a:	a803      	add	r0, sp, #12
 800162c:	f7ff fde2 	bl	80011f4 <_xputch>
 8001630:	3c01      	subs	r4, #1
 8001632:	e7f5      	b.n	8001620 <_vprintf+0x270>
 8001634:	46bb      	mov	fp, r7
 8001636:	e7a0      	b.n	800157a <_vprintf+0x1ca>
 8001638:	4358      	muls	r0, r3
 800163a:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 800163e:	e7ba      	b.n	80015b6 <_vprintf+0x206>
 8001640:	f88c e001 	strb.w	lr, [ip, #1]
 8001644:	e7d5      	b.n	80015f2 <_vprintf+0x242>
 8001646:	f04f 0c30 	mov.w	ip, #48	; 0x30
 800164a:	3b01      	subs	r3, #1
 800164c:	7819      	ldrb	r1, [r3, #0]
 800164e:	2939      	cmp	r1, #57	; 0x39
 8001650:	d112      	bne.n	8001678 <_vprintf+0x2c8>
 8001652:	42bb      	cmp	r3, r7
 8001654:	d20d      	bcs.n	8001672 <_vprintf+0x2c2>
 8001656:	1c5c      	adds	r4, r3, #1
 8001658:	1c99      	adds	r1, r3, #2
 800165a:	428c      	cmp	r4, r1
 800165c:	eba2 0203 	sub.w	r2, r2, r3
 8001660:	d913      	bls.n	800168a <_vprintf+0x2da>
 8001662:	4619      	mov	r1, r3
 8001664:	441a      	add	r2, r3
 8001666:	428a      	cmp	r2, r1
 8001668:	d10b      	bne.n	8001682 <_vprintf+0x2d2>
 800166a:	2231      	movs	r2, #49	; 0x31
 800166c:	4604      	mov	r4, r0
 800166e:	705a      	strb	r2, [r3, #1]
 8001670:	e7c8      	b.n	8001604 <_vprintf+0x254>
 8001672:	f803 c901 	strb.w	ip, [r3], #-1
 8001676:	e7e9      	b.n	800164c <_vprintf+0x29c>
 8001678:	42bb      	cmp	r3, r7
 800167a:	d3ec      	bcc.n	8001656 <_vprintf+0x2a6>
 800167c:	292d      	cmp	r1, #45	; 0x2d
 800167e:	d0ea      	beq.n	8001656 <_vprintf+0x2a6>
 8001680:	e7be      	b.n	8001600 <_vprintf+0x250>
 8001682:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8001686:	704c      	strb	r4, [r1, #1]
 8001688:	e7ed      	b.n	8001666 <_vprintf+0x2b6>
 800168a:	4414      	add	r4, r2
 800168c:	440a      	add	r2, r1
 800168e:	428a      	cmp	r2, r1
 8001690:	d0eb      	beq.n	800166a <_vprintf+0x2ba>
 8001692:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 8001696:	f802 cd01 	strb.w	ip, [r2, #-1]!
 800169a:	e7f8      	b.n	800168e <_vprintf+0x2de>
 800169c:	2120      	movs	r1, #32
 800169e:	a803      	add	r0, sp, #12
 80016a0:	f7ff fda8 	bl	80011f4 <_xputch>
 80016a4:	f109 0901 	add.w	r9, r9, #1
 80016a8:	e7b6      	b.n	8001618 <_vprintf+0x268>
 80016aa:	2308      	movs	r3, #8
 80016ac:	4625      	mov	r5, r4
 80016ae:	9305      	str	r3, [sp, #20]
 80016b0:	2320      	movs	r3, #32
 80016b2:	2130      	movs	r1, #48	; 0x30
 80016b4:	f855 4b04 	ldr.w	r4, [r5], #4
 80016b8:	a803      	add	r0, sp, #12
 80016ba:	9303      	str	r3, [sp, #12]
 80016bc:	f7ff fd9a 	bl	80011f4 <_xputch>
 80016c0:	2178      	movs	r1, #120	; 0x78
 80016c2:	a803      	add	r0, sp, #12
 80016c4:	f7ff fd96 	bl	80011f4 <_xputch>
 80016c8:	4621      	mov	r1, r4
 80016ca:	a803      	add	r0, sp, #12
 80016cc:	f7ff fe12 	bl	80012f4 <_format_hex>
 80016d0:	e71a      	b.n	8001508 <_vprintf+0x158>
 80016d2:	4625      	mov	r5, r4
 80016d4:	2400      	movs	r4, #0
 80016d6:	f855 9b04 	ldr.w	r9, [r5], #4
 80016da:	f819 3004 	ldrb.w	r3, [r9, r4]
 80016de:	b993      	cbnz	r3, 8001706 <_vprintf+0x356>
 80016e0:	9b03      	ldr	r3, [sp, #12]
 80016e2:	07d9      	lsls	r1, r3, #31
 80016e4:	d503      	bpl.n	80016ee <_vprintf+0x33e>
 80016e6:	9b04      	ldr	r3, [sp, #16]
 80016e8:	429c      	cmp	r4, r3
 80016ea:	bfa8      	it	ge
 80016ec:	461c      	movge	r4, r3
 80016ee:	9b03      	ldr	r3, [sp, #12]
 80016f0:	f104 0a01 	add.w	sl, r4, #1
 80016f4:	065a      	lsls	r2, r3, #25
 80016f6:	d403      	bmi.n	8001700 <_vprintf+0x350>
 80016f8:	9b05      	ldr	r3, [sp, #20]
 80016fa:	429c      	cmp	r4, r3
 80016fc:	db05      	blt.n	800170a <_vprintf+0x35a>
 80016fe:	4654      	mov	r4, sl
 8001700:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8001704:	e00d      	b.n	8001722 <_vprintf+0x372>
 8001706:	3401      	adds	r4, #1
 8001708:	e7e7      	b.n	80016da <_vprintf+0x32a>
 800170a:	2120      	movs	r1, #32
 800170c:	a803      	add	r0, sp, #12
 800170e:	f7ff fd71 	bl	80011f4 <_xputch>
 8001712:	4654      	mov	r4, sl
 8001714:	e7eb      	b.n	80016ee <_vprintf+0x33e>
 8001716:	a803      	add	r0, sp, #12
 8001718:	f7ff fd6c 	bl	80011f4 <_xputch>
 800171c:	9b04      	ldr	r3, [sp, #16]
 800171e:	3b01      	subs	r3, #1
 8001720:	9304      	str	r3, [sp, #16]
 8001722:	9b03      	ldr	r3, [sp, #12]
 8001724:	07db      	lsls	r3, r3, #31
 8001726:	d501      	bpl.n	800172c <_vprintf+0x37c>
 8001728:	9b04      	ldr	r3, [sp, #16]
 800172a:	b11b      	cbz	r3, 8001734 <_vprintf+0x384>
 800172c:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8001730:	2900      	cmp	r1, #0
 8001732:	d1f0      	bne.n	8001716 <_vprintf+0x366>
 8001734:	9b05      	ldr	r3, [sp, #20]
 8001736:	429c      	cmp	r4, r3
 8001738:	f6bf aee6 	bge.w	8001508 <_vprintf+0x158>
 800173c:	2120      	movs	r1, #32
 800173e:	a803      	add	r0, sp, #12
 8001740:	f7ff fd58 	bl	80011f4 <_xputch>
 8001744:	3401      	adds	r4, #1
 8001746:	e7f5      	b.n	8001734 <_vprintf+0x384>
 8001748:	9b03      	ldr	r3, [sp, #12]
 800174a:	f013 0304 	ands.w	r3, r3, #4
 800174e:	bf1d      	ittte	ne
 8001750:	3407      	addne	r4, #7
 8001752:	f024 0407 	bicne.w	r4, r4, #7
 8001756:	4625      	movne	r5, r4
 8001758:	4625      	moveq	r5, r4
 800175a:	bf1a      	itte	ne
 800175c:	f855 2b08 	ldrne.w	r2, [r5], #8
 8001760:	6863      	ldrne	r3, [r4, #4]
 8001762:	f855 2b04 	ldreq.w	r2, [r5], #4
 8001766:	e6e9      	b.n	800153c <_vprintf+0x18c>
 8001768:	9b03      	ldr	r3, [sp, #12]
 800176a:	f043 0302 	orr.w	r3, r3, #2
 800176e:	9303      	str	r3, [sp, #12]
 8001770:	4625      	mov	r5, r4
 8001772:	f855 1b04 	ldr.w	r1, [r5], #4
 8001776:	e7a8      	b.n	80016ca <_vprintf+0x31a>

08001778 <printf>:
 8001778:	b40f      	push	{r0, r1, r2, r3}
 800177a:	b507      	push	{r0, r1, r2, lr}
 800177c:	aa04      	add	r2, sp, #16
 800177e:	f852 1b04 	ldr.w	r1, [r2], #4
 8001782:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8001786:	9201      	str	r2, [sp, #4]
 8001788:	f7ff fe12 	bl	80013b0 <_vprintf>
 800178c:	b003      	add	sp, #12
 800178e:	f85d eb04 	ldr.w	lr, [sp], #4
 8001792:	b004      	add	sp, #16
 8001794:	4770      	bx	lr
	...

08001798 <__udivmoddi4>:
 8001798:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800179c:	9e08      	ldr	r6, [sp, #32]
 800179e:	460d      	mov	r5, r1
 80017a0:	4604      	mov	r4, r0
 80017a2:	468e      	mov	lr, r1
 80017a4:	2b00      	cmp	r3, #0
 80017a6:	d14c      	bne.n	8001842 <__udivmoddi4+0xaa>
 80017a8:	428a      	cmp	r2, r1
 80017aa:	4694      	mov	ip, r2
 80017ac:	d967      	bls.n	800187e <__udivmoddi4+0xe6>
 80017ae:	fab2 f382 	clz	r3, r2
 80017b2:	b153      	cbz	r3, 80017ca <__udivmoddi4+0x32>
 80017b4:	fa02 fc03 	lsl.w	ip, r2, r3
 80017b8:	f1c3 0220 	rsb	r2, r3, #32
 80017bc:	fa01 fe03 	lsl.w	lr, r1, r3
 80017c0:	fa20 f202 	lsr.w	r2, r0, r2
 80017c4:	ea42 0e0e 	orr.w	lr, r2, lr
 80017c8:	409c      	lsls	r4, r3
 80017ca:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80017ce:	fbbe f1f7 	udiv	r1, lr, r7
 80017d2:	fa1f f58c 	uxth.w	r5, ip
 80017d6:	fb07 ee11 	mls	lr, r7, r1, lr
 80017da:	fb01 f005 	mul.w	r0, r1, r5
 80017de:	0c22      	lsrs	r2, r4, #16
 80017e0:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 80017e4:	4290      	cmp	r0, r2
 80017e6:	d90a      	bls.n	80017fe <__udivmoddi4+0x66>
 80017e8:	eb1c 0202 	adds.w	r2, ip, r2
 80017ec:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 80017f0:	f080 8119 	bcs.w	8001a26 <__udivmoddi4+0x28e>
 80017f4:	4290      	cmp	r0, r2
 80017f6:	f240 8116 	bls.w	8001a26 <__udivmoddi4+0x28e>
 80017fa:	3902      	subs	r1, #2
 80017fc:	4462      	add	r2, ip
 80017fe:	1a12      	subs	r2, r2, r0
 8001800:	fbb2 f0f7 	udiv	r0, r2, r7
 8001804:	fb07 2210 	mls	r2, r7, r0, r2
 8001808:	fb00 f505 	mul.w	r5, r0, r5
 800180c:	b2a4      	uxth	r4, r4
 800180e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8001812:	42a5      	cmp	r5, r4
 8001814:	d90a      	bls.n	800182c <__udivmoddi4+0x94>
 8001816:	eb1c 0404 	adds.w	r4, ip, r4
 800181a:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800181e:	f080 8104 	bcs.w	8001a2a <__udivmoddi4+0x292>
 8001822:	42a5      	cmp	r5, r4
 8001824:	f240 8101 	bls.w	8001a2a <__udivmoddi4+0x292>
 8001828:	4464      	add	r4, ip
 800182a:	3802      	subs	r0, #2
 800182c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8001830:	2100      	movs	r1, #0
 8001832:	1b64      	subs	r4, r4, r5
 8001834:	b11e      	cbz	r6, 800183e <__udivmoddi4+0xa6>
 8001836:	40dc      	lsrs	r4, r3
 8001838:	2300      	movs	r3, #0
 800183a:	e9c6 4300 	strd	r4, r3, [r6]
 800183e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001842:	428b      	cmp	r3, r1
 8001844:	d908      	bls.n	8001858 <__udivmoddi4+0xc0>
 8001846:	2e00      	cmp	r6, #0
 8001848:	f000 80ea 	beq.w	8001a20 <__udivmoddi4+0x288>
 800184c:	2100      	movs	r1, #0
 800184e:	e9c6 0500 	strd	r0, r5, [r6]
 8001852:	4608      	mov	r0, r1
 8001854:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001858:	fab3 f183 	clz	r1, r3
 800185c:	2900      	cmp	r1, #0
 800185e:	d148      	bne.n	80018f2 <__udivmoddi4+0x15a>
 8001860:	42ab      	cmp	r3, r5
 8001862:	d302      	bcc.n	800186a <__udivmoddi4+0xd2>
 8001864:	4282      	cmp	r2, r0
 8001866:	f200 80f8 	bhi.w	8001a5a <__udivmoddi4+0x2c2>
 800186a:	1a84      	subs	r4, r0, r2
 800186c:	eb65 0203 	sbc.w	r2, r5, r3
 8001870:	2001      	movs	r0, #1
 8001872:	4696      	mov	lr, r2
 8001874:	2e00      	cmp	r6, #0
 8001876:	d0e2      	beq.n	800183e <__udivmoddi4+0xa6>
 8001878:	e9c6 4e00 	strd	r4, lr, [r6]
 800187c:	e7df      	b.n	800183e <__udivmoddi4+0xa6>
 800187e:	b902      	cbnz	r2, 8001882 <__udivmoddi4+0xea>
 8001880:	deff      	udf	#255	; 0xff
 8001882:	fab2 f382 	clz	r3, r2
 8001886:	2b00      	cmp	r3, #0
 8001888:	f040 808e 	bne.w	80019a8 <__udivmoddi4+0x210>
 800188c:	1a88      	subs	r0, r1, r2
 800188e:	2101      	movs	r1, #1
 8001890:	0c17      	lsrs	r7, r2, #16
 8001892:	fa1f fe82 	uxth.w	lr, r2
 8001896:	fbb0 f5f7 	udiv	r5, r0, r7
 800189a:	fb07 0015 	mls	r0, r7, r5, r0
 800189e:	0c22      	lsrs	r2, r4, #16
 80018a0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80018a4:	fb0e f005 	mul.w	r0, lr, r5
 80018a8:	4290      	cmp	r0, r2
 80018aa:	d908      	bls.n	80018be <__udivmoddi4+0x126>
 80018ac:	eb1c 0202 	adds.w	r2, ip, r2
 80018b0:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80018b4:	d202      	bcs.n	80018bc <__udivmoddi4+0x124>
 80018b6:	4290      	cmp	r0, r2
 80018b8:	f200 80cc 	bhi.w	8001a54 <__udivmoddi4+0x2bc>
 80018bc:	4645      	mov	r5, r8
 80018be:	1a12      	subs	r2, r2, r0
 80018c0:	fbb2 f0f7 	udiv	r0, r2, r7
 80018c4:	fb07 2210 	mls	r2, r7, r0, r2
 80018c8:	fb0e fe00 	mul.w	lr, lr, r0
 80018cc:	b2a4      	uxth	r4, r4
 80018ce:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80018d2:	45a6      	cmp	lr, r4
 80018d4:	d908      	bls.n	80018e8 <__udivmoddi4+0x150>
 80018d6:	eb1c 0404 	adds.w	r4, ip, r4
 80018da:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80018de:	d202      	bcs.n	80018e6 <__udivmoddi4+0x14e>
 80018e0:	45a6      	cmp	lr, r4
 80018e2:	f200 80b4 	bhi.w	8001a4e <__udivmoddi4+0x2b6>
 80018e6:	4610      	mov	r0, r2
 80018e8:	eba4 040e 	sub.w	r4, r4, lr
 80018ec:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80018f0:	e7a0      	b.n	8001834 <__udivmoddi4+0x9c>
 80018f2:	f1c1 0720 	rsb	r7, r1, #32
 80018f6:	408b      	lsls	r3, r1
 80018f8:	fa22 fc07 	lsr.w	ip, r2, r7
 80018fc:	ea4c 0c03 	orr.w	ip, ip, r3
 8001900:	fa25 fa07 	lsr.w	sl, r5, r7
 8001904:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8001908:	fbba f8f9 	udiv	r8, sl, r9
 800190c:	408d      	lsls	r5, r1
 800190e:	fa20 f307 	lsr.w	r3, r0, r7
 8001912:	fb09 aa18 	mls	sl, r9, r8, sl
 8001916:	fa1f fe8c 	uxth.w	lr, ip
 800191a:	432b      	orrs	r3, r5
 800191c:	fa00 f501 	lsl.w	r5, r0, r1
 8001920:	fb08 f00e 	mul.w	r0, r8, lr
 8001924:	0c1c      	lsrs	r4, r3, #16
 8001926:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 800192a:	42a0      	cmp	r0, r4
 800192c:	fa02 f201 	lsl.w	r2, r2, r1
 8001930:	d90b      	bls.n	800194a <__udivmoddi4+0x1b2>
 8001932:	eb1c 0404 	adds.w	r4, ip, r4
 8001936:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 800193a:	f080 8086 	bcs.w	8001a4a <__udivmoddi4+0x2b2>
 800193e:	42a0      	cmp	r0, r4
 8001940:	f240 8083 	bls.w	8001a4a <__udivmoddi4+0x2b2>
 8001944:	f1a8 0802 	sub.w	r8, r8, #2
 8001948:	4464      	add	r4, ip
 800194a:	1a24      	subs	r4, r4, r0
 800194c:	b298      	uxth	r0, r3
 800194e:	fbb4 f3f9 	udiv	r3, r4, r9
 8001952:	fb09 4413 	mls	r4, r9, r3, r4
 8001956:	fb03 fe0e 	mul.w	lr, r3, lr
 800195a:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 800195e:	45a6      	cmp	lr, r4
 8001960:	d908      	bls.n	8001974 <__udivmoddi4+0x1dc>
 8001962:	eb1c 0404 	adds.w	r4, ip, r4
 8001966:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 800196a:	d26a      	bcs.n	8001a42 <__udivmoddi4+0x2aa>
 800196c:	45a6      	cmp	lr, r4
 800196e:	d968      	bls.n	8001a42 <__udivmoddi4+0x2aa>
 8001970:	3b02      	subs	r3, #2
 8001972:	4464      	add	r4, ip
 8001974:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8001978:	fba0 9302 	umull	r9, r3, r0, r2
 800197c:	eba4 040e 	sub.w	r4, r4, lr
 8001980:	429c      	cmp	r4, r3
 8001982:	46c8      	mov	r8, r9
 8001984:	469e      	mov	lr, r3
 8001986:	d354      	bcc.n	8001a32 <__udivmoddi4+0x29a>
 8001988:	d051      	beq.n	8001a2e <__udivmoddi4+0x296>
 800198a:	2e00      	cmp	r6, #0
 800198c:	d067      	beq.n	8001a5e <__udivmoddi4+0x2c6>
 800198e:	ebb5 0308 	subs.w	r3, r5, r8
 8001992:	eb64 040e 	sbc.w	r4, r4, lr
 8001996:	40cb      	lsrs	r3, r1
 8001998:	fa04 f707 	lsl.w	r7, r4, r7
 800199c:	431f      	orrs	r7, r3
 800199e:	40cc      	lsrs	r4, r1
 80019a0:	e9c6 7400 	strd	r7, r4, [r6]
 80019a4:	2100      	movs	r1, #0
 80019a6:	e74a      	b.n	800183e <__udivmoddi4+0xa6>
 80019a8:	fa02 fc03 	lsl.w	ip, r2, r3
 80019ac:	f1c3 0020 	rsb	r0, r3, #32
 80019b0:	40c1      	lsrs	r1, r0
 80019b2:	409d      	lsls	r5, r3
 80019b4:	fa24 f000 	lsr.w	r0, r4, r0
 80019b8:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80019bc:	4328      	orrs	r0, r5
 80019be:	fbb1 f5f7 	udiv	r5, r1, r7
 80019c2:	fb07 1115 	mls	r1, r7, r5, r1
 80019c6:	fa1f fe8c 	uxth.w	lr, ip
 80019ca:	0c02      	lsrs	r2, r0, #16
 80019cc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80019d0:	fb05 f10e 	mul.w	r1, r5, lr
 80019d4:	4291      	cmp	r1, r2
 80019d6:	fa04 f403 	lsl.w	r4, r4, r3
 80019da:	d908      	bls.n	80019ee <__udivmoddi4+0x256>
 80019dc:	eb1c 0202 	adds.w	r2, ip, r2
 80019e0:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80019e4:	d22f      	bcs.n	8001a46 <__udivmoddi4+0x2ae>
 80019e6:	4291      	cmp	r1, r2
 80019e8:	d92d      	bls.n	8001a46 <__udivmoddi4+0x2ae>
 80019ea:	3d02      	subs	r5, #2
 80019ec:	4462      	add	r2, ip
 80019ee:	1a52      	subs	r2, r2, r1
 80019f0:	fbb2 f1f7 	udiv	r1, r2, r7
 80019f4:	fb07 2211 	mls	r2, r7, r1, r2
 80019f8:	b280      	uxth	r0, r0
 80019fa:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80019fe:	fb01 f20e 	mul.w	r2, r1, lr
 8001a02:	4282      	cmp	r2, r0
 8001a04:	d908      	bls.n	8001a18 <__udivmoddi4+0x280>
 8001a06:	eb1c 0000 	adds.w	r0, ip, r0
 8001a0a:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8001a0e:	d216      	bcs.n	8001a3e <__udivmoddi4+0x2a6>
 8001a10:	4282      	cmp	r2, r0
 8001a12:	d914      	bls.n	8001a3e <__udivmoddi4+0x2a6>
 8001a14:	3902      	subs	r1, #2
 8001a16:	4460      	add	r0, ip
 8001a18:	1a80      	subs	r0, r0, r2
 8001a1a:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8001a1e:	e73a      	b.n	8001896 <__udivmoddi4+0xfe>
 8001a20:	4631      	mov	r1, r6
 8001a22:	4630      	mov	r0, r6
 8001a24:	e70b      	b.n	800183e <__udivmoddi4+0xa6>
 8001a26:	4671      	mov	r1, lr
 8001a28:	e6e9      	b.n	80017fe <__udivmoddi4+0x66>
 8001a2a:	4610      	mov	r0, r2
 8001a2c:	e6fe      	b.n	800182c <__udivmoddi4+0x94>
 8001a2e:	454d      	cmp	r5, r9
 8001a30:	d2ab      	bcs.n	800198a <__udivmoddi4+0x1f2>
 8001a32:	ebb9 0802 	subs.w	r8, r9, r2
 8001a36:	eb63 0e0c 	sbc.w	lr, r3, ip
 8001a3a:	3801      	subs	r0, #1
 8001a3c:	e7a5      	b.n	800198a <__udivmoddi4+0x1f2>
 8001a3e:	4641      	mov	r1, r8
 8001a40:	e7ea      	b.n	8001a18 <__udivmoddi4+0x280>
 8001a42:	4603      	mov	r3, r0
 8001a44:	e796      	b.n	8001974 <__udivmoddi4+0x1dc>
 8001a46:	4645      	mov	r5, r8
 8001a48:	e7d1      	b.n	80019ee <__udivmoddi4+0x256>
 8001a4a:	46d0      	mov	r8, sl
 8001a4c:	e77d      	b.n	800194a <__udivmoddi4+0x1b2>
 8001a4e:	4464      	add	r4, ip
 8001a50:	3802      	subs	r0, #2
 8001a52:	e749      	b.n	80018e8 <__udivmoddi4+0x150>
 8001a54:	3d02      	subs	r5, #2
 8001a56:	4462      	add	r2, ip
 8001a58:	e731      	b.n	80018be <__udivmoddi4+0x126>
 8001a5a:	4608      	mov	r0, r1
 8001a5c:	e70a      	b.n	8001874 <__udivmoddi4+0xdc>
 8001a5e:	4631      	mov	r1, r6
 8001a60:	e6ed      	b.n	800183e <__udivmoddi4+0xa6>
 8001a62:	bf00      	nop

08001a64 <Widget::Widget()>:
 8001a64:	b510      	push	{r4, lr}
 8001a66:	4604      	mov	r4, r0
 8001a68:	f001 f962 	bl	8002d30 <Dmx::Dmx()>
 8001a6c:	f104 001c 	add.w	r0, r4, #28
 8001a70:	f001 fc3e 	bl	80032f0 <RDMDevice::RDMDevice()>
 8001a74:	2300      	movs	r3, #0
 8001a76:	e9c4 33bb 	strd	r3, r3, [r4, #748]	; 0x2ec
 8001a7a:	e9c4 33bd 	strd	r3, r3, [r4, #756]	; 0x2f4
 8001a7e:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001a82:	f884 3300 	strb.w	r3, [r4, #768]	; 0x300
 8001a86:	f8c4 3304 	str.w	r3, [r4, #772]	; 0x304
 8001a8a:	4b03      	ldr	r3, [pc, #12]	; (8001a98 <Widget::Widget()+0x34>)
 8001a8c:	601c      	str	r4, [r3, #0]
 8001a8e:	f001 fb4b 	bl	8003128 <FT245RL_init>
 8001a92:	4620      	mov	r0, r4
 8001a94:	bd10      	pop	{r4, pc}
 8001a96:	bf00      	nop
 8001a98:	200000f4 	strdcs	r0, [r0], -r4

08001a9c <Widget::GetParamsReply()>:
 8001a9c:	b513      	push	{r0, r1, r4, lr}
 8001a9e:	4604      	mov	r4, r0
 8001aa0:	4911      	ldr	r1, [pc, #68]	; (8001ae8 <Widget::GetParamsReply()+0x4c>)
 8001aa2:	2007      	movs	r0, #7
 8001aa4:	f000 fb8c 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001aa8:	2100      	movs	r1, #0
 8001aaa:	201c      	movs	r0, #28
 8001aac:	f000 fb88 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001ab0:	4b0e      	ldr	r3, [pc, #56]	; (8001aec <Widget::GetParamsReply()+0x50>)
 8001ab2:	466a      	mov	r2, sp
 8001ab4:	781b      	ldrb	r3, [r3, #0]
 8001ab6:	2103      	movs	r1, #3
 8001ab8:	f88d 3002 	strb.w	r3, [sp, #2]
 8001abc:	4b0c      	ldr	r3, [pc, #48]	; (8001af0 <Widget::GetParamsReply()+0x54>)
 8001abe:	4620      	mov	r0, r4
 8001ac0:	781b      	ldrb	r3, [r3, #0]
 8001ac2:	f88d 3000 	strb.w	r3, [sp]
 8001ac6:	4b0b      	ldr	r3, [pc, #44]	; (8001af4 <Widget::GetParamsReply()+0x58>)
 8001ac8:	781b      	ldrb	r3, [r3, #0]
 8001aca:	f88d 3001 	strb.w	r3, [sp, #1]
 8001ace:	4b0a      	ldr	r3, [pc, #40]	; (8001af8 <Widget::GetParamsReply()+0x5c>)
 8001ad0:	781b      	ldrb	r3, [r3, #0]
 8001ad2:	f88d 3003 	strb.w	r3, [sp, #3]
 8001ad6:	4b09      	ldr	r3, [pc, #36]	; (8001afc <Widget::GetParamsReply()+0x60>)
 8001ad8:	781b      	ldrb	r3, [r3, #0]
 8001ada:	f88d 3004 	strb.w	r3, [sp, #4]
 8001ade:	2305      	movs	r3, #5
 8001ae0:	f000 fd30 	bl	8002544 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>
 8001ae4:	b002      	add	sp, #8
 8001ae6:	bd10      	pop	{r4, pc}
 8001ae8:	080058bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, fp, ip, lr}
 8001aec:	20000001 	andcs	r0, r0, r1
 8001af0:	20000002 	andcs	r0, r0, r2
 8001af4:	20000003 	andcs	r0, r0, r3
 8001af8:	20000000 	andcs	r0, r0, r0
 8001afc:	20000004 	andcs	r0, r0, r4

08001b00 <Widget::SetParams()>:
 8001b00:	b513      	push	{r0, r1, r4, lr}
 8001b02:	4604      	mov	r4, r0
 8001b04:	4912      	ldr	r1, [pc, #72]	; (8001b50 <Widget::SetParams()+0x50>)
 8001b06:	2007      	movs	r0, #7
 8001b08:	f000 fb5a 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001b0c:	2100      	movs	r1, #0
 8001b0e:	201c      	movs	r0, #28
 8001b10:	f000 fb56 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001b14:	2300      	movs	r3, #0
 8001b16:	4620      	mov	r0, r4
 8001b18:	4619      	mov	r1, r3
 8001b1a:	2201      	movs	r2, #1
 8001b1c:	f001 f8da 	bl	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001b20:	f894 3098 	ldrb.w	r3, [r4, #152]	; 0x98
 8001b24:	f8b4 2096 	ldrh.w	r2, [r4, #150]	; 0x96
 8001b28:	4668      	mov	r0, sp
 8001b2a:	f8ad 2002 	strh.w	r2, [sp, #2]
 8001b2e:	f88d 3004 	strb.w	r3, [sp, #4]
 8001b32:	f000 fd69 	bl	8002608 <WidgetConfiguration::Store(TWidgetConfiguration const*)>
 8001b36:	2301      	movs	r3, #1
 8001b38:	2100      	movs	r1, #0
 8001b3a:	461a      	mov	r2, r3
 8001b3c:	4620      	mov	r0, r4
 8001b3e:	f001 f8c9 	bl	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001b42:	4b04      	ldr	r3, [pc, #16]	; (8001b54 <Widget::SetParams()+0x54>)
 8001b44:	681b      	ldr	r3, [r3, #0]
 8001b46:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 8001b4a:	b002      	add	sp, #8
 8001b4c:	bd10      	pop	{r4, pc}
 8001b4e:	bf00      	nop
 8001b50:	080058d4 	stmdaeq	r0, {r2, r4, r6, r7, fp, ip, lr}
 8001b54:	2000181c 	andcs	r1, r0, ip, lsl r8

08001b58 <Widget::ReceivedDmxPacket()>:
 8001b58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001b5a:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
 8001b5e:	4604      	mov	r4, r0
 8001b60:	2b03      	cmp	r3, #3
 8001b62:	d042      	beq.n	8001bea <Widget::ReceivedDmxPacket()+0x92>
 8001b64:	f890 7300 	ldrb.w	r7, [r0, #768]	; 0x300
 8001b68:	2f00      	cmp	r7, #0
 8001b6a:	d13e      	bne.n	8001bea <Widget::ReceivedDmxPacket()+0x92>
 8001b6c:	6943      	ldr	r3, [r0, #20]
 8001b6e:	2b01      	cmp	r3, #1
 8001b70:	d13b      	bne.n	8001bea <Widget::ReceivedDmxPacket()+0x92>
 8001b72:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001b76:	2b01      	cmp	r3, #1
 8001b78:	d037      	beq.n	8001bea <Widget::ReceivedDmxPacket()+0x92>
 8001b7a:	4639      	mov	r1, r7
 8001b7c:	f001 fa22 	bl	8002fc4 <Dmx::GetDmxAvailable(unsigned int)>
 8001b80:	4605      	mov	r5, r0
 8001b82:	b390      	cbz	r0, 8001bea <Widget::ReceivedDmxPacket()+0x92>
 8001b84:	4b19      	ldr	r3, [pc, #100]	; (8001bec <Widget::ReceivedDmxPacket()+0x94>)
 8001b86:	f8d4 12f4 	ldr.w	r1, [r4, #756]	; 0x2f4
 8001b8a:	681a      	ldr	r2, [r3, #0]
 8001b8c:	f8d4 32f8 	ldr.w	r3, [r4, #760]	; 0x2f8
 8001b90:	1ad3      	subs	r3, r2, r3
 8001b92:	428b      	cmp	r3, r1
 8001b94:	d329      	bcc.n	8001bea <Widget::ReceivedDmxPacket()+0x92>
 8001b96:	f8d4 3304 	ldr.w	r3, [r4, #772]	; 0x304
 8001b9a:	f8c4 22f8 	str.w	r2, [r4, #760]	; 0x2f8
 8001b9e:	3301      	adds	r3, #1
 8001ba0:	f8c4 3304 	str.w	r3, [r4, #772]	; 0x304
 8001ba4:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 8001ba8:	4911      	ldr	r1, [pc, #68]	; (8001bf0 <Widget::ReceivedDmxPacket()+0x98>)
 8001baa:	3601      	adds	r6, #1
 8001bac:	2006      	movs	r0, #6
 8001bae:	f000 fb07 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001bb2:	4632      	mov	r2, r6
 8001bb4:	2007      	movs	r0, #7
 8001bb6:	490f      	ldr	r1, [pc, #60]	; (8001bf4 <Widget::ReceivedDmxPacket()+0x9c>)
 8001bb8:	f000 fb02 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001bbc:	4639      	mov	r1, r7
 8001bbe:	201c      	movs	r0, #28
 8001bc0:	f000 fafe 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001bc4:	1c72      	adds	r2, r6, #1
 8001bc6:	2105      	movs	r1, #5
 8001bc8:	4620      	mov	r0, r4
 8001bca:	b292      	uxth	r2, r2
 8001bcc:	f000 fc9a 	bl	8002504 <Widget::SendHeader(unsigned char, unsigned int)>
 8001bd0:	4638      	mov	r0, r7
 8001bd2:	f001 fa8a 	bl	80030ea <usb_send_byte>
 8001bd6:	4620      	mov	r0, r4
 8001bd8:	4629      	mov	r1, r5
 8001bda:	b2b2      	uxth	r2, r6
 8001bdc:	f000 fca4 	bl	8002528 <Widget::SendData(unsigned char const*, unsigned int)>
 8001be0:	4620      	mov	r0, r4
 8001be2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8001be6:	f000 bcaa 	b.w	800253e <Widget::SendFooter()>
 8001bea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001bec:	2000181c 	andcs	r1, r0, ip, lsl r8
 8001bf0:	080058e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, fp, ip, lr}
 8001bf4:	080058fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, fp, ip, lr}

08001bf8 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>:
 8001bf8:	b570      	push	{r4, r5, r6, lr}
 8001bfa:	f8d0 52fc 	ldr.w	r5, [r0, #764]	; 0x2fc
 8001bfe:	4604      	mov	r4, r0
 8001c00:	460e      	mov	r6, r1
 8001c02:	b9e5      	cbnz	r5, 8001c3e <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x46>
 8001c04:	2007      	movs	r0, #7
 8001c06:	490e      	ldr	r1, [pc, #56]	; (8001c40 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x48>)
 8001c08:	f000 fada 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001c0c:	4629      	mov	r1, r5
 8001c0e:	201c      	movs	r0, #28
 8001c10:	f000 fad6 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001c14:	462b      	mov	r3, r5
 8001c16:	462a      	mov	r2, r5
 8001c18:	4629      	mov	r1, r5
 8001c1a:	4620      	mov	r0, r4
 8001c1c:	f001 f85a 	bl	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001c20:	4633      	mov	r3, r6
 8001c22:	4629      	mov	r1, r5
 8001c24:	4620      	mov	r0, r4
 8001c26:	f104 0294 	add.w	r2, r4, #148	; 0x94
 8001c2a:	f001 f9a3 	bl	8002f74 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)>
 8001c2e:	462a      	mov	r2, r5
 8001c30:	4629      	mov	r1, r5
 8001c32:	4620      	mov	r0, r4
 8001c34:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001c38:	2301      	movs	r3, #1
 8001c3a:	f001 b84b 	b.w	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001c3e:	bd70      	pop	{r4, r5, r6, pc}
 8001c40:	08005914 	stmdaeq	r0, {r2, r4, r8, fp, ip, lr}

08001c44 <Widget::SendRdmPacketRequest(unsigned short)>:
 8001c44:	b570      	push	{r4, r5, r6, lr}
 8001c46:	4604      	mov	r4, r0
 8001c48:	460d      	mov	r5, r1
 8001c4a:	2007      	movs	r0, #7
 8001c4c:	4910      	ldr	r1, [pc, #64]	; (8001c90 <Widget::SendRdmPacketRequest(unsigned short)+0x4c>)
 8001c4e:	f000 fab7 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001c52:	2100      	movs	r1, #0
 8001c54:	201c      	movs	r0, #28
 8001c56:	f000 fab3 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001c5a:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 8001c5e:	f104 0694 	add.w	r6, r4, #148	; 0x94
 8001c62:	f1a3 0210 	sub.w	r2, r3, #16
 8001c66:	4253      	negs	r3, r2
 8001c68:	4153      	adcs	r3, r2
 8001c6a:	4631      	mov	r1, r6
 8001c6c:	462a      	mov	r2, r5
 8001c6e:	f884 3300 	strb.w	r3, [r4, #768]	; 0x300
 8001c72:	2000      	movs	r0, #0
 8001c74:	f000 fd2a 	bl	80026cc <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 8001c78:	4b06      	ldr	r3, [pc, #24]	; (8001c94 <Widget::SendRdmPacketRequest(unsigned short)+0x50>)
 8001c7a:	4632      	mov	r2, r6
 8001c7c:	681b      	ldr	r3, [r3, #0]
 8001c7e:	4629      	mov	r1, r5
 8001c80:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001c84:	2011      	movs	r0, #17
 8001c86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001c8a:	2301      	movs	r3, #1
 8001c8c:	f000 bd14 	b.w	80026b8 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8001c90:	08005938 	stmdaeq	r0, {r3, r4, r5, r8, fp, ip, lr}
 8001c94:	2000181c 	andcs	r1, r0, ip, lsl r8

08001c98 <Widget::ReceiveDmxOnChange()>:
 8001c98:	b510      	push	{r4, lr}
 8001c9a:	4604      	mov	r4, r0
 8001c9c:	4910      	ldr	r1, [pc, #64]	; (8001ce0 <Widget::ReceiveDmxOnChange()+0x48>)
 8001c9e:	2007      	movs	r0, #7
 8001ca0:	f000 fa8e 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001ca4:	2100      	movs	r1, #0
 8001ca6:	201c      	movs	r0, #28
 8001ca8:	f000 fa8a 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001cac:	f894 3094 	ldrb.w	r3, [r4, #148]	; 0x94
 8001cb0:	2201      	movs	r2, #1
 8001cb2:	f8c4 32f0 	str.w	r3, [r4, #752]	; 0x2f0
 8001cb6:	2300      	movs	r3, #0
 8001cb8:	4620      	mov	r0, r4
 8001cba:	4619      	mov	r1, r3
 8001cbc:	f001 f80a 	bl	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001cc0:	2100      	movs	r1, #0
 8001cc2:	4620      	mov	r0, r4
 8001cc4:	f000 fef8 	bl	8002ab8 <Dmx::ClearData(unsigned int)>
 8001cc8:	2301      	movs	r3, #1
 8001cca:	2100      	movs	r1, #0
 8001ccc:	461a      	mov	r2, r3
 8001cce:	4620      	mov	r0, r4
 8001cd0:	f001 f800 	bl	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001cd4:	4b03      	ldr	r3, [pc, #12]	; (8001ce4 <Widget::ReceiveDmxOnChange()+0x4c>)
 8001cd6:	681b      	ldr	r3, [r3, #0]
 8001cd8:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 8001cdc:	bd10      	pop	{r4, pc}
 8001cde:	bf00      	nop
 8001ce0:	08005950 	stmdaeq	r0, {r4, r6, r8, fp, ip, lr}
 8001ce4:	2000181c 	andcs	r1, r0, ip, lsl r8

08001ce8 <Widget::ReceivedDmxChangeOfStatePacket()>:
 8001ce8:	f8d0 22ec 	ldr.w	r2, [r0, #748]	; 0x2ec
 8001cec:	b510      	push	{r4, lr}
 8001cee:	2a03      	cmp	r2, #3
 8001cf0:	d01a      	beq.n	8001d28 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001cf2:	f890 4300 	ldrb.w	r4, [r0, #768]	; 0x300
 8001cf6:	b9bc      	cbnz	r4, 8001d28 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001cf8:	6942      	ldr	r2, [r0, #20]
 8001cfa:	2a01      	cmp	r2, #1
 8001cfc:	d114      	bne.n	8001d28 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001cfe:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001d02:	b18b      	cbz	r3, 8001d28 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001d04:	4621      	mov	r1, r4
 8001d06:	f001 f971 	bl	8002fec <Dmx::GetDmxChanged(unsigned int)>
 8001d0a:	b168      	cbz	r0, 8001d28 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001d0c:	2007      	movs	r0, #7
 8001d0e:	4907      	ldr	r1, [pc, #28]	; (8001d2c <Widget::ReceivedDmxChangeOfStatePacket()+0x44>)
 8001d10:	f000 fa56 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001d14:	4621      	mov	r1, r4
 8001d16:	201c      	movs	r0, #28
 8001d18:	f000 fa52 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001d1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d20:	2007      	movs	r0, #7
 8001d22:	4903      	ldr	r1, [pc, #12]	; (8001d30 <Widget::ReceivedDmxChangeOfStatePacket()+0x48>)
 8001d24:	f000 ba4c 	b.w	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001d28:	bd10      	pop	{r4, pc}
 8001d2a:	bf00      	nop
 8001d2c:	08005966 	stmdaeq	r0, {r1, r2, r5, r6, r8, fp, ip, lr}
 8001d30:	0800597c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, fp, ip, lr}

08001d34 <Widget::GetSnReply()>:
 8001d34:	b510      	push	{r4, lr}
 8001d36:	4910      	ldr	r1, [pc, #64]	; (8001d78 <Widget::GetSnReply()+0x44>)
 8001d38:	4604      	mov	r4, r0
 8001d3a:	2007      	movs	r0, #7
 8001d3c:	f000 fa40 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001d40:	2100      	movs	r1, #0
 8001d42:	201c      	movs	r0, #28
 8001d44:	f000 fa3c 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001d48:	2300      	movs	r3, #0
 8001d4a:	2201      	movs	r2, #1
 8001d4c:	4619      	mov	r1, r3
 8001d4e:	4620      	mov	r0, r4
 8001d50:	f000 ffc0 	bl	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001d54:	2304      	movs	r3, #4
 8001d56:	210a      	movs	r1, #10
 8001d58:	4620      	mov	r0, r4
 8001d5a:	f104 0222 	add.w	r2, r4, #34	; 0x22
 8001d5e:	f000 fbf1 	bl	8002544 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>
 8001d62:	2301      	movs	r3, #1
 8001d64:	2100      	movs	r1, #0
 8001d66:	461a      	mov	r2, r3
 8001d68:	4620      	mov	r0, r4
 8001d6a:	f000 ffb3 	bl	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001d6e:	4b03      	ldr	r3, [pc, #12]	; (8001d7c <Widget::GetSnReply()+0x48>)
 8001d70:	681b      	ldr	r3, [r3, #0]
 8001d72:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 8001d76:	bd10      	pop	{r4, pc}
 8001d78:	080058bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, fp, ip, lr}
 8001d7c:	2000181c 	andcs	r1, r0, ip, lsl r8

08001d80 <Widget::SendRdmDiscoveryRequest(unsigned short)>:
 8001d80:	b570      	push	{r4, r5, r6, lr}
 8001d82:	4604      	mov	r4, r0
 8001d84:	460d      	mov	r5, r1
 8001d86:	2007      	movs	r0, #7
 8001d88:	490d      	ldr	r1, [pc, #52]	; (8001dc0 <Widget::SendRdmDiscoveryRequest(unsigned short)+0x40>)
 8001d8a:	f000 fa19 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001d8e:	f104 0694 	add.w	r6, r4, #148	; 0x94
 8001d92:	2100      	movs	r1, #0
 8001d94:	201c      	movs	r0, #28
 8001d96:	f000 fa13 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001d9a:	462a      	mov	r2, r5
 8001d9c:	4631      	mov	r1, r6
 8001d9e:	2000      	movs	r0, #0
 8001da0:	f000 fc94 	bl	80026cc <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 8001da4:	2301      	movs	r3, #1
 8001da6:	4a07      	ldr	r2, [pc, #28]	; (8001dc4 <Widget::SendRdmDiscoveryRequest(unsigned short)+0x44>)
 8001da8:	4629      	mov	r1, r5
 8001daa:	6812      	ldr	r2, [r2, #0]
 8001dac:	f884 3300 	strb.w	r3, [r4, #768]	; 0x300
 8001db0:	f8c4 22fc 	str.w	r2, [r4, #764]	; 0x2fc
 8001db4:	2011      	movs	r0, #17
 8001db6:	4632      	mov	r2, r6
 8001db8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001dbc:	f000 bc7c 	b.w	80026b8 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8001dc0:	0800599a 	stmdaeq	r0, {r1, r3, r4, r7, r8, fp, ip, lr}
 8001dc4:	2000181c 	andcs	r1, r0, ip, lsl r8

08001dc8 <Widget::RdmTimeOutMessage()>:
 8001dc8:	b510      	push	{r4, lr}
 8001dca:	4604      	mov	r4, r0
 8001dcc:	2200      	movs	r2, #0
 8001dce:	2007      	movs	r0, #7
 8001dd0:	490a      	ldr	r1, [pc, #40]	; (8001dfc <Widget::RdmTimeOutMessage()+0x34>)
 8001dd2:	f000 f9f5 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001dd6:	201c      	movs	r0, #28
 8001dd8:	4909      	ldr	r1, [pc, #36]	; (8001e00 <Widget::RdmTimeOutMessage()+0x38>)
 8001dda:	f000 f9f1 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001dde:	2200      	movs	r2, #0
 8001de0:	210c      	movs	r1, #12
 8001de2:	4620      	mov	r0, r4
 8001de4:	f000 fb8e 	bl	8002504 <Widget::SendHeader(unsigned char, unsigned int)>
 8001de8:	4620      	mov	r0, r4
 8001dea:	f000 fba8 	bl	800253e <Widget::SendFooter()>
 8001dee:	2300      	movs	r3, #0
 8001df0:	f884 3300 	strb.w	r3, [r4, #768]	; 0x300
 8001df4:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001df8:	bd10      	pop	{r4, pc}
 8001dfa:	bf00      	nop
 8001dfc:	080059b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, fp, ip, lr}
 8001e00:	080059d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, fp, ip, lr}

08001e04 <Widget::ReceivedRdmPacket()>:
 8001e04:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
 8001e08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e0c:	f023 0302 	bic.w	r3, r3, #2
 8001e10:	2b01      	cmp	r3, #1
 8001e12:	4604      	mov	r4, r0
 8001e14:	d063      	beq.n	8001ede <Widget::ReceivedRdmPacket()+0xda>
 8001e16:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001e1a:	2b01      	cmp	r3, #1
 8001e1c:	d05f      	beq.n	8001ede <Widget::ReceivedRdmPacket()+0xda>
 8001e1e:	2000      	movs	r0, #0
 8001e20:	f000 fc4c 	bl	80026bc <Rdm::Receive(unsigned int)>
 8001e24:	4605      	mov	r5, r0
 8001e26:	2800      	cmp	r0, #0
 8001e28:	d059      	beq.n	8001ede <Widget::ReceivedRdmPacket()+0xda>
 8001e2a:	7803      	ldrb	r3, [r0, #0]
 8001e2c:	2bcc      	cmp	r3, #204	; 0xcc
 8001e2e:	d134      	bne.n	8001e9a <Widget::ReceivedRdmPacket()+0x96>
 8001e30:	7886      	ldrb	r6, [r0, #2]
 8001e32:	7d07      	ldrb	r7, [r0, #20]
 8001e34:	3602      	adds	r6, #2
 8001e36:	b2f6      	uxtb	r6, r6
 8001e38:	4632      	mov	r2, r6
 8001e3a:	2007      	movs	r0, #7
 8001e3c:	4929      	ldr	r1, [pc, #164]	; (8001ee4 <Widget::ReceivedRdmPacket()+0xe0>)
 8001e3e:	f000 f9bf 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001e42:	201c      	movs	r0, #28
 8001e44:	4928      	ldr	r1, [pc, #160]	; (8001ee8 <Widget::ReceivedRdmPacket()+0xe4>)
 8001e46:	f000 f9bb 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001e4a:	2105      	movs	r1, #5
 8001e4c:	1c72      	adds	r2, r6, #1
 8001e4e:	4620      	mov	r0, r4
 8001e50:	f000 fb58 	bl	8002504 <Widget::SendHeader(unsigned char, unsigned int)>
 8001e54:	2000      	movs	r0, #0
 8001e56:	f001 f948 	bl	80030ea <usb_send_byte>
 8001e5a:	4632      	mov	r2, r6
 8001e5c:	4629      	mov	r1, r5
 8001e5e:	4620      	mov	r0, r4
 8001e60:	f000 fb62 	bl	8002528 <Widget::SendData(unsigned char const*, unsigned int)>
 8001e64:	4620      	mov	r0, r4
 8001e66:	f000 fb6a 	bl	800253e <Widget::SendFooter()>
 8001e6a:	2f11      	cmp	r7, #17
 8001e6c:	7d6a      	ldrb	r2, [r5, #21]
 8001e6e:	7dab      	ldrb	r3, [r5, #22]
 8001e70:	d10f      	bne.n	8001e92 <Widget::ReceivedRdmPacket()+0x8e>
 8001e72:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8001e76:	b29b      	uxth	r3, r3
 8001e78:	2b02      	cmp	r3, #2
 8001e7a:	d00a      	beq.n	8001e92 <Widget::ReceivedRdmPacket()+0x8e>
 8001e7c:	4620      	mov	r0, r4
 8001e7e:	f7ff ffa3 	bl	8001dc8 <Widget::RdmTimeOutMessage()>
 8001e82:	462a      	mov	r2, r5
 8001e84:	4631      	mov	r1, r6
 8001e86:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001e8a:	2300      	movs	r3, #0
 8001e8c:	2011      	movs	r0, #17
 8001e8e:	f000 bc13 	b.w	80026b8 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8001e92:	2300      	movs	r3, #0
 8001e94:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001e98:	e7f3      	b.n	8001e82 <Widget::ReceivedRdmPacket()+0x7e>
 8001e9a:	2bfe      	cmp	r3, #254	; 0xfe
 8001e9c:	d11d      	bne.n	8001eda <Widget::ReceivedRdmPacket()+0xd6>
 8001e9e:	2218      	movs	r2, #24
 8001ea0:	2007      	movs	r0, #7
 8001ea2:	4910      	ldr	r1, [pc, #64]	; (8001ee4 <Widget::ReceivedRdmPacket()+0xe0>)
 8001ea4:	f000 f98c 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001ea8:	201c      	movs	r0, #28
 8001eaa:	4910      	ldr	r1, [pc, #64]	; (8001eec <Widget::ReceivedRdmPacket()+0xe8>)
 8001eac:	f000 f988 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001eb0:	2219      	movs	r2, #25
 8001eb2:	2105      	movs	r1, #5
 8001eb4:	4620      	mov	r0, r4
 8001eb6:	f000 fb25 	bl	8002504 <Widget::SendHeader(unsigned char, unsigned int)>
 8001eba:	2000      	movs	r0, #0
 8001ebc:	f001 f915 	bl	80030ea <usb_send_byte>
 8001ec0:	2218      	movs	r2, #24
 8001ec2:	4629      	mov	r1, r5
 8001ec4:	4620      	mov	r0, r4
 8001ec6:	f000 fb2f 	bl	8002528 <Widget::SendData(unsigned char const*, unsigned int)>
 8001eca:	4620      	mov	r0, r4
 8001ecc:	f000 fb37 	bl	800253e <Widget::SendFooter()>
 8001ed0:	4620      	mov	r0, r4
 8001ed2:	f7ff ff79 	bl	8001dc8 <Widget::RdmTimeOutMessage()>
 8001ed6:	2618      	movs	r6, #24
 8001ed8:	e7d3      	b.n	8001e82 <Widget::ReceivedRdmPacket()+0x7e>
 8001eda:	2600      	movs	r6, #0
 8001edc:	e7d1      	b.n	8001e82 <Widget::ReceivedRdmPacket()+0x7e>
 8001ede:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001ee2:	bf00      	nop
 8001ee4:	080059b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, fp, ip, lr}
 8001ee8:	080059dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, fp, ip, lr}
 8001eec:	080059f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, fp, ip, lr}

08001ef0 <Widget::RdmTimeout()>:
 8001ef0:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
 8001ef4:	b510      	push	{r4, lr}
 8001ef6:	2b03      	cmp	r3, #3
 8001ef8:	4604      	mov	r4, r0
 8001efa:	d00d      	beq.n	8001f18 <Widget::RdmTimeout()+0x28>
 8001efc:	f8d0 22fc 	ldr.w	r2, [r0, #764]	; 0x2fc
 8001f00:	b152      	cbz	r2, 8001f18 <Widget::RdmTimeout()+0x28>
 8001f02:	4b06      	ldr	r3, [pc, #24]	; (8001f1c <Widget::RdmTimeout()+0x2c>)
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	1a9b      	subs	r3, r3, r2
 8001f08:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001f0c:	d304      	bcc.n	8001f18 <Widget::RdmTimeout()+0x28>
 8001f0e:	f7ff ff5b 	bl	8001dc8 <Widget::RdmTimeOutMessage()>
 8001f12:	2300      	movs	r3, #0
 8001f14:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001f18:	bd10      	pop	{r4, pc}
 8001f1a:	bf00      	nop
 8001f1c:	2000181c 	andcs	r1, r0, ip, lsl r8

08001f20 <Widget::GetManufacturerReply()>:
 8001f20:	b538      	push	{r3, r4, r5, lr}
 8001f22:	4917      	ldr	r1, [pc, #92]	; (8001f80 <Widget::GetManufacturerReply()+0x60>)
 8001f24:	4604      	mov	r4, r0
 8001f26:	2007      	movs	r0, #7
 8001f28:	f000 f94a 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001f2c:	2100      	movs	r1, #0
 8001f2e:	201c      	movs	r0, #28
 8001f30:	f000 f946 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001f34:	2300      	movs	r3, #0
 8001f36:	f894 5067 	ldrb.w	r5, [r4, #103]	; 0x67
 8001f3a:	4619      	mov	r1, r3
 8001f3c:	2201      	movs	r2, #1
 8001f3e:	4620      	mov	r0, r4
 8001f40:	f000 fec8 	bl	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001f44:	214d      	movs	r1, #77	; 0x4d
 8001f46:	4620      	mov	r0, r4
 8001f48:	1caa      	adds	r2, r5, #2
 8001f4a:	f000 fadb 	bl	8002504 <Widget::SendHeader(unsigned char, unsigned int)>
 8001f4e:	2202      	movs	r2, #2
 8001f50:	4620      	mov	r0, r4
 8001f52:	490c      	ldr	r1, [pc, #48]	; (8001f84 <Widget::GetManufacturerReply()+0x64>)
 8001f54:	f000 fae8 	bl	8002528 <Widget::SendData(unsigned char const*, unsigned int)>
 8001f58:	462a      	mov	r2, r5
 8001f5a:	f104 0147 	add.w	r1, r4, #71	; 0x47
 8001f5e:	4620      	mov	r0, r4
 8001f60:	f000 fae2 	bl	8002528 <Widget::SendData(unsigned char const*, unsigned int)>
 8001f64:	4620      	mov	r0, r4
 8001f66:	f000 faea 	bl	800253e <Widget::SendFooter()>
 8001f6a:	2301      	movs	r3, #1
 8001f6c:	2100      	movs	r1, #0
 8001f6e:	461a      	mov	r2, r3
 8001f70:	4620      	mov	r0, r4
 8001f72:	f000 feaf 	bl	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001f76:	4b04      	ldr	r3, [pc, #16]	; (8001f88 <Widget::GetManufacturerReply()+0x68>)
 8001f78:	681b      	ldr	r3, [r3, #0]
 8001f7a:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 8001f7e:	bd38      	pop	{r3, r4, r5, pc}
 8001f80:	08005a15 	stmdaeq	r0, {r0, r2, r4, r9, fp, ip, lr}
 8001f84:	08005afe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r9, fp, ip, lr}
 8001f88:	2000181c 	andcs	r1, r0, ip, lsl r8

08001f8c <Widget::GetNameReply()>:
 8001f8c:	b538      	push	{r3, r4, r5, lr}
 8001f8e:	4917      	ldr	r1, [pc, #92]	; (8001fec <Widget::GetNameReply()+0x60>)
 8001f90:	4604      	mov	r4, r0
 8001f92:	2007      	movs	r0, #7
 8001f94:	f000 f914 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001f98:	2100      	movs	r1, #0
 8001f9a:	201c      	movs	r0, #28
 8001f9c:	f000 f910 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 8001fa0:	2300      	movs	r3, #0
 8001fa2:	f894 5046 	ldrb.w	r5, [r4, #70]	; 0x46
 8001fa6:	4619      	mov	r1, r3
 8001fa8:	2201      	movs	r2, #1
 8001faa:	4620      	mov	r0, r4
 8001fac:	f000 fe92 	bl	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001fb0:	214e      	movs	r1, #78	; 0x4e
 8001fb2:	4620      	mov	r0, r4
 8001fb4:	1caa      	adds	r2, r5, #2
 8001fb6:	f000 faa5 	bl	8002504 <Widget::SendHeader(unsigned char, unsigned int)>
 8001fba:	2202      	movs	r2, #2
 8001fbc:	4620      	mov	r0, r4
 8001fbe:	490c      	ldr	r1, [pc, #48]	; (8001ff0 <Widget::GetNameReply()+0x64>)
 8001fc0:	f000 fab2 	bl	8002528 <Widget::SendData(unsigned char const*, unsigned int)>
 8001fc4:	462a      	mov	r2, r5
 8001fc6:	f104 0126 	add.w	r1, r4, #38	; 0x26
 8001fca:	4620      	mov	r0, r4
 8001fcc:	f000 faac 	bl	8002528 <Widget::SendData(unsigned char const*, unsigned int)>
 8001fd0:	4620      	mov	r0, r4
 8001fd2:	f000 fab4 	bl	800253e <Widget::SendFooter()>
 8001fd6:	2301      	movs	r3, #1
 8001fd8:	2100      	movs	r1, #0
 8001fda:	461a      	mov	r2, r3
 8001fdc:	4620      	mov	r0, r4
 8001fde:	f000 fe79 	bl	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001fe2:	4b04      	ldr	r3, [pc, #16]	; (8001ff4 <Widget::GetNameReply()+0x68>)
 8001fe4:	681b      	ldr	r3, [r3, #0]
 8001fe6:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 8001fea:	bd38      	pop	{r3, r4, r5, pc}
 8001fec:	08005a28 	stmdaeq	r0, {r3, r5, r9, fp, ip, lr}
 8001ff0:	20000005 	andcs	r0, r0, r5
 8001ff4:	2000181c 	andcs	r1, r0, ip, lsl r8

08001ff8 <Widget::ReceiveDataFromHost()>:
 8001ff8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001ffc:	4604      	mov	r4, r0
 8001ffe:	f001 f95f 	bl	80032c0 <FT245RL_data_available>
 8002002:	2800      	cmp	r0, #0
 8002004:	d040      	beq.n	8002088 <Widget::ReceiveDataFromHost()+0x90>
 8002006:	f001 f867 	bl	80030d8 <usb_read_byte>
 800200a:	287e      	cmp	r0, #126	; 0x7e
 800200c:	d13c      	bne.n	8002088 <Widget::ReceiveDataFromHost()+0x90>
 800200e:	f001 f863 	bl	80030d8 <usb_read_byte>
 8002012:	4607      	mov	r7, r0
 8002014:	f001 f860 	bl	80030d8 <usb_read_byte>
 8002018:	4605      	mov	r5, r0
 800201a:	f001 f85d 	bl	80030d8 <usb_read_byte>
 800201e:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8002022:	f06f 0992 	mvn.w	r9, #146	; 0x92
 8002026:	b2ad      	uxth	r5, r5
 8002028:	462e      	mov	r6, r5
 800202a:	f104 0893 	add.w	r8, r4, #147	; 0x93
 800202e:	eba9 0904 	sub.w	r9, r9, r4
 8002032:	eb09 0308 	add.w	r3, r9, r8
 8002036:	429d      	cmp	r5, r3
 8002038:	d81d      	bhi.n	8002076 <Widget::ReceiveDataFromHost()+0x7e>
 800203a:	f001 f84d 	bl	80030d8 <usb_read_byte>
 800203e:	28e7      	cmp	r0, #231	; 0xe7
 8002040:	d004      	beq.n	800204c <Widget::ReceiveDataFromHost()+0x54>
 8002042:	1c73      	adds	r3, r6, #1
 8002044:	f5b6 7f16 	cmp.w	r6, #600	; 0x258
 8002048:	461e      	mov	r6, r3
 800204a:	d3f6      	bcc.n	800203a <Widget::ReceiveDataFromHost()+0x42>
 800204c:	462b      	mov	r3, r5
 800204e:	463a      	mov	r2, r7
 8002050:	2006      	movs	r0, #6
 8002052:	492b      	ldr	r1, [pc, #172]	; (8002100 <Widget::ReceiveDataFromHost()+0x108>)
 8002054:	9600      	str	r6, [sp, #0]
 8002056:	f000 f8b3 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 800205a:	2f0b      	cmp	r7, #11
 800205c:	d810      	bhi.n	8002080 <Widget::ReceiveDataFromHost()+0x88>
 800205e:	2f02      	cmp	r7, #2
 8002060:	d912      	bls.n	8002088 <Widget::ReceiveDataFromHost()+0x90>
 8002062:	3f03      	subs	r7, #3
 8002064:	2f08      	cmp	r7, #8
 8002066:	d80f      	bhi.n	8002088 <Widget::ReceiveDataFromHost()+0x90>
 8002068:	e8df f007 	tbb	[pc, r7]
 800206c:	2f0e1d11 	svccs	0x000e1d11
 8002070:	170e363c 	smladxne	lr, ip, r6, r3
 8002074:	f0010043 			; <UNDEFINED> instruction: 0xf0010043
 8002078:	f82f f808 	strh.w	pc, [pc, #-2056]	; 8001874 <__udivmoddi4+0xdc>
 800207c:	0f01      	lsrs	r1, r0, #28
 800207e:	e7d8      	b.n	8002032 <Widget::ReceiveDataFromHost()+0x3a>
 8002080:	2f4d      	cmp	r7, #77	; 0x4d
 8002082:	d01c      	beq.n	80020be <Widget::ReceiveDataFromHost()+0xc6>
 8002084:	2f4e      	cmp	r7, #78	; 0x4e
 8002086:	d014      	beq.n	80020b2 <Widget::ReceiveDataFromHost()+0xba>
 8002088:	b003      	add	sp, #12
 800208a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800208e:	4620      	mov	r0, r4
 8002090:	b003      	add	sp, #12
 8002092:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002096:	f7ff bd01 	b.w	8001a9c <Widget::GetParamsReply()>
 800209a:	4620      	mov	r0, r4
 800209c:	b003      	add	sp, #12
 800209e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020a2:	f7ff be47 	b.w	8001d34 <Widget::GetSnReply()>
 80020a6:	4620      	mov	r0, r4
 80020a8:	b003      	add	sp, #12
 80020aa:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020ae:	f7ff bd27 	b.w	8001b00 <Widget::SetParams()>
 80020b2:	4620      	mov	r0, r4
 80020b4:	b003      	add	sp, #12
 80020b6:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020ba:	f7ff bf67 	b.w	8001f8c <Widget::GetNameReply()>
 80020be:	4620      	mov	r0, r4
 80020c0:	b003      	add	sp, #12
 80020c2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020c6:	f7ff bf2b 	b.w	8001f20 <Widget::GetManufacturerReply()>
 80020ca:	4629      	mov	r1, r5
 80020cc:	4620      	mov	r0, r4
 80020ce:	b003      	add	sp, #12
 80020d0:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020d4:	f7ff bd90 	b.w	8001bf8 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>
 80020d8:	4620      	mov	r0, r4
 80020da:	b003      	add	sp, #12
 80020dc:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020e0:	f7ff bdda 	b.w	8001c98 <Widget::ReceiveDmxOnChange()>
 80020e4:	4629      	mov	r1, r5
 80020e6:	4620      	mov	r0, r4
 80020e8:	b003      	add	sp, #12
 80020ea:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020ee:	f7ff bda9 	b.w	8001c44 <Widget::SendRdmPacketRequest(unsigned short)>
 80020f2:	4629      	mov	r1, r5
 80020f4:	4620      	mov	r0, r4
 80020f6:	b003      	add	sp, #12
 80020f8:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020fc:	f7ff be40 	b.w	8001d80 <Widget::SendRdmDiscoveryRequest(unsigned short)>
 8002100:	08005a3e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r9, fp, ip, lr}

08002104 <WidgetConfiguration::SetRefreshRate(unsigned char)>:
 8002104:	4b05      	ldr	r3, [pc, #20]	; (800211c <WidgetConfiguration::SetRefreshRate(unsigned char)+0x18>)
 8002106:	4601      	mov	r1, r0
 8002108:	7018      	strb	r0, [r3, #0]
 800210a:	b110      	cbz	r0, 8002112 <WidgetConfiguration::SetRefreshRate(unsigned char)+0xe>
 800210c:	4b04      	ldr	r3, [pc, #16]	; (8002120 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x1c>)
 800210e:	fbb3 f1f0 	udiv	r1, r3, r0
 8002112:	4b04      	ldr	r3, [pc, #16]	; (8002124 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x20>)
 8002114:	6818      	ldr	r0, [r3, #0]
 8002116:	f000 bee9 	b.w	8002eec <Dmx::SetDmxPeriodTime(unsigned int)>
 800211a:	bf00      	nop
 800211c:	20000004 	andcs	r0, r0, r4
 8002120:	000f4240 	andeq	r4, pc, r0, asr #4
 8002124:	20000728 	andcs	r0, r0, r8, lsr #14

08002128 <WidgetConfiguration::SetBreakTime(unsigned char)>:
 8002128:	b508      	push	{r3, lr}
 800212a:	4b08      	ldr	r3, [pc, #32]	; (800214c <WidgetConfiguration::SetBreakTime(unsigned char)+0x24>)
 800212c:	7018      	strb	r0, [r3, #0]
 800212e:	f7fe f9cd 	bl	80004cc <__aeabi_i2f>
 8002132:	4907      	ldr	r1, [pc, #28]	; (8002150 <WidgetConfiguration::SetBreakTime(unsigned char)+0x28>)
 8002134:	f7fe f80c 	bl	8000150 <__aeabi_fmul>
 8002138:	f7fe fec0 	bl	8000ebc <__aeabi_f2uiz>
 800213c:	4b05      	ldr	r3, [pc, #20]	; (8002154 <WidgetConfiguration::SetBreakTime(unsigned char)+0x2c>)
 800213e:	4601      	mov	r1, r0
 8002140:	6818      	ldr	r0, [r3, #0]
 8002142:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002146:	f000 bf01 	b.w	8002f4c <Dmx::SetDmxBreakTime(unsigned int)>
 800214a:	bf00      	nop
 800214c:	20000001 	andcs	r0, r0, r1
 8002150:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 8002154:	20000728 	andcs	r0, r0, r8, lsr #14

08002158 <WidgetConfiguration::SetMabTime(unsigned char)>:
 8002158:	b508      	push	{r3, lr}
 800215a:	4b08      	ldr	r3, [pc, #32]	; (800217c <WidgetConfiguration::SetMabTime(unsigned char)+0x24>)
 800215c:	7018      	strb	r0, [r3, #0]
 800215e:	f7fe f9b5 	bl	80004cc <__aeabi_i2f>
 8002162:	4907      	ldr	r1, [pc, #28]	; (8002180 <WidgetConfiguration::SetMabTime(unsigned char)+0x28>)
 8002164:	f7fd fff4 	bl	8000150 <__aeabi_fmul>
 8002168:	f7fe fea8 	bl	8000ebc <__aeabi_f2uiz>
 800216c:	4b05      	ldr	r3, [pc, #20]	; (8002184 <WidgetConfiguration::SetMabTime(unsigned char)+0x2c>)
 800216e:	4601      	mov	r1, r0
 8002170:	6818      	ldr	r0, [r3, #0]
 8002172:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002176:	f000 bef3 	b.w	8002f60 <Dmx::SetDmxMabTime(unsigned int)>
 800217a:	bf00      	nop
 800217c:	20000000 	andcs	r0, r0, r0
 8002180:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 8002184:	20000728 	andcs	r0, r0, r8, lsr #14

08002188 <WidgetConfiguration::SetMode(widget::Mode)>:
 8002188:	2800      	cmp	r0, #0
 800218a:	bf14      	ite	ne
 800218c:	4602      	movne	r2, r0
 800218e:	2202      	moveq	r2, #2
 8002190:	4b03      	ldr	r3, [pc, #12]	; (80021a0 <WidgetConfiguration::SetMode(widget::Mode)+0x18>)
 8002192:	701a      	strb	r2, [r3, #0]
 8002194:	4b03      	ldr	r3, [pc, #12]	; (80021a4 <WidgetConfiguration::SetMode(widget::Mode)+0x1c>)
 8002196:	681b      	ldr	r3, [r3, #0]
 8002198:	f8c3 02ec 	str.w	r0, [r3, #748]	; 0x2ec
 800219c:	4770      	bx	lr
 800219e:	bf00      	nop
 80021a0:	20000002 	andcs	r0, r0, r2
 80021a4:	200000f4 	strdcs	r0, [r0], -r4

080021a8 <WidgetConfiguration::SetThrottle(unsigned char)>:
 80021a8:	b118      	cbz	r0, 80021b2 <WidgetConfiguration::SetThrottle(unsigned char)+0xa>
 80021aa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80021ae:	fbb3 f0f0 	udiv	r0, r3, r0
 80021b2:	4b02      	ldr	r3, [pc, #8]	; (80021bc <WidgetConfiguration::SetThrottle(unsigned char)+0x14>)
 80021b4:	681b      	ldr	r3, [r3, #0]
 80021b6:	f8c3 02f4 	str.w	r0, [r3, #756]	; 0x2f4
 80021ba:	4770      	bx	lr
 80021bc:	200000f4 	strdcs	r0, [r0], -r4

080021c0 <WidgetMonitor::Line(int, char const*, ...)>:
 80021c0:	b40e      	push	{r1, r2, r3}
 80021c2:	b003      	add	sp, #12
 80021c4:	4770      	bx	lr
	...

080021c8 <WidgetParams::WidgetParams(WidgetParamsStore*)>:
 80021c8:	4a02      	ldr	r2, [pc, #8]	; (80021d4 <WidgetParams::WidgetParams(WidgetParamsStore*)+0xc>)
 80021ca:	6001      	str	r1, [r0, #0]
 80021cc:	6082      	str	r2, [r0, #8]
 80021ce:	2200      	movs	r2, #0
 80021d0:	7302      	strb	r2, [r0, #12]
 80021d2:	4770      	bx	lr
 80021d4:	00280109 	eoreq	r0, r8, r9, lsl #2

080021d8 <WidgetParams::Load()>:
 80021d8:	2300      	movs	r3, #0
 80021da:	b513      	push	{r0, r1, r4, lr}
 80021dc:	4604      	mov	r4, r0
 80021de:	4602      	mov	r2, r0
 80021e0:	6043      	str	r3, [r0, #4]
 80021e2:	4909      	ldr	r1, [pc, #36]	; (8002208 <WidgetParams::Load()+0x30>)
 80021e4:	4668      	mov	r0, sp
 80021e6:	f001 fd0e 	bl	8003c06 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80021ea:	6820      	ldr	r0, [r4, #0]
 80021ec:	b150      	cbz	r0, 8002204 <WidgetParams::Load()+0x2c>
 80021ee:	6803      	ldr	r3, [r0, #0]
 80021f0:	1d21      	adds	r1, r4, #4
 80021f2:	68db      	ldr	r3, [r3, #12]
 80021f4:	4798      	blx	r3
 80021f6:	2401      	movs	r4, #1
 80021f8:	4668      	mov	r0, sp
 80021fa:	f001 fd07 	bl	8003c0c <ReadConfigFile::~ReadConfigFile()>
 80021fe:	4620      	mov	r0, r4
 8002200:	b002      	add	sp, #8
 8002202:	bd10      	pop	{r4, pc}
 8002204:	4604      	mov	r4, r0
 8002206:	e7f7      	b.n	80021f8 <WidgetParams::Load()+0x20>
 8002208:	080022cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r9, sp}

0800220c <WidgetParams::callbackFunction(char const*)>:
 800220c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800220e:	460d      	mov	r5, r1
 8002210:	4604      	mov	r4, r0
 8002212:	4929      	ldr	r1, [pc, #164]	; (80022b8 <WidgetParams::callbackFunction(char const*)+0xac>)
 8002214:	4628      	mov	r0, r5
 8002216:	f10d 0207 	add.w	r2, sp, #7
 800221a:	f001 fcf8 	bl	8003c0e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800221e:	b960      	cbnz	r0, 800223a <WidgetParams::callbackFunction(char const*)+0x2e>
 8002220:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002224:	f1a3 0209 	sub.w	r2, r3, #9
 8002228:	2a76      	cmp	r2, #118	; 0x76
 800222a:	d806      	bhi.n	800223a <WidgetParams::callbackFunction(char const*)+0x2e>
 800222c:	7223      	strb	r3, [r4, #8]
 800222e:	6863      	ldr	r3, [r4, #4]
 8002230:	f043 0301 	orr.w	r3, r3, #1
 8002234:	6063      	str	r3, [r4, #4]
 8002236:	b003      	add	sp, #12
 8002238:	bd30      	pop	{r4, r5, pc}
 800223a:	4628      	mov	r0, r5
 800223c:	491f      	ldr	r1, [pc, #124]	; (80022bc <WidgetParams::callbackFunction(char const*)+0xb0>)
 800223e:	f10d 0207 	add.w	r2, sp, #7
 8002242:	f001 fce4 	bl	8003c0e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8002246:	b950      	cbnz	r0, 800225e <WidgetParams::callbackFunction(char const*)+0x52>
 8002248:	f99d 2007 	ldrsb.w	r2, [sp, #7]
 800224c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002250:	2a00      	cmp	r2, #0
 8002252:	dd04      	ble.n	800225e <WidgetParams::callbackFunction(char const*)+0x52>
 8002254:	7263      	strb	r3, [r4, #9]
 8002256:	6863      	ldr	r3, [r4, #4]
 8002258:	f043 0302 	orr.w	r3, r3, #2
 800225c:	e7ea      	b.n	8002234 <WidgetParams::callbackFunction(char const*)+0x28>
 800225e:	4628      	mov	r0, r5
 8002260:	4917      	ldr	r1, [pc, #92]	; (80022c0 <WidgetParams::callbackFunction(char const*)+0xb4>)
 8002262:	f10d 0207 	add.w	r2, sp, #7
 8002266:	f001 fcd2 	bl	8003c0e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800226a:	b930      	cbnz	r0, 800227a <WidgetParams::callbackFunction(char const*)+0x6e>
 800226c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002270:	72a3      	strb	r3, [r4, #10]
 8002272:	6863      	ldr	r3, [r4, #4]
 8002274:	f043 0304 	orr.w	r3, r3, #4
 8002278:	e7dc      	b.n	8002234 <WidgetParams::callbackFunction(char const*)+0x28>
 800227a:	4628      	mov	r0, r5
 800227c:	4911      	ldr	r1, [pc, #68]	; (80022c4 <WidgetParams::callbackFunction(char const*)+0xb8>)
 800227e:	f10d 0207 	add.w	r2, sp, #7
 8002282:	f001 fcc4 	bl	8003c0e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8002286:	b940      	cbnz	r0, 800229a <WidgetParams::callbackFunction(char const*)+0x8e>
 8002288:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800228c:	2b03      	cmp	r3, #3
 800228e:	d804      	bhi.n	800229a <WidgetParams::callbackFunction(char const*)+0x8e>
 8002290:	72e3      	strb	r3, [r4, #11]
 8002292:	6863      	ldr	r3, [r4, #4]
 8002294:	f043 0308 	orr.w	r3, r3, #8
 8002298:	e7cc      	b.n	8002234 <WidgetParams::callbackFunction(char const*)+0x28>
 800229a:	4628      	mov	r0, r5
 800229c:	490a      	ldr	r1, [pc, #40]	; (80022c8 <WidgetParams::callbackFunction(char const*)+0xbc>)
 800229e:	f10d 0207 	add.w	r2, sp, #7
 80022a2:	f001 fcb4 	bl	8003c0e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80022a6:	2800      	cmp	r0, #0
 80022a8:	d1c5      	bne.n	8002236 <WidgetParams::callbackFunction(char const*)+0x2a>
 80022aa:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80022ae:	7323      	strb	r3, [r4, #12]
 80022b0:	6863      	ldr	r3, [r4, #4]
 80022b2:	f043 0310 	orr.w	r3, r3, #16
 80022b6:	e7bd      	b.n	8002234 <WidgetParams::callbackFunction(char const*)+0x28>
 80022b8:	08005a69 	stmdaeq	r0, {r0, r3, r5, r6, r9, fp, ip, lr}
 80022bc:	08005a56 	stmdaeq	r0, {r1, r2, r4, r6, r9, fp, ip, lr}
 80022c0:	08005a7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r9, fp, ip, lr}
 80022c4:	08005a4a 	stmdaeq	r0, {r1, r3, r6, r9, fp, ip, lr}
 80022c8:	08005a95 	stmdaeq	r0, {r0, r2, r4, r7, r9, fp, ip, lr}

080022cc <WidgetParams::staticCallbackFunction(void*, char const*)>:
 80022cc:	f7ff bf9e 	b.w	800220c <WidgetParams::callbackFunction(char const*)>

080022d0 <WidgetParams::Set()>:
 80022d0:	6843      	ldr	r3, [r0, #4]
 80022d2:	b510      	push	{r4, lr}
 80022d4:	075b      	lsls	r3, r3, #29
 80022d6:	4604      	mov	r4, r0
 80022d8:	d502      	bpl.n	80022e0 <WidgetParams::Set()+0x10>
 80022da:	7a80      	ldrb	r0, [r0, #10]
 80022dc:	f7ff ff12 	bl	8002104 <WidgetConfiguration::SetRefreshRate(unsigned char)>
 80022e0:	6863      	ldr	r3, [r4, #4]
 80022e2:	07d8      	lsls	r0, r3, #31
 80022e4:	d502      	bpl.n	80022ec <WidgetParams::Set()+0x1c>
 80022e6:	7a20      	ldrb	r0, [r4, #8]
 80022e8:	f7ff ff1e 	bl	8002128 <WidgetConfiguration::SetBreakTime(unsigned char)>
 80022ec:	6863      	ldr	r3, [r4, #4]
 80022ee:	0799      	lsls	r1, r3, #30
 80022f0:	d502      	bpl.n	80022f8 <WidgetParams::Set()+0x28>
 80022f2:	7a60      	ldrb	r0, [r4, #9]
 80022f4:	f7ff ff30 	bl	8002158 <WidgetConfiguration::SetMabTime(unsigned char)>
 80022f8:	6863      	ldr	r3, [r4, #4]
 80022fa:	06da      	lsls	r2, r3, #27
 80022fc:	d502      	bpl.n	8002304 <WidgetParams::Set()+0x34>
 80022fe:	7b20      	ldrb	r0, [r4, #12]
 8002300:	f7ff ff52 	bl	80021a8 <WidgetConfiguration::SetThrottle(unsigned char)>
 8002304:	6863      	ldr	r3, [r4, #4]
 8002306:	071b      	lsls	r3, r3, #28
 8002308:	d504      	bpl.n	8002314 <WidgetParams::Set()+0x44>
 800230a:	7ae0      	ldrb	r0, [r4, #11]
 800230c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002310:	f7ff bf3a 	b.w	8002188 <WidgetConfiguration::SetMode(widget::Mode)>
 8002314:	bd10      	pop	{r4, pc}

08002316 <WidgetParams::Dump()>:
 8002316:	4770      	bx	lr

08002318 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>:
 8002318:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800231c:	4606      	mov	r6, r0
 800231e:	460f      	mov	r7, r1
 8002320:	461d      	mov	r5, r3
 8002322:	eb03 0802 	add.w	r8, r3, r2
 8002326:	eba8 0405 	sub.w	r4, r8, r5
 800232a:	b2a4      	uxth	r4, r4
 800232c:	2d63      	cmp	r5, #99	; 0x63
 800232e:	f04f 02c8 	mov.w	r2, #200	; 0xc8
 8002332:	f04f 0181 	mov.w	r1, #129	; 0x81
 8002336:	4630      	mov	r0, r6
 8002338:	443c      	add	r4, r7
 800233a:	d81e      	bhi.n	800237a <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x62>
 800233c:	f000 f8e2 	bl	8002504 <Widget::SendHeader(unsigned char, unsigned int)>
 8002340:	f04f 0800 	mov.w	r8, #0
 8002344:	4545      	cmp	r5, r8
 8002346:	462f      	mov	r7, r5
 8002348:	d80d      	bhi.n	8002366 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x4e>
 800234a:	2000      	movs	r0, #0
 800234c:	f000 fecd 	bl	80030ea <usb_send_byte>
 8002350:	3701      	adds	r7, #1
 8002352:	2002      	movs	r0, #2
 8002354:	f000 fec9 	bl	80030ea <usb_send_byte>
 8002358:	2f64      	cmp	r7, #100	; 0x64
 800235a:	d1f6      	bne.n	800234a <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x32>
 800235c:	4630      	mov	r0, r6
 800235e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002362:	f000 b8ec 	b.w	800253e <Widget::SendFooter()>
 8002366:	2080      	movs	r0, #128	; 0x80
 8002368:	f000 febf 	bl	80030ea <usb_send_byte>
 800236c:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002370:	f000 febb 	bl	80030ea <usb_send_byte>
 8002374:	f108 0801 	add.w	r8, r8, #1
 8002378:	e7e4      	b.n	8002344 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x2c>
 800237a:	f000 f8c3 	bl	8002504 <Widget::SendHeader(unsigned char, unsigned int)>
 800237e:	f04f 0900 	mov.w	r9, #0
 8002382:	2080      	movs	r0, #128	; 0x80
 8002384:	f000 feb1 	bl	80030ea <usb_send_byte>
 8002388:	f109 0901 	add.w	r9, r9, #1
 800238c:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002390:	f000 feab 	bl	80030ea <usb_send_byte>
 8002394:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8002398:	d1f3      	bne.n	8002382 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x6a>
 800239a:	4630      	mov	r0, r6
 800239c:	3d64      	subs	r5, #100	; 0x64
 800239e:	f000 f8ce 	bl	800253e <Widget::SendFooter()>
 80023a2:	b2ad      	uxth	r5, r5
 80023a4:	e7bf      	b.n	8002326 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0xe>
	...

080023a8 <Widget::UsbCanSend()>:
 80023a8:	b570      	push	{r4, r5, r6, lr}
 80023aa:	256c      	movs	r5, #108	; 0x6c
 80023ac:	4e0b      	ldr	r6, [pc, #44]	; (80023dc <Widget::UsbCanSend()+0x34>)
 80023ae:	6874      	ldr	r4, [r6, #4]
 80023b0:	fbb4 f4f5 	udiv	r4, r4, r5
 80023b4:	f000 ff90 	bl	80032d8 <FT245RL_can_write>
 80023b8:	b930      	cbnz	r0, 80023c8 <Widget::UsbCanSend()+0x20>
 80023ba:	6873      	ldr	r3, [r6, #4]
 80023bc:	fbb3 f3f5 	udiv	r3, r3, r5
 80023c0:	1b1b      	subs	r3, r3, r4
 80023c2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80023c6:	d3f5      	bcc.n	80023b4 <Widget::UsbCanSend()+0xc>
 80023c8:	f000 ff86 	bl	80032d8 <FT245RL_can_write>
 80023cc:	4604      	mov	r4, r0
 80023ce:	b918      	cbnz	r0, 80023d8 <Widget::UsbCanSend()+0x30>
 80023d0:	2007      	movs	r0, #7
 80023d2:	4903      	ldr	r1, [pc, #12]	; (80023e0 <Widget::UsbCanSend()+0x38>)
 80023d4:	f7ff fef4 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 80023d8:	4620      	mov	r0, r4
 80023da:	bd70      	pop	{r4, r5, r6, pc}
 80023dc:	e0001000 	and	r1, r0, r0
 80023e0:	08005aaf 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, r9, fp, ip, lr}

080023e4 <Widget::SnifferDmx()>:
 80023e4:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
 80023e8:	b570      	push	{r4, r5, r6, lr}
 80023ea:	2b03      	cmp	r3, #3
 80023ec:	4604      	mov	r4, r0
 80023ee:	d11c      	bne.n	800242a <Widget::SnifferDmx()+0x46>
 80023f0:	f7ff ffda 	bl	80023a8 <Widget::UsbCanSend()>
 80023f4:	b1c8      	cbz	r0, 800242a <Widget::SnifferDmx()+0x46>
 80023f6:	2100      	movs	r1, #0
 80023f8:	4620      	mov	r0, r4
 80023fa:	f000 fdf7 	bl	8002fec <Dmx::GetDmxChanged(unsigned int)>
 80023fe:	4605      	mov	r5, r0
 8002400:	b198      	cbz	r0, 800242a <Widget::SnifferDmx()+0x46>
 8002402:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 8002406:	4620      	mov	r0, r4
 8002408:	f7ff ffce 	bl	80023a8 <Widget::UsbCanSend()>
 800240c:	b168      	cbz	r0, 800242a <Widget::SnifferDmx()+0x46>
 800240e:	3601      	adds	r6, #1
 8002410:	4632      	mov	r2, r6
 8002412:	2007      	movs	r0, #7
 8002414:	4905      	ldr	r1, [pc, #20]	; (800242c <Widget::SnifferDmx()+0x48>)
 8002416:	f7ff fed3 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 800241a:	4629      	mov	r1, r5
 800241c:	4620      	mov	r0, r4
 800241e:	b2b3      	uxth	r3, r6
 8002420:	2200      	movs	r2, #0
 8002422:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002426:	f7ff bf77 	b.w	8002318 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 800242a:	bd70      	pop	{r4, r5, r6, pc}
 800242c:	08005acc 	stmdaeq	r0, {r2, r3, r6, r7, r9, fp, ip, lr}

08002430 <Widget::SnifferRdm()>:
 8002430:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
 8002434:	b570      	push	{r4, r5, r6, lr}
 8002436:	2b03      	cmp	r3, #3
 8002438:	4604      	mov	r4, r0
 800243a:	d14c      	bne.n	80024d6 <Widget::SnifferRdm()+0xa6>
 800243c:	f7ff ffb4 	bl	80023a8 <Widget::UsbCanSend()>
 8002440:	2800      	cmp	r0, #0
 8002442:	d048      	beq.n	80024d6 <Widget::SnifferRdm()+0xa6>
 8002444:	2000      	movs	r0, #0
 8002446:	f000 f939 	bl	80026bc <Rdm::Receive(unsigned int)>
 800244a:	4605      	mov	r5, r0
 800244c:	2800      	cmp	r0, #0
 800244e:	d042      	beq.n	80024d6 <Widget::SnifferRdm()+0xa6>
 8002450:	7803      	ldrb	r3, [r0, #0]
 8002452:	2bcc      	cmp	r3, #204	; 0xcc
 8002454:	d134      	bne.n	80024c0 <Widget::SnifferRdm()+0x90>
 8002456:	7886      	ldrb	r6, [r0, #2]
 8002458:	7d03      	ldrb	r3, [r0, #20]
 800245a:	3602      	adds	r6, #2
 800245c:	2b20      	cmp	r3, #32
 800245e:	b2f6      	uxtb	r6, r6
 8002460:	d028      	beq.n	80024b4 <Widget::SnifferRdm()+0x84>
 8002462:	d813      	bhi.n	800248c <Widget::SnifferRdm()+0x5c>
 8002464:	2b10      	cmp	r3, #16
 8002466:	d019      	beq.n	800249c <Widget::SnifferRdm()+0x6c>
 8002468:	2b11      	cmp	r3, #17
 800246a:	d01d      	beq.n	80024a8 <Widget::SnifferRdm()+0x78>
 800246c:	4620      	mov	r0, r4
 800246e:	f7ff ff9b 	bl	80023a8 <Widget::UsbCanSend()>
 8002472:	b380      	cbz	r0, 80024d6 <Widget::SnifferRdm()+0xa6>
 8002474:	2007      	movs	r0, #7
 8002476:	4918      	ldr	r1, [pc, #96]	; (80024d8 <Widget::SnifferRdm()+0xa8>)
 8002478:	f7ff fea2 	bl	80021c0 <WidgetMonitor::Line(int, char const*, ...)>
 800247c:	4633      	mov	r3, r6
 800247e:	4629      	mov	r1, r5
 8002480:	4620      	mov	r0, r4
 8002482:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002486:	2200      	movs	r2, #0
 8002488:	f7ff bf46 	b.w	8002318 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 800248c:	2b30      	cmp	r3, #48	; 0x30
 800248e:	d1ed      	bne.n	800246c <Widget::SnifferRdm()+0x3c>
 8002490:	f8d4 3314 	ldr.w	r3, [r4, #788]	; 0x314
 8002494:	3301      	adds	r3, #1
 8002496:	f8c4 3314 	str.w	r3, [r4, #788]	; 0x314
 800249a:	e7e7      	b.n	800246c <Widget::SnifferRdm()+0x3c>
 800249c:	f8d4 3308 	ldr.w	r3, [r4, #776]	; 0x308
 80024a0:	3301      	adds	r3, #1
 80024a2:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
 80024a6:	e7e1      	b.n	800246c <Widget::SnifferRdm()+0x3c>
 80024a8:	f8d4 330c 	ldr.w	r3, [r4, #780]	; 0x30c
 80024ac:	3301      	adds	r3, #1
 80024ae:	f8c4 330c 	str.w	r3, [r4, #780]	; 0x30c
 80024b2:	e7db      	b.n	800246c <Widget::SnifferRdm()+0x3c>
 80024b4:	f8d4 3310 	ldr.w	r3, [r4, #784]	; 0x310
 80024b8:	3301      	adds	r3, #1
 80024ba:	f8c4 3310 	str.w	r3, [r4, #784]	; 0x310
 80024be:	e7d5      	b.n	800246c <Widget::SnifferRdm()+0x3c>
 80024c0:	2bfe      	cmp	r3, #254	; 0xfe
 80024c2:	bf03      	ittte	eq
 80024c4:	f8d4 330c 	ldreq.w	r3, [r4, #780]	; 0x30c
 80024c8:	2618      	moveq	r6, #24
 80024ca:	3301      	addeq	r3, #1
 80024cc:	2600      	movne	r6, #0
 80024ce:	bf08      	it	eq
 80024d0:	f8c4 330c 	streq.w	r3, [r4, #780]	; 0x30c
 80024d4:	e7ca      	b.n	800246c <Widget::SnifferRdm()+0x3c>
 80024d6:	bd70      	pop	{r4, r5, r6, pc}
 80024d8:	08005ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp, ip, lr}

080024dc <Widget::SnifferFillTransmitBuffer()>:
 80024dc:	b538      	push	{r3, r4, r5, lr}
 80024de:	4605      	mov	r5, r0
 80024e0:	f7ff ff62 	bl	80023a8 <Widget::UsbCanSend()>
 80024e4:	b958      	cbnz	r0, 80024fe <Widget::SnifferFillTransmitBuffer()+0x22>
 80024e6:	bd38      	pop	{r3, r4, r5, pc}
 80024e8:	4628      	mov	r0, r5
 80024ea:	f7ff ff5d 	bl	80023a8 <Widget::UsbCanSend()>
 80024ee:	2800      	cmp	r0, #0
 80024f0:	d0f9      	beq.n	80024e6 <Widget::SnifferFillTransmitBuffer()+0xa>
 80024f2:	2000      	movs	r0, #0
 80024f4:	f000 fdf9 	bl	80030ea <usb_send_byte>
 80024f8:	3c01      	subs	r4, #1
 80024fa:	d1f5      	bne.n	80024e8 <Widget::SnifferFillTransmitBuffer()+0xc>
 80024fc:	e7f3      	b.n	80024e6 <Widget::SnifferFillTransmitBuffer()+0xa>
 80024fe:	f240 1401 	movw	r4, #257	; 0x101
 8002502:	e7f9      	b.n	80024f8 <Widget::SnifferFillTransmitBuffer()+0x1c>

08002504 <Widget::SendHeader(unsigned char, unsigned int)>:
 8002504:	b538      	push	{r3, r4, r5, lr}
 8002506:	460d      	mov	r5, r1
 8002508:	4614      	mov	r4, r2
 800250a:	207e      	movs	r0, #126	; 0x7e
 800250c:	f000 fded 	bl	80030ea <usb_send_byte>
 8002510:	4628      	mov	r0, r5
 8002512:	f000 fdea 	bl	80030ea <usb_send_byte>
 8002516:	b2e0      	uxtb	r0, r4
 8002518:	f000 fde7 	bl	80030ea <usb_send_byte>
 800251c:	f3c4 2007 	ubfx	r0, r4, #8, #8
 8002520:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002524:	f000 bde1 	b.w	80030ea <usb_send_byte>

08002528 <Widget::SendData(unsigned char const*, unsigned int)>:
 8002528:	b538      	push	{r3, r4, r5, lr}
 800252a:	460c      	mov	r4, r1
 800252c:	188d      	adds	r5, r1, r2
 800252e:	42ac      	cmp	r4, r5
 8002530:	d100      	bne.n	8002534 <Widget::SendData(unsigned char const*, unsigned int)+0xc>
 8002532:	bd38      	pop	{r3, r4, r5, pc}
 8002534:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002538:	f000 fdd7 	bl	80030ea <usb_send_byte>
 800253c:	e7f7      	b.n	800252e <Widget::SendData(unsigned char const*, unsigned int)+0x6>

0800253e <Widget::SendFooter()>:
 800253e:	20e7      	movs	r0, #231	; 0xe7
 8002540:	f000 bdd3 	b.w	80030ea <usb_send_byte>

08002544 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>:
 8002544:	b570      	push	{r4, r5, r6, lr}
 8002546:	461c      	mov	r4, r3
 8002548:	4605      	mov	r5, r0
 800254a:	4616      	mov	r6, r2
 800254c:	461a      	mov	r2, r3
 800254e:	f7ff ffd9 	bl	8002504 <Widget::SendHeader(unsigned char, unsigned int)>
 8002552:	4628      	mov	r0, r5
 8002554:	4622      	mov	r2, r4
 8002556:	4631      	mov	r1, r6
 8002558:	f7ff ffe6 	bl	8002528 <Widget::SendData(unsigned char const*, unsigned int)>
 800255c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002560:	20e7      	movs	r0, #231	; 0xe7
 8002562:	f000 bdc2 	b.w	80030ea <usb_send_byte>
	...

08002568 <StoreWidget::UpdateBreakTime(unsigned char)>:
 8002568:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800256a:	2301      	movs	r3, #1
 800256c:	2200      	movs	r2, #0
 800256e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002572:	4807      	ldr	r0, [pc, #28]	; (8002590 <StoreWidget::UpdateBreakTime(unsigned char)+0x28>)
 8002574:	9300      	str	r3, [sp, #0]
 8002576:	f88d 1017 	strb.w	r1, [sp, #23]
 800257a:	2204      	movs	r2, #4
 800257c:	210a      	movs	r1, #10
 800257e:	6800      	ldr	r0, [r0, #0]
 8002580:	f10d 0317 	add.w	r3, sp, #23
 8002584:	f001 f84a 	bl	800361c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8002588:	b007      	add	sp, #28
 800258a:	f85d fb04 	ldr.w	pc, [sp], #4
 800258e:	bf00      	nop
 8002590:	20001744 	andcs	r1, r0, r4, asr #14

08002594 <non-virtual thunk to StoreWidget::UpdateBreakTime(unsigned char)>:
 8002594:	f1a0 0004 	sub.w	r0, r0, #4
 8002598:	e7e6      	b.n	8002568 <StoreWidget::UpdateBreakTime(unsigned char)>
 800259a:	bf00      	nop

0800259c <StoreWidget::UpdateMabTime(unsigned char)>:
 800259c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800259e:	2302      	movs	r3, #2
 80025a0:	2200      	movs	r2, #0
 80025a2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80025a6:	2301      	movs	r3, #1
 80025a8:	4806      	ldr	r0, [pc, #24]	; (80025c4 <StoreWidget::UpdateMabTime(unsigned char)+0x28>)
 80025aa:	9300      	str	r3, [sp, #0]
 80025ac:	f88d 1017 	strb.w	r1, [sp, #23]
 80025b0:	2205      	movs	r2, #5
 80025b2:	210a      	movs	r1, #10
 80025b4:	6800      	ldr	r0, [r0, #0]
 80025b6:	f10d 0317 	add.w	r3, sp, #23
 80025ba:	f001 f82f 	bl	800361c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80025be:	b007      	add	sp, #28
 80025c0:	f85d fb04 	ldr.w	pc, [sp], #4
 80025c4:	20001744 	andcs	r1, r0, r4, asr #14

080025c8 <non-virtual thunk to StoreWidget::UpdateMabTime(unsigned char)>:
 80025c8:	f1a0 0004 	sub.w	r0, r0, #4
 80025cc:	e7e6      	b.n	800259c <StoreWidget::UpdateMabTime(unsigned char)>
 80025ce:	bf00      	nop

080025d0 <StoreWidget::UpdateRefreshRate(unsigned char)>:
 80025d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80025d2:	2304      	movs	r3, #4
 80025d4:	2200      	movs	r2, #0
 80025d6:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80025da:	2301      	movs	r3, #1
 80025dc:	4806      	ldr	r0, [pc, #24]	; (80025f8 <StoreWidget::UpdateRefreshRate(unsigned char)+0x28>)
 80025de:	9300      	str	r3, [sp, #0]
 80025e0:	f88d 1017 	strb.w	r1, [sp, #23]
 80025e4:	2206      	movs	r2, #6
 80025e6:	210a      	movs	r1, #10
 80025e8:	6800      	ldr	r0, [r0, #0]
 80025ea:	f10d 0317 	add.w	r3, sp, #23
 80025ee:	f001 f815 	bl	800361c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80025f2:	b007      	add	sp, #28
 80025f4:	f85d fb04 	ldr.w	pc, [sp], #4
 80025f8:	20001744 	andcs	r1, r0, r4, asr #14

080025fc <non-virtual thunk to StoreWidget::UpdateRefreshRate(unsigned char)>:
 80025fc:	f1a0 0004 	sub.w	r0, r0, #4
 8002600:	e7e6      	b.n	80025d0 <StoreWidget::UpdateRefreshRate(unsigned char)>
 8002602:	bf00      	nop
 8002604:	0000      	movs	r0, r0
	...

08002608 <WidgetConfiguration::Store(TWidgetConfiguration const*)>:
 8002608:	b510      	push	{r4, lr}
 800260a:	4b25      	ldr	r3, [pc, #148]	; (80026a0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x98>)
 800260c:	4604      	mov	r4, r0
 800260e:	781a      	ldrb	r2, [r3, #0]
 8002610:	7880      	ldrb	r0, [r0, #2]
 8002612:	4282      	cmp	r2, r0
 8002614:	d013      	beq.n	800263e <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x36>
 8002616:	7018      	strb	r0, [r3, #0]
 8002618:	f7fe f9b4 	bl	8000984 <__aeabi_i2d>
 800261c:	a31e      	add	r3, pc, #120	; (adr r3, 8002698 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x90>)
 800261e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002622:	f7fe fa19 	bl	8000a58 <__aeabi_dmul>
 8002626:	f7fe fc29 	bl	8000e7c <__aeabi_d2uiz>
 800262a:	4b1e      	ldr	r3, [pc, #120]	; (80026a4 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>)
 800262c:	4601      	mov	r1, r0
 800262e:	6818      	ldr	r0, [r3, #0]
 8002630:	f000 fc8c 	bl	8002f4c <Dmx::SetDmxBreakTime(unsigned int)>
 8002634:	4b1c      	ldr	r3, [pc, #112]	; (80026a8 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 8002636:	78a1      	ldrb	r1, [r4, #2]
 8002638:	6818      	ldr	r0, [r3, #0]
 800263a:	f7ff ff95 	bl	8002568 <StoreWidget::UpdateBreakTime(unsigned char)>
 800263e:	4b1b      	ldr	r3, [pc, #108]	; (80026ac <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa4>)
 8002640:	78e0      	ldrb	r0, [r4, #3]
 8002642:	781a      	ldrb	r2, [r3, #0]
 8002644:	4282      	cmp	r2, r0
 8002646:	d013      	beq.n	8002670 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x68>
 8002648:	7018      	strb	r0, [r3, #0]
 800264a:	f7fe f99b 	bl	8000984 <__aeabi_i2d>
 800264e:	a312      	add	r3, pc, #72	; (adr r3, 8002698 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x90>)
 8002650:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002654:	f7fe fa00 	bl	8000a58 <__aeabi_dmul>
 8002658:	f7fe fc10 	bl	8000e7c <__aeabi_d2uiz>
 800265c:	4b11      	ldr	r3, [pc, #68]	; (80026a4 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>)
 800265e:	4601      	mov	r1, r0
 8002660:	6818      	ldr	r0, [r3, #0]
 8002662:	f000 fc7d 	bl	8002f60 <Dmx::SetDmxMabTime(unsigned int)>
 8002666:	4b10      	ldr	r3, [pc, #64]	; (80026a8 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 8002668:	78e1      	ldrb	r1, [r4, #3]
 800266a:	6818      	ldr	r0, [r3, #0]
 800266c:	f7ff ff96 	bl	800259c <StoreWidget::UpdateMabTime(unsigned char)>
 8002670:	4b0f      	ldr	r3, [pc, #60]	; (80026b0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa8>)
 8002672:	7921      	ldrb	r1, [r4, #4]
 8002674:	781a      	ldrb	r2, [r3, #0]
 8002676:	428a      	cmp	r2, r1
 8002678:	d00d      	beq.n	8002696 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x8e>
 800267a:	7019      	strb	r1, [r3, #0]
 800267c:	4b09      	ldr	r3, [pc, #36]	; (80026a4 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>)
 800267e:	6818      	ldr	r0, [r3, #0]
 8002680:	b111      	cbz	r1, 8002688 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x80>
 8002682:	4b0c      	ldr	r3, [pc, #48]	; (80026b4 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xac>)
 8002684:	fbb3 f1f1 	udiv	r1, r3, r1
 8002688:	f000 fc30 	bl	8002eec <Dmx::SetDmxPeriodTime(unsigned int)>
 800268c:	4b06      	ldr	r3, [pc, #24]	; (80026a8 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 800268e:	7921      	ldrb	r1, [r4, #4]
 8002690:	6818      	ldr	r0, [r3, #0]
 8002692:	f7ff ff9d 	bl	80025d0 <StoreWidget::UpdateRefreshRate(unsigned char)>
 8002696:	bd10      	pop	{r4, pc}
 8002698:	3d70a3d7 	ldclcc	3, cr10, [r0, #-860]!	; 0xfffffca4
 800269c:	4025570a 	eormi	r5, r5, sl, lsl #14
 80026a0:	20000001 	andcs	r0, r0, r1
 80026a4:	20000728 	andcs	r0, r0, r8, lsr #14
 80026a8:	20001750 	andcs	r1, r0, r0, asr r7
 80026ac:	20000000 	andcs	r0, r0, r0
 80026b0:	20000004 	andcs	r0, r0, r4
 80026b4:	000f4240 	andeq	r4, pc, r0, asr #4

080026b8 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>:
 80026b8:	4770      	bx	lr
	...

080026bc <Rdm::Receive(unsigned int)>:
 80026bc:	4b02      	ldr	r3, [pc, #8]	; (80026c8 <Rdm::Receive(unsigned int)+0xc>)
 80026be:	4601      	mov	r1, r0
 80026c0:	6818      	ldr	r0, [r3, #0]
 80026c2:	f000 bcf7 	b.w	80030b4 <Dmx::RdmReceive(unsigned int)>
 80026c6:	bf00      	nop
 80026c8:	20000728 	andcs	r0, r0, r8, lsr #14

080026cc <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>:
 80026cc:	2300      	movs	r3, #0
 80026ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80026d2:	4604      	mov	r4, r0
 80026d4:	460e      	mov	r6, r1
 80026d6:	4617      	mov	r7, r2
 80026d8:	4d0b      	ldr	r5, [pc, #44]	; (8002708 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)+0x3c>)
 80026da:	461a      	mov	r2, r3
 80026dc:	4601      	mov	r1, r0
 80026de:	6828      	ldr	r0, [r5, #0]
 80026e0:	f000 faf8 	bl	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80026e4:	463b      	mov	r3, r7
 80026e6:	4632      	mov	r2, r6
 80026e8:	4621      	mov	r1, r4
 80026ea:	6828      	ldr	r0, [r5, #0]
 80026ec:	f000 fc9c 	bl	8003028 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>
 80026f0:	2100      	movs	r1, #0
 80026f2:	2004      	movs	r0, #4
 80026f4:	f002 fe96 	bl	8005424 <udelay(unsigned int, unsigned int)>
 80026f8:	2301      	movs	r3, #1
 80026fa:	4621      	mov	r1, r4
 80026fc:	6828      	ldr	r0, [r5, #0]
 80026fe:	461a      	mov	r2, r3
 8002700:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002704:	f000 bae6 	b.w	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8002708:	20000728 	andcs	r0, r0, r8, lsr #14

0800270c <USART2_IRQHandler>:
 800270c:	b510      	push	{r4, lr}
 800270e:	f3bf 8f5f 	dmb	sy
 8002712:	2408      	movs	r4, #8
 8002714:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 8002718:	498c      	ldr	r1, [pc, #560]	; (800294c <USART2_IRQHandler+0x240>)
 800271a:	f8c1 4c10 	str.w	r4, [r1, #3088]	; 0xc10
 800271e:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 8002722:	f013 0f02 	tst.w	r3, #2
 8002726:	4b8a      	ldr	r3, [pc, #552]	; (8002950 <USART2_IRQHandler+0x244>)
 8002728:	d016      	beq.n	8002758 <USART2_IRQHandler+0x4c>
 800272a:	f8d2 0800 	ldr.w	r0, [r2, #2048]	; 0x800
 800272e:	f020 0002 	bic.w	r0, r0, #2
 8002732:	f8c2 0800 	str.w	r0, [r2, #2048]	; 0x800
 8002736:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 800273a:	2200      	movs	r2, #0
 800273c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8002740:	2202      	movs	r2, #2
 8002742:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002746:	2310      	movs	r3, #16
 8002748:	f8c1 4c14 	str.w	r4, [r1, #3092]	; 0xc14
 800274c:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 8002750:	2320      	movs	r3, #32
 8002752:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 8002756:	bd10      	pop	{r4, pc}
 8002758:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 800275c:	f8d3 020c 	ldr.w	r0, [r3, #524]	; 0x20c
 8002760:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002764:	280a      	cmp	r0, #10
 8002766:	f200 80ec 	bhi.w	8002942 <USART2_IRQHandler+0x236>
 800276a:	e8df f010 	tbh	[pc, r0, lsl #1]
 800276e:	00ea000b 	rsceq	r0, sl, fp
 8002772:	00ea0019 	rsceq	r0, sl, r9, lsl r0
 8002776:	005c0039 	subseq	r0, ip, r9, lsr r0
 800277a:	00870077 	addeq	r0, r7, r7, ror r0
 800277e:	00ba00a8 	adcseq	r0, sl, r8, lsr #1
 8002782:	210800ce 	smlabtcs	r8, lr, r0, r0
 8002786:	701a      	strb	r2, [r3, #0]
 8002788:	2201      	movs	r2, #1
 800278a:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 800278e:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8002792:	2208      	movs	r2, #8
 8002794:	4b6d      	ldr	r3, [pc, #436]	; (800294c <USART2_IRQHandler+0x240>)
 8002796:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800279a:	f3bf 8f5f 	dmb	sy
 800279e:	e7da      	b.n	8002756 <USART2_IRQHandler+0x4a>
 80027a0:	b11a      	cbz	r2, 80027aa <USART2_IRQHandler+0x9e>
 80027a2:	2acc      	cmp	r2, #204	; 0xcc
 80027a4:	d016      	beq.n	80027d4 <USART2_IRQHandler+0xc8>
 80027a6:	2200      	movs	r2, #0
 80027a8:	e065      	b.n	8002876 <USART2_IRQHandler+0x16a>
 80027aa:	701a      	strb	r2, [r3, #0]
 80027ac:	2201      	movs	r2, #1
 80027ae:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80027b2:	4a68      	ldr	r2, [pc, #416]	; (8002954 <USART2_IRQHandler+0x248>)
 80027b4:	6851      	ldr	r1, [r2, #4]
 80027b6:	3101      	adds	r1, #1
 80027b8:	6051      	str	r1, [r2, #4]
 80027ba:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80027be:	f8d1 1424 	ldr.w	r1, [r1, #1060]	; 0x424
 80027c2:	60d1      	str	r1, [r2, #12]
 80027c4:	2204      	movs	r2, #4
 80027c6:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 80027ca:	2210      	movs	r2, #16
 80027cc:	4b5f      	ldr	r3, [pc, #380]	; (800294c <USART2_IRQHandler+0x240>)
 80027ce:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 80027d2:	e7de      	b.n	8002792 <USART2_IRQHandler+0x86>
 80027d4:	701a      	strb	r2, [r3, #0]
 80027d6:	4a60      	ldr	r2, [pc, #384]	; (8002958 <USART2_IRQHandler+0x24c>)
 80027d8:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80027dc:	2205      	movs	r2, #5
 80027de:	e7f2      	b.n	80027c6 <USART2_IRQHandler+0xba>
 80027e0:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 80027e4:	b288      	uxth	r0, r1
 80027e6:	541a      	strb	r2, [r3, r0]
 80027e8:	1c4a      	adds	r2, r1, #1
 80027ea:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 80027ee:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80027f2:	d90b      	bls.n	800280c <USART2_IRQHandler+0x100>
 80027f4:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80027f8:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80027fc:	2200      	movs	r2, #0
 80027fe:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002802:	2210      	movs	r2, #16
 8002804:	4b51      	ldr	r3, [pc, #324]	; (800294c <USART2_IRQHandler+0x240>)
 8002806:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800280a:	e7c2      	b.n	8002792 <USART2_IRQHandler+0x86>
 800280c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002810:	4850      	ldr	r0, [pc, #320]	; (8002954 <USART2_IRQHandler+0x248>)
 8002812:	f8d2 1424 	ldr.w	r1, [r2, #1060]	; 0x424
 8002816:	68c3      	ldr	r3, [r0, #12]
 8002818:	60c1      	str	r1, [r0, #12]
 800281a:	ebc3 0341 	rsb	r3, r3, r1, lsl #1
 800281e:	3304      	adds	r3, #4
 8002820:	f8c2 3434 	str.w	r3, [r2, #1076]	; 0x434
 8002824:	e7b5      	b.n	8002792 <USART2_IRQHandler+0x86>
 8002826:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 800282a:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 800282e:	541a      	strb	r2, [r3, r0]
 8002830:	1c41      	adds	r1, r0, #1
 8002832:	3817      	subs	r0, #23
 8002834:	b289      	uxth	r1, r1
 8002836:	4422      	add	r2, r4
 8002838:	28e7      	cmp	r0, #231	; 0xe7
 800283a:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 800283e:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8002842:	d808      	bhi.n	8002856 <USART2_IRQHandler+0x14a>
 8002844:	789a      	ldrb	r2, [r3, #2]
 8002846:	428a      	cmp	r2, r1
 8002848:	d105      	bne.n	8002856 <USART2_IRQHandler+0x14a>
 800284a:	2206      	movs	r2, #6
 800284c:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002850:	2220      	movs	r2, #32
 8002852:	4b3e      	ldr	r3, [pc, #248]	; (800294c <USART2_IRQHandler+0x240>)
 8002854:	e7bb      	b.n	80027ce <USART2_IRQHandler+0xc2>
 8002856:	29ff      	cmp	r1, #255	; 0xff
 8002858:	d99b      	bls.n	8002792 <USART2_IRQHandler+0x86>
 800285a:	e7a4      	b.n	80027a6 <USART2_IRQHandler+0x9a>
 800285c:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8002860:	545a      	strb	r2, [r3, r1]
 8002862:	3101      	adds	r1, #1
 8002864:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8002868:	f8b3 1206 	ldrh.w	r1, [r3, #518]	; 0x206
 800286c:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 8002870:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8002874:	2207      	movs	r2, #7
 8002876:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800287a:	e78a      	b.n	8002792 <USART2_IRQHandler+0x86>
 800287c:	2020      	movs	r0, #32
 800287e:	f8c1 0c14 	str.w	r0, [r1, #3092]	; 0xc14
 8002882:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 8002886:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 800288a:	541a      	strb	r2, [r3, r0]
 800288c:	1aa2      	subs	r2, r4, r2
 800288e:	b292      	uxth	r2, r2
 8002890:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8002894:	b912      	cbnz	r2, 800289c <USART2_IRQHandler+0x190>
 8002896:	785a      	ldrb	r2, [r3, #1]
 8002898:	2a01      	cmp	r2, #1
 800289a:	d003      	beq.n	80028a4 <USART2_IRQHandler+0x198>
 800289c:	2200      	movs	r2, #0
 800289e:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80028a2:	e780      	b.n	80027a6 <USART2_IRQHandler+0x9a>
 80028a4:	3001      	adds	r0, #1
 80028a6:	4a2d      	ldr	r2, [pc, #180]	; (800295c <USART2_IRQHandler+0x250>)
 80028a8:	f440 4080 	orr.w	r0, r0, #16384	; 0x4000
 80028ac:	f8a3 0204 	strh.w	r0, [r3, #516]	; 0x204
 80028b0:	6850      	ldr	r0, [r2, #4]
 80028b2:	4a2b      	ldr	r2, [pc, #172]	; (8002960 <USART2_IRQHandler+0x254>)
 80028b4:	6010      	str	r0, [r2, #0]
 80028b6:	2210      	movs	r2, #16
 80028b8:	f8c1 2c14 	str.w	r2, [r1, #3092]	; 0xc14
 80028bc:	e773      	b.n	80027a6 <USART2_IRQHandler+0x9a>
 80028be:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 80028c2:	2aaa      	cmp	r2, #170	; 0xaa
 80028c4:	545a      	strb	r2, [r3, r1]
 80028c6:	f101 0101 	add.w	r1, r1, #1
 80028ca:	b289      	uxth	r1, r1
 80028cc:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 80028d0:	d002      	beq.n	80028d8 <USART2_IRQHandler+0x1cc>
 80028d2:	2909      	cmp	r1, #9
 80028d4:	f47f af5d 	bne.w	8002792 <USART2_IRQHandler+0x86>
 80028d8:	2200      	movs	r2, #0
 80028da:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 80028de:	2209      	movs	r2, #9
 80028e0:	e7c9      	b.n	8002876 <USART2_IRQHandler+0x16a>
 80028e2:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 80028e6:	545a      	strb	r2, [r3, r1]
 80028e8:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 80028ec:	3101      	adds	r1, #1
 80028ee:	3201      	adds	r2, #1
 80028f0:	b292      	uxth	r2, r2
 80028f2:	2a0c      	cmp	r2, #12
 80028f4:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 80028f8:	d002      	beq.n	8002900 <USART2_IRQHandler+0x1f4>
 80028fa:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 80028fe:	e748      	b.n	8002792 <USART2_IRQHandler+0x86>
 8002900:	2200      	movs	r2, #0
 8002902:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8002906:	220a      	movs	r2, #10
 8002908:	e7b5      	b.n	8002876 <USART2_IRQHandler+0x16a>
 800290a:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 800290e:	545a      	strb	r2, [r3, r1]
 8002910:	1c4a      	adds	r2, r1, #1
 8002912:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 8002916:	b292      	uxth	r2, r2
 8002918:	3101      	adds	r1, #1
 800291a:	b289      	uxth	r1, r1
 800291c:	2904      	cmp	r1, #4
 800291e:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8002922:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 8002926:	f47f af34 	bne.w	8002792 <USART2_IRQHandler+0x86>
 800292a:	2100      	movs	r1, #0
 800292c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002930:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8002934:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8002938:	4b08      	ldr	r3, [pc, #32]	; (800295c <USART2_IRQHandler+0x250>)
 800293a:	685a      	ldr	r2, [r3, #4]
 800293c:	4b08      	ldr	r3, [pc, #32]	; (8002960 <USART2_IRQHandler+0x254>)
 800293e:	601a      	str	r2, [r3, #0]
 8002940:	e727      	b.n	8002792 <USART2_IRQHandler+0x86>
 8002942:	2200      	movs	r2, #0
 8002944:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8002948:	e795      	b.n	8002876 <USART2_IRQHandler+0x16a>
 800294a:	bf00      	nop
 800294c:	40010000 	andmi	r0, r1, r0
 8002950:	200000f8 	strdcs	r0, [r0], -r8
 8002954:	20000714 	andcs	r0, r0, r4, lsl r7
 8002958:	00cc0001 	sbceq	r0, ip, r1
 800295c:	e0001000 	and	r1, r0, r0
 8002960:	2000072c 	andcs	r0, r0, ip, lsr #14

08002964 <TIMER1_IRQHandler>:
 8002964:	b538      	push	{r3, r4, r5, lr}
 8002966:	f3bf 8f5f 	dmb	sy
 800296a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800296e:	2008      	movs	r0, #8
 8002970:	4a24      	ldr	r2, [pc, #144]	; (8002a04 <TIMER1_IRQHandler+0xa0>)
 8002972:	691c      	ldr	r4, [r3, #16]
 8002974:	4924      	ldr	r1, [pc, #144]	; (8002a08 <TIMER1_IRQHandler+0xa4>)
 8002976:	8813      	ldrh	r3, [r2, #0]
 8002978:	f8c1 0c10 	str.w	r0, [r1, #3088]	; 0xc10
 800297c:	07a1      	lsls	r1, r4, #30
 800297e:	b29b      	uxth	r3, r3
 8002980:	d51d      	bpl.n	80029be <TIMER1_IRQHandler+0x5a>
 8002982:	07dd      	lsls	r5, r3, #31
 8002984:	d50f      	bpl.n	80029a6 <TIMER1_IRQHandler+0x42>
 8002986:	8813      	ldrh	r3, [r2, #0]
 8002988:	4d20      	ldr	r5, [pc, #128]	; (8002a0c <TIMER1_IRQHandler+0xa8>)
 800298a:	b29b      	uxth	r3, r3
 800298c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002990:	8013      	strh	r3, [r2, #0]
 8002992:	2110      	movs	r1, #16
 8002994:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002998:	2203      	movs	r2, #3
 800299a:	4628      	mov	r0, r5
 800299c:	f001 ff9a 	bl	80048d4 <gpio_init>
 80029a0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80029a4:	616b      	str	r3, [r5, #20]
 80029a6:	4621      	mov	r1, r4
 80029a8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80029ac:	f002 f9c1 	bl	8004d32 <timer_interrupt_flag_clear>
 80029b0:	2208      	movs	r2, #8
 80029b2:	4b15      	ldr	r3, [pc, #84]	; (8002a08 <TIMER1_IRQHandler+0xa4>)
 80029b4:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80029b8:	f3bf 8f5f 	dmb	sy
 80029bc:	bd38      	pop	{r3, r4, r5, pc}
 80029be:	0760      	lsls	r0, r4, #29
 80029c0:	d509      	bpl.n	80029d6 <TIMER1_IRQHandler+0x72>
 80029c2:	05d9      	lsls	r1, r3, #23
 80029c4:	d5ef      	bpl.n	80029a6 <TIMER1_IRQHandler+0x42>
 80029c6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80029ca:	2203      	movs	r2, #3
 80029cc:	2118      	movs	r1, #24
 80029ce:	480f      	ldr	r0, [pc, #60]	; (8002a0c <TIMER1_IRQHandler+0xa8>)
 80029d0:	f001 ff80 	bl	80048d4 <gpio_init>
 80029d4:	e7e7      	b.n	80029a6 <TIMER1_IRQHandler+0x42>
 80029d6:	0722      	lsls	r2, r4, #28
 80029d8:	d5e5      	bpl.n	80029a6 <TIMER1_IRQHandler+0x42>
 80029da:	05db      	lsls	r3, r3, #23
 80029dc:	d5e3      	bpl.n	80029a6 <TIMER1_IRQHandler+0x42>
 80029de:	4b0c      	ldr	r3, [pc, #48]	; (8002a10 <TIMER1_IRQHandler+0xac>)
 80029e0:	2180      	movs	r1, #128	; 0x80
 80029e2:	69da      	ldr	r2, [r3, #28]
 80029e4:	480b      	ldr	r0, [pc, #44]	; (8002a14 <TIMER1_IRQHandler+0xb0>)
 80029e6:	f022 0201 	bic.w	r2, r2, #1
 80029ea:	61da      	str	r2, [r3, #28]
 80029ec:	4a0a      	ldr	r2, [pc, #40]	; (8002a18 <TIMER1_IRQHandler+0xb4>)
 80029ee:	629a      	str	r2, [r3, #40]	; 0x28
 80029f0:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 80029f4:	621a      	str	r2, [r3, #32]
 80029f6:	69da      	ldr	r2, [r3, #28]
 80029f8:	f042 0201 	orr.w	r2, r2, #1
 80029fc:	61da      	str	r2, [r3, #28]
 80029fe:	f002 fa37 	bl	8004e70 <usart_dma_transmit_config>
 8002a02:	e7d0      	b.n	80029a6 <TIMER1_IRQHandler+0x42>
 8002a04:	20000724 	andcs	r0, r0, r4, lsr #14
 8002a08:	40010000 	andmi	r0, r1, r0
 8002a0c:	40011000 	andmi	r1, r1, r0
 8002a10:	40020000 	andmi	r0, r2, r0
 8002a14:	40004800 	andmi	r4, r0, r0, lsl #16
 8002a18:	20000308 	andcs	r0, r0, r8, lsl #6

08002a1c <TIMER2_IRQHandler>:
 8002a1c:	b508      	push	{r3, lr}
 8002a1e:	f3bf 8f5f 	dmb	sy
 8002a22:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002a26:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 8002a2a:	078b      	lsls	r3, r1, #30
 8002a2c:	d511      	bpl.n	8002a52 <TIMER2_IRQHandler+0x36>
 8002a2e:	4b0c      	ldr	r3, [pc, #48]	; (8002a60 <TIMER2_IRQHandler+0x44>)
 8002a30:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8002a34:	2a04      	cmp	r2, #4
 8002a36:	d10c      	bne.n	8002a52 <TIMER2_IRQHandler+0x36>
 8002a38:	2200      	movs	r2, #0
 8002a3a:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002a3e:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8002a42:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002a46:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8002a4a:	2210      	movs	r2, #16
 8002a4c:	4b05      	ldr	r3, [pc, #20]	; (8002a64 <TIMER2_IRQHandler+0x48>)
 8002a4e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8002a52:	4805      	ldr	r0, [pc, #20]	; (8002a68 <TIMER2_IRQHandler+0x4c>)
 8002a54:	f002 f96d 	bl	8004d32 <timer_interrupt_flag_clear>
 8002a58:	f3bf 8f5f 	dmb	sy
 8002a5c:	bd08      	pop	{r3, pc}
 8002a5e:	bf00      	nop
 8002a60:	200000f8 	strdcs	r0, [r0], -r8
 8002a64:	40010000 	andmi	r0, r1, r0
 8002a68:	40000400 	andmi	r0, r0, r0, lsl #8

08002a6c <TIMER3_IRQHandler>:
 8002a6c:	b508      	push	{r3, lr}
 8002a6e:	f3bf 8f5f 	dmb	sy
 8002a72:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002a76:	4804      	ldr	r0, [pc, #16]	; (8002a88 <TIMER3_IRQHandler+0x1c>)
 8002a78:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 8002a7c:	f002 f959 	bl	8004d32 <timer_interrupt_flag_clear>
 8002a80:	f3bf 8f5f 	dmb	sy
 8002a84:	bd08      	pop	{r3, pc}
 8002a86:	bf00      	nop
 8002a88:	40000800 	andmi	r0, r0, r0, lsl #16

08002a8c <TIMER6_IRQHandler>:
 8002a8c:	b508      	push	{r3, lr}
 8002a8e:	f3bf 8f5f 	dmb	sy
 8002a92:	4b07      	ldr	r3, [pc, #28]	; (8002ab0 <TIMER6_IRQHandler+0x24>)
 8002a94:	4807      	ldr	r0, [pc, #28]	; (8002ab4 <TIMER6_IRQHandler+0x28>)
 8002a96:	685a      	ldr	r2, [r3, #4]
 8002a98:	6899      	ldr	r1, [r3, #8]
 8002a9a:	1a52      	subs	r2, r2, r1
 8002a9c:	601a      	str	r2, [r3, #0]
 8002a9e:	685a      	ldr	r2, [r3, #4]
 8002aa0:	2101      	movs	r1, #1
 8002aa2:	609a      	str	r2, [r3, #8]
 8002aa4:	f002 f945 	bl	8004d32 <timer_interrupt_flag_clear>
 8002aa8:	f3bf 8f5f 	dmb	sy
 8002aac:	bd08      	pop	{r3, pc}
 8002aae:	bf00      	nop
 8002ab0:	20000714 	andcs	r0, r0, r4, lsl r7
 8002ab4:	40001400 	andmi	r1, r0, r0, lsl #8

08002ab8 <Dmx::ClearData(unsigned int)>:
 8002ab8:	f44f 7301 	mov.w	r3, #516	; 0x204
 8002abc:	b510      	push	{r4, lr}
 8002abe:	2400      	movs	r4, #0
 8002ac0:	4a08      	ldr	r2, [pc, #32]	; (8002ae4 <Dmx::ClearData(unsigned int)+0x2c>)
 8002ac2:	fb03 2301 	mla	r3, r3, r1, r2
 8002ac6:	f203 2002 	addw	r0, r3, #514	; 0x202
 8002aca:	f823 4b02 	strh.w	r4, [r3], #2
 8002ace:	4283      	cmp	r3, r0
 8002ad0:	d1fb      	bne.n	8002aca <Dmx::ClearData(unsigned int)+0x12>
 8002ad2:	f44f 7301 	mov.w	r3, #516	; 0x204
 8002ad6:	fb03 2201 	mla	r2, r3, r1, r2
 8002ada:	f240 2301 	movw	r3, #513	; 0x201
 8002ade:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 8002ae2:	bd10      	pop	{r4, pc}
 8002ae4:	20000308 	andcs	r0, r0, r8, lsl #6

08002ae8 <Dmx::StartData(unsigned int, unsigned int)>:
 8002ae8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002aea:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8002aee:	6943      	ldr	r3, [r0, #20]
 8002af0:	460c      	mov	r4, r1
 8002af2:	4615      	mov	r5, r2
 8002af4:	b085      	sub	sp, #20
 8002af6:	2b00      	cmp	r3, #0
 8002af8:	d16c      	bne.n	8002bd4 <Dmx::StartData(unsigned int, unsigned int)+0xec>
 8002afa:	4e48      	ldr	r6, [pc, #288]	; (8002c1c <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 8002afc:	8834      	ldrh	r4, [r6, #0]
 8002afe:	b2a4      	uxth	r4, r4
 8002b00:	2c00      	cmp	r4, #0
 8002b02:	d15b      	bne.n	8002bbc <Dmx::StartData(unsigned int, unsigned int)+0xd4>
 8002b04:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 8002b08:	f001 ff76 	bl	80049f8 <rcu_periph_clock_enable>
 8002b0c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002b10:	f002 f818 	bl	8004b44 <timer_deinit>
 8002b14:	236b      	movs	r3, #107	; 0x6b
 8002b16:	9300      	str	r3, [sp, #0]
 8002b18:	4b41      	ldr	r3, [pc, #260]	; (8002c20 <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 8002b1a:	4669      	mov	r1, sp
 8002b1c:	681b      	ldr	r3, [r3, #0]
 8002b1e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002b22:	9302      	str	r3, [sp, #8]
 8002b24:	f8ad 4004 	strh.w	r4, [sp, #4]
 8002b28:	f8ad 400c 	strh.w	r4, [sp, #12]
 8002b2c:	f88d 400e 	strb.w	r4, [sp, #14]
 8002b30:	f002 f86a 	bl	8004c08 <timer_init>
 8002b34:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002b38:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002b3c:	f002 f8fc 	bl	8004d38 <timer_flag_clear>
 8002b40:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002b44:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002b48:	f002 f8f3 	bl	8004d32 <timer_interrupt_flag_clear>
 8002b4c:	2210      	movs	r2, #16
 8002b4e:	4621      	mov	r1, r4
 8002b50:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002b54:	f002 f8b5 	bl	8004cc2 <timer_channel_output_mode_config>
 8002b58:	2210      	movs	r2, #16
 8002b5a:	2101      	movs	r1, #1
 8002b5c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002b60:	f002 f8af 	bl	8004cc2 <timer_channel_output_mode_config>
 8002b64:	4f2f      	ldr	r7, [pc, #188]	; (8002c24 <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 8002b66:	2210      	movs	r2, #16
 8002b68:	2102      	movs	r1, #2
 8002b6a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002b6e:	f002 f8a8 	bl	8004cc2 <timer_channel_output_mode_config>
 8002b72:	4622      	mov	r2, r4
 8002b74:	4621      	mov	r1, r4
 8002b76:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002b7a:	f002 f8c8 	bl	8004d0e <timer_channel_output_pulse_value_config>
 8002b7e:	2101      	movs	r1, #1
 8002b80:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002b84:	883a      	ldrh	r2, [r7, #0]
 8002b86:	f002 f8c2 	bl	8004d0e <timer_channel_output_pulse_value_config>
 8002b8a:	4b27      	ldr	r3, [pc, #156]	; (8002c28 <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 8002b8c:	683a      	ldr	r2, [r7, #0]
 8002b8e:	681b      	ldr	r3, [r3, #0]
 8002b90:	2102      	movs	r1, #2
 8002b92:	441a      	add	r2, r3
 8002b94:	b292      	uxth	r2, r2
 8002b96:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002b9a:	f002 f8b8 	bl	8004d0e <timer_channel_output_pulse_value_config>
 8002b9e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002ba2:	210e      	movs	r1, #14
 8002ba4:	f002 f8c1 	bl	8004d2a <timer_interrupt_enable>
 8002ba8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002bac:	4b1f      	ldr	r3, [pc, #124]	; (8002c2c <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 8002bae:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002bb2:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 8002bb6:	601a      	str	r2, [r3, #0]
 8002bb8:	f002 f87e 	bl	8004cb8 <timer_enable>
 8002bbc:	2201      	movs	r2, #1
 8002bbe:	8831      	ldrh	r1, [r6, #0]
 8002bc0:	fa02 f305 	lsl.w	r3, r2, r5
 8002bc4:	430b      	orrs	r3, r1
 8002bc6:	b29b      	uxth	r3, r3
 8002bc8:	8033      	strh	r3, [r6, #0]
 8002bca:	4b19      	ldr	r3, [pc, #100]	; (8002c30 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 8002bcc:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8002bd0:	b005      	add	sp, #20
 8002bd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002bd4:	f44f 7204 	mov.w	r2, #528	; 0x210
 8002bd8:	4b16      	ldr	r3, [pc, #88]	; (8002c34 <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 8002bda:	fb02 3305 	mla	r3, r2, r5, r3
 8002bde:	2200      	movs	r2, #0
 8002be0:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002be4:	2107      	movs	r1, #7
 8002be6:	4620      	mov	r0, r4
 8002be8:	f002 f948 	bl	8004e7c <usart_flag_get>
 8002bec:	2800      	cmp	r0, #0
 8002bee:	d0f9      	beq.n	8002be4 <Dmx::StartData(unsigned int, unsigned int)+0xfc>
 8002bf0:	4620      	mov	r0, r4
 8002bf2:	4911      	ldr	r1, [pc, #68]	; (8002c38 <Dmx::StartData(unsigned int, unsigned int)+0x150>)
 8002bf4:	f002 f964 	bl	8004ec0 <usart_interrupt_flag_clear>
 8002bf8:	f240 3105 	movw	r1, #773	; 0x305
 8002bfc:	4620      	mov	r0, r4
 8002bfe:	f002 f948 	bl	8004e92 <usart_interrupt_enable>
 8002c02:	2202      	movs	r2, #2
 8002c04:	4b0a      	ldr	r3, [pc, #40]	; (8002c30 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 8002c06:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8002c0a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002c0e:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8002c12:	f043 0302 	orr.w	r3, r3, #2
 8002c16:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8002c1a:	e7d9      	b.n	8002bd0 <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 8002c1c:	20000724 	andcs	r0, r0, r4, lsr #14
 8002c20:	20000008 	andcs	r0, r0, r8
 8002c24:	20000010 	andcs	r0, r0, r0, lsl r0
 8002c28:	2000000c 	andcs	r0, r0, ip
 8002c2c:	e000e100 	and	lr, r0, r0, lsl #2
 8002c30:	2000050c 	andcs	r0, r0, ip, lsl #10
 8002c34:	200000f8 	strdcs	r0, [r0], -r8
 8002c38:	00050305 	andeq	r0, r5, r5, lsl #6

08002c3c <Dmx::StopData(unsigned int, unsigned int)>:
 8002c3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002c40:	4f21      	ldr	r7, [pc, #132]	; (8002cc8 <Dmx::StopData(unsigned int, unsigned int)+0x8c>)
 8002c42:	4688      	mov	r8, r1
 8002c44:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
 8002c48:	4614      	mov	r4, r2
 8002c4a:	b323      	cbz	r3, 8002c96 <Dmx::StopData(unsigned int, unsigned int)+0x5a>
 8002c4c:	6943      	ldr	r3, [r0, #20]
 8002c4e:	bb23      	cbnz	r3, 8002c9a <Dmx::StopData(unsigned int, unsigned int)+0x5e>
 8002c50:	2601      	movs	r6, #1
 8002c52:	4d1e      	ldr	r5, [pc, #120]	; (8002ccc <Dmx::StopData(unsigned int, unsigned int)+0x90>)
 8002c54:	fa06 f202 	lsl.w	r2, r6, r2
 8002c58:	882b      	ldrh	r3, [r5, #0]
 8002c5a:	b29b      	uxth	r3, r3
 8002c5c:	ea23 0302 	bic.w	r3, r3, r2
 8002c60:	802b      	strh	r3, [r5, #0]
 8002c62:	f3bf 8f5f 	dmb	sy
 8002c66:	882b      	ldrh	r3, [r5, #0]
 8002c68:	f104 0208 	add.w	r2, r4, #8
 8002c6c:	b29b      	uxth	r3, r3
 8002c6e:	4096      	lsls	r6, r2
 8002c70:	ea36 0303 	bics.w	r3, r6, r3
 8002c74:	d105      	bne.n	8002c82 <Dmx::StopData(unsigned int, unsigned int)+0x46>
 8002c76:	2107      	movs	r1, #7
 8002c78:	4640      	mov	r0, r8
 8002c7a:	f002 f8ff 	bl	8004e7c <usart_flag_get>
 8002c7e:	2801      	cmp	r0, #1
 8002c80:	d1f9      	bne.n	8002c76 <Dmx::StopData(unsigned int, unsigned int)+0x3a>
 8002c82:	882b      	ldrh	r3, [r5, #0]
 8002c84:	b29b      	uxth	r3, r3
 8002c86:	ea23 0306 	bic.w	r3, r3, r6
 8002c8a:	802b      	strh	r3, [r5, #0]
 8002c8c:	f3bf 8f4f 	dsb	sy
 8002c90:	2300      	movs	r3, #0
 8002c92:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 8002c96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002c9a:	f240 3105 	movw	r1, #773	; 0x305
 8002c9e:	4640      	mov	r0, r8
 8002ca0:	f002 f902 	bl	8004ea8 <usart_interrupt_disable>
 8002ca4:	f44f 7204 	mov.w	r2, #528	; 0x210
 8002ca8:	4b09      	ldr	r3, [pc, #36]	; (8002cd0 <Dmx::StopData(unsigned int, unsigned int)+0x94>)
 8002caa:	fb02 3304 	mla	r3, r2, r4, r3
 8002cae:	2200      	movs	r2, #0
 8002cb0:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002cb4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002cb8:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8002cbc:	f023 0302 	bic.w	r3, r3, #2
 8002cc0:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8002cc4:	e7e4      	b.n	8002c90 <Dmx::StopData(unsigned int, unsigned int)+0x54>
 8002cc6:	bf00      	nop
 8002cc8:	2000050c 	andcs	r0, r0, ip, lsl #10
 8002ccc:	20000724 	andcs	r0, r0, r4, lsr #14
 8002cd0:	200000f8 	strdcs	r0, [r0], -r8

08002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 8002cd4:	b570      	push	{r4, r5, r6, lr}
 8002cd6:	461d      	mov	r5, r3
 8002cd8:	6943      	ldr	r3, [r0, #20]
 8002cda:	4606      	mov	r6, r0
 8002cdc:	4293      	cmp	r3, r2
 8002cde:	4614      	mov	r4, r2
 8002ce0:	d014      	beq.n	8002d0c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 8002ce2:	6142      	str	r2, [r0, #20]
 8002ce4:	4910      	ldr	r1, [pc, #64]	; (8002d28 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8002ce6:	2200      	movs	r2, #0
 8002ce8:	f7ff ffa8 	bl	8002c3c <Dmx::StopData(unsigned int, unsigned int)>
 8002cec:	b934      	cbnz	r4, 8002cfc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 8002cee:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002cf2:	4b0e      	ldr	r3, [pc, #56]	; (8002d2c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 8002cf4:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8002cf8:	b94d      	cbnz	r5, 8002d0e <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 8002cfa:	bd70      	pop	{r4, r5, r6, pc}
 8002cfc:	2c01      	cmp	r4, #1
 8002cfe:	d1fb      	bne.n	8002cf8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 8002d00:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002d04:	4b09      	ldr	r3, [pc, #36]	; (8002d2c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 8002d06:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8002d0a:	e7f5      	b.n	8002cf8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 8002d0c:	b135      	cbz	r5, 8002d1c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 8002d0e:	4630      	mov	r0, r6
 8002d10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002d14:	2200      	movs	r2, #0
 8002d16:	4904      	ldr	r1, [pc, #16]	; (8002d28 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8002d18:	f7ff bee6 	b.w	8002ae8 <Dmx::StartData(unsigned int, unsigned int)>
 8002d1c:	462a      	mov	r2, r5
 8002d1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002d22:	4901      	ldr	r1, [pc, #4]	; (8002d28 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8002d24:	f7ff bf8a 	b.w	8002c3c <Dmx::StopData(unsigned int, unsigned int)>
 8002d28:	40004800 	andmi	r4, r0, r0, lsl #16
 8002d2c:	40010000 	andmi	r0, r1, r0

08002d30 <Dmx::Dmx()>:
 8002d30:	225c      	movs	r2, #92	; 0x5c
 8002d32:	230c      	movs	r3, #12
 8002d34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002d38:	e9c0 2300 	strd	r2, r3, [r0]
 8002d3c:	f246 13a8 	movw	r3, #25000	; 0x61a8
 8002d40:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8002d44:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002d48:	2400      	movs	r4, #0
 8002d4a:	4605      	mov	r5, r0
 8002d4c:	8203      	strh	r3, [r0, #16]
 8002d4e:	4b5d      	ldr	r3, [pc, #372]	; (8002ec4 <Dmx::Dmx()+0x194>)
 8002d50:	b08b      	sub	sp, #44	; 0x2c
 8002d52:	6018      	str	r0, [r3, #0]
 8002d54:	4b5c      	ldr	r3, [pc, #368]	; (8002ec8 <Dmx::Dmx()+0x198>)
 8002d56:	2203      	movs	r2, #3
 8002d58:	801c      	strh	r4, [r3, #0]
 8002d5a:	2110      	movs	r1, #16
 8002d5c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002d60:	485a      	ldr	r0, [pc, #360]	; (8002ecc <Dmx::Dmx()+0x19c>)
 8002d62:	f001 fdb7 	bl	80048d4 <gpio_init>
 8002d66:	4621      	mov	r1, r4
 8002d68:	4628      	mov	r0, r5
 8002d6a:	f7ff fea5 	bl	8002ab8 <Dmx::ClearData(unsigned int)>
 8002d6e:	4b58      	ldr	r3, [pc, #352]	; (8002ed0 <Dmx::Dmx()+0x1a0>)
 8002d70:	2201      	movs	r2, #1
 8002d72:	4628      	mov	r0, r5
 8002d74:	601c      	str	r4, [r3, #0]
 8002d76:	4623      	mov	r3, r4
 8002d78:	f7ff ffac 	bl	8002cd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8002d7c:	4b55      	ldr	r3, [pc, #340]	; (8002ed4 <Dmx::Dmx()+0x1a4>)
 8002d7e:	4e56      	ldr	r6, [pc, #344]	; (8002ed8 <Dmx::Dmx()+0x1a8>)
 8002d80:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 8002d84:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8002d88:	f001 fe36 	bl	80049f8 <rcu_periph_clock_enable>
 8002d8c:	f240 5001 	movw	r0, #1281	; 0x501
 8002d90:	f001 fe32 	bl	80049f8 <rcu_periph_clock_enable>
 8002d94:	4630      	mov	r0, r6
 8002d96:	2101      	movs	r1, #1
 8002d98:	f001 fc9c 	bl	80046d4 <dma_deinit>
 8002d9c:	4b4f      	ldr	r3, [pc, #316]	; (8002edc <Dmx::Dmx()+0x1ac>)
 8002d9e:	2701      	movs	r7, #1
 8002da0:	e9cd 3403 	strd	r3, r4, [sp, #12]
 8002da4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002da8:	9308      	str	r3, [sp, #32]
 8002daa:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002dae:	aa03      	add	r2, sp, #12
 8002db0:	4639      	mov	r1, r7
 8002db2:	4630      	mov	r0, r6
 8002db4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002db8:	9406      	str	r4, [sp, #24]
 8002dba:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 8002dbe:	f001 fca5 	bl	800470c <dma_init>
 8002dc2:	4639      	mov	r1, r7
 8002dc4:	4630      	mov	r0, r6
 8002dc6:	f001 fcdb 	bl	8004780 <dma_circulation_disable>
 8002dca:	4639      	mov	r1, r7
 8002dcc:	4630      	mov	r0, r6
 8002dce:	f001 fce7 	bl	80047a0 <dma_memory_to_memory_disable>
 8002dd2:	f5a6 36fe 	sub.w	r6, r6, #130048	; 0x1fc00
 8002dd6:	f240 7001 	movw	r0, #1793	; 0x701
 8002dda:	f001 fe0d 	bl	80049f8 <rcu_periph_clock_enable>
 8002dde:	4630      	mov	r0, r6
 8002de0:	f001 feb0 	bl	8004b44 <timer_deinit>
 8002de4:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 8002de8:	236b      	movs	r3, #107	; 0x6b
 8002dea:	4630      	mov	r0, r6
 8002dec:	a903      	add	r1, sp, #12
 8002dee:	9303      	str	r3, [sp, #12]
 8002df0:	f8ad 4010 	strh.w	r4, [sp, #16]
 8002df4:	f8cd 9014 	str.w	r9, [sp, #20]
 8002df8:	f8ad 4018 	strh.w	r4, [sp, #24]
 8002dfc:	f88d 401a 	strb.w	r4, [sp, #26]
 8002e00:	f001 ff02 	bl	8004c08 <timer_init>
 8002e04:	4649      	mov	r1, r9
 8002e06:	4630      	mov	r0, r6
 8002e08:	f001 ff96 	bl	8004d38 <timer_flag_clear>
 8002e0c:	4649      	mov	r1, r9
 8002e0e:	4630      	mov	r0, r6
 8002e10:	f001 ff8f 	bl	8004d32 <timer_interrupt_flag_clear>
 8002e14:	4621      	mov	r1, r4
 8002e16:	4630      	mov	r0, r6
 8002e18:	2210      	movs	r2, #16
 8002e1a:	f001 ff52 	bl	8004cc2 <timer_channel_output_mode_config>
 8002e1e:	4639      	mov	r1, r7
 8002e20:	4630      	mov	r0, r6
 8002e22:	2210      	movs	r2, #16
 8002e24:	f001 ff4d 	bl	8004cc2 <timer_channel_output_mode_config>
 8002e28:	4630      	mov	r0, r6
 8002e2a:	2210      	movs	r2, #16
 8002e2c:	2102      	movs	r1, #2
 8002e2e:	f001 ff48 	bl	8004cc2 <timer_channel_output_mode_config>
 8002e32:	2210      	movs	r2, #16
 8002e34:	2103      	movs	r1, #3
 8002e36:	4630      	mov	r0, r6
 8002e38:	f001 ff43 	bl	8004cc2 <timer_channel_output_mode_config>
 8002e3c:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8002e40:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8002ee0 <Dmx::Dmx()+0x1b0>
 8002e44:	4630      	mov	r0, r6
 8002e46:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 8002e4a:	f8c8 3000 	str.w	r3, [r8]
 8002e4e:	f506 5680 	add.w	r6, r6, #4096	; 0x1000
 8002e52:	f001 ff31 	bl	8004cb8 <timer_enable>
 8002e56:	f240 7005 	movw	r0, #1797	; 0x705
 8002e5a:	f001 fdcd 	bl	80049f8 <rcu_periph_clock_enable>
 8002e5e:	4630      	mov	r0, r6
 8002e60:	f001 fe70 	bl	8004b44 <timer_deinit>
 8002e64:	f642 232f 	movw	r3, #10799	; 0x2a2f
 8002e68:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002e6c:	f242 7310 	movw	r3, #10000	; 0x2710
 8002e70:	4630      	mov	r0, r6
 8002e72:	a903      	add	r1, sp, #12
 8002e74:	9305      	str	r3, [sp, #20]
 8002e76:	f001 fec7 	bl	8004c08 <timer_init>
 8002e7a:	4649      	mov	r1, r9
 8002e7c:	4630      	mov	r0, r6
 8002e7e:	f001 ff5b 	bl	8004d38 <timer_flag_clear>
 8002e82:	4649      	mov	r1, r9
 8002e84:	4630      	mov	r0, r6
 8002e86:	f001 ff54 	bl	8004d32 <timer_interrupt_flag_clear>
 8002e8a:	4639      	mov	r1, r7
 8002e8c:	4630      	mov	r0, r6
 8002e8e:	f001 ff4c 	bl	8004d2a <timer_interrupt_enable>
 8002e92:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8002e96:	4630      	mov	r0, r6
 8002e98:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 8002e9c:	f8c8 3004 	str.w	r3, [r8, #4]
 8002ea0:	f001 ff0a 	bl	8004cb8 <timer_enable>
 8002ea4:	2302      	movs	r3, #2
 8002ea6:	2208      	movs	r2, #8
 8002ea8:	9300      	str	r3, [sp, #0]
 8002eaa:	490e      	ldr	r1, [pc, #56]	; (8002ee4 <Dmx::Dmx()+0x1b4>)
 8002eac:	4623      	mov	r3, r4
 8002eae:	480e      	ldr	r0, [pc, #56]	; (8002ee8 <Dmx::Dmx()+0x1b8>)
 8002eb0:	f002 f9b8 	bl	8005224 <gd32_uart_begin>
 8002eb4:	2380      	movs	r3, #128	; 0x80
 8002eb6:	4628      	mov	r0, r5
 8002eb8:	f8c8 3004 	str.w	r3, [r8, #4]
 8002ebc:	b00b      	add	sp, #44	; 0x2c
 8002ebe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002ec2:	bf00      	nop
 8002ec4:	20000728 	andcs	r0, r0, r8, lsr #14
 8002ec8:	20000724 	andcs	r0, r0, r4, lsr #14
 8002ecc:	40010c00 	andmi	r0, r1, r0, lsl #24
 8002ed0:	2000050c 	andcs	r0, r0, ip, lsl #10
 8002ed4:	200000f8 	strdcs	r0, [r0], -r8
 8002ed8:	40020000 	andmi	r0, r2, r0
 8002edc:	40004804 	andmi	r4, r0, r4, lsl #16
 8002ee0:	e000e100 	and	lr, r0, r0, lsl #2
 8002ee4:	0003d090 	muleq	r3, r0, r0
 8002ee8:	40004800 	andmi	r4, r0, r0, lsl #16

08002eec <Dmx::SetDmxPeriodTime(unsigned int)>:
 8002eec:	4b13      	ldr	r3, [pc, #76]	; (8002f3c <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 8002eee:	b570      	push	{r4, r5, r6, lr}
 8002ef0:	60c1      	str	r1, [r0, #12]
 8002ef2:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 8002ef6:	232c      	movs	r3, #44	; 0x2c
 8002ef8:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 8002efc:	4d10      	ldr	r5, [pc, #64]	; (8002f40 <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 8002efe:	4c11      	ldr	r4, [pc, #68]	; (8002f44 <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 8002f00:	4358      	muls	r0, r3
 8002f02:	682a      	ldr	r2, [r5, #0]
 8002f04:	6823      	ldr	r3, [r4, #0]
 8002f06:	4413      	add	r3, r2
 8002f08:	4403      	add	r3, r0
 8002f0a:	42b3      	cmp	r3, r6
 8002f0c:	d908      	bls.n	8002f20 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 8002f0e:	2ab0      	cmp	r2, #176	; 0xb0
 8002f10:	4613      	mov	r3, r2
 8002f12:	bf28      	it	cs
 8002f14:	23b0      	movcs	r3, #176	; 0xb0
 8002f16:	220c      	movs	r2, #12
 8002f18:	602b      	str	r3, [r5, #0]
 8002f1a:	4413      	add	r3, r2
 8002f1c:	6022      	str	r2, [r4, #0]
 8002f1e:	4403      	add	r3, r0
 8002f20:	b109      	cbz	r1, 8002f26 <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 8002f22:	428b      	cmp	r3, r1
 8002f24:	d906      	bls.n	8002f34 <Dmx::SetDmxPeriodTime(unsigned int)+0x48>
 8002f26:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 8002f2a:	f240 43b4 	movw	r3, #1204	; 0x4b4
 8002f2e:	4299      	cmp	r1, r3
 8002f30:	bf38      	it	cc
 8002f32:	4619      	movcc	r1, r3
 8002f34:	4b04      	ldr	r3, [pc, #16]	; (8002f48 <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 8002f36:	6019      	str	r1, [r3, #0]
 8002f38:	bd70      	pop	{r4, r5, r6, pc}
 8002f3a:	bf00      	nop
 8002f3c:	20000308 	andcs	r0, r0, r8, lsl #6
 8002f40:	20000010 	andcs	r0, r0, r0, lsl r0
 8002f44:	2000000c 	andcs	r0, r0, ip
 8002f48:	20000008 	andcs	r0, r0, r8

08002f4c <Dmx::SetDmxBreakTime(unsigned int)>:
 8002f4c:	295c      	cmp	r1, #92	; 0x5c
 8002f4e:	bf38      	it	cc
 8002f50:	215c      	movcc	r1, #92	; 0x5c
 8002f52:	4b02      	ldr	r3, [pc, #8]	; (8002f5c <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 8002f54:	6019      	str	r1, [r3, #0]
 8002f56:	68c1      	ldr	r1, [r0, #12]
 8002f58:	f7ff bfc8 	b.w	8002eec <Dmx::SetDmxPeriodTime(unsigned int)>
 8002f5c:	20000010 	andcs	r0, r0, r0, lsl r0

08002f60 <Dmx::SetDmxMabTime(unsigned int)>:
 8002f60:	290c      	cmp	r1, #12
 8002f62:	bf38      	it	cc
 8002f64:	210c      	movcc	r1, #12
 8002f66:	4b02      	ldr	r3, [pc, #8]	; (8002f70 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 8002f68:	6019      	str	r1, [r3, #0]
 8002f6a:	68c1      	ldr	r1, [r0, #12]
 8002f6c:	f7ff bfbe 	b.w	8002eec <Dmx::SetDmxPeriodTime(unsigned int)>
 8002f70:	2000000c 	andcs	r0, r0, ip

08002f74 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)>:
 8002f74:	b4f0      	push	{r4, r5, r6, r7}
 8002f76:	8a04      	ldrh	r4, [r0, #16]
 8002f78:	4d11      	ldr	r5, [pc, #68]	; (8002fc0 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 8002f7a:	42a3      	cmp	r3, r4
 8002f7c:	bf28      	it	cs
 8002f7e:	4623      	movcs	r3, r4
 8002f80:	f44f 7401 	mov.w	r4, #516	; 0x204
 8002f84:	434c      	muls	r4, r1
 8002f86:	1c5f      	adds	r7, r3, #1
 8002f88:	192e      	adds	r6, r5, r4
 8002f8a:	f892 f000 	pld	[r2]
 8002f8e:	3c01      	subs	r4, #1
 8002f90:	442c      	add	r4, r5
 8002f92:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 8002f96:	18d5      	adds	r5, r2, r3
 8002f98:	4295      	cmp	r5, r2
 8002f9a:	d109      	bne.n	8002fb0 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x3c>
 8002f9c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8002fa0:	698a      	ldr	r2, [r1, #24]
 8002fa2:	429a      	cmp	r2, r3
 8002fa4:	d009      	beq.n	8002fba <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x46>
 8002fa6:	bcf0      	pop	{r4, r5, r6, r7}
 8002fa8:	618b      	str	r3, [r1, #24]
 8002faa:	68c1      	ldr	r1, [r0, #12]
 8002fac:	f7ff bf9e 	b.w	8002eec <Dmx::SetDmxPeriodTime(unsigned int)>
 8002fb0:	f812 6b01 	ldrb.w	r6, [r2], #1
 8002fb4:	f804 6f01 	strb.w	r6, [r4, #1]!
 8002fb8:	e7ee      	b.n	8002f98 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x24>
 8002fba:	bcf0      	pop	{r4, r5, r6, r7}
 8002fbc:	4770      	bx	lr
 8002fbe:	bf00      	nop
 8002fc0:	20000308 	andcs	r0, r0, r8, lsl #6

08002fc4 <Dmx::GetDmxAvailable(unsigned int)>:
 8002fc4:	f44f 7204 	mov.w	r2, #528	; 0x210
 8002fc8:	4b07      	ldr	r3, [pc, #28]	; (8002fe8 <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 8002fca:	fb02 3101 	mla	r1, r2, r1, r3
 8002fce:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 8002fd2:	f413 4000 	ands.w	r0, r3, #32768	; 0x8000
 8002fd6:	bf1f      	itttt	ne
 8002fd8:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 8002fdc:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 8002fe0:	4608      	movne	r0, r1
 8002fe2:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 8002fe6:	4770      	bx	lr
 8002fe8:	200000f8 	strdcs	r0, [r0], -r8

08002fec <Dmx::GetDmxChanged(unsigned int)>:
 8002fec:	b570      	push	{r4, r5, r6, lr}
 8002fee:	460c      	mov	r4, r1
 8002ff0:	f7ff ffe8 	bl	8002fc4 <Dmx::GetDmxAvailable(unsigned int)>
 8002ff4:	b1a0      	cbz	r0, 8003020 <Dmx::GetDmxChanged(unsigned int)+0x34>
 8002ff6:	f240 2202 	movw	r2, #514	; 0x202
 8002ffa:	490a      	ldr	r1, [pc, #40]	; (8003024 <Dmx::GetDmxChanged(unsigned int)+0x38>)
 8002ffc:	fb02 1104 	mla	r1, r2, r4, r1
 8003000:	2200      	movs	r2, #0
 8003002:	1e8b      	subs	r3, r1, #2
 8003004:	1e84      	subs	r4, r0, #2
 8003006:	f501 7100 	add.w	r1, r1, #512	; 0x200
 800300a:	f833 6f02 	ldrh.w	r6, [r3, #2]!
 800300e:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8003012:	42ae      	cmp	r6, r5
 8003014:	bf1c      	itt	ne
 8003016:	2201      	movne	r2, #1
 8003018:	801d      	strhne	r5, [r3, #0]
 800301a:	428b      	cmp	r3, r1
 800301c:	d1f5      	bne.n	800300a <Dmx::GetDmxChanged(unsigned int)+0x1e>
 800301e:	b902      	cbnz	r2, 8003022 <Dmx::GetDmxChanged(unsigned int)+0x36>
 8003020:	2000      	movs	r0, #0
 8003022:	bd70      	pop	{r4, r5, r6, pc}
 8003024:	20000510 	andcs	r0, r0, r0, lsl r5

08003028 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>:
 8003028:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800302a:	4614      	mov	r4, r2
 800302c:	461d      	mov	r5, r3
 800302e:	4e1f      	ldr	r6, [pc, #124]	; (80030ac <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x84>)
 8003030:	2106      	movs	r1, #6
 8003032:	4630      	mov	r0, r6
 8003034:	f001 ff22 	bl	8004e7c <usart_flag_get>
 8003038:	2800      	cmp	r0, #0
 800303a:	d0f9      	beq.n	8003030 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x8>
 800303c:	f44f 6780 	mov.w	r7, #1024	; 0x400
 8003040:	4e1b      	ldr	r6, [pc, #108]	; (80030b0 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x88>)
 8003042:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003046:	2203      	movs	r2, #3
 8003048:	4630      	mov	r0, r6
 800304a:	2110      	movs	r1, #16
 800304c:	f001 fc42 	bl	80048d4 <gpio_init>
 8003050:	6177      	str	r7, [r6, #20]
 8003052:	2100      	movs	r1, #0
 8003054:	20b0      	movs	r0, #176	; 0xb0
 8003056:	f002 f9e5 	bl	8005424 <udelay(unsigned int, unsigned int)>
 800305a:	463b      	mov	r3, r7
 800305c:	4630      	mov	r0, r6
 800305e:	2203      	movs	r2, #3
 8003060:	2118      	movs	r1, #24
 8003062:	f001 fc37 	bl	80048d4 <gpio_init>
 8003066:	2100      	movs	r1, #0
 8003068:	200c      	movs	r0, #12
 800306a:	f002 f9db 	bl	8005424 <udelay(unsigned int, unsigned int)>
 800306e:	f04f 2740 	mov.w	r7, #1073758208	; 0x40004000
 8003072:	4425      	add	r5, r4
 8003074:	f5a6 4648 	sub.w	r6, r6, #51200	; 0xc800
 8003078:	42ac      	cmp	r4, r5
 800307a:	d109      	bne.n	8003090 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x68>
 800307c:	f04f 2540 	mov.w	r5, #1073758208	; 0x40004000
 8003080:	4c0a      	ldr	r4, [pc, #40]	; (80030ac <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x84>)
 8003082:	2106      	movs	r1, #6
 8003084:	4620      	mov	r0, r4
 8003086:	f001 fef9 	bl	8004e7c <usart_flag_get>
 800308a:	2801      	cmp	r0, #1
 800308c:	d10b      	bne.n	80030a6 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x7e>
 800308e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003090:	2107      	movs	r1, #7
 8003092:	4630      	mov	r0, r6
 8003094:	f001 fef2 	bl	8004e7c <usart_flag_get>
 8003098:	2800      	cmp	r0, #0
 800309a:	d0f9      	beq.n	8003090 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x68>
 800309c:	f814 3b01 	ldrb.w	r3, [r4], #1
 80030a0:	f8c7 3804 	str.w	r3, [r7, #2052]	; 0x804
 80030a4:	e7e8      	b.n	8003078 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x50>
 80030a6:	f8d5 3804 	ldr.w	r3, [r5, #2052]	; 0x804
 80030aa:	e7ea      	b.n	8003082 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x5a>
 80030ac:	40004800 	andmi	r4, r0, r0, lsl #16
 80030b0:	40011000 	andmi	r1, r1, r0

080030b4 <Dmx::RdmReceive(unsigned int)>:
 80030b4:	f44f 7204 	mov.w	r2, #528	; 0x210
 80030b8:	4b06      	ldr	r3, [pc, #24]	; (80030d4 <Dmx::RdmReceive(unsigned int)+0x20>)
 80030ba:	fb02 3101 	mla	r1, r2, r1, r3
 80030be:	f8b1 0204 	ldrh.w	r0, [r1, #516]	; 0x204
 80030c2:	f410 4080 	ands.w	r0, r0, #16384	; 0x4000
 80030c6:	bf1e      	ittt	ne
 80030c8:	2300      	movne	r3, #0
 80030ca:	4608      	movne	r0, r1
 80030cc:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 80030d0:	4770      	bx	lr
 80030d2:	bf00      	nop
 80030d4:	200000f8 	strdcs	r0, [r0], -r8

080030d8 <usb_read_byte>:
 80030d8:	b508      	push	{r3, lr}
 80030da:	f000 f8f1 	bl	80032c0 <FT245RL_data_available>
 80030de:	2800      	cmp	r0, #0
 80030e0:	d0fb      	beq.n	80030da <usb_read_byte+0x2>
 80030e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80030e6:	f000 b8b1 	b.w	800324c <FT245RL_read_data>

080030ea <usb_send_byte>:
 80030ea:	b510      	push	{r4, lr}
 80030ec:	4604      	mov	r4, r0
 80030ee:	f000 f8f3 	bl	80032d8 <FT245RL_can_write>
 80030f2:	2800      	cmp	r0, #0
 80030f4:	d0fb      	beq.n	80030ee <usb_send_byte+0x4>
 80030f6:	4620      	mov	r0, r4
 80030f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80030fc:	f000 b860 	b.w	80031c0 <FT245RL_write_data>

08003100 <data_gpio_fsel_input>:
 8003100:	b510      	push	{r4, lr}
 8003102:	f24c 0340 	movw	r3, #49216	; 0xc040
 8003106:	2203      	movs	r2, #3
 8003108:	2104      	movs	r1, #4
 800310a:	4805      	ldr	r0, [pc, #20]	; (8003120 <data_gpio_fsel_input+0x20>)
 800310c:	f001 fbe2 	bl	80048d4 <gpio_init>
 8003110:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003114:	23f8      	movs	r3, #248	; 0xf8
 8003116:	2203      	movs	r2, #3
 8003118:	2104      	movs	r1, #4
 800311a:	4802      	ldr	r0, [pc, #8]	; (8003124 <data_gpio_fsel_input+0x24>)
 800311c:	f001 bbda 	b.w	80048d4 <gpio_init>
 8003120:	40010800 	andmi	r0, r1, r0, lsl #16
 8003124:	40010c00 	andmi	r0, r1, r0, lsl #24

08003128 <FT245RL_init>:
 8003128:	b538      	push	{r3, r4, r5, lr}
 800312a:	f240 6002 	movw	r0, #1538	; 0x602
 800312e:	f001 fc63 	bl	80049f8 <rcu_periph_clock_enable>
 8003132:	4d20      	ldr	r5, [pc, #128]	; (80031b4 <FT245RL_init+0x8c>)
 8003134:	f240 6003 	movw	r0, #1539	; 0x603
 8003138:	f001 fc5e 	bl	80049f8 <rcu_periph_clock_enable>
 800313c:	4c1e      	ldr	r4, [pc, #120]	; (80031b8 <FT245RL_init+0x90>)
 800313e:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8003142:	f001 fc59 	bl	80049f8 <rcu_periph_clock_enable>
 8003146:	2101      	movs	r1, #1
 8003148:	4628      	mov	r0, r5
 800314a:	f001 fc1d 	bl	8004988 <gpio_pin_remap_config>
 800314e:	f7ff ffd7 	bl	8003100 <data_gpio_fsel_input>
 8003152:	4620      	mov	r0, r4
 8003154:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8003158:	2203      	movs	r2, #3
 800315a:	2110      	movs	r1, #16
 800315c:	f001 fbba 	bl	80048d4 <gpio_init>
 8003160:	4620      	mov	r0, r4
 8003162:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8003166:	2203      	movs	r2, #3
 8003168:	2110      	movs	r1, #16
 800316a:	f5a4 6480 	sub.w	r4, r4, #1024	; 0x400
 800316e:	f001 fbb1 	bl	80048d4 <gpio_init>
 8003172:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003176:	2203      	movs	r2, #3
 8003178:	2148      	movs	r1, #72	; 0x48
 800317a:	4620      	mov	r0, r4
 800317c:	f001 fbaa 	bl	80048d4 <gpio_init>
 8003180:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8003184:	f001 fc38 	bl	80049f8 <rcu_periph_clock_enable>
 8003188:	2101      	movs	r1, #1
 800318a:	4628      	mov	r0, r5
 800318c:	f001 fbfc 	bl	8004988 <gpio_pin_remap_config>
 8003190:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8003194:	2203      	movs	r2, #3
 8003196:	2148      	movs	r1, #72	; 0x48
 8003198:	4620      	mov	r0, r4
 800319a:	f001 fb9b 	bl	80048d4 <gpio_init>
 800319e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80031a2:	4b06      	ldr	r3, [pc, #24]	; (80031bc <FT245RL_init+0x94>)
 80031a4:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 80031a8:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80031ac:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80031b0:	bd38      	pop	{r3, r4, r5, pc}
 80031b2:	bf00      	nop
 80031b4:	00300400 	eorseq	r0, r0, r0, lsl #8
 80031b8:	40010c00 	andmi	r0, r1, r0, lsl #24
 80031bc:	40010000 	andmi	r0, r1, r0

080031c0 <FT245RL_write_data>:
 80031c0:	b510      	push	{r4, lr}
 80031c2:	f24c 0340 	movw	r3, #49216	; 0xc040
 80031c6:	4604      	mov	r4, r0
 80031c8:	2203      	movs	r2, #3
 80031ca:	2110      	movs	r1, #16
 80031cc:	481c      	ldr	r0, [pc, #112]	; (8003240 <FT245RL_write_data+0x80>)
 80031ce:	f001 fb81 	bl	80048d4 <gpio_init>
 80031d2:	23f8      	movs	r3, #248	; 0xf8
 80031d4:	2203      	movs	r2, #3
 80031d6:	2110      	movs	r1, #16
 80031d8:	481a      	ldr	r0, [pc, #104]	; (8003244 <FT245RL_write_data+0x84>)
 80031da:	f001 fb7b 	bl	80048d4 <gpio_init>
 80031de:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80031e2:	4a19      	ldr	r2, [pc, #100]	; (8003248 <FT245RL_write_data+0x88>)
 80031e4:	f8c2 1c10 	str.w	r1, [r2, #3088]	; 0xc10
 80031e8:	bf00      	nop
 80031ea:	bf00      	nop
 80031ec:	02e3      	lsls	r3, r4, #11
 80031ee:	0120      	lsls	r0, r4, #4
 80031f0:	f000 0040 	and.w	r0, r0, #64	; 0x40
 80031f4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80031f8:	4303      	orrs	r3, r0
 80031fa:	f8c2 3810 	str.w	r3, [r2, #2064]	; 0x810
 80031fe:	f483 4340 	eor.w	r3, r3, #49152	; 0xc000
 8003202:	f083 0340 	eor.w	r3, r3, #64	; 0x40
 8003206:	f8c2 3814 	str.w	r3, [r2, #2068]	; 0x814
 800320a:	01e0      	lsls	r0, r4, #7
 800320c:	0163      	lsls	r3, r4, #5
 800320e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003212:	b2c0      	uxtb	r0, r0
 8003214:	4318      	orrs	r0, r3
 8003216:	1063      	asrs	r3, r4, #1
 8003218:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800321c:	f344 1403 	sbfx	r4, r4, #4, #4
 8003220:	4303      	orrs	r3, r0
 8003222:	f004 0408 	and.w	r4, r4, #8
 8003226:	431c      	orrs	r4, r3
 8003228:	f8c2 4c10 	str.w	r4, [r2, #3088]	; 0xc10
 800322c:	f084 04f8 	eor.w	r4, r4, #248	; 0xf8
 8003230:	f8c2 4c14 	str.w	r4, [r2, #3092]	; 0xc14
 8003234:	bf00      	nop
 8003236:	bf00      	nop
 8003238:	f8c2 1c14 	str.w	r1, [r2, #3092]	; 0xc14
 800323c:	bd10      	pop	{r4, pc}
 800323e:	bf00      	nop
 8003240:	40010800 	andmi	r0, r1, r0, lsl #16
 8003244:	40010c00 	andmi	r0, r1, r0, lsl #24
 8003248:	40010000 	andmi	r0, r1, r0

0800324c <FT245RL_read_data>:
 800324c:	b510      	push	{r4, lr}
 800324e:	f7ff ff57 	bl	8003100 <data_gpio_fsel_input>
 8003252:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8003256:	4c18      	ldr	r4, [pc, #96]	; (80032b8 <FT245RL_read_data+0x6c>)
 8003258:	f8c4 3c14 	str.w	r3, [r4, #3092]	; 0xc14
 800325c:	2318      	movs	r3, #24
 800325e:	bf00      	nop
 8003260:	3b01      	subs	r3, #1
 8003262:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 8003266:	d1fa      	bne.n	800325e <FT245RL_read_data+0x12>
 8003268:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800326c:	f8d4 2808 	ldr.w	r2, [r4, #2056]	; 0x808
 8003270:	f8d4 1c08 	ldr.w	r1, [r4, #3080]	; 0xc08
 8003274:	f8c4 3c10 	str.w	r3, [r4, #3088]	; 0xc10
 8003278:	f3c2 130b 	ubfx	r3, r2, #4, #12
 800327c:	f3c2 24c4 	ubfx	r4, r2, #11, #5
 8003280:	f004 0408 	and.w	r4, r4, #8
 8003284:	f003 0304 	and.w	r3, r3, #4
 8003288:	f342 22c4 	sbfx	r2, r2, #11, #5
 800328c:	4323      	orrs	r3, r4
 800328e:	f002 0210 	and.w	r2, r2, #16
 8003292:	4313      	orrs	r3, r2
 8003294:	f3c1 12c0 	ubfx	r2, r1, #7, #1
 8003298:	4313      	orrs	r3, r2
 800329a:	f3c1 124a 	ubfx	r2, r1, #5, #11
 800329e:	0048      	lsls	r0, r1, #1
 80032a0:	f002 0202 	and.w	r2, r2, #2
 80032a4:	4313      	orrs	r3, r2
 80032a6:	f000 0060 	and.w	r0, r0, #96	; 0x60
 80032aa:	4318      	orrs	r0, r3
 80032ac:	4b03      	ldr	r3, [pc, #12]	; (80032bc <FT245RL_read_data+0x70>)
 80032ae:	0109      	lsls	r1, r1, #4
 80032b0:	400b      	ands	r3, r1
 80032b2:	4318      	orrs	r0, r3
 80032b4:	b2c0      	uxtb	r0, r0
 80032b6:	bd10      	pop	{r4, pc}
 80032b8:	40010000 	andmi	r0, r1, r0
 80032bc:	000fff80 	andeq	pc, pc, r0, lsl #31

080032c0 <FT245RL_data_available>:
 80032c0:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80032c4:	b508      	push	{r3, lr}
 80032c6:	4803      	ldr	r0, [pc, #12]	; (80032d4 <FT245RL_data_available+0x14>)
 80032c8:	f001 fb58 	bl	800497c <gpio_input_bit_get>
 80032cc:	fab0 f080 	clz	r0, r0
 80032d0:	0940      	lsrs	r0, r0, #5
 80032d2:	bd08      	pop	{r3, pc}
 80032d4:	40010800 	andmi	r0, r1, r0, lsl #16

080032d8 <FT245RL_can_write>:
 80032d8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80032dc:	b508      	push	{r3, lr}
 80032de:	4803      	ldr	r0, [pc, #12]	; (80032ec <FT245RL_can_write+0x14>)
 80032e0:	f001 fb4c 	bl	800497c <gpio_input_bit_get>
 80032e4:	fab0 f080 	clz	r0, r0
 80032e8:	0940      	lsrs	r0, r0, #5
 80032ea:	bd08      	pop	{r3, pc}
 80032ec:	40010800 	andmi	r0, r1, r0, lsl #16

080032f0 <RDMDevice::RDMDevice()>:
 80032f0:	4a33      	ldr	r2, [pc, #204]	; (80033c0 <RDMDevice::RDMDevice()+0xd0>)
 80032f2:	2300      	movs	r3, #0
 80032f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80032f6:	4604      	mov	r4, r0
 80032f8:	4611      	mov	r1, r2
 80032fa:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 80032fe:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
 8003302:	f8a0 3072 	strh.w	r3, [r0, #114]	; 0x72
 8003306:	6743      	str	r3, [r0, #116]	; 0x74
 8003308:	4613      	mov	r3, r2
 800330a:	7818      	ldrb	r0, [r3, #0]
 800330c:	3201      	adds	r2, #1
 800330e:	2800      	cmp	r0, #0
 8003310:	d1fa      	bne.n	8003308 <RDMDevice::RDMDevice()+0x18>
 8003312:	1a5b      	subs	r3, r3, r1
 8003314:	2b20      	cmp	r3, #32
 8003316:	bf28      	it	cs
 8003318:	2320      	movcs	r3, #32
 800331a:	f104 052a 	add.w	r5, r4, #42	; 0x2a
 800331e:	4629      	mov	r1, r5
 8003320:	461a      	mov	r2, r3
 8003322:	4827      	ldr	r0, [pc, #156]	; (80033c0 <RDMDevice::RDMDevice()+0xd0>)
 8003324:	3a01      	subs	r2, #1
 8003326:	d23b      	bcs.n	80033a0 <RDMDevice::RDMDevice()+0xb0>
 8003328:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800332c:	4b25      	ldr	r3, [pc, #148]	; (80033c4 <RDMDevice::RDMDevice()+0xd4>)
 800332e:	4669      	mov	r1, sp
 8003330:	781a      	ldrb	r2, [r3, #0]
 8003332:	7022      	strb	r2, [r4, #0]
 8003334:	785b      	ldrb	r3, [r3, #1]
 8003336:	7063      	strb	r3, [r4, #1]
 8003338:	4b23      	ldr	r3, [pc, #140]	; (80033c8 <RDMDevice::RDMDevice()+0xd8>)
 800333a:	6818      	ldr	r0, [r3, #0]
 800333c:	f000 fc60 	bl	8003c00 <Network::MacAddressCopyTo(unsigned char*)>
 8003340:	f89d 3002 	ldrb.w	r3, [sp, #2]
 8003344:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8003348:	70a3      	strb	r3, [r4, #2]
 800334a:	7263      	strb	r3, [r4, #9]
 800334c:	4b1f      	ldr	r3, [pc, #124]	; (80033cc <RDMDevice::RDMDevice()+0xdc>)
 800334e:	70e2      	strb	r2, [r4, #3]
 8003350:	7222      	strb	r2, [r4, #8]
 8003352:	461a      	mov	r2, r3
 8003354:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8003358:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800335c:	7121      	strb	r1, [r4, #4]
 800335e:	7160      	strb	r0, [r4, #5]
 8003360:	71a0      	strb	r0, [r4, #6]
 8003362:	71e1      	strb	r1, [r4, #7]
 8003364:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8003368:	2900      	cmp	r1, #0
 800336a:	d1fb      	bne.n	8003364 <RDMDevice::RDMDevice()+0x74>
 800336c:	1a9b      	subs	r3, r3, r2
 800336e:	2b20      	cmp	r3, #32
 8003370:	bf28      	it	cs
 8003372:	2320      	movcs	r3, #32
 8003374:	461a      	mov	r2, r3
 8003376:	4915      	ldr	r1, [pc, #84]	; (80033cc <RDMDevice::RDMDevice()+0xdc>)
 8003378:	3a01      	subs	r2, #1
 800337a:	d216      	bcs.n	80033aa <RDMDevice::RDMDevice()+0xba>
 800337c:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 8003380:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 8003384:	64e3      	str	r3, [r4, #76]	; 0x4c
 8003386:	2315      	movs	r3, #21
 8003388:	4a11      	ldr	r2, [pc, #68]	; (80033d0 <RDMDevice::RDMDevice()+0xe0>)
 800338a:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
 800338e:	f104 0165 	add.w	r1, r4, #101	; 0x65
 8003392:	f104 0350 	add.w	r3, r4, #80	; 0x50
 8003396:	4299      	cmp	r1, r3
 8003398:	d10c      	bne.n	80033b4 <RDMDevice::RDMDevice()+0xc4>
 800339a:	4620      	mov	r0, r4
 800339c:	b002      	add	sp, #8
 800339e:	bd70      	pop	{r4, r5, r6, pc}
 80033a0:	f810 6b01 	ldrb.w	r6, [r0], #1
 80033a4:	f801 6f01 	strb.w	r6, [r1, #1]!
 80033a8:	e7bc      	b.n	8003324 <RDMDevice::RDMDevice()+0x34>
 80033aa:	f811 0b01 	ldrb.w	r0, [r1], #1
 80033ae:	f805 0f01 	strb.w	r0, [r5, #1]!
 80033b2:	e7e1      	b.n	8003378 <RDMDevice::RDMDevice()+0x88>
 80033b4:	f812 0b01 	ldrb.w	r0, [r2], #1
 80033b8:	f803 0f01 	strb.w	r0, [r3, #1]!
 80033bc:	e7eb      	b.n	8003396 <RDMDevice::RDMDevice()+0xa6>
 80033be:	bf00      	nop
 80033c0:	08005b00 	stmdaeq	r0, {r8, r9, fp, ip, lr}
 80033c4:	08005afe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r9, fp, ip, lr}
 80033c8:	20001770 	andcs	r1, r0, r0, ror r7
 80033cc:	08005b1c 	stmdaeq	r0, {r2, r3, r4, r8, r9, fp, ip, lr}
 80033d0:	08005b31 	stmdaeq	r0, {r0, r4, r5, r8, r9, fp, ip, lr}

080033d4 <memcpy.isra.0>:
 80033d4:	f000 bfdc 	b.w	8004390 <memcpy>

080033d8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 80033d8:	b510      	push	{r4, lr}
 80033da:	6001      	str	r1, [r0, #0]
 80033dc:	2100      	movs	r1, #0
 80033de:	4604      	mov	r4, r0
 80033e0:	6041      	str	r1, [r0, #4]
 80033e2:	2220      	movs	r2, #32
 80033e4:	3008      	adds	r0, #8
 80033e6:	f000 ffde 	bl	80043a6 <memset>
 80033ea:	4b03      	ldr	r3, [pc, #12]	; (80033f8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 80033ec:	4620      	mov	r0, r4
 80033ee:	62a3      	str	r3, [r4, #40]	; 0x28
 80033f0:	237f      	movs	r3, #127	; 0x7f
 80033f2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80033f6:	bd10      	pop	{r4, pc}
 80033f8:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

080033fc <RDMDeviceParams::Load()>:
 80033fc:	4601      	mov	r1, r0
 80033fe:	6800      	ldr	r0, [r0, #0]
 8003400:	b130      	cbz	r0, 8003410 <RDMDeviceParams::Load()+0x14>
 8003402:	b508      	push	{r3, lr}
 8003404:	6803      	ldr	r3, [r0, #0]
 8003406:	3104      	adds	r1, #4
 8003408:	68db      	ldr	r3, [r3, #12]
 800340a:	4798      	blx	r3
 800340c:	2001      	movs	r0, #1
 800340e:	bd08      	pop	{r3, pc}
 8003410:	4770      	bx	lr

08003412 <RDMDeviceParams::Set(RDMDevice*)>:
 8003412:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003414:	6843      	ldr	r3, [r0, #4]
 8003416:	460c      	mov	r4, r1
 8003418:	07d9      	lsls	r1, r3, #31
 800341a:	4605      	mov	r5, r0
 800341c:	d518      	bpl.n	8003450 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800341e:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 8003422:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8003426:	2e20      	cmp	r6, #32
 8003428:	bf28      	it	cs
 800342a:	2620      	movcs	r6, #32
 800342c:	f100 0108 	add.w	r1, r0, #8
 8003430:	b1e3      	cbz	r3, 800346c <RDMDeviceParams::Set(RDMDevice*)+0x5a>
 8003432:	f104 070a 	add.w	r7, r4, #10
 8003436:	4638      	mov	r0, r7
 8003438:	4632      	mov	r2, r6
 800343a:	f7ff ffcb 	bl	80033d4 <memcpy.isra.0>
 800343e:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8003440:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 8003444:	b120      	cbz	r0, 8003450 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 8003446:	6803      	ldr	r3, [r0, #0]
 8003448:	4632      	mov	r2, r6
 800344a:	4639      	mov	r1, r7
 800344c:	689b      	ldr	r3, [r3, #8]
 800344e:	4798      	blx	r3
 8003450:	686b      	ldr	r3, [r5, #4]
 8003452:	079a      	lsls	r2, r3, #30
 8003454:	bf44      	itt	mi
 8003456:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800345a:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 800345e:	075b      	lsls	r3, r3, #29
 8003460:	bf44      	itt	mi
 8003462:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 8003466:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 800346a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800346c:	4632      	mov	r2, r6
 800346e:	f104 0051 	add.w	r0, r4, #81	; 0x51
 8003472:	f7ff ffaf 	bl	80033d4 <memcpy.isra.0>
 8003476:	f884 6071 	strb.w	r6, [r4, #113]	; 0x71
 800347a:	e7e9      	b.n	8003450 <RDMDeviceParams::Set(RDMDevice*)+0x3e>

0800347c <RDMDeviceParams::Dump()>:
 800347c:	4770      	bx	lr
	...

08003480 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 8003480:	2300      	movs	r3, #0
 8003482:	2020      	movs	r0, #32
 8003484:	b510      	push	{r4, lr}
 8003486:	4a04      	ldr	r2, [pc, #16]	; (8003498 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 8003488:	428b      	cmp	r3, r1
 800348a:	d100      	bne.n	800348e <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 800348c:	bd10      	pop	{r4, pc}
 800348e:	f852 4b04 	ldr.w	r4, [r2], #4
 8003492:	3301      	adds	r3, #1
 8003494:	4420      	add	r0, r4
 8003496:	e7f7      	b.n	8003488 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 8003498:	08005b48 	stmdaeq	r0, {r3, r6, r8, r9, fp, ip, lr}

0800349c <SpiFlashStore::Init()>:
 800349c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80034a0:	f8df 8114 	ldr.w	r8, [pc, #276]	; 80035b8 <SpiFlashStore::Init()+0x11c>
 80034a4:	4607      	mov	r7, r0
 80034a6:	b085      	sub	sp, #20
 80034a8:	f8d8 0000 	ldr.w	r0, [r8]
 80034ac:	f000 fa40 	bl	8003930 <FlashRom::GetSectorSize() const>
 80034b0:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 80034b4:	4605      	mov	r5, r0
 80034b6:	d17d      	bne.n	80035b4 <SpiFlashStore::Init()+0x118>
 80034b8:	f8d8 0000 	ldr.w	r0, [r8]
 80034bc:	f000 fa30 	bl	8003920 <FlashRom::GetSize() const>
 80034c0:	4b3e      	ldr	r3, [pc, #248]	; (80035bc <SpiFlashStore::Init()+0x120>)
 80034c2:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 80034c6:	f3c1 060b 	ubfx	r6, r1, #0, #12
 80034ca:	6019      	str	r1, [r3, #0]
 80034cc:	2e00      	cmp	r6, #0
 80034ce:	d171      	bne.n	80035b4 <SpiFlashStore::Init()+0x118>
 80034d0:	4c3b      	ldr	r4, [pc, #236]	; (80035c0 <SpiFlashStore::Init()+0x124>)
 80034d2:	ab03      	add	r3, sp, #12
 80034d4:	9300      	str	r3, [sp, #0]
 80034d6:	462a      	mov	r2, r5
 80034d8:	4623      	mov	r3, r4
 80034da:	f8d8 0000 	ldr.w	r0, [r8]
 80034de:	f000 fa2a 	bl	8003936 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 80034e2:	7823      	ldrb	r3, [r4, #0]
 80034e4:	2b41      	cmp	r3, #65	; 0x41
 80034e6:	bf1c      	itt	ne
 80034e8:	2341      	movne	r3, #65	; 0x41
 80034ea:	7023      	strbne	r3, [r4, #0]
 80034ec:	7863      	ldrb	r3, [r4, #1]
 80034ee:	bf14      	ite	ne
 80034f0:	4635      	movne	r5, r6
 80034f2:	2501      	moveq	r5, #1
 80034f4:	2b76      	cmp	r3, #118	; 0x76
 80034f6:	bf1c      	itt	ne
 80034f8:	2376      	movne	r3, #118	; 0x76
 80034fa:	7063      	strbne	r3, [r4, #1]
 80034fc:	78a3      	ldrb	r3, [r4, #2]
 80034fe:	bf18      	it	ne
 8003500:	2500      	movne	r5, #0
 8003502:	2b56      	cmp	r3, #86	; 0x56
 8003504:	bf1c      	itt	ne
 8003506:	2356      	movne	r3, #86	; 0x56
 8003508:	70a3      	strbne	r3, [r4, #2]
 800350a:	78e3      	ldrb	r3, [r4, #3]
 800350c:	bf18      	it	ne
 800350e:	2500      	movne	r5, #0
 8003510:	2b10      	cmp	r3, #16
 8003512:	d022      	beq.n	800355a <SpiFlashStore::Init()+0xbe>
 8003514:	2310      	movs	r3, #16
 8003516:	70e3      	strb	r3, [r4, #3]
 8003518:	2201      	movs	r2, #1
 800351a:	2500      	movs	r5, #0
 800351c:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8003520:	4b28      	ldr	r3, [pc, #160]	; (80035c4 <SpiFlashStore::Init()+0x128>)
 8003522:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 80035c8 <SpiFlashStore::Init()+0x12c>
 8003526:	701a      	strb	r2, [r3, #0]
 8003528:	4631      	mov	r1, r6
 800352a:	4638      	mov	r0, r7
 800352c:	f7ff ffa8 	bl	8003480 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8003530:	1823      	adds	r3, r4, r0
 8003532:	5425      	strb	r5, [r4, r0]
 8003534:	705d      	strb	r5, [r3, #1]
 8003536:	709d      	strb	r5, [r3, #2]
 8003538:	70dd      	strb	r5, [r3, #3]
 800353a:	f858 3b04 	ldr.w	r3, [r8], #4
 800353e:	1d02      	adds	r2, r0, #4
 8003540:	4403      	add	r3, r0
 8003542:	429a      	cmp	r2, r3
 8003544:	d332      	bcc.n	80035ac <SpiFlashStore::Init()+0x110>
 8003546:	3601      	adds	r6, #1
 8003548:	2e1c      	cmp	r6, #28
 800354a:	d1ed      	bne.n	8003528 <SpiFlashStore::Init()+0x8c>
 800354c:	2501      	movs	r5, #1
 800354e:	4b1f      	ldr	r3, [pc, #124]	; (80035cc <SpiFlashStore::Init()+0x130>)
 8003550:	601d      	str	r5, [r3, #0]
 8003552:	4628      	mov	r0, r5
 8003554:	b005      	add	sp, #20
 8003556:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800355a:	2d00      	cmp	r5, #0
 800355c:	d0dc      	beq.n	8003518 <SpiFlashStore::Init()+0x7c>
 800355e:	f04f 0900 	mov.w	r9, #0
 8003562:	46c8      	mov	r8, r9
 8003564:	4631      	mov	r1, r6
 8003566:	4638      	mov	r0, r7
 8003568:	f7ff ff8a 	bl	8003480 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800356c:	5c23      	ldrb	r3, [r4, r0]
 800356e:	2bff      	cmp	r3, #255	; 0xff
 8003570:	d112      	bne.n	8003598 <SpiFlashStore::Init()+0xfc>
 8003572:	1823      	adds	r3, r4, r0
 8003574:	785a      	ldrb	r2, [r3, #1]
 8003576:	2aff      	cmp	r2, #255	; 0xff
 8003578:	d10e      	bne.n	8003598 <SpiFlashStore::Init()+0xfc>
 800357a:	789a      	ldrb	r2, [r3, #2]
 800357c:	2aff      	cmp	r2, #255	; 0xff
 800357e:	d10b      	bne.n	8003598 <SpiFlashStore::Init()+0xfc>
 8003580:	78da      	ldrb	r2, [r3, #3]
 8003582:	2aff      	cmp	r2, #255	; 0xff
 8003584:	d108      	bne.n	8003598 <SpiFlashStore::Init()+0xfc>
 8003586:	46a9      	mov	r9, r5
 8003588:	f804 8000 	strb.w	r8, [r4, r0]
 800358c:	f883 8001 	strb.w	r8, [r3, #1]
 8003590:	f883 8002 	strb.w	r8, [r3, #2]
 8003594:	f883 8003 	strb.w	r8, [r3, #3]
 8003598:	3601      	adds	r6, #1
 800359a:	2e1c      	cmp	r6, #28
 800359c:	d1e2      	bne.n	8003564 <SpiFlashStore::Init()+0xc8>
 800359e:	f1b9 0f00 	cmp.w	r9, #0
 80035a2:	d0d6      	beq.n	8003552 <SpiFlashStore::Init()+0xb6>
 80035a4:	2201      	movs	r2, #1
 80035a6:	4b09      	ldr	r3, [pc, #36]	; (80035cc <SpiFlashStore::Init()+0x130>)
 80035a8:	601a      	str	r2, [r3, #0]
 80035aa:	e7d2      	b.n	8003552 <SpiFlashStore::Init()+0xb6>
 80035ac:	f804 9002 	strb.w	r9, [r4, r2]
 80035b0:	3201      	adds	r2, #1
 80035b2:	e7c6      	b.n	8003542 <SpiFlashStore::Init()+0xa6>
 80035b4:	2500      	movs	r5, #0
 80035b6:	e7cc      	b.n	8003552 <SpiFlashStore::Init()+0xb6>
 80035b8:	20001754 	andcs	r1, r0, r4, asr r7
 80035bc:	20001734 	andcs	r1, r0, r4, lsr r7
 80035c0:	20000734 	andcs	r0, r0, r4, lsr r7
 80035c4:	20001748 	andcs	r1, r0, r8, asr #14
 80035c8:	08005b48 	stmdaeq	r0, {r3, r6, r8, r9, fp, ip, lr}
 80035cc:	20001740 	andcs	r1, r0, r0, asr #14

080035d0 <SpiFlashStore::SpiFlashStore()>:
 80035d0:	b538      	push	{r3, r4, r5, lr}
 80035d2:	4b0d      	ldr	r3, [pc, #52]	; (8003608 <SpiFlashStore::SpiFlashStore()+0x38>)
 80035d4:	4604      	mov	r4, r0
 80035d6:	6018      	str	r0, [r3, #0]
 80035d8:	4b0c      	ldr	r3, [pc, #48]	; (800360c <SpiFlashStore::SpiFlashStore()+0x3c>)
 80035da:	4d0d      	ldr	r5, [pc, #52]	; (8003610 <SpiFlashStore::SpiFlashStore()+0x40>)
 80035dc:	681b      	ldr	r3, [r3, #0]
 80035de:	781b      	ldrb	r3, [r3, #0]
 80035e0:	b113      	cbz	r3, 80035e8 <SpiFlashStore::SpiFlashStore()+0x18>
 80035e2:	f7ff ff5b 	bl	800349c <SpiFlashStore::Init()>
 80035e6:	7028      	strb	r0, [r5, #0]
 80035e8:	782b      	ldrb	r3, [r5, #0]
 80035ea:	b153      	cbz	r3, 8003602 <SpiFlashStore::SpiFlashStore()+0x32>
 80035ec:	2320      	movs	r3, #32
 80035ee:	2200      	movs	r2, #0
 80035f0:	4908      	ldr	r1, [pc, #32]	; (8003614 <SpiFlashStore::SpiFlashStore()+0x44>)
 80035f2:	f851 0b04 	ldr.w	r0, [r1], #4
 80035f6:	3201      	adds	r2, #1
 80035f8:	2a1c      	cmp	r2, #28
 80035fa:	4403      	add	r3, r0
 80035fc:	d1f9      	bne.n	80035f2 <SpiFlashStore::SpiFlashStore()+0x22>
 80035fe:	4a06      	ldr	r2, [pc, #24]	; (8003618 <SpiFlashStore::SpiFlashStore()+0x48>)
 8003600:	6013      	str	r3, [r2, #0]
 8003602:	4620      	mov	r0, r4
 8003604:	bd38      	pop	{r3, r4, r5, pc}
 8003606:	bf00      	nop
 8003608:	20001744 	andcs	r1, r0, r4, asr #14
 800360c:	20001754 	andcs	r1, r0, r4, asr r7
 8003610:	20001738 	andcs	r1, r0, r8, lsr r7
 8003614:	08005b48 	stmdaeq	r0, {r3, r6, r8, r9, fp, ip, lr}
 8003618:	2000173c 	andcs	r1, r0, ip, lsr r7

0800361c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800361c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003620:	461c      	mov	r4, r3
 8003622:	4b19      	ldr	r3, [pc, #100]	; (8003688 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 8003624:	4616      	mov	r6, r2
 8003626:	781f      	ldrb	r7, [r3, #0]
 8003628:	9d07      	ldr	r5, [sp, #28]
 800362a:	b307      	cbz	r7, 800366e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800362c:	f7ff ff28 	bl	8003480 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8003630:	f04f 0c00 	mov.w	ip, #0
 8003634:	4a15      	ldr	r2, [pc, #84]	; (800368c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 8003636:	1831      	adds	r1, r6, r0
 8003638:	1e63      	subs	r3, r4, #1
 800363a:	9c06      	ldr	r4, [sp, #24]
 800363c:	4411      	add	r1, r2
 800363e:	440c      	add	r4, r1
 8003640:	42a1      	cmp	r1, r4
 8003642:	d116      	bne.n	8003672 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 8003644:	f1bc 0f00 	cmp.w	ip, #0
 8003648:	d011      	beq.n	800366e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800364a:	4b11      	ldr	r3, [pc, #68]	; (8003690 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800364c:	6819      	ldr	r1, [r3, #0]
 800364e:	b109      	cbz	r1, 8003654 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 8003650:	2906      	cmp	r1, #6
 8003652:	d101      	bne.n	8003658 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 8003654:	2101      	movs	r1, #1
 8003656:	6019      	str	r1, [r3, #0]
 8003658:	4b0e      	ldr	r3, [pc, #56]	; (8003694 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800365a:	6819      	ldr	r1, [r3, #0]
 800365c:	4b0e      	ldr	r3, [pc, #56]	; (8003698 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800365e:	6019      	str	r1, [r3, #0]
 8003660:	b12e      	cbz	r6, 800366e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8003662:	b125      	cbz	r5, 800366e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8003664:	9b08      	ldr	r3, [sp, #32]
 8003666:	4418      	add	r0, r3
 8003668:	5813      	ldr	r3, [r2, r0]
 800366a:	432b      	orrs	r3, r5
 800366c:	5013      	str	r3, [r2, r0]
 800366e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003672:	f891 8000 	ldrb.w	r8, [r1]
 8003676:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800367a:	3101      	adds	r1, #1
 800367c:	45f0      	cmp	r8, lr
 800367e:	bf1c      	itt	ne
 8003680:	f801 ec01 	strbne.w	lr, [r1, #-1]
 8003684:	46bc      	movne	ip, r7
 8003686:	e7db      	b.n	8003640 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 8003688:	20001738 	andcs	r1, r0, r8, lsr r7
 800368c:	20000734 	andcs	r0, r0, r4, lsr r7
 8003690:	20001740 	andcs	r1, r0, r0, asr #14
 8003694:	2000181c 	andcs	r1, r0, ip, lsl r8
 8003698:	20000730 	andcs	r0, r0, r0, lsr r7

0800369c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>:
 800369c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80036a0:	461d      	mov	r5, r3
 80036a2:	4b15      	ldr	r3, [pc, #84]	; (80036f8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 80036a4:	b085      	sub	sp, #20
 80036a6:	781b      	ldrb	r3, [r3, #0]
 80036a8:	4607      	mov	r7, r0
 80036aa:	4614      	mov	r4, r2
 80036ac:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 80036b0:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80036b4:	b193      	cbz	r3, 80036dc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 80036b6:	f7ff fee3 	bl	8003480 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 80036ba:	4a10      	ldr	r2, [pc, #64]	; (80036fc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 80036bc:	eb08 0600 	add.w	r6, r8, r0
 80036c0:	18b3      	adds	r3, r6, r2
 80036c2:	f1b9 0f00 	cmp.w	r9, #0
 80036c6:	d013      	beq.n	80036f0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 80036c8:	5990      	ldr	r0, [r2, r6]
 80036ca:	b988      	cbnz	r0, 80036f0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 80036cc:	e9cd 0001 	strd	r0, r0, [sp, #4]
 80036d0:	4623      	mov	r3, r4
 80036d2:	4642      	mov	r2, r8
 80036d4:	4638      	mov	r0, r7
 80036d6:	9500      	str	r5, [sp, #0]
 80036d8:	f7ff ffa0 	bl	800361c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80036dc:	b005      	add	sp, #20
 80036de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80036e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80036e6:	f804 2f01 	strb.w	r2, [r4, #1]!
 80036ea:	429d      	cmp	r5, r3
 80036ec:	d1f9      	bne.n	80036e2 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 80036ee:	e7f5      	b.n	80036dc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 80036f0:	3c01      	subs	r4, #1
 80036f2:	441d      	add	r5, r3
 80036f4:	e7f9      	b.n	80036ea <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 80036f6:	bf00      	nop
 80036f8:	20001738 	andcs	r1, r0, r8, lsr r7
 80036fc:	20000734 	andcs	r0, r0, r4, lsr r7

08003700 <SpiFlashStore::Flash()>:
 8003700:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003702:	4c25      	ldr	r4, [pc, #148]	; (8003798 <SpiFlashStore::Flash()+0x98>)
 8003704:	6820      	ldr	r0, [r4, #0]
 8003706:	2800      	cmp	r0, #0
 8003708:	d043      	beq.n	8003792 <SpiFlashStore::Flash()+0x92>
 800370a:	3801      	subs	r0, #1
 800370c:	2805      	cmp	r0, #5
 800370e:	d831      	bhi.n	8003774 <SpiFlashStore::Flash()+0x74>
 8003710:	e8df f000 	tbb	[pc, r0]
 8003714:	2e140b03 	vnmlscs.f64	d0, d4, d3
 8003718:	4b203025 	blmi	880f7b4 <__exidx_end+0x809758>
 800371c:	681a      	ldr	r2, [r3, #0]
 800371e:	4b20      	ldr	r3, [pc, #128]	; (80037a0 <SpiFlashStore::Flash()+0xa0>)
 8003720:	601a      	str	r2, [r3, #0]
 8003722:	2302      	movs	r3, #2
 8003724:	6023      	str	r3, [r4, #0]
 8003726:	2001      	movs	r0, #1
 8003728:	e033      	b.n	8003792 <SpiFlashStore::Flash()+0x92>
 800372a:	4b1c      	ldr	r3, [pc, #112]	; (800379c <SpiFlashStore::Flash()+0x9c>)
 800372c:	4a1c      	ldr	r2, [pc, #112]	; (80037a0 <SpiFlashStore::Flash()+0xa0>)
 800372e:	681b      	ldr	r3, [r3, #0]
 8003730:	6812      	ldr	r2, [r2, #0]
 8003732:	1a9b      	subs	r3, r3, r2
 8003734:	2b63      	cmp	r3, #99	; 0x63
 8003736:	d9f6      	bls.n	8003726 <SpiFlashStore::Flash()+0x26>
 8003738:	2303      	movs	r3, #3
 800373a:	e7f3      	b.n	8003724 <SpiFlashStore::Flash()+0x24>
 800373c:	4919      	ldr	r1, [pc, #100]	; (80037a4 <SpiFlashStore::Flash()+0xa4>)
 800373e:	481a      	ldr	r0, [pc, #104]	; (80037a8 <SpiFlashStore::Flash()+0xa8>)
 8003740:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8003744:	6809      	ldr	r1, [r1, #0]
 8003746:	6800      	ldr	r0, [r0, #0]
 8003748:	ab03      	add	r3, sp, #12
 800374a:	f000 f903 	bl	8003954 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800374e:	2800      	cmp	r0, #0
 8003750:	d0e9      	beq.n	8003726 <SpiFlashStore::Flash()+0x26>
 8003752:	4b12      	ldr	r3, [pc, #72]	; (800379c <SpiFlashStore::Flash()+0x9c>)
 8003754:	681a      	ldr	r2, [r3, #0]
 8003756:	4b12      	ldr	r3, [pc, #72]	; (80037a0 <SpiFlashStore::Flash()+0xa0>)
 8003758:	601a      	str	r2, [r3, #0]
 800375a:	2305      	movs	r3, #5
 800375c:	e7e2      	b.n	8003724 <SpiFlashStore::Flash()+0x24>
 800375e:	4b0f      	ldr	r3, [pc, #60]	; (800379c <SpiFlashStore::Flash()+0x9c>)
 8003760:	4a0f      	ldr	r2, [pc, #60]	; (80037a0 <SpiFlashStore::Flash()+0xa0>)
 8003762:	681b      	ldr	r3, [r3, #0]
 8003764:	6812      	ldr	r2, [r2, #0]
 8003766:	1a9b      	subs	r3, r3, r2
 8003768:	2b63      	cmp	r3, #99	; 0x63
 800376a:	d9dc      	bls.n	8003726 <SpiFlashStore::Flash()+0x26>
 800376c:	2304      	movs	r3, #4
 800376e:	e7d9      	b.n	8003724 <SpiFlashStore::Flash()+0x24>
 8003770:	2306      	movs	r3, #6
 8003772:	e7d7      	b.n	8003724 <SpiFlashStore::Flash()+0x24>
 8003774:	ab03      	add	r3, sp, #12
 8003776:	4a0d      	ldr	r2, [pc, #52]	; (80037ac <SpiFlashStore::Flash()+0xac>)
 8003778:	490a      	ldr	r1, [pc, #40]	; (80037a4 <SpiFlashStore::Flash()+0xa4>)
 800377a:	480b      	ldr	r0, [pc, #44]	; (80037a8 <SpiFlashStore::Flash()+0xa8>)
 800377c:	9300      	str	r3, [sp, #0]
 800377e:	6812      	ldr	r2, [r2, #0]
 8003780:	4b0b      	ldr	r3, [pc, #44]	; (80037b0 <SpiFlashStore::Flash()+0xb0>)
 8003782:	6809      	ldr	r1, [r1, #0]
 8003784:	6800      	ldr	r0, [r0, #0]
 8003786:	f000 f985 	bl	8003a94 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800378a:	2800      	cmp	r0, #0
 800378c:	d0cb      	beq.n	8003726 <SpiFlashStore::Flash()+0x26>
 800378e:	2000      	movs	r0, #0
 8003790:	6020      	str	r0, [r4, #0]
 8003792:	b004      	add	sp, #16
 8003794:	bd10      	pop	{r4, pc}
 8003796:	bf00      	nop
 8003798:	20001740 	andcs	r1, r0, r0, asr #14
 800379c:	2000181c 	andcs	r1, r0, ip, lsl r8
 80037a0:	20000730 	andcs	r0, r0, r0, lsr r7
 80037a4:	20001734 	andcs	r1, r0, r4, lsr r7
 80037a8:	20001754 	andcs	r1, r0, r4, asr r7
 80037ac:	2000173c 	andcs	r1, r0, ip, lsr r7
 80037b0:	20000734 	andcs	r0, r0, r4, lsr r7

080037b4 <StoreRDMDevice::~StoreRDMDevice()>:
 80037b4:	4770      	bx	lr

080037b6 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 80037b6:	3804      	subs	r0, #4
 80037b8:	4770      	bx	lr
	...

080037bc <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 80037bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80037be:	2200      	movs	r2, #0
 80037c0:	460b      	mov	r3, r1
 80037c2:	2129      	movs	r1, #41	; 0x29
 80037c4:	e9cd 2201 	strd	r2, r2, [sp, #4]
 80037c8:	4804      	ldr	r0, [pc, #16]	; (80037dc <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 80037ca:	9100      	str	r1, [sp, #0]
 80037cc:	6800      	ldr	r0, [r0, #0]
 80037ce:	210b      	movs	r1, #11
 80037d0:	f7ff ff24 	bl	800361c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80037d4:	b005      	add	sp, #20
 80037d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80037da:	bf00      	nop
 80037dc:	20001744 	andcs	r1, r0, r4, asr #14

080037e0 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 80037e0:	b570      	push	{r4, r5, r6, lr}
 80037e2:	2401      	movs	r4, #1
 80037e4:	2600      	movs	r6, #0
 80037e6:	4d0c      	ldr	r5, [pc, #48]	; (8003818 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 80037e8:	b086      	sub	sp, #24
 80037ea:	460b      	mov	r3, r1
 80037ec:	6828      	ldr	r0, [r5, #0]
 80037ee:	f88d 2017 	strb.w	r2, [sp, #23]
 80037f2:	9200      	str	r2, [sp, #0]
 80037f4:	210b      	movs	r1, #11
 80037f6:	2204      	movs	r2, #4
 80037f8:	e9cd 4601 	strd	r4, r6, [sp, #4]
 80037fc:	f7ff ff0e 	bl	800361c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8003800:	2224      	movs	r2, #36	; 0x24
 8003802:	210b      	movs	r1, #11
 8003804:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8003808:	6828      	ldr	r0, [r5, #0]
 800380a:	9400      	str	r4, [sp, #0]
 800380c:	f10d 0317 	add.w	r3, sp, #23
 8003810:	f7ff ff04 	bl	800361c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8003814:	b006      	add	sp, #24
 8003816:	bd70      	pop	{r4, r5, r6, pc}
 8003818:	20001744 	andcs	r1, r0, r4, asr #14

0800381c <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800381c:	f1a0 0004 	sub.w	r0, r0, #4
 8003820:	e7de      	b.n	80037e0 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 8003822:	bf00      	nop

08003824 <StoreRDMDevice::~StoreRDMDevice()>:
 8003824:	b510      	push	{r4, lr}
 8003826:	4604      	mov	r4, r0
 8003828:	f000 fd3e 	bl	80042a8 <operator delete(void*)>
 800382c:	4620      	mov	r0, r4
 800382e:	bd10      	pop	{r4, pc}

08003830 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8003830:	f1a0 0004 	sub.w	r0, r0, #4
 8003834:	e7f6      	b.n	8003824 <StoreRDMDevice::~StoreRDMDevice()>
	...

08003838 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 8003838:	b507      	push	{r0, r1, r2, lr}
 800383a:	2300      	movs	r3, #0
 800383c:	460a      	mov	r2, r1
 800383e:	2101      	movs	r1, #1
 8003840:	e9cd 3100 	strd	r3, r1, [sp]
 8003844:	4804      	ldr	r0, [pc, #16]	; (8003858 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x20>)
 8003846:	2329      	movs	r3, #41	; 0x29
 8003848:	210b      	movs	r1, #11
 800384a:	6800      	ldr	r0, [r0, #0]
 800384c:	f7ff ff26 	bl	800369c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 8003850:	b003      	add	sp, #12
 8003852:	f85d fb04 	ldr.w	pc, [sp], #4
 8003856:	bf00      	nop
 8003858:	20001744 	andcs	r1, r0, r4, asr #14

0800385c <StoreRDMDevice::StoreRDMDevice()>:
 800385c:	4a03      	ldr	r2, [pc, #12]	; (800386c <StoreRDMDevice::StoreRDMDevice()+0x10>)
 800385e:	6002      	str	r2, [r0, #0]
 8003860:	321c      	adds	r2, #28
 8003862:	6042      	str	r2, [r0, #4]
 8003864:	4a02      	ldr	r2, [pc, #8]	; (8003870 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 8003866:	6010      	str	r0, [r2, #0]
 8003868:	4770      	bx	lr
 800386a:	bf00      	nop
 800386c:	08005bc0 	stmdaeq	r0, {r6, r7, r8, r9, fp, ip, lr}
 8003870:	2000174c 	andcs	r1, r0, ip, asr #14

08003874 <StoreWidget::~StoreWidget()>:
 8003874:	4770      	bx	lr

08003876 <non-virtual thunk to StoreWidget::~StoreWidget()>:
 8003876:	3804      	subs	r0, #4
 8003878:	4770      	bx	lr
	...

0800387c <StoreWidget::Update(TWidgetParams const*)>:
 800387c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800387e:	2200      	movs	r2, #0
 8003880:	460b      	mov	r3, r1
 8003882:	210c      	movs	r1, #12
 8003884:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8003888:	4804      	ldr	r0, [pc, #16]	; (800389c <StoreWidget::Update(TWidgetParams const*)+0x20>)
 800388a:	9100      	str	r1, [sp, #0]
 800388c:	6800      	ldr	r0, [r0, #0]
 800388e:	210a      	movs	r1, #10
 8003890:	f7ff fec4 	bl	800361c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8003894:	b005      	add	sp, #20
 8003896:	f85d fb04 	ldr.w	pc, [sp], #4
 800389a:	bf00      	nop
 800389c:	20001744 	andcs	r1, r0, r4, asr #14

080038a0 <StoreWidget::~StoreWidget()>:
 80038a0:	b510      	push	{r4, lr}
 80038a2:	4604      	mov	r4, r0
 80038a4:	f000 fd00 	bl	80042a8 <operator delete(void*)>
 80038a8:	4620      	mov	r0, r4
 80038aa:	bd10      	pop	{r4, pc}

080038ac <non-virtual thunk to StoreWidget::~StoreWidget()>:
 80038ac:	f1a0 0004 	sub.w	r0, r0, #4
 80038b0:	e7f6      	b.n	80038a0 <StoreWidget::~StoreWidget()>
	...

080038b4 <StoreWidget::Copy(TWidgetParams*)>:
 80038b4:	b507      	push	{r0, r1, r2, lr}
 80038b6:	2300      	movs	r3, #0
 80038b8:	460a      	mov	r2, r1
 80038ba:	2101      	movs	r1, #1
 80038bc:	e9cd 3100 	strd	r3, r1, [sp]
 80038c0:	4804      	ldr	r0, [pc, #16]	; (80038d4 <StoreWidget::Copy(TWidgetParams*)+0x20>)
 80038c2:	230c      	movs	r3, #12
 80038c4:	210a      	movs	r1, #10
 80038c6:	6800      	ldr	r0, [r0, #0]
 80038c8:	f7ff fee8 	bl	800369c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 80038cc:	b003      	add	sp, #12
 80038ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80038d2:	bf00      	nop
 80038d4:	20001744 	andcs	r1, r0, r4, asr #14

080038d8 <StoreWidget::StoreWidget()>:
 80038d8:	4a03      	ldr	r2, [pc, #12]	; (80038e8 <StoreWidget::StoreWidget()+0x10>)
 80038da:	6002      	str	r2, [r0, #0]
 80038dc:	3224      	adds	r2, #36	; 0x24
 80038de:	6042      	str	r2, [r0, #4]
 80038e0:	4a02      	ldr	r2, [pc, #8]	; (80038ec <StoreWidget::StoreWidget()+0x14>)
 80038e2:	6010      	str	r0, [r2, #0]
 80038e4:	4770      	bx	lr
 80038e6:	bf00      	nop
 80038e8:	08005bf0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, fp, ip, lr}
 80038ec:	20001750 	andcs	r1, r0, r0, asr r7

080038f0 <FlashRom::FlashRom()>:
 80038f0:	4b07      	ldr	r3, [pc, #28]	; (8003910 <FlashRom::FlashRom()+0x20>)
 80038f2:	b510      	push	{r4, lr}
 80038f4:	6018      	str	r0, [r3, #0]
 80038f6:	2301      	movs	r3, #1
 80038f8:	4604      	mov	r4, r0
 80038fa:	7003      	strb	r3, [r0, #0]
 80038fc:	4b05      	ldr	r3, [pc, #20]	; (8003914 <FlashRom::FlashRom()+0x24>)
 80038fe:	4906      	ldr	r1, [pc, #24]	; (8003918 <FlashRom::FlashRom()+0x28>)
 8003900:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8003904:	4805      	ldr	r0, [pc, #20]	; (800391c <FlashRom::FlashRom()+0x2c>)
 8003906:	029a      	lsls	r2, r3, #10
 8003908:	f7fd ff36 	bl	8001778 <printf>
 800390c:	4620      	mov	r0, r4
 800390e:	bd10      	pop	{r4, pc}
 8003910:	20001754 	andcs	r1, r0, r4, asr r7
 8003914:	1ffff700 	svcne	0x00fff700
 8003918:	080057a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, ip, lr}
 800391c:	08005c28 	stmdaeq	r0, {r3, r5, sl, fp, ip, lr}

08003920 <FlashRom::GetSize() const>:
 8003920:	4b02      	ldr	r3, [pc, #8]	; (800392c <FlashRom::GetSize() const+0xc>)
 8003922:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 8003926:	0280      	lsls	r0, r0, #10
 8003928:	4770      	bx	lr
 800392a:	bf00      	nop
 800392c:	1ffff700 	svcne	0x00fff700

08003930 <FlashRom::GetSectorSize() const>:
 8003930:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8003934:	4770      	bx	lr

08003936 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 8003936:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800393a:	441a      	add	r2, r3
 800393c:	4293      	cmp	r3, r2
 800393e:	d104      	bne.n	800394a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 8003940:	2200      	movs	r2, #0
 8003942:	9b00      	ldr	r3, [sp, #0]
 8003944:	2001      	movs	r0, #1
 8003946:	601a      	str	r2, [r3, #0]
 8003948:	4770      	bx	lr
 800394a:	f851 0b04 	ldr.w	r0, [r1], #4
 800394e:	f843 0b04 	str.w	r0, [r3], #4
 8003952:	e7f3      	b.n	800393c <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>

08003954 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 8003954:	2000      	movs	r0, #0
 8003956:	b538      	push	{r3, r4, r5, lr}
 8003958:	4c47      	ldr	r4, [pc, #284]	; (8003a78 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800395a:	6018      	str	r0, [r3, #0]
 800395c:	6823      	ldr	r3, [r4, #0]
 800395e:	2b04      	cmp	r3, #4
 8003960:	f200 8082 	bhi.w	8003a68 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 8003964:	e8df f003 	tbb	[pc, r3]
 8003968:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800396c:	4b430080 	blmi	90c3b74 <__exidx_end+0x10bdb18>
 8003970:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8003974:	6019      	str	r1, [r3, #0]
 8003976:	4b42      	ldr	r3, [pc, #264]	; (8003a80 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 8003978:	601a      	str	r2, [r3, #0]
 800397a:	4b42      	ldr	r3, [pc, #264]	; (8003a84 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800397c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8003980:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003984:	4b40      	ldr	r3, [pc, #256]	; (8003a88 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 8003986:	d807      	bhi.n	8003998 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 8003988:	2201      	movs	r2, #1
 800398a:	701a      	strb	r2, [r3, #0]
 800398c:	f000 ff18 	bl	80047c0 <fmc_bank0_unlock>
 8003990:	2301      	movs	r3, #1
 8003992:	6023      	str	r3, [r4, #0]
 8003994:	2000      	movs	r0, #0
 8003996:	e026      	b.n	80039e6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 8003998:	4a3c      	ldr	r2, [pc, #240]	; (8003a8c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800399a:	4291      	cmp	r1, r2
 800399c:	d3f4      	bcc.n	8003988 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800399e:	2200      	movs	r2, #0
 80039a0:	701a      	strb	r2, [r3, #0]
 80039a2:	f000 ff1b 	bl	80047dc <fmc_bank1_unlock>
 80039a6:	e7f3      	b.n	8003990 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 80039a8:	4d37      	ldr	r5, [pc, #220]	; (8003a88 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 80039aa:	782b      	ldrb	r3, [r5, #0]
 80039ac:	b15b      	cbz	r3, 80039c6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 80039ae:	f000 ff33 	bl	8004818 <fmc_bank0_state_get>
 80039b2:	2801      	cmp	r0, #1
 80039b4:	d0ee      	beq.n	8003994 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 80039b6:	7829      	ldrb	r1, [r5, #0]
 80039b8:	4b35      	ldr	r3, [pc, #212]	; (8003a90 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 80039ba:	b939      	cbnz	r1, 80039cc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 80039bc:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80039be:	f022 0202 	bic.w	r2, r2, #2
 80039c2:	651a      	str	r2, [r3, #80]	; 0x50
 80039c4:	e006      	b.n	80039d4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 80039c6:	f000 ff39 	bl	800483c <fmc_bank1_state_get>
 80039ca:	e7f2      	b.n	80039b2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 80039cc:	691a      	ldr	r2, [r3, #16]
 80039ce:	f022 0202 	bic.w	r2, r2, #2
 80039d2:	611a      	str	r2, [r3, #16]
 80039d4:	4b2a      	ldr	r3, [pc, #168]	; (8003a80 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	b94b      	cbnz	r3, 80039ee <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 80039da:	b129      	cbz	r1, 80039e8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 80039dc:	f000 ff0c 	bl	80047f8 <fmc_bank0_lock>
 80039e0:	2300      	movs	r3, #0
 80039e2:	2001      	movs	r0, #1
 80039e4:	6023      	str	r3, [r4, #0]
 80039e6:	bd38      	pop	{r3, r4, r5, pc}
 80039e8:	f000 ff0e 	bl	8004808 <fmc_bank1_lock>
 80039ec:	e7f8      	b.n	80039e0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 80039ee:	2302      	movs	r3, #2
 80039f0:	e7cf      	b.n	8003992 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 80039f2:	4923      	ldr	r1, [pc, #140]	; (8003a80 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 80039f4:	680b      	ldr	r3, [r1, #0]
 80039f6:	2b00      	cmp	r3, #0
 80039f8:	d0ca      	beq.n	8003990 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 80039fa:	4b23      	ldr	r3, [pc, #140]	; (8003a88 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 80039fc:	4a1f      	ldr	r2, [pc, #124]	; (8003a7c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 80039fe:	7818      	ldrb	r0, [r3, #0]
 8003a00:	4b23      	ldr	r3, [pc, #140]	; (8003a90 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 8003a02:	b190      	cbz	r0, 8003a2a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 8003a04:	6918      	ldr	r0, [r3, #16]
 8003a06:	f040 0002 	orr.w	r0, r0, #2
 8003a0a:	6118      	str	r0, [r3, #16]
 8003a0c:	6810      	ldr	r0, [r2, #0]
 8003a0e:	6158      	str	r0, [r3, #20]
 8003a10:	6918      	ldr	r0, [r3, #16]
 8003a12:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 8003a16:	6118      	str	r0, [r3, #16]
 8003a18:	680b      	ldr	r3, [r1, #0]
 8003a1a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8003a1e:	600b      	str	r3, [r1, #0]
 8003a20:	6813      	ldr	r3, [r2, #0]
 8003a22:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8003a26:	6013      	str	r3, [r2, #0]
 8003a28:	e7b2      	b.n	8003990 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 8003a2a:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8003a2c:	f040 0002 	orr.w	r0, r0, #2
 8003a30:	6518      	str	r0, [r3, #80]	; 0x50
 8003a32:	6810      	ldr	r0, [r2, #0]
 8003a34:	6558      	str	r0, [r3, #84]	; 0x54
 8003a36:	69dd      	ldr	r5, [r3, #28]
 8003a38:	07ad      	lsls	r5, r5, #30
 8003a3a:	bf48      	it	mi
 8003a3c:	6158      	strmi	r0, [r3, #20]
 8003a3e:	4814      	ldr	r0, [pc, #80]	; (8003a90 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 8003a40:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8003a42:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003a46:	6503      	str	r3, [r0, #80]	; 0x50
 8003a48:	680b      	ldr	r3, [r1, #0]
 8003a4a:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8003a4e:	600b      	str	r3, [r1, #0]
 8003a50:	6813      	ldr	r3, [r2, #0]
 8003a52:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8003a56:	e7e6      	b.n	8003a26 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 8003a58:	4b0b      	ldr	r3, [pc, #44]	; (8003a88 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 8003a5a:	781a      	ldrb	r2, [r3, #0]
 8003a5c:	4b0c      	ldr	r3, [pc, #48]	; (8003a90 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 8003a5e:	b132      	cbz	r2, 8003a6e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 8003a60:	691a      	ldr	r2, [r3, #16]
 8003a62:	f022 0201 	bic.w	r2, r2, #1
 8003a66:	611a      	str	r2, [r3, #16]
 8003a68:	2000      	movs	r0, #0
 8003a6a:	6020      	str	r0, [r4, #0]
 8003a6c:	e7bb      	b.n	80039e6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 8003a6e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003a70:	f022 0201 	bic.w	r2, r2, #1
 8003a74:	651a      	str	r2, [r3, #80]	; 0x50
 8003a76:	e7f7      	b.n	8003a68 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 8003a78:	2000175c 	andcs	r1, r0, ip, asr r7
 8003a7c:	20001760 	andcs	r1, r0, r0, ror #14
 8003a80:	2000176c 	andcs	r1, r0, ip, ror #14
 8003a84:	1ffff700 	svcne	0x00fff700
 8003a88:	20001768 	andcs	r1, r0, r8, ror #14
 8003a8c:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8003a90:	40022000 	andmi	r2, r2, r0

08003a94 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 8003a94:	b570      	push	{r4, r5, r6, lr}
 8003a96:	2400      	movs	r4, #0
 8003a98:	9804      	ldr	r0, [sp, #16]
 8003a9a:	6004      	str	r4, [r0, #0]
 8003a9c:	4c48      	ldr	r4, [pc, #288]	; (8003bc0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 8003a9e:	6820      	ldr	r0, [r4, #0]
 8003aa0:	2804      	cmp	r0, #4
 8003aa2:	d848      	bhi.n	8003b36 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 8003aa4:	e8df f000 	tbb	[pc, r0]
 8003aa8:	22847c03 	addcs	r7, r4, #768	; 0x300
 8003aac:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 8003ab0:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8003ab4:	6001      	str	r1, [r0, #0]
 8003ab6:	4844      	ldr	r0, [pc, #272]	; (8003bc8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8003ab8:	6003      	str	r3, [r0, #0]
 8003aba:	4b44      	ldr	r3, [pc, #272]	; (8003bcc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 8003abc:	601a      	str	r2, [r3, #0]
 8003abe:	4b44      	ldr	r3, [pc, #272]	; (8003bd0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 8003ac0:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8003ac4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003ac8:	4b42      	ldr	r3, [pc, #264]	; (8003bd4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8003aca:	d807      	bhi.n	8003adc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 8003acc:	2201      	movs	r2, #1
 8003ace:	701a      	strb	r2, [r3, #0]
 8003ad0:	f000 fe76 	bl	80047c0 <fmc_bank0_unlock>
 8003ad4:	2303      	movs	r3, #3
 8003ad6:	6023      	str	r3, [r4, #0]
 8003ad8:	2000      	movs	r0, #0
 8003ada:	e026      	b.n	8003b2a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 8003adc:	4a3e      	ldr	r2, [pc, #248]	; (8003bd8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 8003ade:	4291      	cmp	r1, r2
 8003ae0:	d3f4      	bcc.n	8003acc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 8003ae2:	2200      	movs	r2, #0
 8003ae4:	701a      	strb	r2, [r3, #0]
 8003ae6:	f000 fe79 	bl	80047dc <fmc_bank1_unlock>
 8003aea:	e7f3      	b.n	8003ad4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8003aec:	4d39      	ldr	r5, [pc, #228]	; (8003bd4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8003aee:	782b      	ldrb	r3, [r5, #0]
 8003af0:	b15b      	cbz	r3, 8003b0a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 8003af2:	f000 fe91 	bl	8004818 <fmc_bank0_state_get>
 8003af6:	2801      	cmp	r0, #1
 8003af8:	d0ee      	beq.n	8003ad8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 8003afa:	7829      	ldrb	r1, [r5, #0]
 8003afc:	4b37      	ldr	r3, [pc, #220]	; (8003bdc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 8003afe:	b939      	cbnz	r1, 8003b10 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 8003b00:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003b02:	f022 0201 	bic.w	r2, r2, #1
 8003b06:	651a      	str	r2, [r3, #80]	; 0x50
 8003b08:	e006      	b.n	8003b18 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 8003b0a:	f000 fe97 	bl	800483c <fmc_bank1_state_get>
 8003b0e:	e7f2      	b.n	8003af6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 8003b10:	691a      	ldr	r2, [r3, #16]
 8003b12:	f022 0201 	bic.w	r2, r2, #1
 8003b16:	611a      	str	r2, [r3, #16]
 8003b18:	4b2c      	ldr	r3, [pc, #176]	; (8003bcc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 8003b1a:	681b      	ldr	r3, [r3, #0]
 8003b1c:	b94b      	cbnz	r3, 8003b32 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 8003b1e:	b129      	cbz	r1, 8003b2c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 8003b20:	f000 fe6a 	bl	80047f8 <fmc_bank0_lock>
 8003b24:	2300      	movs	r3, #0
 8003b26:	2001      	movs	r0, #1
 8003b28:	6023      	str	r3, [r4, #0]
 8003b2a:	bd70      	pop	{r4, r5, r6, pc}
 8003b2c:	f000 fe6c 	bl	8004808 <fmc_bank1_lock>
 8003b30:	e7f8      	b.n	8003b24 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 8003b32:	2304      	movs	r3, #4
 8003b34:	e7cf      	b.n	8003ad6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 8003b36:	4a25      	ldr	r2, [pc, #148]	; (8003bcc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 8003b38:	6813      	ldr	r3, [r2, #0]
 8003b3a:	2b03      	cmp	r3, #3
 8003b3c:	d91a      	bls.n	8003b74 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 8003b3e:	4b25      	ldr	r3, [pc, #148]	; (8003bd4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8003b40:	7819      	ldrb	r1, [r3, #0]
 8003b42:	4b26      	ldr	r3, [pc, #152]	; (8003bdc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 8003b44:	b189      	cbz	r1, 8003b6a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 8003b46:	6919      	ldr	r1, [r3, #16]
 8003b48:	f041 0101 	orr.w	r1, r1, #1
 8003b4c:	6119      	str	r1, [r3, #16]
 8003b4e:	4d1e      	ldr	r5, [pc, #120]	; (8003bc8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8003b50:	481c      	ldr	r0, [pc, #112]	; (8003bc4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 8003b52:	6829      	ldr	r1, [r5, #0]
 8003b54:	6803      	ldr	r3, [r0, #0]
 8003b56:	f851 6b04 	ldr.w	r6, [r1], #4
 8003b5a:	f843 6b04 	str.w	r6, [r3], #4
 8003b5e:	6003      	str	r3, [r0, #0]
 8003b60:	6813      	ldr	r3, [r2, #0]
 8003b62:	6029      	str	r1, [r5, #0]
 8003b64:	3b04      	subs	r3, #4
 8003b66:	6013      	str	r3, [r2, #0]
 8003b68:	e7b4      	b.n	8003ad4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8003b6a:	6d19      	ldr	r1, [r3, #80]	; 0x50
 8003b6c:	f041 0101 	orr.w	r1, r1, #1
 8003b70:	6519      	str	r1, [r3, #80]	; 0x50
 8003b72:	e7ec      	b.n	8003b4e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 8003b74:	2b00      	cmp	r3, #0
 8003b76:	d0ad      	beq.n	8003ad4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8003b78:	4b16      	ldr	r3, [pc, #88]	; (8003bd4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8003b7a:	781a      	ldrb	r2, [r3, #0]
 8003b7c:	4b17      	ldr	r3, [pc, #92]	; (8003bdc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 8003b7e:	b152      	cbz	r2, 8003b96 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 8003b80:	691a      	ldr	r2, [r3, #16]
 8003b82:	f042 0201 	orr.w	r2, r2, #1
 8003b86:	611a      	str	r2, [r3, #16]
 8003b88:	4a0f      	ldr	r2, [pc, #60]	; (8003bc8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8003b8a:	4b0e      	ldr	r3, [pc, #56]	; (8003bc4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 8003b8c:	6812      	ldr	r2, [r2, #0]
 8003b8e:	681b      	ldr	r3, [r3, #0]
 8003b90:	6812      	ldr	r2, [r2, #0]
 8003b92:	601a      	str	r2, [r3, #0]
 8003b94:	e79e      	b.n	8003ad4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8003b96:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003b98:	f042 0201 	orr.w	r2, r2, #1
 8003b9c:	651a      	str	r2, [r3, #80]	; 0x50
 8003b9e:	e7f3      	b.n	8003b88 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 8003ba0:	4b0c      	ldr	r3, [pc, #48]	; (8003bd4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8003ba2:	781a      	ldrb	r2, [r3, #0]
 8003ba4:	4b0d      	ldr	r3, [pc, #52]	; (8003bdc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 8003ba6:	b132      	cbz	r2, 8003bb6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 8003ba8:	691a      	ldr	r2, [r3, #16]
 8003baa:	f022 0202 	bic.w	r2, r2, #2
 8003bae:	611a      	str	r2, [r3, #16]
 8003bb0:	2000      	movs	r0, #0
 8003bb2:	6020      	str	r0, [r4, #0]
 8003bb4:	e7b9      	b.n	8003b2a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 8003bb6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003bb8:	f022 0202 	bic.w	r2, r2, #2
 8003bbc:	651a      	str	r2, [r3, #80]	; 0x50
 8003bbe:	e7f7      	b.n	8003bb0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 8003bc0:	2000175c 	andcs	r1, r0, ip, asr r7
 8003bc4:	20001758 	andcs	r1, r0, r8, asr r7
 8003bc8:	20001764 	andcs	r1, r0, r4, ror #14
 8003bcc:	2000176c 	andcs	r1, r0, ip, ror #14
 8003bd0:	1ffff700 	svcne	0x00fff700
 8003bd4:	20001768 	andcs	r1, r0, r8, ror #14
 8003bd8:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8003bdc:	40022000 	andmi	r2, r2, r0

08003be0 <Network::Network()>:
 8003be0:	4b05      	ldr	r3, [pc, #20]	; (8003bf8 <Network::Network()+0x18>)
 8003be2:	4906      	ldr	r1, [pc, #24]	; (8003bfc <Network::Network()+0x1c>)
 8003be4:	6018      	str	r0, [r3, #0]
 8003be6:	1e42      	subs	r2, r0, #1
 8003be8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003bec:	f802 3f01 	strb.w	r3, [r2, #1]!
 8003bf0:	2b00      	cmp	r3, #0
 8003bf2:	d1f9      	bne.n	8003be8 <Network::Network()+0x8>
 8003bf4:	4770      	bx	lr
 8003bf6:	bf00      	nop
 8003bf8:	20001770 	andcs	r1, r0, r0, ror r7
 8003bfc:	08005c56 	stmdaeq	r0, {r1, r2, r4, r6, sl, fp, ip, lr}

08003c00 <Network::MacAddressCopyTo(unsigned char*)>:
 8003c00:	4608      	mov	r0, r1
 8003c02:	f001 bbe7 	b.w	80053d4 <mac_address_get(unsigned char*)>

08003c06 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8003c06:	e9c0 1200 	strd	r1, r2, [r0]
 8003c0a:	4770      	bx	lr

08003c0c <ReadConfigFile::~ReadConfigFile()>:
 8003c0c:	4770      	bx	lr

08003c0e <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8003c0e:	b538      	push	{r3, r4, r5, lr}
 8003c10:	4615      	mov	r5, r2
 8003c12:	f000 f819 	bl	8003c48 <Sscan::checkName(char const*, char const*)>
 8003c16:	b198      	cbz	r0, 8003c40 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8003c18:	4604      	mov	r4, r0
 8003c1a:	2100      	movs	r1, #0
 8003c1c:	220a      	movs	r2, #10
 8003c1e:	7823      	ldrb	r3, [r4, #0]
 8003c20:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8003c24:	2809      	cmp	r0, #9
 8003c26:	d80d      	bhi.n	8003c44 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8003c28:	fb02 3101 	mla	r1, r2, r1, r3
 8003c2c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8003c30:	3930      	subs	r1, #48	; 0x30
 8003c32:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8003c36:	d1f2      	bne.n	8003c1e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 8003c38:	29ff      	cmp	r1, #255	; 0xff
 8003c3a:	d803      	bhi.n	8003c44 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8003c3c:	7029      	strb	r1, [r5, #0]
 8003c3e:	bd38      	pop	{r3, r4, r5, pc}
 8003c40:	2001      	movs	r0, #1
 8003c42:	e7fc      	b.n	8003c3e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8003c44:	2002      	movs	r0, #2
 8003c46:	e7fa      	b.n	8003c3e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08003c48 <Sscan::checkName(char const*, char const*)>:
 8003c48:	4603      	mov	r3, r0
 8003c4a:	b510      	push	{r4, lr}
 8003c4c:	3901      	subs	r1, #1
 8003c4e:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8003c52:	461c      	mov	r4, r3
 8003c54:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003c58:	b120      	cbz	r0, 8003c64 <Sscan::checkName(char const*, char const*)+0x1c>
 8003c5a:	b10a      	cbz	r2, 8003c60 <Sscan::checkName(char const*, char const*)+0x18>
 8003c5c:	4290      	cmp	r0, r2
 8003c5e:	d0f6      	beq.n	8003c4e <Sscan::checkName(char const*, char const*)+0x6>
 8003c60:	2000      	movs	r0, #0
 8003c62:	e006      	b.n	8003c72 <Sscan::checkName(char const*, char const*)+0x2a>
 8003c64:	2a3d      	cmp	r2, #61	; 0x3d
 8003c66:	d104      	bne.n	8003c72 <Sscan::checkName(char const*, char const*)+0x2a>
 8003c68:	7860      	ldrb	r0, [r4, #1]
 8003c6a:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8003c6e:	d000      	beq.n	8003c72 <Sscan::checkName(char const*, char const*)+0x2a>
 8003c70:	1c60      	adds	r0, r4, #1
 8003c72:	bd10      	pop	{r4, pc}

08003c74 <Display::PrintInfo() [clone .isra.0]>:
 8003c74:	b910      	cbnz	r0, 8003c7c <Display::PrintInfo() [clone .isra.0]+0x8>
 8003c76:	4803      	ldr	r0, [pc, #12]	; (8003c84 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8003c78:	f000 bbb6 	b.w	80043e8 <puts>
 8003c7c:	6803      	ldr	r3, [r0, #0]
 8003c7e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003c80:	4718      	bx	r3
 8003c82:	bf00      	nop
 8003c84:	08005c59 	stmdaeq	r0, {r0, r3, r4, r6, sl, fp, ip, lr}

08003c88 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8003c88:	b513      	push	{r0, r1, r4, lr}
 8003c8a:	4604      	mov	r4, r0
 8003c8c:	0a13      	lsrs	r3, r2, #8
 8003c8e:	7800      	ldrb	r0, [r0, #0]
 8003c90:	f88d 1004 	strb.w	r1, [sp, #4]
 8003c94:	f88d 3005 	strb.w	r3, [sp, #5]
 8003c98:	f88d 2006 	strb.w	r2, [sp, #6]
 8003c9c:	f001 f9b2 	bl	8005004 <gd32_i2c_set_address>
 8003ca0:	6860      	ldr	r0, [r4, #4]
 8003ca2:	f001 f9a7 	bl	8004ff4 <gd32_i2c_set_baudrate>
 8003ca6:	2103      	movs	r1, #3
 8003ca8:	a801      	add	r0, sp, #4
 8003caa:	f001 f9b1 	bl	8005010 <gd32_i2c_write>
 8003cae:	b002      	add	sp, #8
 8003cb0:	bd10      	pop	{r4, pc}

08003cb2 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8003cb2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003cb4:	460d      	mov	r5, r1
 8003cb6:	4604      	mov	r4, r0
 8003cb8:	f001 f9a4 	bl	8005004 <gd32_i2c_set_address>
 8003cbc:	4628      	mov	r0, r5
 8003cbe:	f001 f999 	bl	8004ff4 <gd32_i2c_set_baudrate>
 8003cc2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8003cc6:	2b07      	cmp	r3, #7
 8003cc8:	d902      	bls.n	8003cd0 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8003cca:	3c50      	subs	r4, #80	; 0x50
 8003ccc:	2c0f      	cmp	r4, #15
 8003cce:	d809      	bhi.n	8003ce4 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8003cd0:	2101      	movs	r1, #1
 8003cd2:	f10d 0007 	add.w	r0, sp, #7
 8003cd6:	f001 fa01 	bl	80050dc <gd32_i2c_read>
 8003cda:	fab0 f080 	clz	r0, r0
 8003cde:	0940      	lsrs	r0, r0, #5
 8003ce0:	b003      	add	sp, #12
 8003ce2:	bd30      	pop	{r4, r5, pc}
 8003ce4:	2100      	movs	r1, #0
 8003ce6:	4608      	mov	r0, r1
 8003ce8:	f001 f992 	bl	8005010 <gd32_i2c_write>
 8003cec:	e7f5      	b.n	8003cda <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

08003cee <Display::Detect7Segment()>:
 8003cee:	b538      	push	{r3, r4, r5, lr}
 8003cf0:	68c1      	ldr	r1, [r0, #12]
 8003cf2:	4604      	mov	r4, r0
 8003cf4:	7a00      	ldrb	r0, [r0, #8]
 8003cf6:	f7ff ffdc 	bl	8003cb2 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8003cfa:	7460      	strb	r0, [r4, #17]
 8003cfc:	b170      	cbz	r0, 8003d1c <Display::Detect7Segment()+0x2e>
 8003cfe:	2200      	movs	r2, #0
 8003d00:	f104 0508 	add.w	r5, r4, #8
 8003d04:	4611      	mov	r1, r2
 8003d06:	4628      	mov	r0, r5
 8003d08:	f7ff ffbe 	bl	8003c88 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8003d0c:	7c63      	ldrb	r3, [r4, #17]
 8003d0e:	b12b      	cbz	r3, 8003d1c <Display::Detect7Segment()+0x2e>
 8003d10:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8003d14:	2112      	movs	r1, #18
 8003d16:	4628      	mov	r0, r5
 8003d18:	f7ff ffb6 	bl	8003c88 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8003d1c:	bd38      	pop	{r3, r4, r5, pc}

08003d1e <Display::Detect(display::Type)>:
 8003d1e:	2902      	cmp	r1, #2
 8003d20:	b538      	push	{r3, r4, r5, lr}
 8003d22:	4604      	mov	r4, r0
 8003d24:	d014      	beq.n	8003d50 <Display::Detect(display::Type)+0x32>
 8003d26:	2904      	cmp	r1, #4
 8003d28:	d01b      	beq.n	8003d62 <Display::Detect(display::Type)+0x44>
 8003d2a:	69a0      	ldr	r0, [r4, #24]
 8003d2c:	b168      	cbz	r0, 8003d4a <Display::Detect(display::Type)+0x2c>
 8003d2e:	6803      	ldr	r3, [r0, #0]
 8003d30:	689b      	ldr	r3, [r3, #8]
 8003d32:	4798      	blx	r3
 8003d34:	4603      	mov	r3, r0
 8003d36:	69a0      	ldr	r0, [r4, #24]
 8003d38:	b9ab      	cbnz	r3, 8003d66 <Display::Detect(display::Type)+0x48>
 8003d3a:	b110      	cbz	r0, 8003d42 <Display::Detect(display::Type)+0x24>
 8003d3c:	6803      	ldr	r3, [r0, #0]
 8003d3e:	685b      	ldr	r3, [r3, #4]
 8003d40:	4798      	blx	r3
 8003d42:	2300      	movs	r3, #0
 8003d44:	61a3      	str	r3, [r4, #24]
 8003d46:	2304      	movs	r3, #4
 8003d48:	6023      	str	r3, [r4, #0]
 8003d4a:	2300      	movs	r3, #0
 8003d4c:	6163      	str	r3, [r4, #20]
 8003d4e:	e010      	b.n	8003d72 <Display::Detect(display::Type)+0x54>
 8003d50:	2018      	movs	r0, #24
 8003d52:	f000 faab 	bl	80042ac <operator new(unsigned int)>
 8003d56:	4605      	mov	r5, r0
 8003d58:	2100      	movs	r1, #0
 8003d5a:	f000 f89d 	bl	8003e98 <Ssd1306::Ssd1306(TOledPanel)>
 8003d5e:	61a5      	str	r5, [r4, #24]
 8003d60:	e7e3      	b.n	8003d2a <Display::Detect(display::Type)+0xc>
 8003d62:	6001      	str	r1, [r0, #0]
 8003d64:	e7e1      	b.n	8003d2a <Display::Detect(display::Type)+0xc>
 8003d66:	6803      	ldr	r3, [r0, #0]
 8003d68:	68db      	ldr	r3, [r3, #12]
 8003d6a:	4798      	blx	r3
 8003d6c:	69a3      	ldr	r3, [r4, #24]
 8003d6e:	2b00      	cmp	r3, #0
 8003d70:	d0eb      	beq.n	8003d4a <Display::Detect(display::Type)+0x2c>
 8003d72:	bd38      	pop	{r3, r4, r5, pc}

08003d74 <Display::Display()>:
 8003d74:	2304      	movs	r3, #4
 8003d76:	b510      	push	{r4, lr}
 8003d78:	6003      	str	r3, [r0, #0]
 8003d7a:	4b0f      	ldr	r3, [pc, #60]	; (8003db8 <Display::Display()+0x44>)
 8003d7c:	4604      	mov	r4, r0
 8003d7e:	681b      	ldr	r3, [r3, #0]
 8003d80:	4a0e      	ldr	r2, [pc, #56]	; (8003dbc <Display::Display()+0x48>)
 8003d82:	6043      	str	r3, [r0, #4]
 8003d84:	2321      	movs	r3, #33	; 0x21
 8003d86:	7203      	strb	r3, [r0, #8]
 8003d88:	4b0d      	ldr	r3, [pc, #52]	; (8003dc0 <Display::Display()+0x4c>)
 8003d8a:	2102      	movs	r1, #2
 8003d8c:	60c3      	str	r3, [r0, #12]
 8003d8e:	2300      	movs	r3, #0
 8003d90:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8003d94:	8203      	strh	r3, [r0, #16]
 8003d96:	4b0b      	ldr	r3, [pc, #44]	; (8003dc4 <Display::Display()+0x50>)
 8003d98:	6018      	str	r0, [r3, #0]
 8003d9a:	f7ff ffc0 	bl	8003d1e <Display::Detect(display::Type)>
 8003d9e:	4620      	mov	r0, r4
 8003da0:	f7ff ffa5 	bl	8003cee <Display::Detect7Segment()>
 8003da4:	69a3      	ldr	r3, [r4, #24]
 8003da6:	b10b      	cbz	r3, 8003dac <Display::Display()+0x38>
 8003da8:	f000 fa06 	bl	80041b8 <display::timeout::gpio_init()>
 8003dac:	69a0      	ldr	r0, [r4, #24]
 8003dae:	f7ff ff61 	bl	8003c74 <Display::PrintInfo() [clone .isra.0]>
 8003db2:	4620      	mov	r0, r4
 8003db4:	bd10      	pop	{r4, pc}
 8003db6:	bf00      	nop
 8003db8:	2000181c 	andcs	r1, r0, ip, lsl r8
 8003dbc:	000493e0 	andeq	r9, r4, r0, ror #7
 8003dc0:	00061a80 	andeq	r1, r6, r0, lsl #21
 8003dc4:	20001774 	andcs	r1, r0, r4, ror r7

08003dc8 <Ssd1306::~Ssd1306()>:
 8003dc8:	4770      	bx	lr

08003dca <Ssd1306::SetCursor(unsigned int)>:
 8003dca:	4770      	bx	lr

08003dcc <Ssd1306::PrintInfo()>:
 8003dcc:	b410      	push	{r4}
 8003dce:	4906      	ldr	r1, [pc, #24]	; (8003de8 <Ssd1306::PrintInfo()+0x1c>)
 8003dd0:	7c44      	ldrb	r4, [r0, #17]
 8003dd2:	7903      	ldrb	r3, [r0, #4]
 8003dd4:	7942      	ldrb	r2, [r0, #5]
 8003dd6:	4805      	ldr	r0, [pc, #20]	; (8003dec <Ssd1306::PrintInfo()+0x20>)
 8003dd8:	2c00      	cmp	r4, #0
 8003dda:	bf08      	it	eq
 8003ddc:	4601      	moveq	r1, r0
 8003dde:	4804      	ldr	r0, [pc, #16]	; (8003df0 <Ssd1306::PrintInfo()+0x24>)
 8003de0:	bc10      	pop	{r4}
 8003de2:	f7fd bcc9 	b.w	8001778 <printf>
 8003de6:	bf00      	nop
 8003de8:	08005c6a 	stmdaeq	r0, {r1, r3, r5, r6, sl, fp, ip, lr}
 8003dec:	08005c71 	stmdaeq	r0, {r0, r4, r5, r6, sl, fp, ip, lr}
 8003df0:	08005c79 	stmdaeq	r0, {r0, r3, r4, r5, r6, sl, fp, ip, lr}

08003df4 <Ssd1306::~Ssd1306()>:
 8003df4:	b510      	push	{r4, lr}
 8003df6:	4604      	mov	r4, r0
 8003df8:	f000 fa56 	bl	80042a8 <operator delete(void*)>
 8003dfc:	4620      	mov	r0, r4
 8003dfe:	bd10      	pop	{r4, pc}

08003e00 <HAL_I2C::Setup()>:
 8003e00:	b510      	push	{r4, lr}
 8003e02:	4604      	mov	r4, r0
 8003e04:	7800      	ldrb	r0, [r0, #0]
 8003e06:	f001 f8fd 	bl	8005004 <gd32_i2c_set_address>
 8003e0a:	6860      	ldr	r0, [r4, #4]
 8003e0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003e10:	f001 b8f0 	b.w	8004ff4 <gd32_i2c_set_baudrate>

08003e14 <Ssd1306::PutChar(int)>:
 8003e14:	b510      	push	{r4, lr}
 8003e16:	f1a1 0420 	sub.w	r4, r1, #32
 8003e1a:	2c5f      	cmp	r4, #95	; 0x5f
 8003e1c:	bf88      	it	hi
 8003e1e:	2400      	movhi	r4, #0
 8003e20:	3008      	adds	r0, #8
 8003e22:	f7ff ffed 	bl	8003e00 <HAL_I2C::Setup()>
 8003e26:	4804      	ldr	r0, [pc, #16]	; (8003e38 <Ssd1306::PutChar(int)+0x24>)
 8003e28:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8003e2c:	4420      	add	r0, r4
 8003e2e:	2107      	movs	r1, #7
 8003e30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003e34:	f001 b8ec 	b.w	8005010 <gd32_i2c_write>
 8003e38:	08005c8c 	stmdaeq	r0, {r2, r3, r7, sl, fp, ip, lr}

08003e3c <Ssd1306::PutString(char const*)>:
 8003e3c:	b538      	push	{r3, r4, r5, lr}
 8003e3e:	4605      	mov	r5, r0
 8003e40:	1e4c      	subs	r4, r1, #1
 8003e42:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8003e46:	b901      	cbnz	r1, 8003e4a <Ssd1306::PutString(char const*)+0xe>
 8003e48:	bd38      	pop	{r3, r4, r5, pc}
 8003e4a:	4628      	mov	r0, r5
 8003e4c:	f7ff ffe2 	bl	8003e14 <Ssd1306::PutChar(int)>
 8003e50:	e7f7      	b.n	8003e42 <Ssd1306::PutString(char const*)+0x6>

08003e52 <Ssd1306::Text(char const*, unsigned int)>:
 8003e52:	b570      	push	{r4, r5, r6, lr}
 8003e54:	7903      	ldrb	r3, [r0, #4]
 8003e56:	4605      	mov	r5, r0
 8003e58:	460c      	mov	r4, r1
 8003e5a:	4293      	cmp	r3, r2
 8003e5c:	bf94      	ite	ls
 8003e5e:	18ce      	addls	r6, r1, r3
 8003e60:	188e      	addhi	r6, r1, r2
 8003e62:	42b4      	cmp	r4, r6
 8003e64:	d100      	bne.n	8003e68 <Ssd1306::Text(char const*, unsigned int)+0x16>
 8003e66:	bd70      	pop	{r4, r5, r6, pc}
 8003e68:	4628      	mov	r0, r5
 8003e6a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e6e:	f7ff ffd1 	bl	8003e14 <Ssd1306::PutChar(int)>
 8003e72:	e7f6      	b.n	8003e62 <Ssd1306::Text(char const*, unsigned int)+0x10>

08003e74 <Ssd1306::InitMembers()>:
 8003e74:	7c03      	ldrb	r3, [r0, #16]
 8003e76:	b14b      	cbz	r3, 8003e8c <Ssd1306::InitMembers()+0x18>
 8003e78:	3b01      	subs	r3, #1
 8003e7a:	2b01      	cmp	r3, #1
 8003e7c:	d909      	bls.n	8003e92 <Ssd1306::InitMembers()+0x1e>
 8003e7e:	2308      	movs	r3, #8
 8003e80:	2204      	movs	r2, #4
 8003e82:	2115      	movs	r1, #21
 8003e84:	7143      	strb	r3, [r0, #5]
 8003e86:	7101      	strb	r1, [r0, #4]
 8003e88:	6142      	str	r2, [r0, #20]
 8003e8a:	4770      	bx	lr
 8003e8c:	2308      	movs	r3, #8
 8003e8e:	461a      	mov	r2, r3
 8003e90:	e7f7      	b.n	8003e82 <Ssd1306::InitMembers()+0xe>
 8003e92:	2304      	movs	r3, #4
 8003e94:	e7fb      	b.n	8003e8e <Ssd1306::InitMembers()+0x1a>
	...

08003e98 <Ssd1306::Ssd1306(TOledPanel)>:
 8003e98:	4a08      	ldr	r2, [pc, #32]	; (8003ebc <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8003e9a:	b508      	push	{r3, lr}
 8003e9c:	6002      	str	r2, [r0, #0]
 8003e9e:	227f      	movs	r2, #127	; 0x7f
 8003ea0:	80c2      	strh	r2, [r0, #6]
 8003ea2:	223c      	movs	r2, #60	; 0x3c
 8003ea4:	7202      	strb	r2, [r0, #8]
 8003ea6:	4a06      	ldr	r2, [pc, #24]	; (8003ec0 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8003ea8:	7401      	strb	r1, [r0, #16]
 8003eaa:	60c2      	str	r2, [r0, #12]
 8003eac:	2200      	movs	r2, #0
 8003eae:	7442      	strb	r2, [r0, #17]
 8003eb0:	4a04      	ldr	r2, [pc, #16]	; (8003ec4 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8003eb2:	6010      	str	r0, [r2, #0]
 8003eb4:	f7ff ffde 	bl	8003e74 <Ssd1306::InitMembers()>
 8003eb8:	bd08      	pop	{r3, pc}
 8003eba:	bf00      	nop
 8003ebc:	08005f64 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, fp, ip, lr}
 8003ec0:	00061a80 	andeq	r1, r6, r0, lsl #21
 8003ec4:	20001800 	andcs	r1, r0, r0, lsl #16

08003ec8 <Ssd1306::SendCommand(unsigned char)>:
 8003ec8:	2300      	movs	r3, #0
 8003eca:	b507      	push	{r0, r1, r2, lr}
 8003ecc:	3008      	adds	r0, #8
 8003ece:	f88d 3004 	strb.w	r3, [sp, #4]
 8003ed2:	f88d 1005 	strb.w	r1, [sp, #5]
 8003ed6:	f7ff ff93 	bl	8003e00 <HAL_I2C::Setup()>
 8003eda:	2102      	movs	r1, #2
 8003edc:	a801      	add	r0, sp, #4
 8003ede:	f001 f897 	bl	8005010 <gd32_i2c_write>
 8003ee2:	b003      	add	sp, #12
 8003ee4:	f85d fb04 	ldr.w	pc, [sp], #4

08003ee8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8003ee8:	2914      	cmp	r1, #20
 8003eea:	b570      	push	{r4, r5, r6, lr}
 8003eec:	4605      	mov	r5, r0
 8003eee:	4616      	mov	r6, r2
 8003ef0:	d81c      	bhi.n	8003f2c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8003ef2:	7943      	ldrb	r3, [r0, #5]
 8003ef4:	4293      	cmp	r3, r2
 8003ef6:	d919      	bls.n	8003f2c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8003ef8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8003efc:	7c43      	ldrb	r3, [r0, #17]
 8003efe:	004c      	lsls	r4, r1, #1
 8003f00:	b2e4      	uxtb	r4, r4
 8003f02:	b10b      	cbz	r3, 8003f08 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8003f04:	3404      	adds	r4, #4
 8003f06:	b2e4      	uxtb	r4, r4
 8003f08:	4628      	mov	r0, r5
 8003f0a:	f004 010e 	and.w	r1, r4, #14
 8003f0e:	f7ff ffdb 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 8003f12:	0921      	lsrs	r1, r4, #4
 8003f14:	4628      	mov	r0, r5
 8003f16:	f041 0110 	orr.w	r1, r1, #16
 8003f1a:	f7ff ffd5 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 8003f1e:	4628      	mov	r0, r5
 8003f20:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8003f24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003f28:	f7ff bfce 	b.w	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 8003f2c:	bd70      	pop	{r4, r5, r6, pc}

08003f2e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8003f2e:	b570      	push	{r4, r5, r6, lr}
 8003f30:	461e      	mov	r6, r3
 8003f32:	7943      	ldrb	r3, [r0, #5]
 8003f34:	4604      	mov	r4, r0
 8003f36:	428b      	cmp	r3, r1
 8003f38:	4615      	mov	r5, r2
 8003f3a:	d30b      	bcc.n	8003f54 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 8003f3c:	3901      	subs	r1, #1
 8003f3e:	b2ca      	uxtb	r2, r1
 8003f40:	2100      	movs	r1, #0
 8003f42:	f7ff ffd1 	bl	8003ee8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003f46:	4632      	mov	r2, r6
 8003f48:	4629      	mov	r1, r5
 8003f4a:	4620      	mov	r0, r4
 8003f4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003f50:	f7ff bf7f 	b.w	8003e52 <Ssd1306::Text(char const*, unsigned int)>
 8003f54:	bd70      	pop	{r4, r5, r6, pc}
	...

08003f58 <Ssd1306::ClearLine(unsigned char)>:
 8003f58:	b538      	push	{r3, r4, r5, lr}
 8003f5a:	7943      	ldrb	r3, [r0, #5]
 8003f5c:	4605      	mov	r5, r0
 8003f5e:	428b      	cmp	r3, r1
 8003f60:	d314      	bcc.n	8003f8c <Ssd1306::ClearLine(unsigned char)+0x34>
 8003f62:	3901      	subs	r1, #1
 8003f64:	b2cc      	uxtb	r4, r1
 8003f66:	4622      	mov	r2, r4
 8003f68:	2100      	movs	r1, #0
 8003f6a:	f7ff ffbd 	bl	8003ee8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003f6e:	f105 0008 	add.w	r0, r5, #8
 8003f72:	f7ff ff45 	bl	8003e00 <HAL_I2C::Setup()>
 8003f76:	2181      	movs	r1, #129	; 0x81
 8003f78:	4805      	ldr	r0, [pc, #20]	; (8003f90 <Ssd1306::ClearLine(unsigned char)+0x38>)
 8003f7a:	f001 f849 	bl	8005010 <gd32_i2c_write>
 8003f7e:	4622      	mov	r2, r4
 8003f80:	4628      	mov	r0, r5
 8003f82:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003f86:	2100      	movs	r1, #0
 8003f88:	f7ff bfae 	b.w	8003ee8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003f8c:	bd38      	pop	{r3, r4, r5, pc}
 8003f8e:	bf00      	nop
 8003f90:	20001778 	andcs	r1, r0, r8, ror r7

08003f94 <Ssd1306::SetSleep(bool)>:
 8003f94:	b111      	cbz	r1, 8003f9c <Ssd1306::SetSleep(bool)+0x8>
 8003f96:	21ae      	movs	r1, #174	; 0xae
 8003f98:	f7ff bf96 	b.w	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 8003f9c:	21af      	movs	r1, #175	; 0xaf
 8003f9e:	e7fb      	b.n	8003f98 <Ssd1306::SetSleep(bool)+0x4>

08003fa0 <Ssd1306::SetContrast(unsigned char)>:
 8003fa0:	b538      	push	{r3, r4, r5, lr}
 8003fa2:	4604      	mov	r4, r0
 8003fa4:	460d      	mov	r5, r1
 8003fa6:	7181      	strb	r1, [r0, #6]
 8003fa8:	2181      	movs	r1, #129	; 0x81
 8003faa:	f7ff ff8d 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 8003fae:	4629      	mov	r1, r5
 8003fb0:	4620      	mov	r0, r4
 8003fb2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003fb6:	f7ff bf87 	b.w	8003ec8 <Ssd1306::SendCommand(unsigned char)>

08003fba <Ssd1306::SetFlipVertically(bool)>:
 8003fba:	b510      	push	{r4, lr}
 8003fbc:	4604      	mov	r4, r0
 8003fbe:	71c1      	strb	r1, [r0, #7]
 8003fc0:	b141      	cbz	r1, 8003fd4 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8003fc2:	21c0      	movs	r1, #192	; 0xc0
 8003fc4:	f7ff ff80 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 8003fc8:	21a0      	movs	r1, #160	; 0xa0
 8003fca:	4620      	mov	r0, r4
 8003fcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003fd0:	f7ff bf7a 	b.w	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 8003fd4:	21c8      	movs	r1, #200	; 0xc8
 8003fd6:	f7ff ff77 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 8003fda:	21a1      	movs	r1, #161	; 0xa1
 8003fdc:	e7f5      	b.n	8003fca <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08003fe0 <Ssd1306::CheckSH1106()>:
 8003fe0:	b530      	push	{r4, r5, lr}
 8003fe2:	4604      	mov	r4, r0
 8003fe4:	b087      	sub	sp, #28
 8003fe6:	2100      	movs	r1, #0
 8003fe8:	f7ff ff6e 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 8003fec:	2190      	movs	r1, #144	; 0x90
 8003fee:	4620      	mov	r0, r4
 8003ff0:	f7ff ff6a 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 8003ff4:	21b0      	movs	r1, #176	; 0xb0
 8003ff6:	4620      	mov	r0, r4
 8003ff8:	f7ff ff66 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 8003ffc:	4b22      	ldr	r3, [pc, #136]	; (8004088 <Ssd1306::CheckSH1106()+0xa8>)
 8003ffe:	f104 0508 	add.w	r5, r4, #8
 8004002:	6818      	ldr	r0, [r3, #0]
 8004004:	791b      	ldrb	r3, [r3, #4]
 8004006:	9002      	str	r0, [sp, #8]
 8004008:	4628      	mov	r0, r5
 800400a:	f88d 300c 	strb.w	r3, [sp, #12]
 800400e:	f7ff fef7 	bl	8003e00 <HAL_I2C::Setup()>
 8004012:	2105      	movs	r1, #5
 8004014:	a802      	add	r0, sp, #8
 8004016:	f000 fffb 	bl	8005010 <gd32_i2c_write>
 800401a:	2100      	movs	r1, #0
 800401c:	4620      	mov	r0, r4
 800401e:	f7ff ff53 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 8004022:	2190      	movs	r1, #144	; 0x90
 8004024:	4620      	mov	r0, r4
 8004026:	f7ff ff4f 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 800402a:	21b0      	movs	r1, #176	; 0xb0
 800402c:	4620      	mov	r0, r4
 800402e:	f7ff ff4b 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 8004032:	2300      	movs	r3, #0
 8004034:	9304      	str	r3, [sp, #16]
 8004036:	f88d 3014 	strb.w	r3, [sp, #20]
 800403a:	2340      	movs	r3, #64	; 0x40
 800403c:	4628      	mov	r0, r5
 800403e:	f88d 3007 	strb.w	r3, [sp, #7]
 8004042:	f7ff fedd 	bl	8003e00 <HAL_I2C::Setup()>
 8004046:	2101      	movs	r1, #1
 8004048:	f10d 0007 	add.w	r0, sp, #7
 800404c:	f000 ffe0 	bl	8005010 <gd32_i2c_write>
 8004050:	4628      	mov	r0, r5
 8004052:	f7ff fed5 	bl	8003e00 <HAL_I2C::Setup()>
 8004056:	2105      	movs	r1, #5
 8004058:	a804      	add	r0, sp, #16
 800405a:	f001 f83f 	bl	80050dc <gd32_i2c_read>
 800405e:	2004      	movs	r0, #4
 8004060:	aa02      	add	r2, sp, #8
 8004062:	a904      	add	r1, sp, #16
 8004064:	3801      	subs	r0, #1
 8004066:	d201      	bcs.n	800406c <Ssd1306::CheckSH1106()+0x8c>
 8004068:	2300      	movs	r3, #0
 800406a:	e006      	b.n	800407a <Ssd1306::CheckSH1106()+0x9a>
 800406c:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8004070:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8004074:	42ab      	cmp	r3, r5
 8004076:	d0f5      	beq.n	8004064 <Ssd1306::CheckSH1106()+0x84>
 8004078:	1b5b      	subs	r3, r3, r5
 800407a:	fab3 f383 	clz	r3, r3
 800407e:	095b      	lsrs	r3, r3, #5
 8004080:	7463      	strb	r3, [r4, #17]
 8004082:	b007      	add	sp, #28
 8004084:	bd30      	pop	{r4, r5, pc}
 8004086:	bf00      	nop
 8004088:	08005c85 	stmdaeq	r0, {r0, r2, r7, sl, fp, ip, lr}

0800408c <Ssd1306::Cls()>:
 800408c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004090:	4604      	mov	r4, r0
 8004092:	2600      	movs	r6, #0
 8004094:	7c45      	ldrb	r5, [r0, #17]
 8004096:	00ad      	lsls	r5, r5, #2
 8004098:	b2ed      	uxtb	r5, r5
 800409a:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 800409e:	f045 0810 	orr.w	r8, r5, #16
 80040a2:	b2ff      	uxtb	r7, r7
 80040a4:	6963      	ldr	r3, [r4, #20]
 80040a6:	4629      	mov	r1, r5
 80040a8:	42b3      	cmp	r3, r6
 80040aa:	4620      	mov	r0, r4
 80040ac:	d80b      	bhi.n	80040c6 <Ssd1306::Cls()+0x3a>
 80040ae:	f7ff ff0b 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 80040b2:	4641      	mov	r1, r8
 80040b4:	4620      	mov	r0, r4
 80040b6:	f7ff ff07 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 80040ba:	4620      	mov	r0, r4
 80040bc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80040c0:	21b0      	movs	r1, #176	; 0xb0
 80040c2:	f7ff bf01 	b.w	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 80040c6:	f7ff feff 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 80040ca:	4641      	mov	r1, r8
 80040cc:	4620      	mov	r0, r4
 80040ce:	f7ff fefb 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 80040d2:	f066 014f 	orn	r1, r6, #79	; 0x4f
 80040d6:	4620      	mov	r0, r4
 80040d8:	b2c9      	uxtb	r1, r1
 80040da:	f7ff fef5 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 80040de:	7c23      	ldrb	r3, [r4, #16]
 80040e0:	b123      	cbz	r3, 80040ec <Ssd1306::Cls()+0x60>
 80040e2:	3b01      	subs	r3, #1
 80040e4:	2b01      	cmp	r3, #1
 80040e6:	d901      	bls.n	80040ec <Ssd1306::Cls()+0x60>
 80040e8:	3601      	adds	r6, #1
 80040ea:	e7db      	b.n	80040a4 <Ssd1306::Cls()+0x18>
 80040ec:	f104 0008 	add.w	r0, r4, #8
 80040f0:	f7ff fe86 	bl	8003e00 <HAL_I2C::Setup()>
 80040f4:	4639      	mov	r1, r7
 80040f6:	4802      	ldr	r0, [pc, #8]	; (8004100 <Ssd1306::Cls()+0x74>)
 80040f8:	f000 ff8a 	bl	8005010 <gd32_i2c_write>
 80040fc:	e7f4      	b.n	80040e8 <Ssd1306::Cls()+0x5c>
 80040fe:	bf00      	nop
 8004100:	20001778 	andcs	r1, r0, r8, ror r7

08004104 <Ssd1306::Start()>:
 8004104:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004106:	7a04      	ldrb	r4, [r0, #8]
 8004108:	68c6      	ldr	r6, [r0, #12]
 800410a:	4605      	mov	r5, r0
 800410c:	4620      	mov	r0, r4
 800410e:	f000 ff79 	bl	8005004 <gd32_i2c_set_address>
 8004112:	4630      	mov	r0, r6
 8004114:	f000 ff6e 	bl	8004ff4 <gd32_i2c_set_baudrate>
 8004118:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800411c:	2b07      	cmp	r3, #7
 800411e:	d902      	bls.n	8004126 <Ssd1306::Start()+0x22>
 8004120:	3c50      	subs	r4, #80	; 0x50
 8004122:	2c0f      	cmp	r4, #15
 8004124:	d80f      	bhi.n	8004146 <Ssd1306::Start()+0x42>
 8004126:	2101      	movs	r1, #1
 8004128:	f10d 0007 	add.w	r0, sp, #7
 800412c:	f000 ffd6 	bl	80050dc <gd32_i2c_read>
 8004130:	fab0 f480 	clz	r4, r0
 8004134:	0964      	lsrs	r4, r4, #5
 8004136:	b35c      	cbz	r4, 8004190 <Ssd1306::Start()+0x8c>
 8004138:	7c2e      	ldrb	r6, [r5, #16]
 800413a:	b14e      	cbz	r6, 8004150 <Ssd1306::Start()+0x4c>
 800413c:	3e01      	subs	r6, #1
 800413e:	2e01      	cmp	r6, #1
 8004140:	d929      	bls.n	8004196 <Ssd1306::Start()+0x92>
 8004142:	2400      	movs	r4, #0
 8004144:	e024      	b.n	8004190 <Ssd1306::Start()+0x8c>
 8004146:	2100      	movs	r1, #0
 8004148:	4608      	mov	r0, r1
 800414a:	f000 ff61 	bl	8005010 <gd32_i2c_write>
 800414e:	e7ef      	b.n	8004130 <Ssd1306::Start()+0x2c>
 8004150:	4f16      	ldr	r7, [pc, #88]	; (80041ac <Ssd1306::Start()+0xa8>)
 8004152:	4628      	mov	r0, r5
 8004154:	f817 1b01 	ldrb.w	r1, [r7], #1
 8004158:	3601      	adds	r6, #1
 800415a:	f7ff feb5 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 800415e:	2e18      	cmp	r6, #24
 8004160:	d1f7      	bne.n	8004152 <Ssd1306::Start()+0x4e>
 8004162:	2300      	movs	r3, #0
 8004164:	4a12      	ldr	r2, [pc, #72]	; (80041b0 <Ssd1306::Start()+0xac>)
 8004166:	4618      	mov	r0, r3
 8004168:	4611      	mov	r1, r2
 800416a:	3301      	adds	r3, #1
 800416c:	2b86      	cmp	r3, #134	; 0x86
 800416e:	f802 0b01 	strb.w	r0, [r2], #1
 8004172:	d1fa      	bne.n	800416a <Ssd1306::Start()+0x66>
 8004174:	2340      	movs	r3, #64	; 0x40
 8004176:	4628      	mov	r0, r5
 8004178:	700b      	strb	r3, [r1, #0]
 800417a:	f7ff ff31 	bl	8003fe0 <Ssd1306::CheckSH1106()>
 800417e:	4628      	mov	r0, r5
 8004180:	f7ff ff84 	bl	800408c <Ssd1306::Cls()>
 8004184:	21af      	movs	r1, #175	; 0xaf
 8004186:	4628      	mov	r0, r5
 8004188:	f7ff fe9e 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 800418c:	2301      	movs	r3, #1
 800418e:	71eb      	strb	r3, [r5, #7]
 8004190:	4620      	mov	r0, r4
 8004192:	b003      	add	sp, #12
 8004194:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004196:	2600      	movs	r6, #0
 8004198:	4f06      	ldr	r7, [pc, #24]	; (80041b4 <Ssd1306::Start()+0xb0>)
 800419a:	4628      	mov	r0, r5
 800419c:	f817 1b01 	ldrb.w	r1, [r7], #1
 80041a0:	3601      	adds	r6, #1
 80041a2:	f7ff fe91 	bl	8003ec8 <Ssd1306::SendCommand(unsigned char)>
 80041a6:	2e18      	cmp	r6, #24
 80041a8:	d1f7      	bne.n	800419a <Ssd1306::Start()+0x96>
 80041aa:	e7da      	b.n	8004162 <Ssd1306::Start()+0x5e>
 80041ac:	08005f44 	stmdaeq	r0, {r2, r6, r8, r9, sl, fp, ip, lr}
 80041b0:	20001778 	andcs	r1, r0, r8, ror r7
 80041b4:	08005f2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, fp, ip, lr}

080041b8 <display::timeout::gpio_init()>:
 80041b8:	4770      	bx	lr

080041ba <console_putc>:
 80041ba:	f000 b9b7 	b.w	800452c <uart0_putc>

080041be <console_puts>:
 80041be:	f000 b9d5 	b.w	800456c <uart0_puts>
	...

080041c4 <LedBlink::LedBlink()>:
 80041c4:	b538      	push	{r3, r4, r5, lr}
 80041c6:	2205      	movs	r2, #5
 80041c8:	2300      	movs	r3, #0
 80041ca:	e9c0 3200 	strd	r3, r2, [r0]
 80041ce:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80041d2:	6083      	str	r3, [r0, #8]
 80041d4:	e9c0 2303 	strd	r2, r3, [r0, #12]
 80041d8:	6143      	str	r3, [r0, #20]
 80041da:	4b09      	ldr	r3, [pc, #36]	; (8004200 <LedBlink::LedBlink()+0x3c>)
 80041dc:	4d09      	ldr	r5, [pc, #36]	; (8004204 <LedBlink::LedBlink()+0x40>)
 80041de:	4604      	mov	r4, r0
 80041e0:	6018      	str	r0, [r3, #0]
 80041e2:	f240 6004 	movw	r0, #1540	; 0x604
 80041e6:	f000 fc07 	bl	80049f8 <rcu_periph_clock_enable>
 80041ea:	4628      	mov	r0, r5
 80041ec:	2301      	movs	r3, #1
 80041ee:	2203      	movs	r2, #3
 80041f0:	2110      	movs	r1, #16
 80041f2:	f000 fb6f 	bl	80048d4 <gpio_init>
 80041f6:	2301      	movs	r3, #1
 80041f8:	4620      	mov	r0, r4
 80041fa:	616b      	str	r3, [r5, #20]
 80041fc:	bd38      	pop	{r3, r4, r5, pc}
 80041fe:	bf00      	nop
 8004200:	20001804 	andcs	r1, r0, r4, lsl #16
 8004204:	40011000 	andmi	r1, r1, r0

08004208 <Hardware::Hardware()>:
 8004208:	b570      	push	{r4, r5, r6, lr}
 800420a:	2400      	movs	r4, #0
 800420c:	4b24      	ldr	r3, [pc, #144]	; (80042a0 <Hardware::Hardware()+0x98>)
 800420e:	b090      	sub	sp, #64	; 0x40
 8004210:	7004      	strb	r4, [r0, #0]
 8004212:	6018      	str	r0, [r3, #0]
 8004214:	4605      	mov	r5, r0
 8004216:	f7fb ff8b 	bl	8000130 <console_init>
 800421a:	f000 f9b7 	bl	800458c <systick_config>
 800421e:	f001 f8ed 	bl	80053fc <udelay_init()>
 8004222:	f001 f8e9 	bl	80053f8 <micros_init()>
 8004226:	f240 701b 	movw	r0, #1819	; 0x71b
 800422a:	f000 fbe5 	bl	80049f8 <rcu_periph_clock_enable>
 800422e:	f240 701c 	movw	r0, #1820	; 0x71c
 8004232:	f000 fbe1 	bl	80049f8 <rcu_periph_clock_enable>
 8004236:	4e1b      	ldr	r6, [pc, #108]	; (80042a4 <Hardware::Hardware()+0x9c>)
 8004238:	f000 fbd6 	bl	80049e8 <pmu_backup_write_enable>
 800423c:	4621      	mov	r1, r4
 800423e:	2002      	movs	r0, #2
 8004240:	f000 fa32 	bl	80046a8 <bkp_data_write>
 8004244:	f240 7004 	movw	r0, #1796	; 0x704
 8004248:	f000 fbd6 	bl	80049f8 <rcu_periph_clock_enable>
 800424c:	4630      	mov	r0, r6
 800424e:	f000 fc79 	bl	8004b44 <timer_deinit>
 8004252:	236b      	movs	r3, #107	; 0x6b
 8004254:	f8ad 300c 	strh.w	r3, [sp, #12]
 8004258:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800425c:	a903      	add	r1, sp, #12
 800425e:	4630      	mov	r0, r6
 8004260:	9305      	str	r3, [sp, #20]
 8004262:	f000 fcd1 	bl	8004c08 <timer_init>
 8004266:	4630      	mov	r0, r6
 8004268:	f000 fd26 	bl	8004cb8 <timer_enable>
 800426c:	f000 fe34 	bl	8004ed8 <gd32_adc_init()>
 8004270:	220b      	movs	r2, #11
 8004272:	2309      	movs	r3, #9
 8004274:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8004278:	237a      	movs	r3, #122	; 0x7a
 800427a:	a807      	add	r0, sp, #28
 800427c:	930c      	str	r3, [sp, #48]	; 0x30
 800427e:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8004282:	9407      	str	r4, [sp, #28]
 8004284:	940f      	str	r4, [sp, #60]	; 0x3c
 8004286:	f000 f8dd 	bl	8004444 <mktime>
 800428a:	4621      	mov	r1, r4
 800428c:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8004290:	a801      	add	r0, sp, #4
 8004292:	f000 f923 	bl	80044dc <settimeofday>
 8004296:	f000 fe79 	bl	8004f8c <gd32_i2c_begin>
 800429a:	4628      	mov	r0, r5
 800429c:	b010      	add	sp, #64	; 0x40
 800429e:	bd70      	pop	{r4, r5, r6, pc}
 80042a0:	20001808 	andcs	r1, r0, r8, lsl #16
 80042a4:	40001000 	andmi	r1, r0, r0

080042a8 <operator delete(void*)>:
 80042a8:	f000 b84c 	b.w	8004344 <free>

080042ac <operator new(unsigned int)>:
 80042ac:	f000 b800 	b.w	80042b0 <malloc>

080042b0 <malloc>:
 80042b0:	b538      	push	{r3, r4, r5, lr}
 80042b2:	4604      	mov	r4, r0
 80042b4:	4601      	mov	r1, r0
 80042b6:	481c      	ldr	r0, [pc, #112]	; (8004328 <malloc+0x78>)
 80042b8:	f7fd fa5e 	bl	8001778 <printf>
 80042bc:	b17c      	cbz	r4, 80042de <malloc+0x2e>
 80042be:	4b1b      	ldr	r3, [pc, #108]	; (800432c <malloc+0x7c>)
 80042c0:	6818      	ldr	r0, [r3, #0]
 80042c2:	b978      	cbnz	r0, 80042e4 <malloc+0x34>
 80042c4:	4a1a      	ldr	r2, [pc, #104]	; (8004330 <malloc+0x80>)
 80042c6:	f104 031b 	add.w	r3, r4, #27
 80042ca:	6811      	ldr	r1, [r2, #0]
 80042cc:	4819      	ldr	r0, [pc, #100]	; (8004334 <malloc+0x84>)
 80042ce:	f023 030f 	bic.w	r3, r3, #15
 80042d2:	440b      	add	r3, r1
 80042d4:	4283      	cmp	r3, r0
 80042d6:	d921      	bls.n	800431c <malloc+0x6c>
 80042d8:	4817      	ldr	r0, [pc, #92]	; (8004338 <malloc+0x88>)
 80042da:	f7fd fa4d 	bl	8001778 <printf>
 80042de:	2500      	movs	r5, #0
 80042e0:	4628      	mov	r0, r5
 80042e2:	bd38      	pop	{r3, r4, r5, pc}
 80042e4:	4284      	cmp	r4, r0
 80042e6:	d80a      	bhi.n	80042fe <malloc+0x4e>
 80042e8:	685a      	ldr	r2, [r3, #4]
 80042ea:	6899      	ldr	r1, [r3, #8]
 80042ec:	3201      	adds	r2, #1
 80042ee:	428a      	cmp	r2, r1
 80042f0:	605a      	str	r2, [r3, #4]
 80042f2:	d900      	bls.n	80042f6 <malloc+0x46>
 80042f4:	609a      	str	r2, [r3, #8]
 80042f6:	68d9      	ldr	r1, [r3, #12]
 80042f8:	b919      	cbnz	r1, 8004302 <malloc+0x52>
 80042fa:	4604      	mov	r4, r0
 80042fc:	e7e2      	b.n	80042c4 <malloc+0x14>
 80042fe:	3310      	adds	r3, #16
 8004300:	e7de      	b.n	80042c0 <malloc+0x10>
 8004302:	4604      	mov	r4, r0
 8004304:	688a      	ldr	r2, [r1, #8]
 8004306:	60da      	str	r2, [r3, #12]
 8004308:	2300      	movs	r3, #0
 800430a:	f101 050c 	add.w	r5, r1, #12
 800430e:	608b      	str	r3, [r1, #8]
 8004310:	4622      	mov	r2, r4
 8004312:	462b      	mov	r3, r5
 8004314:	4809      	ldr	r0, [pc, #36]	; (800433c <malloc+0x8c>)
 8004316:	f7fd fa2f 	bl	8001778 <printf>
 800431a:	e7e1      	b.n	80042e0 <malloc+0x30>
 800431c:	6013      	str	r3, [r2, #0]
 800431e:	4b08      	ldr	r3, [pc, #32]	; (8004340 <malloc+0x90>)
 8004320:	e9c1 3400 	strd	r3, r4, [r1]
 8004324:	e7f0      	b.n	8004308 <malloc+0x58>
 8004326:	bf00      	nop
 8004328:	08005fa8 	stmdaeq	r0, {r3, r5, r7, r8, r9, sl, fp, ip, lr}
 800432c:	20000018 	andcs	r0, r0, r8, lsl r0
 8004330:	20000014 	andcs	r0, r0, r4, lsl r0
 8004334:	2000b000 	andcs	fp, r0, r0
 8004338:	08005fb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl, fp, ip, lr}
 800433c:	08005fd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, fp, ip, lr}
 8004340:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08004344 <free>:
 8004344:	b538      	push	{r3, r4, r5, lr}
 8004346:	4604      	mov	r4, r0
 8004348:	b1c8      	cbz	r0, 800437e <free+0x3a>
 800434a:	f1a0 050c 	sub.w	r5, r0, #12
 800434e:	4602      	mov	r2, r0
 8004350:	4629      	mov	r1, r5
 8004352:	480c      	ldr	r0, [pc, #48]	; (8004384 <free+0x40>)
 8004354:	f7fd fa10 	bl	8001778 <printf>
 8004358:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800435c:	4b0a      	ldr	r3, [pc, #40]	; (8004388 <free+0x44>)
 800435e:	429a      	cmp	r2, r3
 8004360:	d10d      	bne.n	800437e <free+0x3a>
 8004362:	4b0a      	ldr	r3, [pc, #40]	; (800438c <free+0x48>)
 8004364:	681a      	ldr	r2, [r3, #0]
 8004366:	b152      	cbz	r2, 800437e <free+0x3a>
 8004368:	f854 1c08 	ldr.w	r1, [r4, #-8]
 800436c:	4291      	cmp	r1, r2
 800436e:	d107      	bne.n	8004380 <free+0x3c>
 8004370:	68da      	ldr	r2, [r3, #12]
 8004372:	f844 2c04 	str.w	r2, [r4, #-4]
 8004376:	685a      	ldr	r2, [r3, #4]
 8004378:	60dd      	str	r5, [r3, #12]
 800437a:	3a01      	subs	r2, #1
 800437c:	605a      	str	r2, [r3, #4]
 800437e:	bd38      	pop	{r3, r4, r5, pc}
 8004380:	3310      	adds	r3, #16
 8004382:	e7ef      	b.n	8004364 <free+0x20>
 8004384:	08005ffb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
 8004388:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 800438c:	20000018 	andcs	r0, r0, r8, lsl r0

08004390 <memcpy>:
 8004390:	b510      	push	{r4, lr}
 8004392:	1e43      	subs	r3, r0, #1
 8004394:	440a      	add	r2, r1
 8004396:	4291      	cmp	r1, r2
 8004398:	d100      	bne.n	800439c <memcpy+0xc>
 800439a:	bd10      	pop	{r4, pc}
 800439c:	f811 4b01 	ldrb.w	r4, [r1], #1
 80043a0:	f803 4f01 	strb.w	r4, [r3, #1]!
 80043a4:	e7f7      	b.n	8004396 <memcpy+0x6>

080043a6 <memset>:
 80043a6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80043a8:	b1c2      	cbz	r2, 80043dc <memset+0x36>
 80043aa:	4603      	mov	r3, r0
 80043ac:	b2c9      	uxtb	r1, r1
 80043ae:	075c      	lsls	r4, r3, #29
 80043b0:	d110      	bne.n	80043d4 <memset+0x2e>
 80043b2:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 80043b6:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 80043ba:	463d      	mov	r5, r7
 80043bc:	461e      	mov	r6, r3
 80043be:	f022 0407 	bic.w	r4, r2, #7
 80043c2:	441c      	add	r4, r3
 80043c4:	42a6      	cmp	r6, r4
 80043c6:	d10a      	bne.n	80043de <memset+0x38>
 80043c8:	4413      	add	r3, r2
 80043ca:	429c      	cmp	r4, r3
 80043cc:	d006      	beq.n	80043dc <memset+0x36>
 80043ce:	f804 1b01 	strb.w	r1, [r4], #1
 80043d2:	e7fa      	b.n	80043ca <memset+0x24>
 80043d4:	3a01      	subs	r2, #1
 80043d6:	f803 1b01 	strb.w	r1, [r3], #1
 80043da:	d1e8      	bne.n	80043ae <memset+0x8>
 80043dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80043de:	f846 7b08 	str.w	r7, [r6], #8
 80043e2:	f846 5c04 	str.w	r5, [r6, #-4]
 80043e6:	e7ed      	b.n	80043c4 <memset+0x1e>

080043e8 <puts>:
 80043e8:	b508      	push	{r3, lr}
 80043ea:	f7ff fee8 	bl	80041be <console_puts>
 80043ee:	200a      	movs	r0, #10
 80043f0:	f7ff fee3 	bl	80041ba <console_putc>
 80043f4:	2001      	movs	r0, #1
 80043f6:	bd08      	pop	{r3, pc}

080043f8 <isleapyear>:
 80043f8:	2264      	movs	r2, #100	; 0x64
 80043fa:	fb90 f3f2 	sdiv	r3, r0, r2
 80043fe:	fb02 0313 	mls	r3, r2, r3, r0
 8004402:	b94b      	cbnz	r3, 8004418 <isleapyear+0x20>
 8004404:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8004408:	fb90 f2f3 	sdiv	r2, r0, r3
 800440c:	fb03 0012 	mls	r0, r3, r2, r0
 8004410:	fab0 f080 	clz	r0, r0
 8004414:	0940      	lsrs	r0, r0, #5
 8004416:	4770      	bx	lr
 8004418:	f010 0f03 	tst.w	r0, #3
 800441c:	bf0c      	ite	eq
 800441e:	2001      	moveq	r0, #1
 8004420:	2000      	movne	r0, #0
 8004422:	4770      	bx	lr

08004424 <getdaysofmonth>:
 8004424:	b510      	push	{r4, lr}
 8004426:	4604      	mov	r4, r0
 8004428:	2c01      	cmp	r4, #1
 800442a:	4608      	mov	r0, r1
 800442c:	d102      	bne.n	8004434 <getdaysofmonth+0x10>
 800442e:	f7ff ffe3 	bl	80043f8 <isleapyear>
 8004432:	b918      	cbnz	r0, 800443c <getdaysofmonth+0x18>
 8004434:	4b02      	ldr	r3, [pc, #8]	; (8004440 <getdaysofmonth+0x1c>)
 8004436:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800443a:	bd10      	pop	{r4, pc}
 800443c:	201d      	movs	r0, #29
 800443e:	e7fc      	b.n	800443a <getdaysofmonth+0x16>
 8004440:	08006024 	stmdaeq	r0, {r2, r5, sp, lr}

08004444 <mktime>:
 8004444:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004448:	4604      	mov	r4, r0
 800444a:	2800      	cmp	r0, #0
 800444c:	d043      	beq.n	80044d6 <mktime+0x92>
 800444e:	6941      	ldr	r1, [r0, #20]
 8004450:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8004454:	2b45      	cmp	r3, #69	; 0x45
 8004456:	d83e      	bhi.n	80044d6 <mktime+0x92>
 8004458:	2600      	movs	r6, #0
 800445a:	f240 75b2 	movw	r5, #1970	; 0x7b2
 800445e:	f240 186d 	movw	r8, #365	; 0x16d
 8004462:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 8004466:	42af      	cmp	r7, r5
 8004468:	da24      	bge.n	80044b4 <mktime+0x70>
 800446a:	6927      	ldr	r7, [r4, #16]
 800446c:	2f0b      	cmp	r7, #11
 800446e:	d832      	bhi.n	80044d6 <mktime+0x92>
 8004470:	2500      	movs	r5, #0
 8004472:	42af      	cmp	r7, r5
 8004474:	d129      	bne.n	80044ca <mktime+0x86>
 8004476:	68e5      	ldr	r5, [r4, #12]
 8004478:	2d00      	cmp	r5, #0
 800447a:	dd2c      	ble.n	80044d6 <mktime+0x92>
 800447c:	4638      	mov	r0, r7
 800447e:	f7ff ffd1 	bl	8004424 <getdaysofmonth>
 8004482:	4285      	cmp	r5, r0
 8004484:	dc27      	bgt.n	80044d6 <mktime+0x92>
 8004486:	2318      	movs	r3, #24
 8004488:	3d01      	subs	r5, #1
 800448a:	4435      	add	r5, r6
 800448c:	435d      	muls	r5, r3
 800448e:	68a3      	ldr	r3, [r4, #8]
 8004490:	2b17      	cmp	r3, #23
 8004492:	d820      	bhi.n	80044d6 <mktime+0x92>
 8004494:	213c      	movs	r1, #60	; 0x3c
 8004496:	442b      	add	r3, r5
 8004498:	fb01 f203 	mul.w	r2, r1, r3
 800449c:	6863      	ldr	r3, [r4, #4]
 800449e:	2b3b      	cmp	r3, #59	; 0x3b
 80044a0:	d819      	bhi.n	80044d6 <mktime+0x92>
 80044a2:	6820      	ldr	r0, [r4, #0]
 80044a4:	4413      	add	r3, r2
 80044a6:	283b      	cmp	r0, #59	; 0x3b
 80044a8:	fb01 f303 	mul.w	r3, r1, r3
 80044ac:	d813      	bhi.n	80044d6 <mktime+0x92>
 80044ae:	4418      	add	r0, r3
 80044b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80044b4:	4628      	mov	r0, r5
 80044b6:	f7ff ff9f 	bl	80043f8 <isleapyear>
 80044ba:	2800      	cmp	r0, #0
 80044bc:	bf14      	ite	ne
 80044be:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 80044c2:	4643      	moveq	r3, r8
 80044c4:	3501      	adds	r5, #1
 80044c6:	441e      	add	r6, r3
 80044c8:	e7cd      	b.n	8004466 <mktime+0x22>
 80044ca:	4628      	mov	r0, r5
 80044cc:	f7ff ffaa 	bl	8004424 <getdaysofmonth>
 80044d0:	3501      	adds	r5, #1
 80044d2:	4406      	add	r6, r0
 80044d4:	e7cd      	b.n	8004472 <mktime+0x2e>
 80044d6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80044da:	e7e9      	b.n	80044b0 <mktime+0x6c>

080044dc <settimeofday>:
 80044dc:	4b07      	ldr	r3, [pc, #28]	; (80044fc <settimeofday+0x20>)
 80044de:	b510      	push	{r4, lr}
 80044e0:	681a      	ldr	r2, [r3, #0]
 80044e2:	4b07      	ldr	r3, [pc, #28]	; (8004500 <settimeofday+0x24>)
 80044e4:	6804      	ldr	r4, [r0, #0]
 80044e6:	601a      	str	r2, [r3, #0]
 80044e8:	6843      	ldr	r3, [r0, #4]
 80044ea:	4806      	ldr	r0, [pc, #24]	; (8004504 <settimeofday+0x28>)
 80044ec:	17da      	asrs	r2, r3, #31
 80044ee:	fbc4 3200 	smlal	r3, r2, r4, r0
 80044f2:	4905      	ldr	r1, [pc, #20]	; (8004508 <settimeofday+0x2c>)
 80044f4:	2000      	movs	r0, #0
 80044f6:	e9c1 3200 	strd	r3, r2, [r1]
 80044fa:	bd10      	pop	{r4, pc}
 80044fc:	2000181c 	andcs	r1, r0, ip, lsl r8
 8004500:	20001818 	andcs	r1, r0, r8, lsl r8
 8004504:	000f4240 	andeq	r4, pc, r0, asr #4
 8004508:	20001810 	andcs	r1, r0, r0, lsl r8

0800450c <uart0_init>:
 800450c:	2301      	movs	r3, #1
 800450e:	b507      	push	{r0, r1, r2, lr}
 8004510:	2208      	movs	r2, #8
 8004512:	9300      	str	r3, [sp, #0]
 8004514:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8004518:	2300      	movs	r3, #0
 800451a:	4803      	ldr	r0, [pc, #12]	; (8004528 <uart0_init+0x1c>)
 800451c:	f000 fe82 	bl	8005224 <gd32_uart_begin>
 8004520:	b003      	add	sp, #12
 8004522:	f85d fb04 	ldr.w	pc, [sp], #4
 8004526:	bf00      	nop
 8004528:	40013800 	andmi	r3, r1, r0, lsl #16

0800452c <uart0_putc>:
 800452c:	280a      	cmp	r0, #10
 800452e:	b538      	push	{r3, r4, r5, lr}
 8004530:	4604      	mov	r4, r0
 8004532:	d10a      	bne.n	800454a <uart0_putc+0x1e>
 8004534:	4d0b      	ldr	r5, [pc, #44]	; (8004564 <uart0_putc+0x38>)
 8004536:	2107      	movs	r1, #7
 8004538:	4628      	mov	r0, r5
 800453a:	f000 fc9f 	bl	8004e7c <usart_flag_get>
 800453e:	2800      	cmp	r0, #0
 8004540:	d0f9      	beq.n	8004536 <uart0_putc+0xa>
 8004542:	220d      	movs	r2, #13
 8004544:	4b08      	ldr	r3, [pc, #32]	; (8004568 <uart0_putc+0x3c>)
 8004546:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 800454a:	4d06      	ldr	r5, [pc, #24]	; (8004564 <uart0_putc+0x38>)
 800454c:	2107      	movs	r1, #7
 800454e:	4628      	mov	r0, r5
 8004550:	f000 fc94 	bl	8004e7c <usart_flag_get>
 8004554:	2800      	cmp	r0, #0
 8004556:	d0f9      	beq.n	800454c <uart0_putc+0x20>
 8004558:	4b03      	ldr	r3, [pc, #12]	; (8004568 <uart0_putc+0x3c>)
 800455a:	b2e4      	uxtb	r4, r4
 800455c:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8004560:	bd38      	pop	{r3, r4, r5, pc}
 8004562:	bf00      	nop
 8004564:	40013800 	andmi	r3, r1, r0, lsl #16
 8004568:	40013000 	andmi	r3, r1, r0

0800456c <uart0_puts>:
 800456c:	b510      	push	{r4, lr}
 800456e:	1e44      	subs	r4, r0, #1
 8004570:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8004574:	b903      	cbnz	r3, 8004578 <uart0_puts+0xc>
 8004576:	bd10      	pop	{r4, pc}
 8004578:	2b0a      	cmp	r3, #10
 800457a:	d102      	bne.n	8004582 <uart0_puts+0x16>
 800457c:	200d      	movs	r0, #13
 800457e:	f7ff ffd5 	bl	800452c <uart0_putc>
 8004582:	7820      	ldrb	r0, [r4, #0]
 8004584:	f7ff ffd2 	bl	800452c <uart0_putc>
 8004588:	e7f2      	b.n	8004570 <uart0_puts+0x4>
	...

0800458c <systick_config>:
 800458c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004590:	4b0b      	ldr	r3, [pc, #44]	; (80045c0 <systick_config+0x34>)
 8004592:	681b      	ldr	r3, [r3, #0]
 8004594:	fbb3 f3f2 	udiv	r3, r3, r2
 8004598:	3b01      	subs	r3, #1
 800459a:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800459e:	d20d      	bcs.n	80045bc <systick_config+0x30>
 80045a0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80045a4:	21f0      	movs	r1, #240	; 0xf0
 80045a6:	6153      	str	r3, [r2, #20]
 80045a8:	4b06      	ldr	r3, [pc, #24]	; (80045c4 <systick_config+0x38>)
 80045aa:	2007      	movs	r0, #7
 80045ac:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80045b0:	2100      	movs	r1, #0
 80045b2:	6191      	str	r1, [r2, #24]
 80045b4:	6110      	str	r0, [r2, #16]
 80045b6:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80045ba:	4770      	bx	lr
 80045bc:	e7fe      	b.n	80045bc <systick_config+0x30>
 80045be:	bf00      	nop
 80045c0:	200000e8 	andcs	r0, r0, r8, ror #1
 80045c4:	e000ed00 	and	lr, r0, r0, lsl #26

080045c8 <SysTick_Handler>:
 80045c8:	4a02      	ldr	r2, [pc, #8]	; (80045d4 <SysTick_Handler+0xc>)
 80045ca:	6813      	ldr	r3, [r2, #0]
 80045cc:	3301      	adds	r3, #1
 80045ce:	6013      	str	r3, [r2, #0]
 80045d0:	4770      	bx	lr
 80045d2:	bf00      	nop
 80045d4:	2000181c 	andcs	r1, r0, ip, lsl r8

080045d8 <SystemInit>:
 80045d8:	4b30      	ldr	r3, [pc, #192]	; (800469c <SystemInit+0xc4>)
 80045da:	4931      	ldr	r1, [pc, #196]	; (80046a0 <SystemInit+0xc8>)
 80045dc:	681a      	ldr	r2, [r3, #0]
 80045de:	f042 0201 	orr.w	r2, r2, #1
 80045e2:	601a      	str	r2, [r3, #0]
 80045e4:	685a      	ldr	r2, [r3, #4]
 80045e6:	f022 0203 	bic.w	r2, r2, #3
 80045ea:	605a      	str	r2, [r3, #4]
 80045ec:	681a      	ldr	r2, [r3, #0]
 80045ee:	400a      	ands	r2, r1
 80045f0:	601a      	str	r2, [r3, #0]
 80045f2:	6858      	ldr	r0, [r3, #4]
 80045f4:	4a2b      	ldr	r2, [pc, #172]	; (80046a4 <SystemInit+0xcc>)
 80045f6:	4002      	ands	r2, r0
 80045f8:	605a      	str	r2, [r3, #4]
 80045fa:	681a      	ldr	r2, [r3, #0]
 80045fc:	400a      	ands	r2, r1
 80045fe:	601a      	str	r2, [r3, #0]
 8004600:	681a      	ldr	r2, [r3, #0]
 8004602:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004606:	601a      	str	r2, [r3, #0]
 8004608:	685a      	ldr	r2, [r3, #4]
 800460a:	f022 620f 	bic.w	r2, r2, #149946368	; 0x8f00000
 800460e:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8004612:	605a      	str	r2, [r3, #4]
 8004614:	681a      	ldr	r2, [r3, #0]
 8004616:	400a      	ands	r2, r1
 8004618:	601a      	str	r2, [r3, #0]
 800461a:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 800461e:	609a      	str	r2, [r3, #8]
 8004620:	681a      	ldr	r2, [r3, #0]
 8004622:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8004626:	601a      	str	r2, [r3, #0]
 8004628:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800462c:	6819      	ldr	r1, [r3, #0]
 800462e:	0389      	lsls	r1, r1, #14
 8004630:	d401      	bmi.n	8004636 <SystemInit+0x5e>
 8004632:	3a01      	subs	r2, #1
 8004634:	d1fa      	bne.n	800462c <SystemInit+0x54>
 8004636:	681a      	ldr	r2, [r3, #0]
 8004638:	0390      	lsls	r0, r2, #14
 800463a:	d400      	bmi.n	800463e <SystemInit+0x66>
 800463c:	e7fe      	b.n	800463c <SystemInit+0x64>
 800463e:	685a      	ldr	r2, [r3, #4]
 8004640:	605a      	str	r2, [r3, #4]
 8004642:	685a      	ldr	r2, [r3, #4]
 8004644:	605a      	str	r2, [r3, #4]
 8004646:	685a      	ldr	r2, [r3, #4]
 8004648:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800464c:	605a      	str	r2, [r3, #4]
 800464e:	685a      	ldr	r2, [r3, #4]
 8004650:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8004654:	605a      	str	r2, [r3, #4]
 8004656:	685a      	ldr	r2, [r3, #4]
 8004658:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 800465c:	605a      	str	r2, [r3, #4]
 800465e:	685a      	ldr	r2, [r3, #4]
 8004660:	f022 6203 	bic.w	r2, r2, #137363456	; 0x8300000
 8004664:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8004668:	605a      	str	r2, [r3, #4]
 800466a:	685a      	ldr	r2, [r3, #4]
 800466c:	f042 6202 	orr.w	r2, r2, #136314880	; 0x8200000
 8004670:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8004674:	605a      	str	r2, [r3, #4]
 8004676:	681a      	ldr	r2, [r3, #0]
 8004678:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800467c:	601a      	str	r2, [r3, #0]
 800467e:	681a      	ldr	r2, [r3, #0]
 8004680:	0191      	lsls	r1, r2, #6
 8004682:	d5fc      	bpl.n	800467e <SystemInit+0xa6>
 8004684:	685a      	ldr	r2, [r3, #4]
 8004686:	f022 0203 	bic.w	r2, r2, #3
 800468a:	605a      	str	r2, [r3, #4]
 800468c:	685a      	ldr	r2, [r3, #4]
 800468e:	f042 0202 	orr.w	r2, r2, #2
 8004692:	605a      	str	r2, [r3, #4]
 8004694:	685a      	ldr	r2, [r3, #4]
 8004696:	0712      	lsls	r2, r2, #28
 8004698:	d5fc      	bpl.n	8004694 <SystemInit+0xbc>
 800469a:	4770      	bx	lr
 800469c:	40021000 	andmi	r1, r2, r0
 80046a0:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 80046a4:	e8ff000c 	ldm	pc!, {r2, r3}^	; <UNPREDICTABLE>

080046a8 <bkp_data_write>:
 80046a8:	f1a0 030b 	sub.w	r3, r0, #11
 80046ac:	2b1f      	cmp	r3, #31
 80046ae:	d804      	bhi.n	80046ba <bkp_data_write+0x12>
 80046b0:	4b07      	ldr	r3, [pc, #28]	; (80046d0 <bkp_data_write+0x28>)
 80046b2:	4403      	add	r3, r0
 80046b4:	009b      	lsls	r3, r3, #2
 80046b6:	8019      	strh	r1, [r3, #0]
 80046b8:	4770      	bx	lr
 80046ba:	1e43      	subs	r3, r0, #1
 80046bc:	2b09      	cmp	r3, #9
 80046be:	bf9f      	itttt	ls
 80046c0:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 80046c4:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 80046c8:	0080      	lslls	r0, r0, #2
 80046ca:	8001      	strhls	r1, [r0, #0]
 80046cc:	4770      	bx	lr
 80046ce:	bf00      	nop
 80046d0:	10001b05 	andne	r1, r0, r5, lsl #22

080046d4 <dma_deinit>:
 80046d4:	4b0c      	ldr	r3, [pc, #48]	; (8004708 <dma_deinit+0x34>)
 80046d6:	4298      	cmp	r0, r3
 80046d8:	d102      	bne.n	80046e0 <dma_deinit+0xc>
 80046da:	2904      	cmp	r1, #4
 80046dc:	d900      	bls.n	80046e0 <dma_deinit+0xc>
 80046de:	e7fe      	b.n	80046de <dma_deinit+0xa>
 80046e0:	2314      	movs	r3, #20
 80046e2:	fb03 0301 	mla	r3, r3, r1, r0
 80046e6:	689a      	ldr	r2, [r3, #8]
 80046e8:	0089      	lsls	r1, r1, #2
 80046ea:	f022 0201 	bic.w	r2, r2, #1
 80046ee:	609a      	str	r2, [r3, #8]
 80046f0:	2200      	movs	r2, #0
 80046f2:	609a      	str	r2, [r3, #8]
 80046f4:	60da      	str	r2, [r3, #12]
 80046f6:	611a      	str	r2, [r3, #16]
 80046f8:	615a      	str	r2, [r3, #20]
 80046fa:	230f      	movs	r3, #15
 80046fc:	6842      	ldr	r2, [r0, #4]
 80046fe:	408b      	lsls	r3, r1
 8004700:	4313      	orrs	r3, r2
 8004702:	6043      	str	r3, [r0, #4]
 8004704:	4770      	bx	lr
 8004706:	bf00      	nop
 8004708:	40020400 	andmi	r0, r2, r0, lsl #8

0800470c <dma_init>:
 800470c:	4b1b      	ldr	r3, [pc, #108]	; (800477c <dma_init+0x70>)
 800470e:	b510      	push	{r4, lr}
 8004710:	4298      	cmp	r0, r3
 8004712:	d102      	bne.n	800471a <dma_init+0xe>
 8004714:	2904      	cmp	r1, #4
 8004716:	d900      	bls.n	800471a <dma_init+0xe>
 8004718:	e7fe      	b.n	8004718 <dma_init+0xc>
 800471a:	2314      	movs	r3, #20
 800471c:	fb03 0101 	mla	r1, r3, r1, r0
 8004720:	6813      	ldr	r3, [r2, #0]
 8004722:	610b      	str	r3, [r1, #16]
 8004724:	6893      	ldr	r3, [r2, #8]
 8004726:	614b      	str	r3, [r1, #20]
 8004728:	8a13      	ldrh	r3, [r2, #16]
 800472a:	60cb      	str	r3, [r1, #12]
 800472c:	68d4      	ldr	r4, [r2, #12]
 800472e:	6853      	ldr	r3, [r2, #4]
 8004730:	6888      	ldr	r0, [r1, #8]
 8004732:	4323      	orrs	r3, r4
 8004734:	6954      	ldr	r4, [r2, #20]
 8004736:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 800473a:	4323      	orrs	r3, r4
 800473c:	4303      	orrs	r3, r0
 800473e:	608b      	str	r3, [r1, #8]
 8004740:	7e13      	ldrb	r3, [r2, #24]
 8004742:	2b01      	cmp	r3, #1
 8004744:	688b      	ldr	r3, [r1, #8]
 8004746:	bf0c      	ite	eq
 8004748:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 800474c:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8004750:	608b      	str	r3, [r1, #8]
 8004752:	7e53      	ldrb	r3, [r2, #25]
 8004754:	2b01      	cmp	r3, #1
 8004756:	688b      	ldr	r3, [r1, #8]
 8004758:	bf0c      	ite	eq
 800475a:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 800475e:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8004762:	608b      	str	r3, [r1, #8]
 8004764:	7e93      	ldrb	r3, [r2, #26]
 8004766:	b923      	cbnz	r3, 8004772 <dma_init+0x66>
 8004768:	688b      	ldr	r3, [r1, #8]
 800476a:	f023 0310 	bic.w	r3, r3, #16
 800476e:	608b      	str	r3, [r1, #8]
 8004770:	bd10      	pop	{r4, pc}
 8004772:	688b      	ldr	r3, [r1, #8]
 8004774:	f043 0310 	orr.w	r3, r3, #16
 8004778:	e7f9      	b.n	800476e <dma_init+0x62>
 800477a:	bf00      	nop
 800477c:	40020400 	andmi	r0, r2, r0, lsl #8

08004780 <dma_circulation_disable>:
 8004780:	4b06      	ldr	r3, [pc, #24]	; (800479c <dma_circulation_disable+0x1c>)
 8004782:	4298      	cmp	r0, r3
 8004784:	d102      	bne.n	800478c <dma_circulation_disable+0xc>
 8004786:	2904      	cmp	r1, #4
 8004788:	d900      	bls.n	800478c <dma_circulation_disable+0xc>
 800478a:	e7fe      	b.n	800478a <dma_circulation_disable+0xa>
 800478c:	2314      	movs	r3, #20
 800478e:	4359      	muls	r1, r3
 8004790:	3008      	adds	r0, #8
 8004792:	580b      	ldr	r3, [r1, r0]
 8004794:	f023 0320 	bic.w	r3, r3, #32
 8004798:	500b      	str	r3, [r1, r0]
 800479a:	4770      	bx	lr
 800479c:	40020400 	andmi	r0, r2, r0, lsl #8

080047a0 <dma_memory_to_memory_disable>:
 80047a0:	4b06      	ldr	r3, [pc, #24]	; (80047bc <dma_memory_to_memory_disable+0x1c>)
 80047a2:	4298      	cmp	r0, r3
 80047a4:	d102      	bne.n	80047ac <dma_memory_to_memory_disable+0xc>
 80047a6:	2904      	cmp	r1, #4
 80047a8:	d900      	bls.n	80047ac <dma_memory_to_memory_disable+0xc>
 80047aa:	e7fe      	b.n	80047aa <dma_memory_to_memory_disable+0xa>
 80047ac:	2314      	movs	r3, #20
 80047ae:	4359      	muls	r1, r3
 80047b0:	3008      	adds	r0, #8
 80047b2:	580b      	ldr	r3, [r1, r0]
 80047b4:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80047b8:	500b      	str	r3, [r1, r0]
 80047ba:	4770      	bx	lr
 80047bc:	40020400 	andmi	r0, r2, r0, lsl #8

080047c0 <fmc_bank0_unlock>:
 80047c0:	4b04      	ldr	r3, [pc, #16]	; (80047d4 <fmc_bank0_unlock+0x14>)
 80047c2:	691a      	ldr	r2, [r3, #16]
 80047c4:	0612      	lsls	r2, r2, #24
 80047c6:	bf41      	itttt	mi
 80047c8:	4a03      	ldrmi	r2, [pc, #12]	; (80047d8 <fmc_bank0_unlock+0x18>)
 80047ca:	605a      	strmi	r2, [r3, #4]
 80047cc:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80047d0:	605a      	strmi	r2, [r3, #4]
 80047d2:	4770      	bx	lr
 80047d4:	40022000 	andmi	r2, r2, r0
 80047d8:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080047dc <fmc_bank1_unlock>:
 80047dc:	4b04      	ldr	r3, [pc, #16]	; (80047f0 <fmc_bank1_unlock+0x14>)
 80047de:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80047e0:	0612      	lsls	r2, r2, #24
 80047e2:	bf41      	itttt	mi
 80047e4:	4a03      	ldrmi	r2, [pc, #12]	; (80047f4 <fmc_bank1_unlock+0x18>)
 80047e6:	645a      	strmi	r2, [r3, #68]	; 0x44
 80047e8:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80047ec:	645a      	strmi	r2, [r3, #68]	; 0x44
 80047ee:	4770      	bx	lr
 80047f0:	40022000 	andmi	r2, r2, r0
 80047f4:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080047f8 <fmc_bank0_lock>:
 80047f8:	4a02      	ldr	r2, [pc, #8]	; (8004804 <fmc_bank0_lock+0xc>)
 80047fa:	6913      	ldr	r3, [r2, #16]
 80047fc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004800:	6113      	str	r3, [r2, #16]
 8004802:	4770      	bx	lr
 8004804:	40022000 	andmi	r2, r2, r0

08004808 <fmc_bank1_lock>:
 8004808:	4a02      	ldr	r2, [pc, #8]	; (8004814 <fmc_bank1_lock+0xc>)
 800480a:	6d13      	ldr	r3, [r2, #80]	; 0x50
 800480c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004810:	6513      	str	r3, [r2, #80]	; 0x50
 8004812:	4770      	bx	lr
 8004814:	40022000 	andmi	r2, r2, r0

08004818 <fmc_bank0_state_get>:
 8004818:	4b07      	ldr	r3, [pc, #28]	; (8004838 <fmc_bank0_state_get+0x20>)
 800481a:	68da      	ldr	r2, [r3, #12]
 800481c:	07d1      	lsls	r1, r2, #31
 800481e:	d407      	bmi.n	8004830 <fmc_bank0_state_get+0x18>
 8004820:	68da      	ldr	r2, [r3, #12]
 8004822:	06d2      	lsls	r2, r2, #27
 8004824:	d406      	bmi.n	8004834 <fmc_bank0_state_get+0x1c>
 8004826:	68d8      	ldr	r0, [r3, #12]
 8004828:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800482c:	0040      	lsls	r0, r0, #1
 800482e:	4770      	bx	lr
 8004830:	2001      	movs	r0, #1
 8004832:	4770      	bx	lr
 8004834:	2003      	movs	r0, #3
 8004836:	4770      	bx	lr
 8004838:	40022000 	andmi	r2, r2, r0

0800483c <fmc_bank1_state_get>:
 800483c:	4b07      	ldr	r3, [pc, #28]	; (800485c <fmc_bank1_state_get+0x20>)
 800483e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8004840:	07d1      	lsls	r1, r2, #31
 8004842:	d407      	bmi.n	8004854 <fmc_bank1_state_get+0x18>
 8004844:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8004846:	06d2      	lsls	r2, r2, #27
 8004848:	d406      	bmi.n	8004858 <fmc_bank1_state_get+0x1c>
 800484a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800484c:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8004850:	0040      	lsls	r0, r0, #1
 8004852:	4770      	bx	lr
 8004854:	2001      	movs	r0, #1
 8004856:	4770      	bx	lr
 8004858:	2003      	movs	r0, #3
 800485a:	4770      	bx	lr
 800485c:	40022000 	andmi	r2, r2, r0

08004860 <fwdgt_enable>:
 8004860:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8004864:	4b01      	ldr	r3, [pc, #4]	; (800486c <fwdgt_enable+0xc>)
 8004866:	601a      	str	r2, [r3, #0]
 8004868:	4770      	bx	lr
 800486a:	bf00      	nop
 800486c:	40003000 	andmi	r3, r0, r0

08004870 <fwdgt_counter_reload>:
 8004870:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8004874:	4b01      	ldr	r3, [pc, #4]	; (800487c <fwdgt_counter_reload+0xc>)
 8004876:	601a      	str	r2, [r3, #0]
 8004878:	4770      	bx	lr
 800487a:	bf00      	nop
 800487c:	40003000 	andmi	r3, r0, r0

08004880 <fwdgt_config>:
 8004880:	f245 5355 	movw	r3, #21845	; 0x5555
 8004884:	4a11      	ldr	r2, [pc, #68]	; (80048cc <fwdgt_config+0x4c>)
 8004886:	b510      	push	{r4, lr}
 8004888:	4c11      	ldr	r4, [pc, #68]	; (80048d0 <fwdgt_config+0x50>)
 800488a:	6013      	str	r3, [r2, #0]
 800488c:	68d3      	ldr	r3, [r2, #12]
 800488e:	3c01      	subs	r4, #1
 8004890:	f003 0301 	and.w	r3, r3, #1
 8004894:	d013      	beq.n	80048be <fwdgt_config+0x3e>
 8004896:	2b00      	cmp	r3, #0
 8004898:	d1f8      	bne.n	800488c <fwdgt_config+0xc>
 800489a:	6051      	str	r1, [r2, #4]
 800489c:	490c      	ldr	r1, [pc, #48]	; (80048d0 <fwdgt_config+0x50>)
 800489e:	4a0b      	ldr	r2, [pc, #44]	; (80048cc <fwdgt_config+0x4c>)
 80048a0:	68d3      	ldr	r3, [r2, #12]
 80048a2:	3901      	subs	r1, #1
 80048a4:	f003 0302 	and.w	r3, r3, #2
 80048a8:	d00d      	beq.n	80048c6 <fwdgt_config+0x46>
 80048aa:	2b00      	cmp	r3, #0
 80048ac:	d1f8      	bne.n	80048a0 <fwdgt_config+0x20>
 80048ae:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 80048b2:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80048b6:	6090      	str	r0, [r2, #8]
 80048b8:	2001      	movs	r0, #1
 80048ba:	6013      	str	r3, [r2, #0]
 80048bc:	e002      	b.n	80048c4 <fwdgt_config+0x44>
 80048be:	2b00      	cmp	r3, #0
 80048c0:	d0eb      	beq.n	800489a <fwdgt_config+0x1a>
 80048c2:	2000      	movs	r0, #0
 80048c4:	bd10      	pop	{r4, pc}
 80048c6:	2b00      	cmp	r3, #0
 80048c8:	d1fb      	bne.n	80048c2 <fwdgt_config+0x42>
 80048ca:	e7f0      	b.n	80048ae <fwdgt_config+0x2e>
 80048cc:	40003000 	andmi	r3, r0, r0
 80048d0:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080048d4 <gpio_init>:
 80048d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80048d8:	f04f 0c0f 	mov.w	ip, #15
 80048dc:	06cf      	lsls	r7, r1, #27
 80048de:	f04f 0400 	mov.w	r4, #0
 80048e2:	f04f 0701 	mov.w	r7, #1
 80048e6:	f001 050f 	and.w	r5, r1, #15
 80048ea:	bf48      	it	mi
 80048ec:	4315      	orrmi	r5, r2
 80048ee:	fa23 f204 	lsr.w	r2, r3, r4
 80048f2:	07d6      	lsls	r6, r2, #31
 80048f4:	d510      	bpl.n	8004918 <gpio_init+0x44>
 80048f6:	00a2      	lsls	r2, r4, #2
 80048f8:	6806      	ldr	r6, [r0, #0]
 80048fa:	fa0c fe02 	lsl.w	lr, ip, r2
 80048fe:	ea26 060e 	bic.w	r6, r6, lr
 8004902:	fa05 f202 	lsl.w	r2, r5, r2
 8004906:	2928      	cmp	r1, #40	; 0x28
 8004908:	ea42 0206 	orr.w	r2, r2, r6
 800490c:	d128      	bne.n	8004960 <gpio_init+0x8c>
 800490e:	fa07 f604 	lsl.w	r6, r7, r4
 8004912:	401e      	ands	r6, r3
 8004914:	6146      	str	r6, [r0, #20]
 8004916:	6002      	str	r2, [r0, #0]
 8004918:	3401      	adds	r4, #1
 800491a:	2c08      	cmp	r4, #8
 800491c:	d1e7      	bne.n	80048ee <gpio_init+0x1a>
 800491e:	2600      	movs	r6, #0
 8004920:	f04f 0c0f 	mov.w	ip, #15
 8004924:	2701      	movs	r7, #1
 8004926:	f106 0208 	add.w	r2, r6, #8
 800492a:	fa23 f402 	lsr.w	r4, r3, r2
 800492e:	07e4      	lsls	r4, r4, #31
 8004930:	d511      	bpl.n	8004956 <gpio_init+0x82>
 8004932:	00b4      	lsls	r4, r6, #2
 8004934:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8004938:	fa0c f804 	lsl.w	r8, ip, r4
 800493c:	ea2e 0e08 	bic.w	lr, lr, r8
 8004940:	fa05 f404 	lsl.w	r4, r5, r4
 8004944:	2928      	cmp	r1, #40	; 0x28
 8004946:	ea44 040e 	orr.w	r4, r4, lr
 800494a:	d110      	bne.n	800496e <gpio_init+0x9a>
 800494c:	fa07 f202 	lsl.w	r2, r7, r2
 8004950:	401a      	ands	r2, r3
 8004952:	6142      	str	r2, [r0, #20]
 8004954:	6044      	str	r4, [r0, #4]
 8004956:	3601      	adds	r6, #1
 8004958:	2e08      	cmp	r6, #8
 800495a:	d1e4      	bne.n	8004926 <gpio_init+0x52>
 800495c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004960:	2948      	cmp	r1, #72	; 0x48
 8004962:	bf02      	ittt	eq
 8004964:	fa07 f604 	lsleq.w	r6, r7, r4
 8004968:	401e      	andeq	r6, r3
 800496a:	6106      	streq	r6, [r0, #16]
 800496c:	e7d3      	b.n	8004916 <gpio_init+0x42>
 800496e:	2948      	cmp	r1, #72	; 0x48
 8004970:	bf02      	ittt	eq
 8004972:	fa07 f202 	lsleq.w	r2, r7, r2
 8004976:	401a      	andeq	r2, r3
 8004978:	6102      	streq	r2, [r0, #16]
 800497a:	e7eb      	b.n	8004954 <gpio_init+0x80>

0800497c <gpio_input_bit_get>:
 800497c:	6883      	ldr	r3, [r0, #8]
 800497e:	420b      	tst	r3, r1
 8004980:	bf14      	ite	ne
 8004982:	2001      	movne	r0, #1
 8004984:	2000      	moveq	r0, #0
 8004986:	4770      	bx	lr

08004988 <gpio_pin_remap_config>:
 8004988:	2800      	cmp	r0, #0
 800498a:	4a16      	ldr	r2, [pc, #88]	; (80049e4 <gpio_pin_remap_config+0x5c>)
 800498c:	b530      	push	{r4, r5, lr}
 800498e:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8004992:	bfb4      	ite	lt
 8004994:	69d3      	ldrlt	r3, [r2, #28]
 8004996:	6853      	ldrge	r3, [r2, #4]
 8004998:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 800499c:	b284      	uxth	r4, r0
 800499e:	d110      	bne.n	80049c2 <gpio_pin_remap_config+0x3a>
 80049a0:	6855      	ldr	r5, [r2, #4]
 80049a2:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 80049a6:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 80049aa:	6055      	str	r5, [r2, #4]
 80049ac:	b119      	cbz	r1, 80049b6 <gpio_pin_remap_config+0x2e>
 80049ae:	0d42      	lsrs	r2, r0, #21
 80049b0:	0112      	lsls	r2, r2, #4
 80049b2:	4094      	lsls	r4, r2
 80049b4:	4323      	orrs	r3, r4
 80049b6:	4a0b      	ldr	r2, [pc, #44]	; (80049e4 <gpio_pin_remap_config+0x5c>)
 80049b8:	2800      	cmp	r0, #0
 80049ba:	bfb4      	ite	lt
 80049bc:	61d3      	strlt	r3, [r2, #28]
 80049be:	6053      	strge	r3, [r2, #4]
 80049c0:	bd30      	pop	{r4, r5, pc}
 80049c2:	02c2      	lsls	r2, r0, #11
 80049c4:	bf4d      	iteet	mi
 80049c6:	2203      	movmi	r2, #3
 80049c8:	0d42      	lsrpl	r2, r0, #21
 80049ca:	0112      	lslpl	r2, r2, #4
 80049cc:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 80049d0:	bf4c      	ite	mi
 80049d2:	40aa      	lslmi	r2, r5
 80049d4:	fa04 f202 	lslpl.w	r2, r4, r2
 80049d8:	ea23 0302 	bic.w	r3, r3, r2
 80049dc:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 80049e0:	e7e4      	b.n	80049ac <gpio_pin_remap_config+0x24>
 80049e2:	bf00      	nop
 80049e4:	40010000 	andmi	r0, r1, r0

080049e8 <pmu_backup_write_enable>:
 80049e8:	4a02      	ldr	r2, [pc, #8]	; (80049f4 <pmu_backup_write_enable+0xc>)
 80049ea:	6813      	ldr	r3, [r2, #0]
 80049ec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80049f0:	6013      	str	r3, [r2, #0]
 80049f2:	4770      	bx	lr
 80049f4:	40007000 	andmi	r7, r0, r0

080049f8 <rcu_periph_clock_enable>:
 80049f8:	2201      	movs	r2, #1
 80049fa:	0983      	lsrs	r3, r0, #6
 80049fc:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8004a00:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8004a04:	6819      	ldr	r1, [r3, #0]
 8004a06:	f000 001f 	and.w	r0, r0, #31
 8004a0a:	4082      	lsls	r2, r0
 8004a0c:	430a      	orrs	r2, r1
 8004a0e:	601a      	str	r2, [r3, #0]
 8004a10:	4770      	bx	lr

08004a12 <rcu_periph_clock_disable>:
 8004a12:	2101      	movs	r1, #1
 8004a14:	0983      	lsrs	r3, r0, #6
 8004a16:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8004a1a:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8004a1e:	681a      	ldr	r2, [r3, #0]
 8004a20:	f000 001f 	and.w	r0, r0, #31
 8004a24:	4081      	lsls	r1, r0
 8004a26:	ea22 0201 	bic.w	r2, r2, r1
 8004a2a:	601a      	str	r2, [r3, #0]
 8004a2c:	4770      	bx	lr

08004a2e <rcu_periph_reset_enable>:
 8004a2e:	f7ff bfe3 	b.w	80049f8 <rcu_periph_clock_enable>

08004a32 <rcu_periph_reset_disable>:
 8004a32:	f7ff bfee 	b.w	8004a12 <rcu_periph_clock_disable>
	...

08004a38 <rcu_adc_clock_config>:
 8004a38:	490c      	ldr	r1, [pc, #48]	; (8004a6c <rcu_adc_clock_config+0x34>)
 8004a3a:	2805      	cmp	r0, #5
 8004a3c:	684b      	ldr	r3, [r1, #4]
 8004a3e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004a42:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8004a46:	d006      	beq.n	8004a56 <rcu_adc_clock_config+0x1e>
 8004a48:	d803      	bhi.n	8004a52 <rcu_adc_clock_config+0x1a>
 8004a4a:	2804      	cmp	r0, #4
 8004a4c:	d10a      	bne.n	8004a64 <rcu_adc_clock_config+0x2c>
 8004a4e:	604b      	str	r3, [r1, #4]
 8004a50:	4770      	bx	lr
 8004a52:	2807      	cmp	r0, #7
 8004a54:	d1fb      	bne.n	8004a4e <rcu_adc_clock_config+0x16>
 8004a56:	4a06      	ldr	r2, [pc, #24]	; (8004a70 <rcu_adc_clock_config+0x38>)
 8004a58:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 8004a5c:	4313      	orrs	r3, r2
 8004a5e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004a62:	e7f4      	b.n	8004a4e <rcu_adc_clock_config+0x16>
 8004a64:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8004a68:	e7f1      	b.n	8004a4e <rcu_adc_clock_config+0x16>
 8004a6a:	bf00      	nop
 8004a6c:	40021000 	andmi	r1, r2, r0
 8004a70:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08004a74 <rcu_clock_freq_get>:
 8004a74:	4b2f      	ldr	r3, [pc, #188]	; (8004b34 <rcu_clock_freq_get+0xc0>)
 8004a76:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a78:	4604      	mov	r4, r0
 8004a7a:	461f      	mov	r7, r3
 8004a7c:	b089      	sub	sp, #36	; 0x24
 8004a7e:	ad04      	add	r5, sp, #16
 8004a80:	f103 0610 	add.w	r6, r3, #16
 8004a84:	462a      	mov	r2, r5
 8004a86:	6818      	ldr	r0, [r3, #0]
 8004a88:	6859      	ldr	r1, [r3, #4]
 8004a8a:	3308      	adds	r3, #8
 8004a8c:	c203      	stmia	r2!, {r0, r1}
 8004a8e:	42b3      	cmp	r3, r6
 8004a90:	4615      	mov	r5, r2
 8004a92:	d1f7      	bne.n	8004a84 <rcu_clock_freq_get+0x10>
 8004a94:	466b      	mov	r3, sp
 8004a96:	6938      	ldr	r0, [r7, #16]
 8004a98:	6871      	ldr	r1, [r6, #4]
 8004a9a:	4a27      	ldr	r2, [pc, #156]	; (8004b38 <rcu_clock_freq_get+0xc4>)
 8004a9c:	c303      	stmia	r3!, {r0, r1}
 8004a9e:	c303      	stmia	r3!, {r0, r1}
 8004aa0:	6853      	ldr	r3, [r2, #4]
 8004aa2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8004aa6:	2b02      	cmp	r3, #2
 8004aa8:	d137      	bne.n	8004b1a <rcu_clock_freq_get+0xa6>
 8004aaa:	6853      	ldr	r3, [r2, #4]
 8004aac:	03dd      	lsls	r5, r3, #15
 8004aae:	d510      	bpl.n	8004ad2 <rcu_clock_freq_get+0x5e>
 8004ab0:	6853      	ldr	r3, [r2, #4]
 8004ab2:	4922      	ldr	r1, [pc, #136]	; (8004b3c <rcu_clock_freq_get+0xc8>)
 8004ab4:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8004ab8:	4b21      	ldr	r3, [pc, #132]	; (8004b40 <rcu_clock_freq_get+0xcc>)
 8004aba:	bf08      	it	eq
 8004abc:	4619      	moveq	r1, r3
 8004abe:	6853      	ldr	r3, [r2, #4]
 8004ac0:	6850      	ldr	r0, [r2, #4]
 8004ac2:	f3c3 4383 	ubfx	r3, r3, #18, #4
 8004ac6:	0100      	lsls	r0, r0, #4
 8004ac8:	d505      	bpl.n	8004ad6 <rcu_clock_freq_get+0x62>
 8004aca:	f043 0310 	orr.w	r3, r3, #16
 8004ace:	3301      	adds	r3, #1
 8004ad0:	e004      	b.n	8004adc <rcu_clock_freq_get+0x68>
 8004ad2:	491a      	ldr	r1, [pc, #104]	; (8004b3c <rcu_clock_freq_get+0xc8>)
 8004ad4:	e7f3      	b.n	8004abe <rcu_clock_freq_get+0x4a>
 8004ad6:	2b0f      	cmp	r3, #15
 8004ad8:	d0f9      	beq.n	8004ace <rcu_clock_freq_get+0x5a>
 8004ada:	3302      	adds	r3, #2
 8004adc:	fb01 f003 	mul.w	r0, r1, r3
 8004ae0:	6853      	ldr	r3, [r2, #4]
 8004ae2:	6851      	ldr	r1, [r2, #4]
 8004ae4:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8004ae8:	6852      	ldr	r2, [r2, #4]
 8004aea:	3320      	adds	r3, #32
 8004aec:	446b      	add	r3, sp
 8004aee:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8004af2:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8004af6:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8004afa:	3120      	adds	r1, #32
 8004afc:	3220      	adds	r2, #32
 8004afe:	4469      	add	r1, sp
 8004b00:	446a      	add	r2, sp
 8004b02:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8004b06:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8004b0a:	fa20 f303 	lsr.w	r3, r0, r3
 8004b0e:	2c03      	cmp	r4, #3
 8004b10:	d80e      	bhi.n	8004b30 <rcu_clock_freq_get+0xbc>
 8004b12:	e8df f004 	tbb	[pc, r4]
 8004b16:	0a070405 	beq	81c5b32 <__exidx_end+0x1bfad6>
 8004b1a:	4809      	ldr	r0, [pc, #36]	; (8004b40 <rcu_clock_freq_get+0xcc>)
 8004b1c:	e7e0      	b.n	8004ae0 <rcu_clock_freq_get+0x6c>
 8004b1e:	4618      	mov	r0, r3
 8004b20:	b009      	add	sp, #36	; 0x24
 8004b22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004b24:	fa23 f001 	lsr.w	r0, r3, r1
 8004b28:	e7fa      	b.n	8004b20 <rcu_clock_freq_get+0xac>
 8004b2a:	fa23 f002 	lsr.w	r0, r3, r2
 8004b2e:	e7f7      	b.n	8004b20 <rcu_clock_freq_get+0xac>
 8004b30:	2000      	movs	r0, #0
 8004b32:	e7f5      	b.n	8004b20 <rcu_clock_freq_get+0xac>
 8004b34:	08005780 	stmdaeq	r0, {r7, r8, r9, sl, ip, lr}
 8004b38:	40021000 	andmi	r1, r2, r0
 8004b3c:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8004b40:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08004b44 <timer_deinit>:
 8004b44:	b508      	push	{r3, lr}
 8004b46:	4b2d      	ldr	r3, [pc, #180]	; (8004bfc <timer_deinit+0xb8>)
 8004b48:	4298      	cmp	r0, r3
 8004b4a:	d048      	beq.n	8004bde <timer_deinit+0x9a>
 8004b4c:	d816      	bhi.n	8004b7c <timer_deinit+0x38>
 8004b4e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004b52:	4298      	cmp	r0, r3
 8004b54:	d03c      	beq.n	8004bd0 <timer_deinit+0x8c>
 8004b56:	d807      	bhi.n	8004b68 <timer_deinit+0x24>
 8004b58:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004b5c:	d02a      	beq.n	8004bb4 <timer_deinit+0x70>
 8004b5e:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8004b62:	4298      	cmp	r0, r3
 8004b64:	d02d      	beq.n	8004bc2 <timer_deinit+0x7e>
 8004b66:	bd08      	pop	{r3, pc}
 8004b68:	4b25      	ldr	r3, [pc, #148]	; (8004c00 <timer_deinit+0xbc>)
 8004b6a:	4298      	cmp	r0, r3
 8004b6c:	d1fb      	bne.n	8004b66 <timer_deinit+0x22>
 8004b6e:	f240 4003 	movw	r0, #1027	; 0x403
 8004b72:	f7ff ff5c 	bl	8004a2e <rcu_periph_reset_enable>
 8004b76:	f240 4003 	movw	r0, #1027	; 0x403
 8004b7a:	e017      	b.n	8004bac <timer_deinit+0x68>
 8004b7c:	4b21      	ldr	r3, [pc, #132]	; (8004c04 <timer_deinit+0xc0>)
 8004b7e:	4298      	cmp	r0, r3
 8004b80:	d00e      	beq.n	8004ba0 <timer_deinit+0x5c>
 8004b82:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8004b86:	4298      	cmp	r0, r3
 8004b88:	d030      	beq.n	8004bec <timer_deinit+0xa8>
 8004b8a:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 8004b8e:	4298      	cmp	r0, r3
 8004b90:	d1e9      	bne.n	8004b66 <timer_deinit+0x22>
 8004b92:	f240 4005 	movw	r0, #1029	; 0x405
 8004b96:	f7ff ff4a 	bl	8004a2e <rcu_periph_reset_enable>
 8004b9a:	f240 4005 	movw	r0, #1029	; 0x405
 8004b9e:	e005      	b.n	8004bac <timer_deinit+0x68>
 8004ba0:	f240 300b 	movw	r0, #779	; 0x30b
 8004ba4:	f7ff ff43 	bl	8004a2e <rcu_periph_reset_enable>
 8004ba8:	f240 300b 	movw	r0, #779	; 0x30b
 8004bac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004bb0:	f7ff bf3f 	b.w	8004a32 <rcu_periph_reset_disable>
 8004bb4:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8004bb8:	f7ff ff39 	bl	8004a2e <rcu_periph_reset_enable>
 8004bbc:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8004bc0:	e7f4      	b.n	8004bac <timer_deinit+0x68>
 8004bc2:	f240 4001 	movw	r0, #1025	; 0x401
 8004bc6:	f7ff ff32 	bl	8004a2e <rcu_periph_reset_enable>
 8004bca:	f240 4001 	movw	r0, #1025	; 0x401
 8004bce:	e7ed      	b.n	8004bac <timer_deinit+0x68>
 8004bd0:	f240 4002 	movw	r0, #1026	; 0x402
 8004bd4:	f7ff ff2b 	bl	8004a2e <rcu_periph_reset_enable>
 8004bd8:	f240 4002 	movw	r0, #1026	; 0x402
 8004bdc:	e7e6      	b.n	8004bac <timer_deinit+0x68>
 8004bde:	f240 4004 	movw	r0, #1028	; 0x404
 8004be2:	f7ff ff24 	bl	8004a2e <rcu_periph_reset_enable>
 8004be6:	f240 4004 	movw	r0, #1028	; 0x404
 8004bea:	e7df      	b.n	8004bac <timer_deinit+0x68>
 8004bec:	f240 300d 	movw	r0, #781	; 0x30d
 8004bf0:	f7ff ff1d 	bl	8004a2e <rcu_periph_reset_enable>
 8004bf4:	f240 300d 	movw	r0, #781	; 0x30d
 8004bf8:	e7d8      	b.n	8004bac <timer_deinit+0x68>
 8004bfa:	bf00      	nop
 8004bfc:	40001000 	andmi	r1, r0, r0
 8004c00:	40000c00 	andmi	r0, r0, r0, lsl #24
 8004c04:	40012c00 	andmi	r2, r1, r0, lsl #24

08004c08 <timer_init>:
 8004c08:	880b      	ldrh	r3, [r1, #0]
 8004c0a:	6283      	str	r3, [r0, #40]	; 0x28
 8004c0c:	4b26      	ldr	r3, [pc, #152]	; (8004ca8 <timer_init+0xa0>)
 8004c0e:	4298      	cmp	r0, r3
 8004c10:	d018      	beq.n	8004c44 <timer_init+0x3c>
 8004c12:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8004c16:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8004c1a:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8004c1e:	d011      	beq.n	8004c44 <timer_init+0x3c>
 8004c20:	4a22      	ldr	r2, [pc, #136]	; (8004cac <timer_init+0xa4>)
 8004c22:	4290      	cmp	r0, r2
 8004c24:	d00e      	beq.n	8004c44 <timer_init+0x3c>
 8004c26:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8004c2a:	4290      	cmp	r0, r2
 8004c2c:	d00a      	beq.n	8004c44 <timer_init+0x3c>
 8004c2e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004c32:	4293      	cmp	r3, r2
 8004c34:	d006      	beq.n	8004c44 <timer_init+0x3c>
 8004c36:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 8004c3a:	4293      	cmp	r3, r2
 8004c3c:	d002      	beq.n	8004c44 <timer_init+0x3c>
 8004c3e:	4b1c      	ldr	r3, [pc, #112]	; (8004cb0 <timer_init+0xa8>)
 8004c40:	4298      	cmp	r0, r3
 8004c42:	d10f      	bne.n	8004c64 <timer_init+0x5c>
 8004c44:	6803      	ldr	r3, [r0, #0]
 8004c46:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004c4a:	6003      	str	r3, [r0, #0]
 8004c4c:	884b      	ldrh	r3, [r1, #2]
 8004c4e:	6802      	ldr	r2, [r0, #0]
 8004c50:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8004c54:	4313      	orrs	r3, r2
 8004c56:	6003      	str	r3, [r0, #0]
 8004c58:	888b      	ldrh	r3, [r1, #4]
 8004c5a:	6802      	ldr	r2, [r0, #0]
 8004c5c:	f003 0310 	and.w	r3, r3, #16
 8004c60:	4313      	orrs	r3, r2
 8004c62:	6003      	str	r3, [r0, #0]
 8004c64:	688b      	ldr	r3, [r1, #8]
 8004c66:	62c3      	str	r3, [r0, #44]	; 0x2c
 8004c68:	4b12      	ldr	r3, [pc, #72]	; (8004cb4 <timer_init+0xac>)
 8004c6a:	4298      	cmp	r0, r3
 8004c6c:	d003      	beq.n	8004c76 <timer_init+0x6e>
 8004c6e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004c72:	4298      	cmp	r0, r3
 8004c74:	d104      	bne.n	8004c80 <timer_init+0x78>
 8004c76:	6943      	ldr	r3, [r0, #20]
 8004c78:	f043 0301 	orr.w	r3, r3, #1
 8004c7c:	6143      	str	r3, [r0, #20]
 8004c7e:	4770      	bx	lr
 8004c80:	6803      	ldr	r3, [r0, #0]
 8004c82:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004c86:	6003      	str	r3, [r0, #0]
 8004c88:	898b      	ldrh	r3, [r1, #12]
 8004c8a:	6802      	ldr	r2, [r0, #0]
 8004c8c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004c90:	4313      	orrs	r3, r2
 8004c92:	6003      	str	r3, [r0, #0]
 8004c94:	4b04      	ldr	r3, [pc, #16]	; (8004ca8 <timer_init+0xa0>)
 8004c96:	4298      	cmp	r0, r3
 8004c98:	d002      	beq.n	8004ca0 <timer_init+0x98>
 8004c9a:	4b04      	ldr	r3, [pc, #16]	; (8004cac <timer_init+0xa4>)
 8004c9c:	4298      	cmp	r0, r3
 8004c9e:	d1ea      	bne.n	8004c76 <timer_init+0x6e>
 8004ca0:	7b8b      	ldrb	r3, [r1, #14]
 8004ca2:	6303      	str	r3, [r0, #48]	; 0x30
 8004ca4:	e7e7      	b.n	8004c76 <timer_init+0x6e>
 8004ca6:	bf00      	nop
 8004ca8:	40012c00 	andmi	r2, r1, r0, lsl #24
 8004cac:	40013400 	andmi	r3, r1, r0, lsl #8
 8004cb0:	40002000 	andmi	r2, r0, r0
 8004cb4:	40001000 	andmi	r1, r0, r0

08004cb8 <timer_enable>:
 8004cb8:	6803      	ldr	r3, [r0, #0]
 8004cba:	f043 0301 	orr.w	r3, r3, #1
 8004cbe:	6003      	str	r3, [r0, #0]
 8004cc0:	4770      	bx	lr

08004cc2 <timer_channel_output_mode_config>:
 8004cc2:	2903      	cmp	r1, #3
 8004cc4:	d81a      	bhi.n	8004cfc <timer_channel_output_mode_config+0x3a>
 8004cc6:	e8df f001 	tbb	[pc, r1]
 8004cca:	1a120a02 	bne	84874da <__exidx_end+0x48147e>
 8004cce:	6983      	ldr	r3, [r0, #24]
 8004cd0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004cd4:	6183      	str	r3, [r0, #24]
 8004cd6:	6983      	ldr	r3, [r0, #24]
 8004cd8:	4313      	orrs	r3, r2
 8004cda:	6183      	str	r3, [r0, #24]
 8004cdc:	4770      	bx	lr
 8004cde:	6983      	ldr	r3, [r0, #24]
 8004ce0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004ce4:	6183      	str	r3, [r0, #24]
 8004ce6:	6983      	ldr	r3, [r0, #24]
 8004ce8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8004cec:	e7f5      	b.n	8004cda <timer_channel_output_mode_config+0x18>
 8004cee:	69c3      	ldr	r3, [r0, #28]
 8004cf0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004cf4:	61c3      	str	r3, [r0, #28]
 8004cf6:	69c3      	ldr	r3, [r0, #28]
 8004cf8:	4313      	orrs	r3, r2
 8004cfa:	61c3      	str	r3, [r0, #28]
 8004cfc:	4770      	bx	lr
 8004cfe:	69c3      	ldr	r3, [r0, #28]
 8004d00:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004d04:	61c3      	str	r3, [r0, #28]
 8004d06:	69c3      	ldr	r3, [r0, #28]
 8004d08:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8004d0c:	e7f5      	b.n	8004cfa <timer_channel_output_mode_config+0x38>

08004d0e <timer_channel_output_pulse_value_config>:
 8004d0e:	2903      	cmp	r1, #3
 8004d10:	d80a      	bhi.n	8004d28 <timer_channel_output_pulse_value_config+0x1a>
 8004d12:	e8df f001 	tbb	[pc, r1]
 8004d16:	08060402 	stmdaeq	r6, {r1, sl}
 8004d1a:	6342      	str	r2, [r0, #52]	; 0x34
 8004d1c:	4770      	bx	lr
 8004d1e:	6382      	str	r2, [r0, #56]	; 0x38
 8004d20:	4770      	bx	lr
 8004d22:	63c2      	str	r2, [r0, #60]	; 0x3c
 8004d24:	4770      	bx	lr
 8004d26:	6402      	str	r2, [r0, #64]	; 0x40
 8004d28:	4770      	bx	lr

08004d2a <timer_interrupt_enable>:
 8004d2a:	68c3      	ldr	r3, [r0, #12]
 8004d2c:	430b      	orrs	r3, r1
 8004d2e:	60c3      	str	r3, [r0, #12]
 8004d30:	4770      	bx	lr

08004d32 <timer_interrupt_flag_clear>:
 8004d32:	43c9      	mvns	r1, r1
 8004d34:	6101      	str	r1, [r0, #16]
 8004d36:	4770      	bx	lr

08004d38 <timer_flag_clear>:
 8004d38:	43c9      	mvns	r1, r1
 8004d3a:	6101      	str	r1, [r0, #16]
 8004d3c:	4770      	bx	lr
	...

08004d40 <usart_deinit>:
 8004d40:	b508      	push	{r3, lr}
 8004d42:	4b1d      	ldr	r3, [pc, #116]	; (8004db8 <usart_deinit+0x78>)
 8004d44:	4298      	cmp	r0, r3
 8004d46:	d028      	beq.n	8004d9a <usart_deinit+0x5a>
 8004d48:	d808      	bhi.n	8004d5c <usart_deinit+0x1c>
 8004d4a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004d4e:	4298      	cmp	r0, r3
 8004d50:	d015      	beq.n	8004d7e <usart_deinit+0x3e>
 8004d52:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004d56:	4298      	cmp	r0, r3
 8004d58:	d018      	beq.n	8004d8c <usart_deinit+0x4c>
 8004d5a:	bd08      	pop	{r3, pc}
 8004d5c:	4b17      	ldr	r3, [pc, #92]	; (8004dbc <usart_deinit+0x7c>)
 8004d5e:	4298      	cmp	r0, r3
 8004d60:	d022      	beq.n	8004da8 <usart_deinit+0x68>
 8004d62:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8004d66:	4298      	cmp	r0, r3
 8004d68:	d1f7      	bne.n	8004d5a <usart_deinit+0x1a>
 8004d6a:	f240 300e 	movw	r0, #782	; 0x30e
 8004d6e:	f7ff fe5e 	bl	8004a2e <rcu_periph_reset_enable>
 8004d72:	f240 300e 	movw	r0, #782	; 0x30e
 8004d76:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004d7a:	f7ff be5a 	b.w	8004a32 <rcu_periph_reset_disable>
 8004d7e:	f240 4011 	movw	r0, #1041	; 0x411
 8004d82:	f7ff fe54 	bl	8004a2e <rcu_periph_reset_enable>
 8004d86:	f240 4011 	movw	r0, #1041	; 0x411
 8004d8a:	e7f4      	b.n	8004d76 <usart_deinit+0x36>
 8004d8c:	f240 4012 	movw	r0, #1042	; 0x412
 8004d90:	f7ff fe4d 	bl	8004a2e <rcu_periph_reset_enable>
 8004d94:	f240 4012 	movw	r0, #1042	; 0x412
 8004d98:	e7ed      	b.n	8004d76 <usart_deinit+0x36>
 8004d9a:	f240 4013 	movw	r0, #1043	; 0x413
 8004d9e:	f7ff fe46 	bl	8004a2e <rcu_periph_reset_enable>
 8004da2:	f240 4013 	movw	r0, #1043	; 0x413
 8004da6:	e7e6      	b.n	8004d76 <usart_deinit+0x36>
 8004da8:	f240 4014 	movw	r0, #1044	; 0x414
 8004dac:	f7ff fe3f 	bl	8004a2e <rcu_periph_reset_enable>
 8004db0:	f240 4014 	movw	r0, #1044	; 0x414
 8004db4:	e7df      	b.n	8004d76 <usart_deinit+0x36>
 8004db6:	bf00      	nop
 8004db8:	40004c00 	andmi	r4, r0, r0, lsl #24
 8004dbc:	40005000 	andmi	r5, r0, r0

08004dc0 <usart_baudrate_set>:
 8004dc0:	b538      	push	{r3, r4, r5, lr}
 8004dc2:	4b11      	ldr	r3, [pc, #68]	; (8004e08 <usart_baudrate_set+0x48>)
 8004dc4:	4604      	mov	r4, r0
 8004dc6:	4298      	cmp	r0, r3
 8004dc8:	460d      	mov	r5, r1
 8004dca:	d01b      	beq.n	8004e04 <usart_baudrate_set+0x44>
 8004dcc:	d809      	bhi.n	8004de2 <usart_baudrate_set+0x22>
 8004dce:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004dd2:	4298      	cmp	r0, r3
 8004dd4:	d016      	beq.n	8004e04 <usart_baudrate_set+0x44>
 8004dd6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004dda:	4298      	cmp	r0, r3
 8004ddc:	d012      	beq.n	8004e04 <usart_baudrate_set+0x44>
 8004dde:	2000      	movs	r0, #0
 8004de0:	e009      	b.n	8004df6 <usart_baudrate_set+0x36>
 8004de2:	4b0a      	ldr	r3, [pc, #40]	; (8004e0c <usart_baudrate_set+0x4c>)
 8004de4:	4298      	cmp	r0, r3
 8004de6:	d00d      	beq.n	8004e04 <usart_baudrate_set+0x44>
 8004de8:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8004dec:	4298      	cmp	r0, r3
 8004dee:	d1f6      	bne.n	8004dde <usart_baudrate_set+0x1e>
 8004df0:	2003      	movs	r0, #3
 8004df2:	f7ff fe3f 	bl	8004a74 <rcu_clock_freq_get>
 8004df6:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 8004dfa:	fbb1 f1f5 	udiv	r1, r1, r5
 8004dfe:	b289      	uxth	r1, r1
 8004e00:	60a1      	str	r1, [r4, #8]
 8004e02:	bd38      	pop	{r3, r4, r5, pc}
 8004e04:	2002      	movs	r0, #2
 8004e06:	e7f4      	b.n	8004df2 <usart_baudrate_set+0x32>
 8004e08:	40004c00 	andmi	r4, r0, r0, lsl #24
 8004e0c:	40005000 	andmi	r5, r0, r0

08004e10 <usart_parity_config>:
 8004e10:	68c3      	ldr	r3, [r0, #12]
 8004e12:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8004e16:	60c3      	str	r3, [r0, #12]
 8004e18:	68c3      	ldr	r3, [r0, #12]
 8004e1a:	430b      	orrs	r3, r1
 8004e1c:	60c3      	str	r3, [r0, #12]
 8004e1e:	4770      	bx	lr

08004e20 <usart_word_length_set>:
 8004e20:	68c3      	ldr	r3, [r0, #12]
 8004e22:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004e26:	60c3      	str	r3, [r0, #12]
 8004e28:	68c3      	ldr	r3, [r0, #12]
 8004e2a:	430b      	orrs	r3, r1
 8004e2c:	60c3      	str	r3, [r0, #12]
 8004e2e:	4770      	bx	lr

08004e30 <usart_stop_bit_set>:
 8004e30:	6903      	ldr	r3, [r0, #16]
 8004e32:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8004e36:	6103      	str	r3, [r0, #16]
 8004e38:	6903      	ldr	r3, [r0, #16]
 8004e3a:	430b      	orrs	r3, r1
 8004e3c:	6103      	str	r3, [r0, #16]
 8004e3e:	4770      	bx	lr

08004e40 <usart_transmit_config>:
 8004e40:	68c3      	ldr	r3, [r0, #12]
 8004e42:	f023 0308 	bic.w	r3, r3, #8
 8004e46:	430b      	orrs	r3, r1
 8004e48:	60c3      	str	r3, [r0, #12]
 8004e4a:	4770      	bx	lr

08004e4c <usart_receive_config>:
 8004e4c:	68c3      	ldr	r3, [r0, #12]
 8004e4e:	f023 0304 	bic.w	r3, r3, #4
 8004e52:	430b      	orrs	r3, r1
 8004e54:	60c3      	str	r3, [r0, #12]
 8004e56:	4770      	bx	lr

08004e58 <usart_hardware_flow_rts_config>:
 8004e58:	6943      	ldr	r3, [r0, #20]
 8004e5a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004e5e:	430b      	orrs	r3, r1
 8004e60:	6143      	str	r3, [r0, #20]
 8004e62:	4770      	bx	lr

08004e64 <usart_hardware_flow_cts_config>:
 8004e64:	6943      	ldr	r3, [r0, #20]
 8004e66:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8004e6a:	430b      	orrs	r3, r1
 8004e6c:	6143      	str	r3, [r0, #20]
 8004e6e:	4770      	bx	lr

08004e70 <usart_dma_transmit_config>:
 8004e70:	6943      	ldr	r3, [r0, #20]
 8004e72:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004e76:	430b      	orrs	r3, r1
 8004e78:	6143      	str	r3, [r0, #20]
 8004e7a:	4770      	bx	lr

08004e7c <usart_flag_get>:
 8004e7c:	098b      	lsrs	r3, r1, #6
 8004e7e:	581a      	ldr	r2, [r3, r0]
 8004e80:	2301      	movs	r3, #1
 8004e82:	f001 011f 	and.w	r1, r1, #31
 8004e86:	408b      	lsls	r3, r1
 8004e88:	4213      	tst	r3, r2
 8004e8a:	bf14      	ite	ne
 8004e8c:	2001      	movne	r0, #1
 8004e8e:	2000      	moveq	r0, #0
 8004e90:	4770      	bx	lr

08004e92 <usart_interrupt_enable>:
 8004e92:	2301      	movs	r3, #1
 8004e94:	b510      	push	{r4, lr}
 8004e96:	f3c1 1289 	ubfx	r2, r1, #6, #10
 8004e9a:	5814      	ldr	r4, [r2, r0]
 8004e9c:	f001 011f 	and.w	r1, r1, #31
 8004ea0:	408b      	lsls	r3, r1
 8004ea2:	4323      	orrs	r3, r4
 8004ea4:	5013      	str	r3, [r2, r0]
 8004ea6:	bd10      	pop	{r4, pc}

08004ea8 <usart_interrupt_disable>:
 8004ea8:	2201      	movs	r2, #1
 8004eaa:	b510      	push	{r4, lr}
 8004eac:	f3c1 1489 	ubfx	r4, r1, #6, #10
 8004eb0:	5823      	ldr	r3, [r4, r0]
 8004eb2:	f001 011f 	and.w	r1, r1, #31
 8004eb6:	408a      	lsls	r2, r1
 8004eb8:	ea23 0302 	bic.w	r3, r3, r2
 8004ebc:	5023      	str	r3, [r4, r0]
 8004ebe:	bd10      	pop	{r4, pc}

08004ec0 <usart_interrupt_flag_clear>:
 8004ec0:	2201      	movs	r2, #1
 8004ec2:	b510      	push	{r4, lr}
 8004ec4:	0d8c      	lsrs	r4, r1, #22
 8004ec6:	5823      	ldr	r3, [r4, r0]
 8004ec8:	f3c1 4104 	ubfx	r1, r1, #16, #5
 8004ecc:	408a      	lsls	r2, r1
 8004ece:	ea23 0302 	bic.w	r3, r3, r2
 8004ed2:	5023      	str	r3, [r4, r0]
 8004ed4:	bd10      	pop	{r4, pc}
	...

08004ed8 <gd32_adc_init()>:
 8004ed8:	b510      	push	{r4, lr}
 8004eda:	f240 6009 	movw	r0, #1545	; 0x609
 8004ede:	4c21      	ldr	r4, [pc, #132]	; (8004f64 <gd32_adc_init()+0x8c>)
 8004ee0:	f7ff fd8a 	bl	80049f8 <rcu_periph_clock_enable>
 8004ee4:	2005      	movs	r0, #5
 8004ee6:	f7ff fda7 	bl	8004a38 <rcu_adc_clock_config>
 8004eea:	4620      	mov	r0, r4
 8004eec:	2201      	movs	r2, #1
 8004eee:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004ef2:	f000 fabf 	bl	8005474 <adc_special_function_config>
 8004ef6:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8004efa:	4620      	mov	r0, r4
 8004efc:	2102      	movs	r1, #2
 8004efe:	f000 fb58 	bl	80055b2 <adc_external_trigger_source_config>
 8004f02:	2100      	movs	r1, #0
 8004f04:	4620      	mov	r0, r4
 8004f06:	f000 fadd 	bl	80054c4 <adc_data_alignment_config>
 8004f0a:	2000      	movs	r0, #0
 8004f0c:	f000 faa2 	bl	8005454 <adc_mode_config>
 8004f10:	2202      	movs	r2, #2
 8004f12:	4620      	mov	r0, r4
 8004f14:	4611      	mov	r1, r2
 8004f16:	f000 fb01 	bl	800551c <adc_channel_length_config>
 8004f1a:	4620      	mov	r0, r4
 8004f1c:	2307      	movs	r3, #7
 8004f1e:	2210      	movs	r2, #16
 8004f20:	2100      	movs	r1, #0
 8004f22:	f000 fb18 	bl	8005556 <adc_inserted_channel_config>
 8004f26:	2307      	movs	r3, #7
 8004f28:	4620      	mov	r0, r4
 8004f2a:	2211      	movs	r2, #17
 8004f2c:	2101      	movs	r1, #1
 8004f2e:	f000 fb12 	bl	8005556 <adc_inserted_channel_config>
 8004f32:	2201      	movs	r2, #1
 8004f34:	2102      	movs	r1, #2
 8004f36:	4620      	mov	r0, r4
 8004f38:	f000 fb4c 	bl	80055d4 <adc_external_trigger_config>
 8004f3c:	f000 fae4 	bl	8005508 <adc_tempsensor_vrefint_enable>
 8004f40:	4620      	mov	r0, r4
 8004f42:	f000 fac8 	bl	80054d6 <adc_enable>
 8004f46:	2100      	movs	r1, #0
 8004f48:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004f4c:	f000 fa6a 	bl	8005424 <udelay(unsigned int, unsigned int)>
 8004f50:	4620      	mov	r0, r4
 8004f52:	f000 fac8 	bl	80054e6 <adc_calibration_enable>
 8004f56:	4620      	mov	r0, r4
 8004f58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004f5c:	2102      	movs	r1, #2
 8004f5e:	f000 bb54 	b.w	800560a <adc_software_trigger_enable>
 8004f62:	bf00      	nop
 8004f64:	40012400 	andmi	r2, r1, r0, lsl #8

08004f68 <_stop() [clone .isra.0]>:
 8004f68:	b508      	push	{r3, lr}
 8004f6a:	4806      	ldr	r0, [pc, #24]	; (8004f84 <_stop() [clone .isra.0]+0x1c>)
 8004f6c:	f000 fbe0 	bl	8005730 <i2c_stop_on_bus>
 8004f70:	f640 73ff 	movw	r3, #4095	; 0xfff
 8004f74:	4904      	ldr	r1, [pc, #16]	; (8004f88 <_stop() [clone .isra.0]+0x20>)
 8004f76:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8004f7a:	0592      	lsls	r2, r2, #22
 8004f7c:	d501      	bpl.n	8004f82 <_stop() [clone .isra.0]+0x1a>
 8004f7e:	3b01      	subs	r3, #1
 8004f80:	d1f9      	bne.n	8004f76 <_stop() [clone .isra.0]+0xe>
 8004f82:	bd08      	pop	{r3, pc}
 8004f84:	40005400 	andmi	r5, r0, r0, lsl #8
 8004f88:	40005000 	andmi	r5, r0, r0

08004f8c <gd32_i2c_begin>:
 8004f8c:	b510      	push	{r4, lr}
 8004f8e:	f240 7015 	movw	r0, #1813	; 0x715
 8004f92:	f7ff fd31 	bl	80049f8 <rcu_periph_clock_enable>
 8004f96:	4c15      	ldr	r4, [pc, #84]	; (8004fec <gd32_i2c_begin+0x60>)
 8004f98:	f240 6003 	movw	r0, #1539	; 0x603
 8004f9c:	f7ff fd2c 	bl	80049f8 <rcu_periph_clock_enable>
 8004fa0:	f240 6003 	movw	r0, #1539	; 0x603
 8004fa4:	f7ff fd28 	bl	80049f8 <rcu_periph_clock_enable>
 8004fa8:	4620      	mov	r0, r4
 8004faa:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004fae:	2203      	movs	r2, #3
 8004fb0:	211c      	movs	r1, #28
 8004fb2:	f7ff fc8f 	bl	80048d4 <gpio_init>
 8004fb6:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004fba:	2203      	movs	r2, #3
 8004fbc:	4620      	mov	r0, r4
 8004fbe:	211c      	movs	r1, #28
 8004fc0:	f7ff fc88 	bl	80048d4 <gpio_init>
 8004fc4:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8004fc8:	2101      	movs	r1, #1
 8004fca:	2002      	movs	r0, #2
 8004fcc:	f7ff fcdc 	bl	8004988 <gpio_pin_remap_config>
 8004fd0:	4620      	mov	r0, r4
 8004fd2:	4907      	ldr	r1, [pc, #28]	; (8004ff0 <gd32_i2c_begin+0x64>)
 8004fd4:	2200      	movs	r2, #0
 8004fd6:	f000 fb25 	bl	8005624 <i2c_clock_config>
 8004fda:	4620      	mov	r0, r4
 8004fdc:	f000 fb9e 	bl	800571c <i2c_enable>
 8004fe0:	4620      	mov	r0, r4
 8004fe2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004fe6:	2101      	movs	r1, #1
 8004fe8:	f000 bb7e 	b.w	80056e8 <i2c_ack_config>
 8004fec:	40010c00 	andmi	r0, r1, r0, lsl #24
 8004ff0:	00061a80 	andeq	r1, r6, r0, lsl #21

08004ff4 <gd32_i2c_set_baudrate>:
 8004ff4:	4601      	mov	r1, r0
 8004ff6:	2200      	movs	r2, #0
 8004ff8:	4801      	ldr	r0, [pc, #4]	; (8005000 <gd32_i2c_set_baudrate+0xc>)
 8004ffa:	f000 bb13 	b.w	8005624 <i2c_clock_config>
 8004ffe:	bf00      	nop
 8005000:	40005400 	andmi	r5, r0, r0, lsl #8

08005004 <gd32_i2c_set_address>:
 8005004:	4b01      	ldr	r3, [pc, #4]	; (800500c <gd32_i2c_set_address+0x8>)
 8005006:	0040      	lsls	r0, r0, #1
 8005008:	7018      	strb	r0, [r3, #0]
 800500a:	4770      	bx	lr
 800500c:	20001820 	andcs	r1, r0, r0, lsr #16

08005010 <gd32_i2c_write>:
 8005010:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005012:	4604      	mov	r4, r0
 8005014:	460f      	mov	r7, r1
 8005016:	f640 75ff 	movw	r5, #4095	; 0xfff
 800501a:	4e2e      	ldr	r6, [pc, #184]	; (80050d4 <gd32_i2c_write+0xc4>)
 800501c:	f240 6101 	movw	r1, #1537	; 0x601
 8005020:	4630      	mov	r0, r6
 8005022:	f000 fb8f 	bl	8005744 <i2c_flag_get>
 8005026:	b9b0      	cbnz	r0, 8005056 <gd32_i2c_write+0x46>
 8005028:	482a      	ldr	r0, [pc, #168]	; (80050d4 <gd32_i2c_write+0xc4>)
 800502a:	f000 fb7c 	bl	8005726 <i2c_start_on_bus>
 800502e:	f640 75ff 	movw	r5, #4095	; 0xfff
 8005032:	4e28      	ldr	r6, [pc, #160]	; (80050d4 <gd32_i2c_write+0xc4>)
 8005034:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8005038:	4630      	mov	r0, r6
 800503a:	f000 fb83 	bl	8005744 <i2c_flag_get>
 800503e:	b190      	cbz	r0, 8005066 <gd32_i2c_write+0x56>
 8005040:	4b25      	ldr	r3, [pc, #148]	; (80050d8 <gd32_i2c_write+0xc8>)
 8005042:	f06f 0201 	mvn.w	r2, #1
 8005046:	7819      	ldrb	r1, [r3, #0]
 8005048:	4822      	ldr	r0, [pc, #136]	; (80050d4 <gd32_i2c_write+0xc4>)
 800504a:	f000 fb5f 	bl	800570c <i2c_master_addressing>
 800504e:	f640 75ff 	movw	r5, #4095	; 0xfff
 8005052:	4e20      	ldr	r6, [pc, #128]	; (80050d4 <gd32_i2c_write+0xc4>)
 8005054:	e00c      	b.n	8005070 <gd32_i2c_write+0x60>
 8005056:	3d01      	subs	r5, #1
 8005058:	d1e0      	bne.n	800501c <gd32_i2c_write+0xc>
 800505a:	f7ff ff85 	bl	8004f68 <_stop() [clone .isra.0]>
 800505e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005062:	4240      	negs	r0, r0
 8005064:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005066:	3d01      	subs	r5, #1
 8005068:	d1e4      	bne.n	8005034 <gd32_i2c_write+0x24>
 800506a:	e7f6      	b.n	800505a <gd32_i2c_write+0x4a>
 800506c:	3d01      	subs	r5, #1
 800506e:	d0f4      	beq.n	800505a <gd32_i2c_write+0x4a>
 8005070:	f240 5101 	movw	r1, #1281	; 0x501
 8005074:	4630      	mov	r0, r6
 8005076:	f000 fb65 	bl	8005744 <i2c_flag_get>
 800507a:	2800      	cmp	r0, #0
 800507c:	d0f6      	beq.n	800506c <gd32_i2c_write+0x5c>
 800507e:	f240 5101 	movw	r1, #1281	; 0x501
 8005082:	4814      	ldr	r0, [pc, #80]	; (80050d4 <gd32_i2c_write+0xc4>)
 8005084:	f000 fb69 	bl	800575a <i2c_flag_clear>
 8005088:	f640 75ff 	movw	r5, #4095	; 0xfff
 800508c:	4e11      	ldr	r6, [pc, #68]	; (80050d4 <gd32_i2c_write+0xc4>)
 800508e:	f240 5107 	movw	r1, #1287	; 0x507
 8005092:	4630      	mov	r0, r6
 8005094:	f000 fb56 	bl	8005744 <i2c_flag_get>
 8005098:	2801      	cmp	r0, #1
 800509a:	d107      	bne.n	80050ac <gd32_i2c_write+0x9c>
 800509c:	4e0d      	ldr	r6, [pc, #52]	; (80050d4 <gd32_i2c_write+0xc4>)
 800509e:	4427      	add	r7, r4
 80050a0:	42a7      	cmp	r7, r4
 80050a2:	d106      	bne.n	80050b2 <gd32_i2c_write+0xa2>
 80050a4:	f7ff ff60 	bl	8004f68 <_stop() [clone .isra.0]>
 80050a8:	2000      	movs	r0, #0
 80050aa:	e7da      	b.n	8005062 <gd32_i2c_write+0x52>
 80050ac:	3d01      	subs	r5, #1
 80050ae:	d1ee      	bne.n	800508e <gd32_i2c_write+0x7e>
 80050b0:	e7d3      	b.n	800505a <gd32_i2c_write+0x4a>
 80050b2:	4630      	mov	r0, r6
 80050b4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80050b8:	f000 fb3f 	bl	800573a <i2c_data_transmit>
 80050bc:	f640 75ff 	movw	r5, #4095	; 0xfff
 80050c0:	f240 5102 	movw	r1, #1282	; 0x502
 80050c4:	4630      	mov	r0, r6
 80050c6:	f000 fb3d 	bl	8005744 <i2c_flag_get>
 80050ca:	2800      	cmp	r0, #0
 80050cc:	d1e8      	bne.n	80050a0 <gd32_i2c_write+0x90>
 80050ce:	3d01      	subs	r5, #1
 80050d0:	d1f6      	bne.n	80050c0 <gd32_i2c_write+0xb0>
 80050d2:	e7c2      	b.n	800505a <gd32_i2c_write+0x4a>
 80050d4:	40005400 	andmi	r5, r0, r0, lsl #8
 80050d8:	20001820 	andcs	r1, r0, r0, lsr #16

080050dc <gd32_i2c_read>:
 80050dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80050e0:	4680      	mov	r8, r0
 80050e2:	460c      	mov	r4, r1
 80050e4:	f640 76ff 	movw	r6, #4095	; 0xfff
 80050e8:	4f4b      	ldr	r7, [pc, #300]	; (8005218 <gd32_i2c_read+0x13c>)
 80050ea:	f240 6101 	movw	r1, #1537	; 0x601
 80050ee:	4638      	mov	r0, r7
 80050f0:	f000 fb28 	bl	8005744 <i2c_flag_get>
 80050f4:	4605      	mov	r5, r0
 80050f6:	bb08      	cbnz	r0, 800513c <gd32_i2c_read+0x60>
 80050f8:	2c02      	cmp	r4, #2
 80050fa:	d103      	bne.n	8005104 <gd32_i2c_read+0x28>
 80050fc:	4601      	mov	r1, r0
 80050fe:	4846      	ldr	r0, [pc, #280]	; (8005218 <gd32_i2c_read+0x13c>)
 8005100:	f000 fafb 	bl	80056fa <i2c_ackpos_config>
 8005104:	4844      	ldr	r0, [pc, #272]	; (8005218 <gd32_i2c_read+0x13c>)
 8005106:	f000 fb0e 	bl	8005726 <i2c_start_on_bus>
 800510a:	f640 76ff 	movw	r6, #4095	; 0xfff
 800510e:	4f42      	ldr	r7, [pc, #264]	; (8005218 <gd32_i2c_read+0x13c>)
 8005110:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8005114:	4638      	mov	r0, r7
 8005116:	f000 fb15 	bl	8005744 <i2c_flag_get>
 800511a:	b1a8      	cbz	r0, 8005148 <gd32_i2c_read+0x6c>
 800511c:	4b3f      	ldr	r3, [pc, #252]	; (800521c <gd32_i2c_read+0x140>)
 800511e:	2201      	movs	r2, #1
 8005120:	7819      	ldrb	r1, [r3, #0]
 8005122:	483d      	ldr	r0, [pc, #244]	; (8005218 <gd32_i2c_read+0x13c>)
 8005124:	f000 faf2 	bl	800570c <i2c_master_addressing>
 8005128:	2c02      	cmp	r4, #2
 800512a:	d803      	bhi.n	8005134 <gd32_i2c_read+0x58>
 800512c:	2100      	movs	r1, #0
 800512e:	483a      	ldr	r0, [pc, #232]	; (8005218 <gd32_i2c_read+0x13c>)
 8005130:	f000 fada 	bl	80056e8 <i2c_ack_config>
 8005134:	f640 76ff 	movw	r6, #4095	; 0xfff
 8005138:	4f37      	ldr	r7, [pc, #220]	; (8005218 <gd32_i2c_read+0x13c>)
 800513a:	e00a      	b.n	8005152 <gd32_i2c_read+0x76>
 800513c:	3e01      	subs	r6, #1
 800513e:	d1d4      	bne.n	80050ea <gd32_i2c_read+0xe>
 8005140:	f7ff ff12 	bl	8004f68 <_stop() [clone .isra.0]>
 8005144:	2504      	movs	r5, #4
 8005146:	e04d      	b.n	80051e4 <gd32_i2c_read+0x108>
 8005148:	3e01      	subs	r6, #1
 800514a:	d1e1      	bne.n	8005110 <gd32_i2c_read+0x34>
 800514c:	e7f8      	b.n	8005140 <gd32_i2c_read+0x64>
 800514e:	3e01      	subs	r6, #1
 8005150:	d0f6      	beq.n	8005140 <gd32_i2c_read+0x64>
 8005152:	f240 5101 	movw	r1, #1281	; 0x501
 8005156:	4638      	mov	r0, r7
 8005158:	f000 faf4 	bl	8005744 <i2c_flag_get>
 800515c:	2800      	cmp	r0, #0
 800515e:	d0f6      	beq.n	800514e <gd32_i2c_read+0x72>
 8005160:	f240 5101 	movw	r1, #1281	; 0x501
 8005164:	482c      	ldr	r0, [pc, #176]	; (8005218 <gd32_i2c_read+0x13c>)
 8005166:	f000 faf8 	bl	800575a <i2c_flag_clear>
 800516a:	2c01      	cmp	r4, #1
 800516c:	d102      	bne.n	8005174 <gd32_i2c_read+0x98>
 800516e:	482a      	ldr	r0, [pc, #168]	; (8005218 <gd32_i2c_read+0x13c>)
 8005170:	f000 fade 	bl	8005730 <i2c_stop_on_bus>
 8005174:	f640 77ff 	movw	r7, #4095	; 0xfff
 8005178:	4e27      	ldr	r6, [pc, #156]	; (8005218 <gd32_i2c_read+0x13c>)
 800517a:	e022      	b.n	80051c2 <gd32_i2c_read+0xe6>
 800517c:	2c03      	cmp	r4, #3
 800517e:	d134      	bne.n	80051ea <gd32_i2c_read+0x10e>
 8005180:	f640 79ff 	movw	r9, #4095	; 0xfff
 8005184:	e002      	b.n	800518c <gd32_i2c_read+0xb0>
 8005186:	f1b9 0901 	subs.w	r9, r9, #1
 800518a:	d0d9      	beq.n	8005140 <gd32_i2c_read+0x64>
 800518c:	f240 5102 	movw	r1, #1282	; 0x502
 8005190:	4630      	mov	r0, r6
 8005192:	f000 fad7 	bl	8005744 <i2c_flag_get>
 8005196:	2800      	cmp	r0, #0
 8005198:	d0f5      	beq.n	8005186 <gd32_i2c_read+0xaa>
 800519a:	2100      	movs	r1, #0
 800519c:	4630      	mov	r0, r6
 800519e:	f000 faa3 	bl	80056e8 <i2c_ack_config>
 80051a2:	f240 5106 	movw	r1, #1286	; 0x506
 80051a6:	4630      	mov	r0, r6
 80051a8:	f000 facc 	bl	8005744 <i2c_flag_get>
 80051ac:	b138      	cbz	r0, 80051be <gd32_i2c_read+0xe2>
 80051ae:	4630      	mov	r0, r6
 80051b0:	f000 fac5 	bl	800573e <i2c_data_receive>
 80051b4:	f640 77ff 	movw	r7, #4095	; 0xfff
 80051b8:	f808 0b01 	strb.w	r0, [r8], #1
 80051bc:	3c01      	subs	r4, #1
 80051be:	3f01      	subs	r7, #1
 80051c0:	d0be      	beq.n	8005140 <gd32_i2c_read+0x64>
 80051c2:	2c00      	cmp	r4, #0
 80051c4:	d1da      	bne.n	800517c <gd32_i2c_read+0xa0>
 80051c6:	f640 73ff 	movw	r3, #4095	; 0xfff
 80051ca:	4915      	ldr	r1, [pc, #84]	; (8005220 <gd32_i2c_read+0x144>)
 80051cc:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 80051d0:	0592      	lsls	r2, r2, #22
 80051d2:	d41d      	bmi.n	8005210 <gd32_i2c_read+0x134>
 80051d4:	2101      	movs	r1, #1
 80051d6:	4810      	ldr	r0, [pc, #64]	; (8005218 <gd32_i2c_read+0x13c>)
 80051d8:	f000 fa86 	bl	80056e8 <i2c_ack_config>
 80051dc:	2101      	movs	r1, #1
 80051de:	480e      	ldr	r0, [pc, #56]	; (8005218 <gd32_i2c_read+0x13c>)
 80051e0:	f000 fa8b 	bl	80056fa <i2c_ackpos_config>
 80051e4:	4628      	mov	r0, r5
 80051e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80051ea:	2c02      	cmp	r4, #2
 80051ec:	d1d9      	bne.n	80051a2 <gd32_i2c_read+0xc6>
 80051ee:	f640 79ff 	movw	r9, #4095	; 0xfff
 80051f2:	e002      	b.n	80051fa <gd32_i2c_read+0x11e>
 80051f4:	f1b9 0901 	subs.w	r9, r9, #1
 80051f8:	d0a2      	beq.n	8005140 <gd32_i2c_read+0x64>
 80051fa:	f240 5102 	movw	r1, #1282	; 0x502
 80051fe:	4630      	mov	r0, r6
 8005200:	f000 faa0 	bl	8005744 <i2c_flag_get>
 8005204:	2800      	cmp	r0, #0
 8005206:	d0f5      	beq.n	80051f4 <gd32_i2c_read+0x118>
 8005208:	4630      	mov	r0, r6
 800520a:	f000 fa91 	bl	8005730 <i2c_stop_on_bus>
 800520e:	e7c8      	b.n	80051a2 <gd32_i2c_read+0xc6>
 8005210:	3b01      	subs	r3, #1
 8005212:	d1db      	bne.n	80051cc <gd32_i2c_read+0xf0>
 8005214:	e796      	b.n	8005144 <gd32_i2c_read+0x68>
 8005216:	bf00      	nop
 8005218:	40005400 	andmi	r5, r0, r0, lsl #8
 800521c:	20001820 	andcs	r1, r0, r0, lsr #16
 8005220:	40005000 	andmi	r5, r0, r0

08005224 <gd32_uart_begin>:
 8005224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005226:	461e      	mov	r6, r3
 8005228:	4b63      	ldr	r3, [pc, #396]	; (80053b8 <gd32_uart_begin+0x194>)
 800522a:	4604      	mov	r4, r0
 800522c:	4298      	cmp	r0, r3
 800522e:	460f      	mov	r7, r1
 8005230:	4615      	mov	r5, r2
 8005232:	d03b      	beq.n	80052ac <gd32_uart_begin+0x88>
 8005234:	d80a      	bhi.n	800524c <gd32_uart_begin+0x28>
 8005236:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800523a:	4298      	cmp	r0, r3
 800523c:	d02f      	beq.n	800529e <gd32_uart_begin+0x7a>
 800523e:	f240 7012 	movw	r0, #1810	; 0x712
 8005242:	f7ff fbd9 	bl	80049f8 <rcu_periph_clock_enable>
 8005246:	f240 6004 	movw	r0, #1540	; 0x604
 800524a:	e008      	b.n	800525e <gd32_uart_begin+0x3a>
 800524c:	4b5b      	ldr	r3, [pc, #364]	; (80053bc <gd32_uart_begin+0x198>)
 800524e:	4298      	cmp	r0, r3
 8005250:	d02f      	beq.n	80052b2 <gd32_uart_begin+0x8e>
 8005252:	f240 600e 	movw	r0, #1550	; 0x60e
 8005256:	f7ff fbcf 	bl	80049f8 <rcu_periph_clock_enable>
 800525a:	f240 6003 	movw	r0, #1539	; 0x603
 800525e:	f7ff fbcb 	bl	80049f8 <rcu_periph_clock_enable>
 8005262:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8005266:	f7ff fbc7 	bl	80049f8 <rcu_periph_clock_enable>
 800526a:	4b53      	ldr	r3, [pc, #332]	; (80053b8 <gd32_uart_begin+0x194>)
 800526c:	429c      	cmp	r4, r3
 800526e:	f000 8084 	beq.w	800537a <gd32_uart_begin+0x156>
 8005272:	d829      	bhi.n	80052c8 <gd32_uart_begin+0xa4>
 8005274:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8005278:	429c      	cmp	r4, r3
 800527a:	d071      	beq.n	8005360 <gd32_uart_begin+0x13c>
 800527c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005280:	2203      	movs	r2, #3
 8005282:	2118      	movs	r1, #24
 8005284:	484e      	ldr	r0, [pc, #312]	; (80053c0 <gd32_uart_begin+0x19c>)
 8005286:	f7ff fb25 	bl	80048d4 <gpio_init>
 800528a:	2104      	movs	r1, #4
 800528c:	484c      	ldr	r0, [pc, #304]	; (80053c0 <gd32_uart_begin+0x19c>)
 800528e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8005292:	2203      	movs	r2, #3
 8005294:	f7ff fb1e 	bl	80048d4 <gpio_init>
 8005298:	2101      	movs	r1, #1
 800529a:	484a      	ldr	r0, [pc, #296]	; (80053c4 <gd32_uart_begin+0x1a0>)
 800529c:	e025      	b.n	80052ea <gd32_uart_begin+0xc6>
 800529e:	f240 7011 	movw	r0, #1809	; 0x711
 80052a2:	f7ff fba9 	bl	80049f8 <rcu_periph_clock_enable>
 80052a6:	f240 6002 	movw	r0, #1538	; 0x602
 80052aa:	e7d8      	b.n	800525e <gd32_uart_begin+0x3a>
 80052ac:	f240 7013 	movw	r0, #1811	; 0x713
 80052b0:	e7c7      	b.n	8005242 <gd32_uart_begin+0x1e>
 80052b2:	f240 7014 	movw	r0, #1812	; 0x714
 80052b6:	f7ff fb9f 	bl	80049f8 <rcu_periph_clock_enable>
 80052ba:	f240 6004 	movw	r0, #1540	; 0x604
 80052be:	f7ff fb9b 	bl	80049f8 <rcu_periph_clock_enable>
 80052c2:	f240 6005 	movw	r0, #1541	; 0x605
 80052c6:	e7ca      	b.n	800525e <gd32_uart_begin+0x3a>
 80052c8:	4b3c      	ldr	r3, [pc, #240]	; (80053bc <gd32_uart_begin+0x198>)
 80052ca:	429c      	cmp	r4, r3
 80052cc:	d062      	beq.n	8005394 <gd32_uart_begin+0x170>
 80052ce:	2340      	movs	r3, #64	; 0x40
 80052d0:	2203      	movs	r2, #3
 80052d2:	2118      	movs	r1, #24
 80052d4:	483c      	ldr	r0, [pc, #240]	; (80053c8 <gd32_uart_begin+0x1a4>)
 80052d6:	f7ff fafd 	bl	80048d4 <gpio_init>
 80052da:	2104      	movs	r1, #4
 80052dc:	483a      	ldr	r0, [pc, #232]	; (80053c8 <gd32_uart_begin+0x1a4>)
 80052de:	2380      	movs	r3, #128	; 0x80
 80052e0:	2203      	movs	r2, #3
 80052e2:	f7ff faf7 	bl	80048d4 <gpio_init>
 80052e6:	2101      	movs	r1, #1
 80052e8:	2004      	movs	r0, #4
 80052ea:	f7ff fb4d 	bl	8004988 <gpio_pin_remap_config>
 80052ee:	4620      	mov	r0, r4
 80052f0:	f7ff fd26 	bl	8004d40 <usart_deinit>
 80052f4:	68e3      	ldr	r3, [r4, #12]
 80052f6:	4639      	mov	r1, r7
 80052f8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80052fc:	4620      	mov	r0, r4
 80052fe:	60e3      	str	r3, [r4, #12]
 8005300:	f7ff fd5e 	bl	8004dc0 <usart_baudrate_set>
 8005304:	f1a5 0309 	sub.w	r3, r5, #9
 8005308:	4259      	negs	r1, r3
 800530a:	4159      	adcs	r1, r3
 800530c:	4620      	mov	r0, r4
 800530e:	0309      	lsls	r1, r1, #12
 8005310:	f7ff fd86 	bl	8004e20 <usart_word_length_set>
 8005314:	9906      	ldr	r1, [sp, #24]
 8005316:	4620      	mov	r0, r4
 8005318:	1e8a      	subs	r2, r1, #2
 800531a:	4251      	negs	r1, r2
 800531c:	4151      	adcs	r1, r2
 800531e:	0349      	lsls	r1, r1, #13
 8005320:	f7ff fd86 	bl	8004e30 <usart_stop_bit_set>
 8005324:	2e01      	cmp	r6, #1
 8005326:	d041      	beq.n	80053ac <gd32_uart_begin+0x188>
 8005328:	2e02      	cmp	r6, #2
 800532a:	d142      	bne.n	80053b2 <gd32_uart_begin+0x18e>
 800532c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8005330:	4620      	mov	r0, r4
 8005332:	f7ff fd6d 	bl	8004e10 <usart_parity_config>
 8005336:	2100      	movs	r1, #0
 8005338:	4620      	mov	r0, r4
 800533a:	f7ff fd8d 	bl	8004e58 <usart_hardware_flow_rts_config>
 800533e:	2100      	movs	r1, #0
 8005340:	4620      	mov	r0, r4
 8005342:	f7ff fd8f 	bl	8004e64 <usart_hardware_flow_cts_config>
 8005346:	2104      	movs	r1, #4
 8005348:	4620      	mov	r0, r4
 800534a:	f7ff fd7f 	bl	8004e4c <usart_receive_config>
 800534e:	2108      	movs	r1, #8
 8005350:	4620      	mov	r0, r4
 8005352:	f7ff fd75 	bl	8004e40 <usart_transmit_config>
 8005356:	68e3      	ldr	r3, [r4, #12]
 8005358:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800535c:	60e3      	str	r3, [r4, #12]
 800535e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005360:	2304      	movs	r3, #4
 8005362:	2203      	movs	r2, #3
 8005364:	2118      	movs	r1, #24
 8005366:	4819      	ldr	r0, [pc, #100]	; (80053cc <gd32_uart_begin+0x1a8>)
 8005368:	f7ff fab4 	bl	80048d4 <gpio_init>
 800536c:	2308      	movs	r3, #8
 800536e:	2203      	movs	r2, #3
 8005370:	2104      	movs	r1, #4
 8005372:	4816      	ldr	r0, [pc, #88]	; (80053cc <gd32_uart_begin+0x1a8>)
 8005374:	f7ff faae 	bl	80048d4 <gpio_init>
 8005378:	e7b9      	b.n	80052ee <gd32_uart_begin+0xca>
 800537a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800537e:	2203      	movs	r2, #3
 8005380:	2118      	movs	r1, #24
 8005382:	480f      	ldr	r0, [pc, #60]	; (80053c0 <gd32_uart_begin+0x19c>)
 8005384:	f7ff faa6 	bl	80048d4 <gpio_init>
 8005388:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800538c:	2203      	movs	r2, #3
 800538e:	2104      	movs	r1, #4
 8005390:	480b      	ldr	r0, [pc, #44]	; (80053c0 <gd32_uart_begin+0x19c>)
 8005392:	e7ef      	b.n	8005374 <gd32_uart_begin+0x150>
 8005394:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005398:	2203      	movs	r2, #3
 800539a:	2118      	movs	r1, #24
 800539c:	4808      	ldr	r0, [pc, #32]	; (80053c0 <gd32_uart_begin+0x19c>)
 800539e:	f7ff fa99 	bl	80048d4 <gpio_init>
 80053a2:	2304      	movs	r3, #4
 80053a4:	2203      	movs	r2, #3
 80053a6:	4619      	mov	r1, r3
 80053a8:	4809      	ldr	r0, [pc, #36]	; (80053d0 <gd32_uart_begin+0x1ac>)
 80053aa:	e7e3      	b.n	8005374 <gd32_uart_begin+0x150>
 80053ac:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80053b0:	e7be      	b.n	8005330 <gd32_uart_begin+0x10c>
 80053b2:	2100      	movs	r1, #0
 80053b4:	e7bc      	b.n	8005330 <gd32_uart_begin+0x10c>
 80053b6:	bf00      	nop
 80053b8:	40004c00 	andmi	r4, r0, r0, lsl #24
 80053bc:	40005000 	andmi	r5, r0, r0
 80053c0:	40011000 	andmi	r1, r1, r0
 80053c4:	00140010 	andseq	r0, r4, r0, lsl r0
 80053c8:	40010c00 	andmi	r0, r1, r0, lsl #24
 80053cc:	40010800 	andmi	r0, r1, r0, lsl #16
 80053d0:	40011400 	andmi	r1, r1, r0, lsl #8

080053d4 <mac_address_get(unsigned char*)>:
 80053d4:	2102      	movs	r1, #2
 80053d6:	4a07      	ldr	r2, [pc, #28]	; (80053f4 <mac_address_get(unsigned char*)+0x20>)
 80053d8:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 80053dc:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 80053e0:	7001      	strb	r1, [r0, #0]
 80053e2:	7042      	strb	r2, [r0, #1]
 80053e4:	0e1a      	lsrs	r2, r3, #24
 80053e6:	7082      	strb	r2, [r0, #2]
 80053e8:	0c1a      	lsrs	r2, r3, #16
 80053ea:	70c2      	strb	r2, [r0, #3]
 80053ec:	0a1a      	lsrs	r2, r3, #8
 80053ee:	7102      	strb	r2, [r0, #4]
 80053f0:	7143      	strb	r3, [r0, #5]
 80053f2:	4770      	bx	lr
 80053f4:	1ffff000 	svcne	0x00fff000

080053f8 <micros_init()>:
 80053f8:	4770      	bx	lr
	...

080053fc <udelay_init()>:
 80053fc:	4a07      	ldr	r2, [pc, #28]	; (800541c <udelay_init()+0x20>)
 80053fe:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8005402:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8005406:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 800540a:	2200      	movs	r2, #0
 800540c:	4b04      	ldr	r3, [pc, #16]	; (8005420 <udelay_init()+0x24>)
 800540e:	605a      	str	r2, [r3, #4]
 8005410:	681a      	ldr	r2, [r3, #0]
 8005412:	f042 0201 	orr.w	r2, r2, #1
 8005416:	601a      	str	r2, [r3, #0]
 8005418:	4770      	bx	lr
 800541a:	bf00      	nop
 800541c:	e000ed00 	and	lr, r0, r0, lsl #26
 8005420:	e0001000 	and	r1, r0, r0

08005424 <udelay(unsigned int, unsigned int)>:
 8005424:	236c      	movs	r3, #108	; 0x6c
 8005426:	b530      	push	{r4, r5, lr}
 8005428:	4358      	muls	r0, r3
 800542a:	b909      	cbnz	r1, 8005430 <udelay(unsigned int, unsigned int)+0xc>
 800542c:	4b08      	ldr	r3, [pc, #32]	; (8005450 <udelay(unsigned int, unsigned int)+0x2c>)
 800542e:	6859      	ldr	r1, [r3, #4]
 8005430:	2300      	movs	r3, #0
 8005432:	4c07      	ldr	r4, [pc, #28]	; (8005450 <udelay(unsigned int, unsigned int)+0x2c>)
 8005434:	6862      	ldr	r2, [r4, #4]
 8005436:	4291      	cmp	r1, r2
 8005438:	d0fc      	beq.n	8005434 <udelay(unsigned int, unsigned int)+0x10>
 800543a:	bf2a      	itet	cs
 800543c:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8005440:	189b      	addcc	r3, r3, r2
 8005442:	195b      	addcs	r3, r3, r5
 8005444:	1a5b      	subs	r3, r3, r1
 8005446:	4283      	cmp	r3, r0
 8005448:	d300      	bcc.n	800544c <udelay(unsigned int, unsigned int)+0x28>
 800544a:	bd30      	pop	{r4, r5, pc}
 800544c:	4611      	mov	r1, r2
 800544e:	e7f1      	b.n	8005434 <udelay(unsigned int, unsigned int)+0x10>
 8005450:	e0001000 	and	r1, r0, r0

08005454 <adc_mode_config>:
 8005454:	4b06      	ldr	r3, [pc, #24]	; (8005470 <adc_mode_config+0x1c>)
 8005456:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 800545a:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 800545e:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8005462:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8005466:	4302      	orrs	r2, r0
 8005468:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 800546c:	4770      	bx	lr
 800546e:	bf00      	nop
 8005470:	40012000 	andmi	r2, r1, r0

08005474 <adc_special_function_config>:
 8005474:	b510      	push	{r4, lr}
 8005476:	f401 7380 	and.w	r3, r1, #256	; 0x100
 800547a:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 800547e:	f001 0102 	and.w	r1, r1, #2
 8005482:	b17a      	cbz	r2, 80054a4 <adc_special_function_config+0x30>
 8005484:	b11b      	cbz	r3, 800548e <adc_special_function_config+0x1a>
 8005486:	6843      	ldr	r3, [r0, #4]
 8005488:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800548c:	6043      	str	r3, [r0, #4]
 800548e:	b11c      	cbz	r4, 8005498 <adc_special_function_config+0x24>
 8005490:	6843      	ldr	r3, [r0, #4]
 8005492:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8005496:	6043      	str	r3, [r0, #4]
 8005498:	b119      	cbz	r1, 80054a2 <adc_special_function_config+0x2e>
 800549a:	6883      	ldr	r3, [r0, #8]
 800549c:	f043 0302 	orr.w	r3, r3, #2
 80054a0:	6083      	str	r3, [r0, #8]
 80054a2:	bd10      	pop	{r4, pc}
 80054a4:	b11b      	cbz	r3, 80054ae <adc_special_function_config+0x3a>
 80054a6:	6843      	ldr	r3, [r0, #4]
 80054a8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80054ac:	6043      	str	r3, [r0, #4]
 80054ae:	b11c      	cbz	r4, 80054b8 <adc_special_function_config+0x44>
 80054b0:	6843      	ldr	r3, [r0, #4]
 80054b2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80054b6:	6043      	str	r3, [r0, #4]
 80054b8:	2900      	cmp	r1, #0
 80054ba:	d0f2      	beq.n	80054a2 <adc_special_function_config+0x2e>
 80054bc:	6883      	ldr	r3, [r0, #8]
 80054be:	f023 0302 	bic.w	r3, r3, #2
 80054c2:	e7ed      	b.n	80054a0 <adc_special_function_config+0x2c>

080054c4 <adc_data_alignment_config>:
 80054c4:	6883      	ldr	r3, [r0, #8]
 80054c6:	b119      	cbz	r1, 80054d0 <adc_data_alignment_config+0xc>
 80054c8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80054cc:	6083      	str	r3, [r0, #8]
 80054ce:	4770      	bx	lr
 80054d0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80054d4:	e7fa      	b.n	80054cc <adc_data_alignment_config+0x8>

080054d6 <adc_enable>:
 80054d6:	6883      	ldr	r3, [r0, #8]
 80054d8:	07db      	lsls	r3, r3, #31
 80054da:	bf5e      	ittt	pl
 80054dc:	6883      	ldrpl	r3, [r0, #8]
 80054de:	f043 0301 	orrpl.w	r3, r3, #1
 80054e2:	6083      	strpl	r3, [r0, #8]
 80054e4:	4770      	bx	lr

080054e6 <adc_calibration_enable>:
 80054e6:	6883      	ldr	r3, [r0, #8]
 80054e8:	f100 0208 	add.w	r2, r0, #8
 80054ec:	f043 0308 	orr.w	r3, r3, #8
 80054f0:	6083      	str	r3, [r0, #8]
 80054f2:	6813      	ldr	r3, [r2, #0]
 80054f4:	0719      	lsls	r1, r3, #28
 80054f6:	d4fc      	bmi.n	80054f2 <adc_calibration_enable+0xc>
 80054f8:	6883      	ldr	r3, [r0, #8]
 80054fa:	f043 0304 	orr.w	r3, r3, #4
 80054fe:	6083      	str	r3, [r0, #8]
 8005500:	6813      	ldr	r3, [r2, #0]
 8005502:	075b      	lsls	r3, r3, #29
 8005504:	d4fc      	bmi.n	8005500 <adc_calibration_enable+0x1a>
 8005506:	4770      	bx	lr

08005508 <adc_tempsensor_vrefint_enable>:
 8005508:	4a03      	ldr	r2, [pc, #12]	; (8005518 <adc_tempsensor_vrefint_enable+0x10>)
 800550a:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 800550e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8005512:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8005516:	4770      	bx	lr
 8005518:	40012000 	andmi	r2, r1, r0

0800551c <adc_channel_length_config>:
 800551c:	2901      	cmp	r1, #1
 800551e:	d002      	beq.n	8005526 <adc_channel_length_config+0xa>
 8005520:	2902      	cmp	r1, #2
 8005522:	d00c      	beq.n	800553e <adc_channel_length_config+0x22>
 8005524:	4770      	bx	lr
 8005526:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8005528:	3a01      	subs	r2, #1
 800552a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800552e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8005530:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8005532:	0512      	lsls	r2, r2, #20
 8005534:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8005538:	431a      	orrs	r2, r3
 800553a:	62c2      	str	r2, [r0, #44]	; 0x2c
 800553c:	4770      	bx	lr
 800553e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8005540:	3a01      	subs	r2, #1
 8005542:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8005546:	6383      	str	r3, [r0, #56]	; 0x38
 8005548:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800554a:	0512      	lsls	r2, r2, #20
 800554c:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8005550:	431a      	orrs	r2, r3
 8005552:	6382      	str	r2, [r0, #56]	; 0x38
 8005554:	4770      	bx	lr

08005556 <adc_inserted_channel_config>:
 8005556:	b530      	push	{r4, r5, lr}
 8005558:	6b84      	ldr	r4, [r0, #56]	; 0x38
 800555a:	6b85      	ldr	r5, [r0, #56]	; 0x38
 800555c:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8005560:	1a61      	subs	r1, r4, r1
 8005562:	f06f 0404 	mvn.w	r4, #4
 8005566:	4361      	muls	r1, r4
 8005568:	241f      	movs	r4, #31
 800556a:	310f      	adds	r1, #15
 800556c:	408c      	lsls	r4, r1
 800556e:	ea25 0504 	bic.w	r5, r5, r4
 8005572:	fa02 f101 	lsl.w	r1, r2, r1
 8005576:	4329      	orrs	r1, r5
 8005578:	2a09      	cmp	r2, #9
 800557a:	6381      	str	r1, [r0, #56]	; 0x38
 800557c:	d80b      	bhi.n	8005596 <adc_inserted_channel_config+0x40>
 800557e:	2407      	movs	r4, #7
 8005580:	6901      	ldr	r1, [r0, #16]
 8005582:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8005586:	4094      	lsls	r4, r2
 8005588:	ea21 0104 	bic.w	r1, r1, r4
 800558c:	fa03 f202 	lsl.w	r2, r3, r2
 8005590:	430a      	orrs	r2, r1
 8005592:	6102      	str	r2, [r0, #16]
 8005594:	bd30      	pop	{r4, r5, pc}
 8005596:	2a11      	cmp	r2, #17
 8005598:	d8fc      	bhi.n	8005594 <adc_inserted_channel_config+0x3e>
 800559a:	2407      	movs	r4, #7
 800559c:	3a0a      	subs	r2, #10
 800559e:	68c1      	ldr	r1, [r0, #12]
 80055a0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80055a4:	4094      	lsls	r4, r2
 80055a6:	ea21 0104 	bic.w	r1, r1, r4
 80055aa:	4093      	lsls	r3, r2
 80055ac:	430b      	orrs	r3, r1
 80055ae:	60c3      	str	r3, [r0, #12]
 80055b0:	e7f0      	b.n	8005594 <adc_inserted_channel_config+0x3e>

080055b2 <adc_external_trigger_source_config>:
 80055b2:	2901      	cmp	r1, #1
 80055b4:	d002      	beq.n	80055bc <adc_external_trigger_source_config+0xa>
 80055b6:	2902      	cmp	r1, #2
 80055b8:	d008      	beq.n	80055cc <adc_external_trigger_source_config+0x1a>
 80055ba:	4770      	bx	lr
 80055bc:	6883      	ldr	r3, [r0, #8]
 80055be:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 80055c2:	6083      	str	r3, [r0, #8]
 80055c4:	6883      	ldr	r3, [r0, #8]
 80055c6:	4313      	orrs	r3, r2
 80055c8:	6083      	str	r3, [r0, #8]
 80055ca:	4770      	bx	lr
 80055cc:	6883      	ldr	r3, [r0, #8]
 80055ce:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80055d2:	e7f6      	b.n	80055c2 <adc_external_trigger_source_config+0x10>

080055d4 <adc_external_trigger_config>:
 80055d4:	f001 0301 	and.w	r3, r1, #1
 80055d8:	f001 0102 	and.w	r1, r1, #2
 80055dc:	b152      	cbz	r2, 80055f4 <adc_external_trigger_config+0x20>
 80055de:	b11b      	cbz	r3, 80055e8 <adc_external_trigger_config+0x14>
 80055e0:	6883      	ldr	r3, [r0, #8]
 80055e2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80055e6:	6083      	str	r3, [r0, #8]
 80055e8:	b119      	cbz	r1, 80055f2 <adc_external_trigger_config+0x1e>
 80055ea:	6883      	ldr	r3, [r0, #8]
 80055ec:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80055f0:	6083      	str	r3, [r0, #8]
 80055f2:	4770      	bx	lr
 80055f4:	b11b      	cbz	r3, 80055fe <adc_external_trigger_config+0x2a>
 80055f6:	6883      	ldr	r3, [r0, #8]
 80055f8:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80055fc:	6083      	str	r3, [r0, #8]
 80055fe:	2900      	cmp	r1, #0
 8005600:	d0f7      	beq.n	80055f2 <adc_external_trigger_config+0x1e>
 8005602:	6883      	ldr	r3, [r0, #8]
 8005604:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8005608:	e7f2      	b.n	80055f0 <adc_external_trigger_config+0x1c>

0800560a <adc_software_trigger_enable>:
 800560a:	07ca      	lsls	r2, r1, #31
 800560c:	bf42      	ittt	mi
 800560e:	6883      	ldrmi	r3, [r0, #8]
 8005610:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8005614:	6083      	strmi	r3, [r0, #8]
 8005616:	078b      	lsls	r3, r1, #30
 8005618:	bf42      	ittt	mi
 800561a:	6883      	ldrmi	r3, [r0, #8]
 800561c:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8005620:	6083      	strmi	r3, [r0, #8]
 8005622:	4770      	bx	lr

08005624 <i2c_clock_config>:
 8005624:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005626:	4605      	mov	r5, r0
 8005628:	2002      	movs	r0, #2
 800562a:	460c      	mov	r4, r1
 800562c:	4617      	mov	r7, r2
 800562e:	f7ff fa21 	bl	8004a74 <rcu_clock_freq_get>
 8005632:	4603      	mov	r3, r0
 8005634:	4828      	ldr	r0, [pc, #160]	; (80056d8 <i2c_clock_config+0xb4>)
 8005636:	4a29      	ldr	r2, [pc, #164]	; (80056dc <i2c_clock_config+0xb8>)
 8005638:	fbb3 f0f0 	udiv	r0, r3, r0
 800563c:	4293      	cmp	r3, r2
 800563e:	bf34      	ite	cc
 8005640:	4601      	movcc	r1, r0
 8005642:	2136      	movcs	r1, #54	; 0x36
 8005644:	686e      	ldr	r6, [r5, #4]
 8005646:	4a26      	ldr	r2, [pc, #152]	; (80056e0 <i2c_clock_config+0xbc>)
 8005648:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 800564c:	430e      	orrs	r6, r1
 800564e:	4294      	cmp	r4, r2
 8005650:	606e      	str	r6, [r5, #4]
 8005652:	d816      	bhi.n	8005682 <i2c_clock_config+0x5e>
 8005654:	3001      	adds	r0, #1
 8005656:	2835      	cmp	r0, #53	; 0x35
 8005658:	d90d      	bls.n	8005676 <i2c_clock_config+0x52>
 800565a:	2236      	movs	r2, #54	; 0x36
 800565c:	622a      	str	r2, [r5, #32]
 800565e:	0064      	lsls	r4, r4, #1
 8005660:	fbb3 f4f4 	udiv	r4, r3, r4
 8005664:	2c04      	cmp	r4, #4
 8005666:	bf38      	it	cc
 8005668:	2404      	movcc	r4, #4
 800566a:	69ea      	ldr	r2, [r5, #28]
 800566c:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8005670:	4314      	orrs	r4, r2
 8005672:	61ec      	str	r4, [r5, #28]
 8005674:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005676:	2802      	cmp	r0, #2
 8005678:	d801      	bhi.n	800567e <i2c_clock_config+0x5a>
 800567a:	2202      	movs	r2, #2
 800567c:	e7ee      	b.n	800565c <i2c_clock_config+0x38>
 800567e:	6228      	str	r0, [r5, #32]
 8005680:	e7ed      	b.n	800565e <i2c_clock_config+0x3a>
 8005682:	4a18      	ldr	r2, [pc, #96]	; (80056e4 <i2c_clock_config+0xc0>)
 8005684:	4294      	cmp	r4, r2
 8005686:	d8f5      	bhi.n	8005674 <i2c_clock_config+0x50>
 8005688:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800568c:	4351      	muls	r1, r2
 800568e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005692:	fbb1 f1f2 	udiv	r1, r1, r2
 8005696:	3101      	adds	r1, #1
 8005698:	6229      	str	r1, [r5, #32]
 800569a:	b9a7      	cbnz	r7, 80056c6 <i2c_clock_config+0xa2>
 800569c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80056a0:	fbb3 f4f4 	udiv	r4, r3, r4
 80056a4:	69eb      	ldr	r3, [r5, #28]
 80056a6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80056aa:	61eb      	str	r3, [r5, #28]
 80056ac:	f3c4 030b 	ubfx	r3, r4, #0, #12
 80056b0:	b90b      	cbnz	r3, 80056b6 <i2c_clock_config+0x92>
 80056b2:	f044 0401 	orr.w	r4, r4, #1
 80056b6:	69eb      	ldr	r3, [r5, #28]
 80056b8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80056bc:	61eb      	str	r3, [r5, #28]
 80056be:	69eb      	ldr	r3, [r5, #28]
 80056c0:	4323      	orrs	r3, r4
 80056c2:	61eb      	str	r3, [r5, #28]
 80056c4:	e7d6      	b.n	8005674 <i2c_clock_config+0x50>
 80056c6:	2219      	movs	r2, #25
 80056c8:	4354      	muls	r4, r2
 80056ca:	fbb3 f4f4 	udiv	r4, r3, r4
 80056ce:	69eb      	ldr	r3, [r5, #28]
 80056d0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80056d4:	e7e9      	b.n	80056aa <i2c_clock_config+0x86>
 80056d6:	bf00      	nop
 80056d8:	000f4240 	andeq	r4, pc, r0, asr #4
 80056dc:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 80056e0:	000186a0 	andeq	r8, r1, r0, lsr #13
 80056e4:	00061a80 	andeq	r1, r6, r0, lsl #21

080056e8 <i2c_ack_config>:
 80056e8:	6803      	ldr	r3, [r0, #0]
 80056ea:	2901      	cmp	r1, #1
 80056ec:	bf0c      	ite	eq
 80056ee:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80056f2:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 80056f6:	6003      	str	r3, [r0, #0]
 80056f8:	4770      	bx	lr

080056fa <i2c_ackpos_config>:
 80056fa:	6803      	ldr	r3, [r0, #0]
 80056fc:	b919      	cbnz	r1, 8005706 <i2c_ackpos_config+0xc>
 80056fe:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8005702:	6003      	str	r3, [r0, #0]
 8005704:	4770      	bx	lr
 8005706:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800570a:	e7fa      	b.n	8005702 <i2c_ackpos_config+0x8>

0800570c <i2c_master_addressing>:
 800570c:	3202      	adds	r2, #2
 800570e:	bf0c      	ite	eq
 8005710:	f021 0101 	biceq.w	r1, r1, #1
 8005714:	f041 0101 	orrne.w	r1, r1, #1
 8005718:	6101      	str	r1, [r0, #16]
 800571a:	4770      	bx	lr

0800571c <i2c_enable>:
 800571c:	6803      	ldr	r3, [r0, #0]
 800571e:	f043 0301 	orr.w	r3, r3, #1
 8005722:	6003      	str	r3, [r0, #0]
 8005724:	4770      	bx	lr

08005726 <i2c_start_on_bus>:
 8005726:	6803      	ldr	r3, [r0, #0]
 8005728:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800572c:	6003      	str	r3, [r0, #0]
 800572e:	4770      	bx	lr

08005730 <i2c_stop_on_bus>:
 8005730:	6803      	ldr	r3, [r0, #0]
 8005732:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005736:	6003      	str	r3, [r0, #0]
 8005738:	4770      	bx	lr

0800573a <i2c_data_transmit>:
 800573a:	6101      	str	r1, [r0, #16]
 800573c:	4770      	bx	lr

0800573e <i2c_data_receive>:
 800573e:	6900      	ldr	r0, [r0, #16]
 8005740:	b2c0      	uxtb	r0, r0
 8005742:	4770      	bx	lr

08005744 <i2c_flag_get>:
 8005744:	098b      	lsrs	r3, r1, #6
 8005746:	581a      	ldr	r2, [r3, r0]
 8005748:	2301      	movs	r3, #1
 800574a:	f001 011f 	and.w	r1, r1, #31
 800574e:	408b      	lsls	r3, r1
 8005750:	4213      	tst	r3, r2
 8005752:	bf14      	ite	ne
 8005754:	2001      	movne	r0, #1
 8005756:	2000      	moveq	r0, #0
 8005758:	4770      	bx	lr

0800575a <i2c_flag_clear>:
 800575a:	f240 5301 	movw	r3, #1281	; 0x501
 800575e:	4299      	cmp	r1, r3
 8005760:	b510      	push	{r4, lr}
 8005762:	d102      	bne.n	800576a <i2c_flag_clear+0x10>
 8005764:	6943      	ldr	r3, [r0, #20]
 8005766:	6983      	ldr	r3, [r0, #24]
 8005768:	bd10      	pop	{r4, pc}
 800576a:	2201      	movs	r2, #1
 800576c:	098c      	lsrs	r4, r1, #6
 800576e:	5823      	ldr	r3, [r4, r0]
 8005770:	f001 011f 	and.w	r1, r1, #31
 8005774:	408a      	lsls	r2, r1
 8005776:	ea23 0302 	bic.w	r3, r3, r2
 800577a:	5023      	str	r3, [r4, r0]
 800577c:	e7f4      	b.n	8005768 <i2c_flag_clear+0xe>
	...

Disassembly of section .rodata:

08005780 <deviceLabel-0x100>:
	...
 8005788:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 800578c:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8005790:	00000000 	andeq	r0, r0, r0
 8005794:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8005798:	2074634f 	rsbscs	r6, r4, pc, asr #6
 800579c:	32203131 	eorcc	r3, r0, #1073741836	; 0x4000000c
 80057a0:	00323230 	eorseq	r3, r2, r0, lsr r2
 80057a4:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 80057a8:	33303146 	teqcc	r0, #-2147483631	; 0x80000011
 80057ac:	5b004352 	blpl	80164fc <__exidx_end+0x104a0>
 80057b0:	5d732556 	cfldr64pl	mvdx2, [r3, #-344]!	; 0xfffffea8
 80057b4:	20732520 	rsbscs	r2, r3, r0, lsr #10
 80057b8:	706d6f43 	rsbvc	r6, sp, r3, asr #30
 80057bc:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 80057c0:	206e6f20 	rsbcs	r6, lr, r0, lsr #30
 80057c4:	61207325 			; <UNDEFINED> instruction: 0x61207325
 80057c8:	73252074 			; <UNDEFINED> instruction: 0x73252074
 80057cc:	3031000a 	eorscc	r0, r1, sl
 80057d0:	3a31333a 	bcc	8c524c0 <__exidx_end+0xc4c464>
 80057d4:	52003435 	andpl	r3, r0, #889192448	; 0x35000000
 80057d8:	43204d44 			; <UNDEFINED> instruction: 0x43204d44
 80057dc:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 80057e0:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 80057e4:	69772072 	ldmdbvs	r7!, {r1, r4, r5, r6, sp}^
 80057e8:	55206874 	strpl	r6, [r0, #-2164]!	; 0xfffff78c
 80057ec:	5b204253 	blpl	8816140 <__exidx_end+0x8100e4>
 80057f0:	706d6f43 	rsbvc	r6, sp, r3, asr #30
 80057f4:	62697461 	rsbvs	r7, r9, #1627389952	; 0x61000000
 80057f8:	7720656c 	strvc	r6, [r0, -ip, ror #10]!
 80057fc:	20687469 	rsbcs	r7, r8, r9, ror #8
 8005800:	74746e45 	ldrbtvc	r6, [r4], #-3653	; 0xfffff1bb
 8005804:	55206365 	strpl	r6, [r0, #-869]!	; 0xfffffc9b
 8005808:	50204253 	eorpl	r4, r0, r3, asr r2
 800580c:	70206f72 	eorvc	r6, r0, r2, ror pc
 8005810:	6f746f72 	svcvs	0x00746f72
 8005814:	5d6c6f63 	stclpl	15, cr6, [ip, #-396]!	; 0xfffffe74
 8005818:	6957202c 	ldmdbvs	r7, {r2, r3, r5, sp}^
 800581c:	74656764 	strbtvc	r6, [r5], #-1892	; 0xfffff89c
 8005820:	646f6d20 	strbtvs	r6, [pc], #-3360	; 8005828 <_etext+0xa8>
 8005824:	203a2065 	eorscs	r2, sl, r5, rrx
 8005828:	28206425 	stmdacs	r0!, {r0, r2, r5, sl, sp, lr}
 800582c:	0a297325 	beq	8a624c8 <__exidx_end+0xa5c46c>
 8005830:	76654400 	strbtvc	r4, [r5], -r0, lsl #8
 8005834:	20656369 	rsbcs	r6, r5, r9, ror #6
 8005838:	44495555 	strbmi	r5, [r9], #-1365	; 0xfffffaab
 800583c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8005840:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 8005844:	3a78322e 	bcc	9e12104 <__exidx_end+0x1e0c0a8>
 8005848:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 800584c:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8005850:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8005854:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8005858:	4c00202c 	stcmi	0, cr2, [r0], {44}	; 0x2c
 800585c:	6c656261 	sfmvs	f6, 2, [r5], #-388	; 0xfffffe7c
 8005860:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8005864:	0a732a2e 	beq	9cd0124 <__exidx_end+0x1cca0c8>
 8005868:	33444700 	movtcc	r4, #18176	; 0x4700
 800586c:	30314632 	eorscc	r4, r1, r2, lsr r6
 8005870:	20435233 	subcs	r5, r3, r3, lsr r2
 8005874:	20584d44 	subscs	r4, r8, r4, asr #26
 8005878:	20425355 	subcs	r5, r2, r5, asr r3
 800587c:	006f7250 	rsbeq	r7, pc, r0, asr r2	; <UNPREDICTABLE>

08005880 <deviceLabel>:
 8005880:	08005869 	stmdaeq	r0, {r0, r3, r5, r6, fp, ip, lr}
 8005884:	00000016 	andeq	r0, r0, r6, lsl r0

08005888 <SOFTWARE_VERSION>:
 8005888:	00342e31 	eorseq	r2, r4, r1, lsr lr

0800588c <widget_mode_names>:
 800588c:	5f584d44 	svcpl	0x00584d44
 8005890:	004d4452 	subeq	r4, sp, r2, asr r4
 8005894:	00000000 	andeq	r0, r0, r0
 8005898:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 80058a4:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 80058b0:	5f4d4452 	svcpl	0x004d4452
 80058b4:	46494e53 			; <UNDEFINED> instruction: 0x46494e53
 80058b8:	00524546 	subseq	r4, r2, r6, asr #10
 80058bc:	5f544547 	svcpl	0x00544547
 80058c0:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 80058c4:	505f5445 	subspl	r5, pc, r5, asr #8
 80058c8:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 80058cc:	45525f53 	ldrbmi	r5, [r2, #-3923]	; 0xfffff0ad
 80058d0:	00594c50 	subseq	r4, r9, r0, asr ip
 80058d4:	5f544553 	svcpl	0x00544553
 80058d8:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 80058dc:	505f5445 	subspl	r5, pc, r5, asr #8
 80058e0:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 80058e4:	45520053 	ldrbmi	r0, [r2, #-83]	; 0xffffffad
 80058e8:	56494543 	strbpl	r4, [r9], -r3, asr #10
 80058ec:	445f4445 	ldrbmi	r4, [pc], #-1093	; 80058f4 <widget_mode_names+0x68>
 80058f0:	505f584d 	subspl	r5, pc, sp, asr #16
 80058f4:	454b4341 	strbmi	r4, [fp, #-833]	; 0xfffffcbf
 80058f8:	65530054 	ldrbvs	r0, [r3, #-84]	; 0xffffffac
 80058fc:	4420646e 	strtmi	r6, [r0], #-1134	; 0xfffffb92
 8005900:	6420584d 	strtvs	r5, [r0], #-2125	; 0xfffff7b3
 8005904:	20617461 	rsbcs	r7, r1, r1, ror #8
 8005908:	48206f74 	stmdami	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}
 800590c:	2c54534f 	mrrccs	3, 4, r5, r4, cr15
 8005910:	00642520 	rsbeq	r2, r4, r0, lsr #10
 8005914:	5054554f 	subspl	r5, r4, pc, asr #10
 8005918:	4f5f5455 	svcmi	0x005f5455
 800591c:	5f594c4e 	svcpl	0x00594c4e
 8005920:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 8005924:	584d445f 	stmdapl	sp, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8005928:	4341505f 	movtmi	r5, #4191	; 0x105f
 800592c:	5f54454b 	svcpl	0x0054454b
 8005930:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 8005934:	00545345 	subseq	r5, r4, r5, asr #6
 8005938:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 800593c:	4d44525f 	sfmmi	f5, 2, [r4, #-380]	; 0xfffffe84
 8005940:	4341505f 	movtmi	r5, #4191	; 0x105f
 8005944:	5f54454b 	svcpl	0x0054454b
 8005948:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 800594c:	00545345 	subseq	r5, r4, r5, asr #6
 8005950:	45434552 	strbmi	r4, [r3, #-1362]	; 0xfffffaae
 8005954:	5f455649 	svcpl	0x00455649
 8005958:	5f584d44 	svcpl	0x00584d44
 800595c:	435f4e4f 	cmpmi	pc, #1264	; 0x4f0
 8005960:	474e4148 	strbmi	r4, [lr, -r8, asr #2]
 8005964:	45520045 	ldrbmi	r0, [r2, #-69]	; 0xffffffbb
 8005968:	56494543 	strbpl	r4, [r9], -r3, asr #10
 800596c:	445f4445 	ldrbmi	r4, [pc], #-1093	; 8005974 <widget_mode_names+0xe8>
 8005970:	435f584d 	cmpmi	pc, #5046272	; 0x4d0000
 8005974:	545f534f 	ldrbpl	r5, [pc], #-847	; 800597c <widget_mode_names+0xf0>
 8005978:	00455059 	subeq	r5, r5, r9, asr r0
 800597c:	746e6553 	strbtvc	r6, [lr], #-1363	; 0xfffffaad
 8005980:	61686320 	cmnvs	r8, r0, lsr #6
 8005984:	6465676e 	strbtvs	r6, [r5], #-1902	; 0xfffff892
 8005988:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 800598c:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 8005990:	6f742061 	svcvs	0x00742061
 8005994:	534f4820 	movtpl	r4, #63520	; 0xf820
 8005998:	45530054 	ldrbmi	r0, [r3, #-84]	; 0xffffffac
 800599c:	525f444e 	subspl	r4, pc, #1308622848	; 0x4e000000
 80059a0:	445f4d44 	ldrbmi	r4, [pc], #-3396	; 80059a8 <widget_mode_names+0x11c>
 80059a4:	4f435349 	svcmi	0x00435349
 80059a8:	59524556 	ldmdbpl	r2, {r1, r2, r4, r6, r8, sl, lr}^
 80059ac:	5145525f 	cmppl	r5, pc, asr r2
 80059b0:	54534555 	ldrbpl	r4, [r3], #-1365	; 0xfffffaab
 80059b4:	6e655300 	cdpvs	3, 6, cr5, cr5, cr0, {0}
 80059b8:	44522064 	ldrbmi	r2, [r2], #-100	; 0xffffff9c
 80059bc:	6164204d 	cmnvs	r4, sp, asr #32
 80059c0:	74206174 	strtvc	r6, [r0], #-372	; 0xfffffe8c
 80059c4:	4f48206f 	svcmi	0x0048206f
 80059c8:	202c5453 	eorcs	r5, ip, r3, asr r4
 80059cc:	64253a6c 	strtvs	r3, [r5], #-2668	; 0xfffff594
 80059d0:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 80059d4:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
 80059d8:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
 80059dc:	43455200 	movtmi	r5, #20992	; 0x5200
 80059e0:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 80059e4:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 80059e8:	41505f4d 	cmpmi	r0, sp, asr #30
 80059ec:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 80059f0:	3a435320 	bcc	90da678 <__exidx_end+0x10d461c>
 80059f4:	43437830 	movtmi	r7, #14384	; 0x3830
 80059f8:	43455200 	movtmi	r5, #20992	; 0x5200
 80059fc:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 8005a00:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 8005a04:	41505f4d 	cmpmi	r0, sp, asr #30
 8005a08:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 8005a0c:	3a435320 	bcc	90da694 <__exidx_end+0x10d4638>
 8005a10:	45467830 	strbmi	r7, [r6, #-2096]	; 0xfffff7d0
 8005a14:	4e414d00 	cdpmi	13, 4, cr4, cr1, cr0, {0}
 8005a18:	43414655 	movtmi	r4, #5717	; 0x1655
 8005a1c:	45525554 	ldrbmi	r5, [r2, #-1364]	; 0xfffffaac
 8005a20:	414c5f52 	cmpmi	ip, r2, asr pc
 8005a24:	004c4542 	subeq	r4, ip, r2, asr #10
 8005a28:	5f544547 	svcpl	0x00544547
 8005a2c:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 8005a30:	4e5f5445 	cdpmi	4, 5, cr5, cr15, cr5, {2}
 8005a34:	5f454d41 	svcpl	0x00454d41
 8005a38:	4542414c 	strbmi	r4, [r2, #-332]	; 0xfffffeb4
 8005a3c:	3a4c004c 	bcc	9305b74 <__exidx_end+0x12ffb18>
 8005a40:	253a6425 	ldrcs	r6, [sl, #-1061]!	; 0xfffffbdb
 8005a44:	64252864 	strtvs	r2, [r5], #-2148	; 0xfffff79c
 8005a48:	 	ldmdbvs	r7!, {r0, r3, r5}^

08005a4a <WidgetParamsConst::WIDGET_MODE>:
 8005a4a:	67646977 			; <UNDEFINED> instruction: 0x67646977
 8005a4e:	6d5f7465 	cfldrdvs	mvd7, [pc, #-404]	; 80058c0 <widget_mode_names+0x34>
 8005a52:	0065646f 	rsbeq	r6, r5, pc, ror #8

08005a56 <WidgetParamsConst::DMXUSBPRO_MAB_TIME>:
 8005a56:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 8005a5a:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8005a5e:	616d5f6f 	cmnvs	sp, pc, ror #30
 8005a62:	69745f62 	ldmdbvs	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 8005a66:	 	strvs	r6, [r0], #-1389	; 0xfffffa93

08005a69 <WidgetParamsConst::DMXUSBPRO_BREAK_TIME>:
 8005a69:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 8005a6d:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8005a71:	72625f6f 	rsbvc	r5, r2, #444	; 0x1bc
 8005a75:	5f6b6165 	svcpl	0x006b6165
 8005a79:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

08005a7e <WidgetParamsConst::DMXUSBPRO_REFRESH_RATE>:
 8005a7e:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 8005a82:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8005a86:	65725f6f 	ldrbvs	r5, [r2, #-3951]!	; 0xfffff091
 8005a8a:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 8005a8e:	61725f68 	cmnvs	r2, r8, ror #30
 8005a92:	 	strvs	r6, [r0], #-1396	; 0xfffffa8c

08005a95 <WidgetParamsConst::DMX_SEND_TO_HOST_THROTTLE>:
 8005a95:	5f786d64 	svcpl	0x00786d64
 8005a99:	646e6573 	strbtvs	r6, [lr], #-1395	; 0xfffffa8d
 8005a9d:	5f6f745f 	svcpl	0x006f745f
 8005aa1:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8005aa5:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
 8005aa9:	6c74746f 	cfldrdvs	mvd7, [r4], #-444	; 0xfffffe44
 8005aad:	46210065 	strtmi	r0, [r1], -r5, rrx
 8005ab1:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8005ab5:	43202164 			; <UNDEFINED> instruction: 0x43202164
 8005ab9:	6f6e6e61 	svcvs	0x006e6e61
 8005abd:	65732074 	ldrbvs	r2, [r3, #-116]!	; 0xffffff8c
 8005ac1:	7420646e 	strtvc	r6, [r0], #-1134	; 0xfffffb92
 8005ac5:	6f68206f 	svcvs	0x0068206f
 8005ac9:	53007473 	movwpl	r7, #1139	; 0x473
 8005acd:	20646e65 	rsbcs	r6, r4, r5, ror #28
 8005ad1:	20584d44 	subscs	r4, r8, r4, asr #26
 8005ad5:	61746164 	cmnvs	r4, r4, ror #2
 8005ad9:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 8005add:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
 8005ae1:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8005ae5:	53006425 	movwpl	r6, #1061	; 0x425
 8005ae9:	20646e65 	rsbcs	r6, r4, r5, ror #28
 8005aed:	204d4452 	subcs	r4, sp, r2, asr r4
 8005af1:	61746164 	cmnvs	r4, r4, ror #2
 8005af5:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 8005af9:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
	...

08005afe <RDMConst::MANUFACTURER_ID>:
 8005afe:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

08005b00 <RDMConst::MANUFACTURER_NAME>:
 8005b00:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8005b04:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 8005b08:	6f2e7777 	svcvs	0x002e7777
 8005b0c:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 8005b10:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 8005b14:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8005b18:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8005b1c:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8005b20:	2f2f3a73 	svccs	0x002f3a73
 8005b24:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 8005b28:	786d642d 	stmdavc	sp!, {r0, r2, r3, r5, sl, sp, lr}^
 8005b2c:	67726f2e 	ldrbvs	r6, [r2, -lr, lsr #30]!
	...

08005b31 <DEVICE_LABEL>:
 8005b31:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8005b35:	33303146 	teqcc	r0, #-2147483631	; 0x80000011
 8005b39:	52204352 	eorpl	r4, r0, #1207959553	; 0x48000001
 8005b3d:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 8005b41:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8005b45:	 	andvs	r0, r0, r5, rrx

08005b48 <s_aStorSize>:
 8005b48:	00000060 	andeq	r0, r0, r0, rrx
 8005b4c:	00000090 	muleq	r0, r0, r0
 8005b50:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b54:	00000040 	andeq	r0, r0, r0, asr #32
 8005b58:	00000060 	andeq	r0, r0, r0, rrx
 8005b5c:	00000040 	andeq	r0, r0, r0, asr #32
 8005b60:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b64:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b68:	000001e0 	andeq	r0, r0, r0, ror #3
 8005b6c:	00000040 	andeq	r0, r0, r0, asr #32
 8005b70:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b74:	00000060 	andeq	r0, r0, r0, rrx
 8005b78:	00000030 	andeq	r0, r0, r0, lsr r0
 8005b7c:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b80:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8005b84:	00000030 	andeq	r0, r0, r0, lsr r0
 8005b88:	00000040 	andeq	r0, r0, r0, asr #32
 8005b8c:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b90:	00000060 	andeq	r0, r0, r0, rrx
 8005b94:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b98:	00000400 	andeq	r0, r0, r0, lsl #8
 8005b9c:	00000020 	andeq	r0, r0, r0, lsr #32
 8005ba0:	00000020 	andeq	r0, r0, r0, lsr #32
 8005ba4:	00000040 	andeq	r0, r0, r0, asr #32
 8005ba8:	00000060 	andeq	r0, r0, r0, rrx
 8005bac:	00000020 	andeq	r0, r0, r0, lsr #32
 8005bb0:	00000020 	andeq	r0, r0, r0, lsr #32
 8005bb4:	000000c0 	andeq	r0, r0, r0, asr #1

08005bb8 <vtable for StoreRDMDevice>:
	...
 8005bc0:	080037b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, sl, ip, sp}
 8005bc4:	08003825 	stmdaeq	r0, {r0, r2, r5, fp, ip, sp}
 8005bc8:	080037bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, sl, ip, sp}
 8005bcc:	08003839 	stmdaeq	r0, {r0, r3, r4, r5, fp, ip, sp}
 8005bd0:	080037e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, sl, ip, sp}
 8005bd4:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8005bd8:	00000000 	andeq	r0, r0, r0
 8005bdc:	080037b7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, r8, r9, sl, ip, sp}
 8005be0:	08003831 	stmdaeq	r0, {r0, r4, r5, fp, ip, sp}
 8005be4:	0800381d 	stmdaeq	r0, {r0, r2, r3, r4, fp, ip, sp}

08005be8 <vtable for StoreWidget>:
	...
 8005bf0:	08003875 	stmdaeq	r0, {r0, r2, r4, r5, r6, fp, ip, sp}
 8005bf4:	080038a1 	stmdaeq	r0, {r0, r5, r7, fp, ip, sp}
 8005bf8:	0800387d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, fp, ip, sp}
 8005bfc:	080038b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, fp, ip, sp}
 8005c00:	08002569 	stmdaeq	r0, {r0, r3, r5, r6, r8, sl, sp}
 8005c04:	0800259d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, sl, sp}
 8005c08:	080025d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, sl, sp}
 8005c0c:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8005c10:	00000000 	andeq	r0, r0, r0
 8005c14:	08003877 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, fp, ip, sp}
 8005c18:	080038ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, fp, ip, sp}
 8005c1c:	08002595 	stmdaeq	r0, {r0, r2, r4, r7, r8, sl, sp}
 8005c20:	080025c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sl, sp}
 8005c24:	080025fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, sl, sp}
 8005c28:	3a434d46 	bcc	90d9148 <__exidx_end+0x10d30ec>
 8005c2c:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8005c30:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8005c34:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8005c38:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8005c3c:	6f742068 	svcvs	0x00742068
 8005c40:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8005c44:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8005c48:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8005c4c:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8005c50:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8005c54:	6f6c000a 	svcvs	0x006c000a
 8005c58:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
 8005c5c:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8005c60:	2079616c 	rsbscs	r6, r9, ip, ror #2
 8005c64:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
 8005c68:	48530064 	ldmdami	r3, {r2, r5, r6}^
 8005c6c:	36303131 			; <UNDEFINED> instruction: 0x36303131
 8005c70:	44535300 	ldrbmi	r5, [r3], #-768	; 0xfffffd00
 8005c74:	36303331 			; <UNDEFINED> instruction: 0x36303331
 8005c78:	20732500 	rsbscs	r2, r3, r0, lsl #10
 8005c7c:	2c642528 	cfstr64cs	mvdx2, [r4], #-160	; 0xffffff60
 8005c80:	0a296425 	beq	8a5ed1c <__exidx_end+0xa58cc0>
 8005c84:	eeaa4000 	cdp	0, 10, cr4, cr10, cr0, {0}
 8005c88:	0000eeaa 	andeq	lr, r0, sl, lsr #29

08005c8c <_OledFont8x6>:
 8005c8c:	00000040 	andeq	r0, r0, r0, asr #32
 8005c90:	40000000 	andmi	r0, r0, r0
 8005c94:	005f0000 	subseq	r0, pc, r0
 8005c98:	00400000 	subeq	r0, r0, r0
 8005c9c:	00070007 	andeq	r0, r7, r7
 8005ca0:	7f144000 	svcvc	0x00144000
 8005ca4:	00147f14 	andseq	r7, r4, r4, lsl pc
 8005ca8:	7f2a2440 	svcvc	0x002a2440
 8005cac:	4000122a 	andmi	r1, r0, sl, lsr #4
 8005cb0:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8005cb4:	36400062 	strbcc	r0, [r0], -r2, rrx
 8005cb8:	50205649 	eorpl	r5, r0, r9, asr #12
 8005cbc:	08004000 	stmdaeq	r0, {lr}
 8005cc0:	00000307 	andeq	r0, r0, r7, lsl #6
 8005cc4:	221c0040 	andscs	r0, ip, #64	; 0x40
 8005cc8:	40000041 	andmi	r0, r0, r1, asr #32
 8005ccc:	1c224100 	stfnes	f4, [r2], #-0
 8005cd0:	2a400000 	bcs	9005cd8 <__exidx_end+0xfffc7c>
 8005cd4:	2a1c7f1c 	bcs	872594c <__exidx_end+0x71f8f0>
 8005cd8:	08084000 	stmdaeq	r8, {lr}
 8005cdc:	0008083e 	andeq	r0, r8, lr, lsr r8
 8005ce0:	70800040 	addvc	r0, r0, r0, asr #32
 8005ce4:	40000030 	andmi	r0, r0, r0, lsr r0
 8005ce8:	08080808 	stmdaeq	r8, {r3, fp}
 8005cec:	00400008 	subeq	r0, r0, r8
 8005cf0:	00606000 	rsbeq	r6, r0, r0
 8005cf4:	10204000 	eorne	r4, r0, r0
 8005cf8:	00020408 	andeq	r0, r2, r8, lsl #8
 8005cfc:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8005d00:	40003e45 	andmi	r3, r0, r5, asr #28
 8005d04:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8005d08:	72400000 	subvc	r0, r0, #0
 8005d0c:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8005d10:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8005d14:	00334d49 	eorseq	r4, r3, r9, asr #26
 8005d18:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8005d1c:	4000107f 	andmi	r1, r0, pc, ror r0
 8005d20:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8005d24:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8005d28:	3149494a 	cmpcc	r9, sl, asr #18
 8005d2c:	21414000 	mrscs	r4, (UNDEF: 65)
 8005d30:	00070911 	andeq	r0, r7, r1, lsl r9
 8005d34:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8005d38:	40003649 	andmi	r3, r0, r9, asr #12
 8005d3c:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8005d40:	0040001e 	subeq	r0, r0, lr, lsl r0
 8005d44:	00001400 	andeq	r1, r0, r0, lsl #8
 8005d48:	40004000 	andmi	r4, r0, r0
 8005d4c:	00000034 	andeq	r0, r0, r4, lsr r0
 8005d50:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8005d54:	40004122 	andmi	r4, r0, r2, lsr #2
 8005d58:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8005d5c:	00400014 	subeq	r0, r0, r4, lsl r0
 8005d60:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8005d64:	01024000 	mrseq	r4, (UNDEF: 2)
 8005d68:	00060959 	andeq	r0, r6, r9, asr r9
 8005d6c:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8005d70:	40004e59 	andmi	r4, r0, r9, asr lr
 8005d74:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8005d78:	7f40007c 	svcvc	0x0040007c
 8005d7c:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8005d80:	413e4000 	teqmi	lr, r0
 8005d84:	00224141 	eoreq	r4, r2, r1, asr #2
 8005d88:	41417f40 	cmpmi	r1, r0, asr #30
 8005d8c:	40003e41 	andmi	r3, r0, r1, asr #28
 8005d90:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8005d94:	7f400041 	svcvc	0x00400041
 8005d98:	01090909 	tsteq	r9, r9, lsl #18
 8005d9c:	413e4000 	teqmi	lr, r0
 8005da0:	00735141 	rsbseq	r5, r3, r1, asr #2
 8005da4:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8005da8:	40007f08 	andmi	r7, r0, r8, lsl #30
 8005dac:	417f4100 	cmnmi	pc, r0, lsl #2
 8005db0:	20400000 	subcs	r0, r0, r0
 8005db4:	013f4140 	teqeq	pc, r0, asr #2
 8005db8:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8005dbc:	00412214 	subeq	r2, r1, r4, lsl r2
 8005dc0:	40407f40 	submi	r7, r0, r0, asr #30
 8005dc4:	40004040 	andmi	r4, r0, r0, asr #32
 8005dc8:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8005dcc:	7f40007f 	svcvc	0x0040007f
 8005dd0:	7f100804 	svcvc	0x00100804
 8005dd4:	413e4000 	teqmi	lr, r0
 8005dd8:	003e4141 	eorseq	r4, lr, r1, asr #2
 8005ddc:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8005de0:	40000609 	andmi	r0, r0, r9, lsl #12
 8005de4:	2151413e 	cmpcs	r1, lr, lsr r1
 8005de8:	7f40005e 	svcvc	0x0040005e
 8005dec:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8005df0:	49264000 	stmdbmi	r6!, {lr}
 8005df4:	00324949 	eorseq	r4, r2, r9, asr #18
 8005df8:	7f010340 	svcvc	0x00010340
 8005dfc:	40000301 	andmi	r0, r0, r1, lsl #6
 8005e00:	4040403f 	submi	r4, r0, pc, lsr r0
 8005e04:	1f40003f 	svcne	0x0040003f
 8005e08:	1f204020 	svcne	0x00204020
 8005e0c:	403f4000 	eorsmi	r4, pc, r0
 8005e10:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8005e14:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8005e18:	40006314 	andmi	r6, r0, r4, lsl r3
 8005e1c:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8005e20:	61400003 	cmpvs	r0, r3
 8005e24:	434d4959 	movtmi	r4, #55641	; 0xd959
 8005e28:	7f004000 	svcvc	0x00004000
 8005e2c:	00414141 	subeq	r4, r1, r1, asr #2
 8005e30:	08040240 	stmdaeq	r4, {r6, r9}
 8005e34:	40002010 	andmi	r2, r0, r0, lsl r0
 8005e38:	41414100 	mrsmi	r4, (UNDEF: 81)
 8005e3c:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8005e40:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8005e44:	40404000 	submi	r4, r0, r0
 8005e48:	00404040 	subeq	r4, r0, r0, asr #32
 8005e4c:	07030040 	streq	r0, [r3, -r0, asr #32]
 8005e50:	40000008 	andmi	r0, r0, r8
 8005e54:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8005e58:	7f400040 	svcvc	0x00400040
 8005e5c:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8005e60:	44384000 	ldrtmi	r4, [r8], #-0
 8005e64:	00284444 	eoreq	r4, r8, r4, asr #8
 8005e68:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8005e6c:	40007f28 	andmi	r7, r0, r8, lsr #30
 8005e70:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8005e74:	00400018 	subeq	r0, r0, r8, lsl r0
 8005e78:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8005e7c:	a4184000 	ldrge	r4, [r8], #-0
 8005e80:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8005e84:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8005e88:	40007804 	andmi	r7, r0, r4, lsl #16
 8005e8c:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8005e90:	20400000 	subcs	r0, r0, r0
 8005e94:	003d4040 	eorseq	r4, sp, r0, asr #32
 8005e98:	107f4000 	rsbsne	r4, pc, r0
 8005e9c:	00004428 	andeq	r4, r0, r8, lsr #8
 8005ea0:	7f410040 	svcvc	0x00410040
 8005ea4:	40000040 	andmi	r0, r0, r0, asr #32
 8005ea8:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8005eac:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8005eb0:	78040408 	stmdavc	r4, {r3, sl}
 8005eb4:	44384000 	ldrtmi	r4, [r8], #-0
 8005eb8:	00384444 	eorseq	r4, r8, r4, asr #8
 8005ebc:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8005ec0:	40001824 	andmi	r1, r0, r4, lsr #16
 8005ec4:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8005ec8:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8005ecc:	08040408 	stmdaeq	r4, {r3, sl}
 8005ed0:	54484000 	strbpl	r4, [r8], #-0
 8005ed4:	00245454 	eoreq	r5, r4, r4, asr r4
 8005ed8:	3f040440 	svccc	0x00040440
 8005edc:	40002444 	andmi	r2, r0, r4, asr #8
 8005ee0:	2040403c 	subcs	r4, r0, ip, lsr r0
 8005ee4:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8005ee8:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8005eec:	403c4000 	eorsmi	r4, ip, r0
 8005ef0:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8005ef4:	10284440 	eorne	r4, r8, r0, asr #8
 8005ef8:	40004428 	andmi	r4, r0, r8, lsr #8
 8005efc:	9090904c 	addsls	r9, r0, ip, asr #32
 8005f00:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8005f04:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8005f08:	08004000 	stmdaeq	r0, {lr}
 8005f0c:	00004136 	andeq	r4, r0, r6, lsr r1
 8005f10:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8005f14:	40000000 	andmi	r0, r0, r0
 8005f18:	08364100 	ldmdaeq	r6!, {r8, lr}
 8005f1c:	02400000 	subeq	r0, r0, #0
 8005f20:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8005f24:	263c4000 	ldrtcs	r4, [ip], -r0
 8005f28:	003c2623 	eorseq	r2, ip, r3, lsr #12

08005f2c <oled_128x32_init>:
 8005f2c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8005f30:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8005f34:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8005f38:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8005f3c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8005f40:	a6a440db 	ssatge	r4, #5, fp, asr #1

08005f44 <oled_128x64_init>:
 8005f44:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8005f48:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8005f4c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8005f50:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8005f54:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8005f58:	a6a440db 	ssatge	r4, #5, fp, asr #1

08005f5c <vtable for Ssd1306>:
	...
 8005f64:	08003dc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sl, fp, ip, sp}
 8005f68:	08003df5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8005f6c:	08004105 	stmdaeq	r0, {r0, r2, r8, lr}
 8005f70:	0800408d 	stmdaeq	r0, {r0, r2, r3, r7, lr}
 8005f74:	08003f59 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, sl, fp, ip, sp}
 8005f78:	08003e15 	stmdaeq	r0, {r0, r2, r4, r9, sl, fp, ip, sp}
 8005f7c:	08003e3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, sl, fp, ip, sp}
 8005f80:	08003f2f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r8, r9, sl, fp, ip, sp}
 8005f84:	08003ee9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl, fp, ip, sp}
 8005f88:	08003dcb 	stmdaeq	r0, {r0, r1, r3, r6, r7, r8, sl, fp, ip, sp}
 8005f8c:	08003f95 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sl, fp, ip, sp}
 8005f90:	08003fa1 	stmdaeq	r0, {r0, r5, r7, r8, r9, sl, fp, ip, sp}
 8005f94:	08003fbb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r7, r8, r9, sl, fp, ip, sp}
 8005f98:	08003dcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, sl, fp, ip, sp}
 8005f9c:	37335b1b 			; <UNDEFINED> instruction: 0x37335b1b
 8005fa0:	5b1b006d 	blpl	86c615c <__exidx_end+0x6c0100>
 8005fa4:	006d3034 	rsbeq	r3, sp, r4, lsr r0
 8005fa8:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005fac:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005fb0:	000a7525 	andeq	r7, sl, r5, lsr #10
 8005fb4:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005fb8:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005fbc:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8005fc0:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8005fc4:	6b636f6c 	blvs	98e1d7c <__exidx_end+0x18dbd20>
 8005fc8:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8005fcc:	000a7469 	andeq	r7, sl, r9, ror #8
 8005fd0:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005fd4:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005fd8:	6f6c4270 	svcvs	0x006c4270
 8005fdc:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8005fe0:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8005fe4:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8005fe8:	7a697320 	bvc	9a62c70 <__exidx_end+0x1a5cc14>
 8005fec:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8005ff0:	6164202c 	cmnvs	r4, ip, lsr #32
 8005ff4:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8005ff8:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8005ffc:	3a656572 	bcc	995f5cc <__exidx_end+0x1959570>
 8006000:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8006004:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8006008:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 800600c:	203d2072 	eorscs	r2, sp, r2, ror r0
 8006010:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8006014:	6f6c4270 	svcvs	0x006c4270
 8006018:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 800601c:	0a702520 	beq	9c0f4a4 <__exidx_end+0x1c09448>
 8006020:	00000000 	andeq	r0, r0, r0

08006024 <days_of_month>:
 8006024:	0000001f 	andeq	r0, r0, pc, lsl r0
 8006028:	0000001c 	andeq	r0, r0, ip, lsl r0
 800602c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8006030:	0000001e 	andeq	r0, r0, lr, lsl r0
 8006034:	0000001f 	andeq	r0, r0, pc, lsl r0
 8006038:	0000001e 	andeq	r0, r0, lr, lsl r0
 800603c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8006040:	0000001f 	andeq	r0, r0, pc, lsl r0
 8006044:	0000001e 	andeq	r0, r0, lr, lsl r0
 8006048:	0000001f 	andeq	r0, r0, pc, lsl r0
 800604c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8006050:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08006054 <__exidx_start>:
 8006054:	7fffb744 	svcvc	0x00ffb744
 8006058:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

0800605c <.ARM.attributes>:
 800605c:	00002e41 	andeq	r2, r0, r1, asr #28
 8006060:	61656100 	cmnvs	r5, r0, lsl #2
 8006064:	01006962 	tsteq	r0, r2, ror #18
 8006068:	00000024 	andeq	r0, r0, r4, lsr #32
 800606c:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8006070:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8006074:	0600334d 	streq	r3, [r0], -sp, asr #6
 8006078:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 800607c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8006080:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8006084:	1a011803 	bne	804c098 <__exidx_end+0x4603c>
 8006088:	Address 0x0000000008006088 is out of bounds.


Disassembly of section .data:

20000000 <WidgetConfiguration::s_nMabTime>:
20000000:	 	andeq	r0, r4, #16384	; 0x4000

20000001 <WidgetConfiguration::s_nBreakTime>:
20000001:	 	stmdacs	r2, {r0, r3, sl}

20000002 <WidgetConfiguration::s_nFirmwareLsb>:
20000002:	 			; <UNDEFINED> instruction: 0x01280204

20000003 <WidgetConfiguration::s_nFirmwareMsb>:
20000003:	 	andeq	r2, r1, r2, lsl #16

20000004 <WidgetConfiguration::s_nRefreshRate>:
20000004:	 	andeq	r0, r0, r8, lsr #2

20000005 <WidgetConfiguration::s_aDeviceTypeId>:
20000005:	 	stmdage	r0, {r0}

20000008 <s_nDmxTransmitPeriod>:
20000008:	000061a8 	andeq	r6, r0, r8, lsr #3

2000000c <s_nDmxTransmitMabTime>:
2000000c:	0000000c 	andeq	r0, r0, ip

20000010 <s_nDmxTransmitBreakTime>:
20000010:	0000005c 	andeq	r0, r0, ip, asr r0

20000014 <next_block>:
20000014:	2000a000 	andcs	sl, r0, r0

20000018 <s_block_bucket>:
20000018:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000028:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000038:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000048:	00000060 	andeq	r0, r0, r0, rrx
	...
20000058:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000068:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000078:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000088:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000098:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a8:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b8:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c8:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e8 <SystemCoreClock>:
200000e8:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000f0 <outptr>:
200000f0:	00000000 	andeq	r0, r0, r0

200000f4 <Widget::s_pThis>:
200000f4:	00000000 	andeq	r0, r0, r0

200000f8 <s_RxBuffer>:
	...

20000308 <s_TxBuffer>:
	...

2000050c <sv_PortState>:
2000050c:	00000000 	andeq	r0, r0, r0

20000510 <s_RxDmxPrevious>:
	...

20000714 <sv_nRxDmxPackets>:
	...

20000724 <sv_nUartsSending>:
20000724:	00000000 	andeq	r0, r0, r0

20000728 <Dmx::s_pThis>:
20000728:	00000000 	andeq	r0, r0, r0

2000072c <gv_RdmDataReceiveEnd>:
2000072c:	00000000 	andeq	r0, r0, r0

20000730 <SpiFlashStore::s_nWaitMillis>:
20000730:	00000000 	andeq	r0, r0, r0

20000734 <SpiFlashStore::s_SpiFlashData>:
	...

20001734 <SpiFlashStore::s_nStartAddress>:
20001734:	00000000 	andeq	r0, r0, r0

20001738 <SpiFlashStore::s_bHaveFlashChip>:
20001738:	00000000 	andeq	r0, r0, r0

2000173c <SpiFlashStore::s_nSpiFlashStoreSize>:
2000173c:	00000000 	andeq	r0, r0, r0

20001740 <SpiFlashStore::s_State>:
20001740:	00000000 	andeq	r0, r0, r0

20001744 <SpiFlashStore::s_pThis>:
20001744:	00000000 	andeq	r0, r0, r0

20001748 <SpiFlashStore::s_bIsNew>:
20001748:	00000000 	andeq	r0, r0, r0

2000174c <StoreRDMDevice::s_pThis>:
2000174c:	00000000 	andeq	r0, r0, r0

20001750 <StoreWidget::s_pThis>:
20001750:	00000000 	andeq	r0, r0, r0

20001754 <FlashRom::s_pThis>:
20001754:	00000000 	andeq	r0, r0, r0

20001758 <flashrom::s_nAddress>:
20001758:	00000000 	andeq	r0, r0, r0

2000175c <flashrom::s_State>:
2000175c:	00000000 	andeq	r0, r0, r0

20001760 <flashrom::s_nPage>:
20001760:	00000000 	andeq	r0, r0, r0

20001764 <flashrom::s_pData>:
20001764:	00000000 	andeq	r0, r0, r0

20001768 <flashrom::s_isBank0>:
20001768:	00000000 	andeq	r0, r0, r0

2000176c <flashrom::s_nLength>:
2000176c:	00000000 	andeq	r0, r0, r0

20001770 <Network::s_pThis>:
20001770:	00000000 	andeq	r0, r0, r0

20001774 <Display::s_pThis>:
20001774:	00000000 	andeq	r0, r0, r0

20001778 <_ClearBuffer>:
	...

20001800 <Ssd1306::s_pThis>:
20001800:	00000000 	andeq	r0, r0, r0

20001804 <LedBlink::s_pThis>:
20001804:	00000000 	andeq	r0, r0, r0

20001808 <Hardware::s_pThis>:
	...

20001810 <s_micros>:
	...

20001818 <set_timer>:
20001818:	00000000 	andeq	r0, r0, r0

2000181c <s_nSysTickMillis>:
2000181c:	00000000 	andeq	r0, r0, r0

20001820 <s_nAddress>:
20001820:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

2000a000 <heap_low>:
	...

Disassembly of section .stack:

2000b000 <_sp-0x1000>:
	...
