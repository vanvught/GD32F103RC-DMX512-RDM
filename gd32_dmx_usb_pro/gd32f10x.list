
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08000000 <__gVectors>:
 8000000:	2000c000 	andcs	ip, r0, r0
 8000004:	08000efd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, sl, fp}
 8000008:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800000c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000010:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000014:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000018:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
	...
 800002c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000030:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800003c:	08004589 	stmdaeq	r0, {r0, r3, r7, r8, sl, lr}
 8000040:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000044:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000048:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800004c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000050:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000054:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000058:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800005c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000060:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000064:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000068:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800006c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000070:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000074:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000078:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800007c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000080:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000084:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000088:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800008c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000090:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000094:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000098:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800009c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000a0:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000a4:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000a8:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000ac:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000b0:	080028f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, fp, sp}
 80000b4:	080029a1 	stmdaeq	r0, {r0, r5, r7, r8, fp, sp}
 80000b8:	08002a09 	stmdaeq	r0, {r0, r3, r9, fp, sp}
 80000bc:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000c0:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000c4:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000c8:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000cc:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000d0:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000d4:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000d8:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000dc:	080026fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, sl, sp}
 80000e0:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000e4:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000e8:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000ec:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000f0:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000f4:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 80000f8:	00000000 	andeq	r0, r0, r0
 80000fc:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000100:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000104:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000108:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800010c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000110:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000114:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000118:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800011c:	08002a1d 	stmdaeq	r0, {r0, r2, r3, r4, r9, fp, sp}
 8000120:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000124:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 8000128:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}
 800012c:	08000f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp}

Disassembly of section .text:

08000130 <console_init>:
 8000130:	b508      	push	{r3, lr}
 8000132:	f004 f9cb 	bl	80044cc <uart0_init>
 8000136:	4804      	ldr	r0, [pc, #16]	; (8000148 <console_init+0x18>)
 8000138:	f004 f9f8 	bl	800452c <uart0_puts>
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <console_init+0x1c>)
 800013e:	f004 f9f5 	bl	800452c <uart0_puts>
 8000142:	2000      	movs	r0, #0
 8000144:	bd08      	pop	{r3, pc}
 8000146:	bf00      	nop
 8000148:	08005f5c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}
 800014c:	08005f62 	stmdaeq	r0, {r1, r5, r6, r8, r9, sl, fp, ip, lr}

08000150 <__aeabi_fmul>:
 8000150:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000154:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000158:	bf1e      	ittt	ne
 800015a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800015e:	ea92 0f0c 	teqne	r2, ip
 8000162:	ea93 0f0c 	teqne	r3, ip
 8000166:	d06f      	beq.n	8000248 <__aeabi_fmul+0xf8>
 8000168:	441a      	add	r2, r3
 800016a:	ea80 0c01 	eor.w	ip, r0, r1
 800016e:	0240      	lsls	r0, r0, #9
 8000170:	bf18      	it	ne
 8000172:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000176:	d01e      	beq.n	80001b6 <__aeabi_fmul+0x66>
 8000178:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800017c:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000180:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000184:	fba0 3101 	umull	r3, r1, r0, r1
 8000188:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 800018c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000190:	bf3e      	ittt	cc
 8000192:	0049      	lslcc	r1, r1, #1
 8000194:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000198:	005b      	lslcc	r3, r3, #1
 800019a:	ea40 0001 	orr.w	r0, r0, r1
 800019e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80001a2:	2afd      	cmp	r2, #253	; 0xfd
 80001a4:	d81d      	bhi.n	80001e2 <__aeabi_fmul+0x92>
 80001a6:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80001aa:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80001ae:	bf08      	it	eq
 80001b0:	f020 0001 	biceq.w	r0, r0, #1
 80001b4:	4770      	bx	lr
 80001b6:	f090 0f00 	teq	r0, #0
 80001ba:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80001be:	bf08      	it	eq
 80001c0:	0249      	lsleq	r1, r1, #9
 80001c2:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80001c6:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80001ca:	3a7f      	subs	r2, #127	; 0x7f
 80001cc:	bfc2      	ittt	gt
 80001ce:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80001d2:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80001d6:	4770      	bxgt	lr
 80001d8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80001dc:	f04f 0300 	mov.w	r3, #0
 80001e0:	3a01      	subs	r2, #1
 80001e2:	dc5d      	bgt.n	80002a0 <__aeabi_fmul+0x150>
 80001e4:	f112 0f19 	cmn.w	r2, #25
 80001e8:	bfdc      	itt	le
 80001ea:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 80001ee:	4770      	bxle	lr
 80001f0:	f1c2 0200 	rsb	r2, r2, #0
 80001f4:	0041      	lsls	r1, r0, #1
 80001f6:	fa21 f102 	lsr.w	r1, r1, r2
 80001fa:	f1c2 0220 	rsb	r2, r2, #32
 80001fe:	fa00 fc02 	lsl.w	ip, r0, r2
 8000202:	ea5f 0031 	movs.w	r0, r1, rrx
 8000206:	f140 0000 	adc.w	r0, r0, #0
 800020a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800020e:	bf08      	it	eq
 8000210:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000214:	4770      	bx	lr
 8000216:	f092 0f00 	teq	r2, #0
 800021a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 800021e:	bf02      	ittt	eq
 8000220:	0040      	lsleq	r0, r0, #1
 8000222:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000226:	3a01      	subeq	r2, #1
 8000228:	d0f9      	beq.n	800021e <__aeabi_fmul+0xce>
 800022a:	ea40 000c 	orr.w	r0, r0, ip
 800022e:	f093 0f00 	teq	r3, #0
 8000232:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000236:	bf02      	ittt	eq
 8000238:	0049      	lsleq	r1, r1, #1
 800023a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 800023e:	3b01      	subeq	r3, #1
 8000240:	d0f9      	beq.n	8000236 <__aeabi_fmul+0xe6>
 8000242:	ea41 010c 	orr.w	r1, r1, ip
 8000246:	e78f      	b.n	8000168 <__aeabi_fmul+0x18>
 8000248:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 800024c:	ea92 0f0c 	teq	r2, ip
 8000250:	bf18      	it	ne
 8000252:	ea93 0f0c 	teqne	r3, ip
 8000256:	d00a      	beq.n	800026e <__aeabi_fmul+0x11e>
 8000258:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 800025c:	bf18      	it	ne
 800025e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000262:	d1d8      	bne.n	8000216 <__aeabi_fmul+0xc6>
 8000264:	ea80 0001 	eor.w	r0, r0, r1
 8000268:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 800026c:	4770      	bx	lr
 800026e:	f090 0f00 	teq	r0, #0
 8000272:	bf17      	itett	ne
 8000274:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000278:	4608      	moveq	r0, r1
 800027a:	f091 0f00 	teqne	r1, #0
 800027e:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000282:	d014      	beq.n	80002ae <__aeabi_fmul+0x15e>
 8000284:	ea92 0f0c 	teq	r2, ip
 8000288:	d101      	bne.n	800028e <__aeabi_fmul+0x13e>
 800028a:	0242      	lsls	r2, r0, #9
 800028c:	d10f      	bne.n	80002ae <__aeabi_fmul+0x15e>
 800028e:	ea93 0f0c 	teq	r3, ip
 8000292:	d103      	bne.n	800029c <__aeabi_fmul+0x14c>
 8000294:	024b      	lsls	r3, r1, #9
 8000296:	bf18      	it	ne
 8000298:	4608      	movne	r0, r1
 800029a:	d108      	bne.n	80002ae <__aeabi_fmul+0x15e>
 800029c:	ea80 0001 	eor.w	r0, r0, r1
 80002a0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80002a4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80002a8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80002ac:	4770      	bx	lr
 80002ae:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80002b2:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80002b6:	4770      	bx	lr

080002b8 <__aeabi_d2f>:
 80002b8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80002bc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 80002c0:	bf24      	itt	cs
 80002c2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 80002c6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 80002ca:	d90d      	bls.n	80002e8 <__aeabi_d2f+0x30>
 80002cc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80002d0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 80002d4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 80002d8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 80002dc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 80002e0:	bf08      	it	eq
 80002e2:	f020 0001 	biceq.w	r0, r0, #1
 80002e6:	4770      	bx	lr
 80002e8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 80002ec:	d121      	bne.n	8000332 <__aeabi_d2f+0x7a>
 80002ee:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 80002f2:	bfbc      	itt	lt
 80002f4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 80002f8:	4770      	bxlt	lr
 80002fa:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80002fe:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000302:	f1c2 0218 	rsb	r2, r2, #24
 8000306:	f1c2 0c20 	rsb	ip, r2, #32
 800030a:	fa10 f30c 	lsls.w	r3, r0, ip
 800030e:	fa20 f002 	lsr.w	r0, r0, r2
 8000312:	bf18      	it	ne
 8000314:	f040 0001 	orrne.w	r0, r0, #1
 8000318:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 800031c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000320:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000324:	ea40 000c 	orr.w	r0, r0, ip
 8000328:	fa23 f302 	lsr.w	r3, r3, r2
 800032c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000330:	e7cc      	b.n	80002cc <__aeabi_d2f+0x14>
 8000332:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000336:	d107      	bne.n	8000348 <__aeabi_d2f+0x90>
 8000338:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 800033c:	bf1e      	ittt	ne
 800033e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000342:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000346:	4770      	bxne	lr
 8000348:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 800034c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000350:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000354:	4770      	bx	lr
 8000356:	bf00      	nop

08000358 <__aeabi_frsub>:
 8000358:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 800035c:	e002      	b.n	8000364 <__addsf3>
 800035e:	bf00      	nop

08000360 <__aeabi_fsub>:
 8000360:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000364 <__addsf3>:
 8000364:	0042      	lsls	r2, r0, #1
 8000366:	bf1f      	itttt	ne
 8000368:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 800036c:	ea92 0f03 	teqne	r2, r3
 8000370:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000374:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000378:	d06a      	beq.n	8000450 <__addsf3+0xec>
 800037a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 800037e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000382:	bfc1      	itttt	gt
 8000384:	18d2      	addgt	r2, r2, r3
 8000386:	4041      	eorgt	r1, r0
 8000388:	4048      	eorgt	r0, r1
 800038a:	4041      	eorgt	r1, r0
 800038c:	bfb8      	it	lt
 800038e:	425b      	neglt	r3, r3
 8000390:	2b19      	cmp	r3, #25
 8000392:	bf88      	it	hi
 8000394:	4770      	bxhi	lr
 8000396:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 800039a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800039e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 80003a2:	bf18      	it	ne
 80003a4:	4240      	negne	r0, r0
 80003a6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80003aa:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 80003ae:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 80003b2:	bf18      	it	ne
 80003b4:	4249      	negne	r1, r1
 80003b6:	ea92 0f03 	teq	r2, r3
 80003ba:	d03f      	beq.n	800043c <__addsf3+0xd8>
 80003bc:	f1a2 0201 	sub.w	r2, r2, #1
 80003c0:	fa41 fc03 	asr.w	ip, r1, r3
 80003c4:	eb10 000c 	adds.w	r0, r0, ip
 80003c8:	f1c3 0320 	rsb	r3, r3, #32
 80003cc:	fa01 f103 	lsl.w	r1, r1, r3
 80003d0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 80003d4:	d502      	bpl.n	80003dc <__addsf3+0x78>
 80003d6:	4249      	negs	r1, r1
 80003d8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 80003dc:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 80003e0:	d313      	bcc.n	800040a <__addsf3+0xa6>
 80003e2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80003e6:	d306      	bcc.n	80003f6 <__addsf3+0x92>
 80003e8:	0840      	lsrs	r0, r0, #1
 80003ea:	ea4f 0131 	mov.w	r1, r1, rrx
 80003ee:	f102 0201 	add.w	r2, r2, #1
 80003f2:	2afe      	cmp	r2, #254	; 0xfe
 80003f4:	d251      	bcs.n	800049a <__addsf3+0x136>
 80003f6:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 80003fa:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80003fe:	bf08      	it	eq
 8000400:	f020 0001 	biceq.w	r0, r0, #1
 8000404:	ea40 0003 	orr.w	r0, r0, r3
 8000408:	4770      	bx	lr
 800040a:	0049      	lsls	r1, r1, #1
 800040c:	eb40 0000 	adc.w	r0, r0, r0
 8000410:	3a01      	subs	r2, #1
 8000412:	bf28      	it	cs
 8000414:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000418:	d2ed      	bcs.n	80003f6 <__addsf3+0x92>
 800041a:	fab0 fc80 	clz	ip, r0
 800041e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000422:	ebb2 020c 	subs.w	r2, r2, ip
 8000426:	fa00 f00c 	lsl.w	r0, r0, ip
 800042a:	bfaa      	itet	ge
 800042c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000430:	4252      	neglt	r2, r2
 8000432:	4318      	orrge	r0, r3
 8000434:	bfbc      	itt	lt
 8000436:	40d0      	lsrlt	r0, r2
 8000438:	4318      	orrlt	r0, r3
 800043a:	4770      	bx	lr
 800043c:	f092 0f00 	teq	r2, #0
 8000440:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000444:	bf06      	itte	eq
 8000446:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 800044a:	3201      	addeq	r2, #1
 800044c:	3b01      	subne	r3, #1
 800044e:	e7b5      	b.n	80003bc <__addsf3+0x58>
 8000450:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000454:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000458:	bf18      	it	ne
 800045a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800045e:	d021      	beq.n	80004a4 <__addsf3+0x140>
 8000460:	ea92 0f03 	teq	r2, r3
 8000464:	d004      	beq.n	8000470 <__addsf3+0x10c>
 8000466:	f092 0f00 	teq	r2, #0
 800046a:	bf08      	it	eq
 800046c:	4608      	moveq	r0, r1
 800046e:	4770      	bx	lr
 8000470:	ea90 0f01 	teq	r0, r1
 8000474:	bf1c      	itt	ne
 8000476:	2000      	movne	r0, #0
 8000478:	4770      	bxne	lr
 800047a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 800047e:	d104      	bne.n	800048a <__addsf3+0x126>
 8000480:	0040      	lsls	r0, r0, #1
 8000482:	bf28      	it	cs
 8000484:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000488:	4770      	bx	lr
 800048a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 800048e:	bf3c      	itt	cc
 8000490:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000494:	4770      	bxcc	lr
 8000496:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 800049a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 800049e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80004a2:	4770      	bx	lr
 80004a4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 80004a8:	bf16      	itet	ne
 80004aa:	4608      	movne	r0, r1
 80004ac:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 80004b0:	4601      	movne	r1, r0
 80004b2:	0242      	lsls	r2, r0, #9
 80004b4:	bf06      	itte	eq
 80004b6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 80004ba:	ea90 0f01 	teqeq	r0, r1
 80004be:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 80004c2:	4770      	bx	lr

080004c4 <__aeabi_ui2f>:
 80004c4:	f04f 0300 	mov.w	r3, #0
 80004c8:	e004      	b.n	80004d4 <__aeabi_i2f+0x8>
 80004ca:	bf00      	nop

080004cc <__aeabi_i2f>:
 80004cc:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 80004d0:	bf48      	it	mi
 80004d2:	4240      	negmi	r0, r0
 80004d4:	ea5f 0c00 	movs.w	ip, r0
 80004d8:	bf08      	it	eq
 80004da:	4770      	bxeq	lr
 80004dc:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 80004e0:	4601      	mov	r1, r0
 80004e2:	f04f 0000 	mov.w	r0, #0
 80004e6:	e01c      	b.n	8000522 <__aeabi_l2f+0x2a>

080004e8 <__aeabi_ul2f>:
 80004e8:	ea50 0201 	orrs.w	r2, r0, r1
 80004ec:	bf08      	it	eq
 80004ee:	4770      	bxeq	lr
 80004f0:	f04f 0300 	mov.w	r3, #0
 80004f4:	e00a      	b.n	800050c <__aeabi_l2f+0x14>
 80004f6:	bf00      	nop

080004f8 <__aeabi_l2f>:
 80004f8:	ea50 0201 	orrs.w	r2, r0, r1
 80004fc:	bf08      	it	eq
 80004fe:	4770      	bxeq	lr
 8000500:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000504:	d502      	bpl.n	800050c <__aeabi_l2f+0x14>
 8000506:	4240      	negs	r0, r0
 8000508:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800050c:	ea5f 0c01 	movs.w	ip, r1
 8000510:	bf02      	ittt	eq
 8000512:	4684      	moveq	ip, r0
 8000514:	4601      	moveq	r1, r0
 8000516:	2000      	moveq	r0, #0
 8000518:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 800051c:	bf08      	it	eq
 800051e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000522:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000526:	fabc f28c 	clz	r2, ip
 800052a:	3a08      	subs	r2, #8
 800052c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000530:	db10      	blt.n	8000554 <__aeabi_l2f+0x5c>
 8000532:	fa01 fc02 	lsl.w	ip, r1, r2
 8000536:	4463      	add	r3, ip
 8000538:	fa00 fc02 	lsl.w	ip, r0, r2
 800053c:	f1c2 0220 	rsb	r2, r2, #32
 8000540:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000544:	fa20 f202 	lsr.w	r2, r0, r2
 8000548:	eb43 0002 	adc.w	r0, r3, r2
 800054c:	bf08      	it	eq
 800054e:	f020 0001 	biceq.w	r0, r0, #1
 8000552:	4770      	bx	lr
 8000554:	f102 0220 	add.w	r2, r2, #32
 8000558:	fa01 fc02 	lsl.w	ip, r1, r2
 800055c:	f1c2 0220 	rsb	r2, r2, #32
 8000560:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000564:	fa21 f202 	lsr.w	r2, r1, r2
 8000568:	eb43 0002 	adc.w	r0, r3, r2
 800056c:	bf08      	it	eq
 800056e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000572:	4770      	bx	lr

08000574 <__gesf2>:
 8000574:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000578:	e006      	b.n	8000588 <__cmpsf2+0x4>
 800057a:	bf00      	nop

0800057c <__lesf2>:
 800057c:	f04f 0c01 	mov.w	ip, #1
 8000580:	e002      	b.n	8000588 <__cmpsf2+0x4>
 8000582:	bf00      	nop

08000584 <__cmpsf2>:
 8000584:	f04f 0c01 	mov.w	ip, #1
 8000588:	f84d cd04 	str.w	ip, [sp, #-4]!
 800058c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000590:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000594:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000598:	bf18      	it	ne
 800059a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800059e:	d011      	beq.n	80005c4 <__cmpsf2+0x40>
 80005a0:	b001      	add	sp, #4
 80005a2:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 80005a6:	bf18      	it	ne
 80005a8:	ea90 0f01 	teqne	r0, r1
 80005ac:	bf58      	it	pl
 80005ae:	ebb2 0003 	subspl.w	r0, r2, r3
 80005b2:	bf88      	it	hi
 80005b4:	17c8      	asrhi	r0, r1, #31
 80005b6:	bf38      	it	cc
 80005b8:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 80005bc:	bf18      	it	ne
 80005be:	f040 0001 	orrne.w	r0, r0, #1
 80005c2:	4770      	bx	lr
 80005c4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80005c8:	d102      	bne.n	80005d0 <__cmpsf2+0x4c>
 80005ca:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 80005ce:	d105      	bne.n	80005dc <__cmpsf2+0x58>
 80005d0:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80005d4:	d1e4      	bne.n	80005a0 <__cmpsf2+0x1c>
 80005d6:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80005da:	d0e1      	beq.n	80005a0 <__cmpsf2+0x1c>
 80005dc:	f85d 0b04 	ldr.w	r0, [sp], #4
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop

080005e4 <__aeabi_cfrcmple>:
 80005e4:	4684      	mov	ip, r0
 80005e6:	4608      	mov	r0, r1
 80005e8:	4661      	mov	r1, ip
 80005ea:	e7ff      	b.n	80005ec <__aeabi_cfcmpeq>

080005ec <__aeabi_cfcmpeq>:
 80005ec:	b50f      	push	{r0, r1, r2, r3, lr}
 80005ee:	f7ff ffc9 	bl	8000584 <__cmpsf2>
 80005f2:	2800      	cmp	r0, #0
 80005f4:	bf48      	it	mi
 80005f6:	f110 0f00 	cmnmi.w	r0, #0
 80005fa:	bd0f      	pop	{r0, r1, r2, r3, pc}

080005fc <__aeabi_fcmpeq>:
 80005fc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000600:	f7ff fff4 	bl	80005ec <__aeabi_cfcmpeq>
 8000604:	bf0c      	ite	eq
 8000606:	2001      	moveq	r0, #1
 8000608:	2000      	movne	r0, #0
 800060a:	f85d fb08 	ldr.w	pc, [sp], #8
 800060e:	bf00      	nop

08000610 <__aeabi_fcmplt>:
 8000610:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000614:	f7ff ffea 	bl	80005ec <__aeabi_cfcmpeq>
 8000618:	bf34      	ite	cc
 800061a:	2001      	movcc	r0, #1
 800061c:	2000      	movcs	r0, #0
 800061e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000622:	bf00      	nop

08000624 <__aeabi_fcmple>:
 8000624:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000628:	f7ff ffe0 	bl	80005ec <__aeabi_cfcmpeq>
 800062c:	bf94      	ite	ls
 800062e:	2001      	movls	r0, #1
 8000630:	2000      	movhi	r0, #0
 8000632:	f85d fb08 	ldr.w	pc, [sp], #8
 8000636:	bf00      	nop

08000638 <__aeabi_fcmpge>:
 8000638:	f84d ed08 	str.w	lr, [sp, #-8]!
 800063c:	f7ff ffd2 	bl	80005e4 <__aeabi_cfrcmple>
 8000640:	bf94      	ite	ls
 8000642:	2001      	movls	r0, #1
 8000644:	2000      	movhi	r0, #0
 8000646:	f85d fb08 	ldr.w	pc, [sp], #8
 800064a:	bf00      	nop

0800064c <__aeabi_fcmpgt>:
 800064c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000650:	f7ff ffc8 	bl	80005e4 <__aeabi_cfrcmple>
 8000654:	bf34      	ite	cc
 8000656:	2001      	movcc	r0, #1
 8000658:	2000      	movcs	r0, #0
 800065a:	f85d fb08 	ldr.w	pc, [sp], #8
 800065e:	bf00      	nop

08000660 <__aeabi_f2iz>:
 8000660:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000664:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8000668:	d30f      	bcc.n	800068a <__aeabi_f2iz+0x2a>
 800066a:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800066e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000672:	d90d      	bls.n	8000690 <__aeabi_f2iz+0x30>
 8000674:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000678:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800067c:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000680:	fa23 f002 	lsr.w	r0, r3, r2
 8000684:	bf18      	it	ne
 8000686:	4240      	negne	r0, r0
 8000688:	4770      	bx	lr
 800068a:	f04f 0000 	mov.w	r0, #0
 800068e:	4770      	bx	lr
 8000690:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8000694:	d101      	bne.n	800069a <__aeabi_f2iz+0x3a>
 8000696:	0242      	lsls	r2, r0, #9
 8000698:	d105      	bne.n	80006a6 <__aeabi_f2iz+0x46>
 800069a:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 800069e:	bf08      	it	eq
 80006a0:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 80006a4:	4770      	bx	lr
 80006a6:	f04f 0000 	mov.w	r0, #0
 80006aa:	4770      	bx	lr

080006ac <__aeabi_uldivmod>:
 80006ac:	b953      	cbnz	r3, 80006c4 <__aeabi_uldivmod+0x18>
 80006ae:	b94a      	cbnz	r2, 80006c4 <__aeabi_uldivmod+0x18>
 80006b0:	2900      	cmp	r1, #0
 80006b2:	bf08      	it	eq
 80006b4:	2800      	cmpeq	r0, #0
 80006b6:	bf1c      	itt	ne
 80006b8:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 80006bc:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80006c0:	f000 b80c 	b.w	80006dc <__aeabi_idiv0>
 80006c4:	f1ad 0c08 	sub.w	ip, sp, #8
 80006c8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80006cc:	f001 f85e 	bl	800178c <__udivmoddi4>
 80006d0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80006d4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80006d8:	b004      	add	sp, #16
 80006da:	4770      	bx	lr

080006dc <__aeabi_idiv0>:
 80006dc:	4770      	bx	lr
 80006de:	bf00      	nop

080006e0 <__aeabi_drsub>:
 80006e0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80006e4:	e002      	b.n	80006ec <__adddf3>
 80006e6:	bf00      	nop

080006e8 <__aeabi_dsub>:
 80006e8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080006ec <__adddf3>:
 80006ec:	b530      	push	{r4, r5, lr}
 80006ee:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80006f2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80006f6:	ea94 0f05 	teq	r4, r5
 80006fa:	bf08      	it	eq
 80006fc:	ea90 0f02 	teqeq	r0, r2
 8000700:	bf1f      	itttt	ne
 8000702:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000706:	ea55 0c02 	orrsne.w	ip, r5, r2
 800070a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800070e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000712:	f000 80e2 	beq.w	80008da <__adddf3+0x1ee>
 8000716:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800071a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800071e:	bfb8      	it	lt
 8000720:	426d      	neglt	r5, r5
 8000722:	dd0c      	ble.n	800073e <__adddf3+0x52>
 8000724:	442c      	add	r4, r5
 8000726:	ea80 0202 	eor.w	r2, r0, r2
 800072a:	ea81 0303 	eor.w	r3, r1, r3
 800072e:	ea82 0000 	eor.w	r0, r2, r0
 8000732:	ea83 0101 	eor.w	r1, r3, r1
 8000736:	ea80 0202 	eor.w	r2, r0, r2
 800073a:	ea81 0303 	eor.w	r3, r1, r3
 800073e:	2d36      	cmp	r5, #54	; 0x36
 8000740:	bf88      	it	hi
 8000742:	bd30      	pophi	{r4, r5, pc}
 8000744:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000748:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800074c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000750:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000754:	d002      	beq.n	800075c <__adddf3+0x70>
 8000756:	4240      	negs	r0, r0
 8000758:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800075c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000768:	d002      	beq.n	8000770 <__adddf3+0x84>
 800076a:	4252      	negs	r2, r2
 800076c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000770:	ea94 0f05 	teq	r4, r5
 8000774:	f000 80a7 	beq.w	80008c6 <__adddf3+0x1da>
 8000778:	f1a4 0401 	sub.w	r4, r4, #1
 800077c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000780:	db0d      	blt.n	800079e <__adddf3+0xb2>
 8000782:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000786:	fa22 f205 	lsr.w	r2, r2, r5
 800078a:	1880      	adds	r0, r0, r2
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	fa03 f20e 	lsl.w	r2, r3, lr
 8000794:	1880      	adds	r0, r0, r2
 8000796:	fa43 f305 	asr.w	r3, r3, r5
 800079a:	4159      	adcs	r1, r3
 800079c:	e00e      	b.n	80007bc <__adddf3+0xd0>
 800079e:	f1a5 0520 	sub.w	r5, r5, #32
 80007a2:	f10e 0e20 	add.w	lr, lr, #32
 80007a6:	2a01      	cmp	r2, #1
 80007a8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80007ac:	bf28      	it	cs
 80007ae:	f04c 0c02 	orrcs.w	ip, ip, #2
 80007b2:	fa43 f305 	asr.w	r3, r3, r5
 80007b6:	18c0      	adds	r0, r0, r3
 80007b8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80007bc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007c0:	d507      	bpl.n	80007d2 <__adddf3+0xe6>
 80007c2:	f04f 0e00 	mov.w	lr, #0
 80007c6:	f1dc 0c00 	rsbs	ip, ip, #0
 80007ca:	eb7e 0000 	sbcs.w	r0, lr, r0
 80007ce:	eb6e 0101 	sbc.w	r1, lr, r1
 80007d2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80007d6:	d31b      	bcc.n	8000810 <__adddf3+0x124>
 80007d8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80007dc:	d30c      	bcc.n	80007f8 <__adddf3+0x10c>
 80007de:	0849      	lsrs	r1, r1, #1
 80007e0:	ea5f 0030 	movs.w	r0, r0, rrx
 80007e4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80007e8:	f104 0401 	add.w	r4, r4, #1
 80007ec:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80007f0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80007f4:	f080 809a 	bcs.w	800092c <__adddf3+0x240>
 80007f8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80007fc:	bf08      	it	eq
 80007fe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000802:	f150 0000 	adcs.w	r0, r0, #0
 8000806:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800080a:	ea41 0105 	orr.w	r1, r1, r5
 800080e:	bd30      	pop	{r4, r5, pc}
 8000810:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000814:	4140      	adcs	r0, r0
 8000816:	eb41 0101 	adc.w	r1, r1, r1
 800081a:	3c01      	subs	r4, #1
 800081c:	bf28      	it	cs
 800081e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000822:	d2e9      	bcs.n	80007f8 <__adddf3+0x10c>
 8000824:	f091 0f00 	teq	r1, #0
 8000828:	bf04      	itt	eq
 800082a:	4601      	moveq	r1, r0
 800082c:	2000      	moveq	r0, #0
 800082e:	fab1 f381 	clz	r3, r1
 8000832:	bf08      	it	eq
 8000834:	3320      	addeq	r3, #32
 8000836:	f1a3 030b 	sub.w	r3, r3, #11
 800083a:	f1b3 0220 	subs.w	r2, r3, #32
 800083e:	da0c      	bge.n	800085a <__adddf3+0x16e>
 8000840:	320c      	adds	r2, #12
 8000842:	dd08      	ble.n	8000856 <__adddf3+0x16a>
 8000844:	f102 0c14 	add.w	ip, r2, #20
 8000848:	f1c2 020c 	rsb	r2, r2, #12
 800084c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000850:	fa21 f102 	lsr.w	r1, r1, r2
 8000854:	e00c      	b.n	8000870 <__adddf3+0x184>
 8000856:	f102 0214 	add.w	r2, r2, #20
 800085a:	bfd8      	it	le
 800085c:	f1c2 0c20 	rsble	ip, r2, #32
 8000860:	fa01 f102 	lsl.w	r1, r1, r2
 8000864:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000868:	bfdc      	itt	le
 800086a:	ea41 010c 	orrle.w	r1, r1, ip
 800086e:	4090      	lslle	r0, r2
 8000870:	1ae4      	subs	r4, r4, r3
 8000872:	bfa2      	ittt	ge
 8000874:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000878:	4329      	orrge	r1, r5
 800087a:	bd30      	popge	{r4, r5, pc}
 800087c:	ea6f 0404 	mvn.w	r4, r4
 8000880:	3c1f      	subs	r4, #31
 8000882:	da1c      	bge.n	80008be <__adddf3+0x1d2>
 8000884:	340c      	adds	r4, #12
 8000886:	dc0e      	bgt.n	80008a6 <__adddf3+0x1ba>
 8000888:	f104 0414 	add.w	r4, r4, #20
 800088c:	f1c4 0220 	rsb	r2, r4, #32
 8000890:	fa20 f004 	lsr.w	r0, r0, r4
 8000894:	fa01 f302 	lsl.w	r3, r1, r2
 8000898:	ea40 0003 	orr.w	r0, r0, r3
 800089c:	fa21 f304 	lsr.w	r3, r1, r4
 80008a0:	ea45 0103 	orr.w	r1, r5, r3
 80008a4:	bd30      	pop	{r4, r5, pc}
 80008a6:	f1c4 040c 	rsb	r4, r4, #12
 80008aa:	f1c4 0220 	rsb	r2, r4, #32
 80008ae:	fa20 f002 	lsr.w	r0, r0, r2
 80008b2:	fa01 f304 	lsl.w	r3, r1, r4
 80008b6:	ea40 0003 	orr.w	r0, r0, r3
 80008ba:	4629      	mov	r1, r5
 80008bc:	bd30      	pop	{r4, r5, pc}
 80008be:	fa21 f004 	lsr.w	r0, r1, r4
 80008c2:	4629      	mov	r1, r5
 80008c4:	bd30      	pop	{r4, r5, pc}
 80008c6:	f094 0f00 	teq	r4, #0
 80008ca:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80008ce:	bf06      	itte	eq
 80008d0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80008d4:	3401      	addeq	r4, #1
 80008d6:	3d01      	subne	r5, #1
 80008d8:	e74e      	b.n	8000778 <__adddf3+0x8c>
 80008da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80008de:	bf18      	it	ne
 80008e0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80008e4:	d029      	beq.n	800093a <__adddf3+0x24e>
 80008e6:	ea94 0f05 	teq	r4, r5
 80008ea:	bf08      	it	eq
 80008ec:	ea90 0f02 	teqeq	r0, r2
 80008f0:	d005      	beq.n	80008fe <__adddf3+0x212>
 80008f2:	ea54 0c00 	orrs.w	ip, r4, r0
 80008f6:	bf04      	itt	eq
 80008f8:	4619      	moveq	r1, r3
 80008fa:	4610      	moveq	r0, r2
 80008fc:	bd30      	pop	{r4, r5, pc}
 80008fe:	ea91 0f03 	teq	r1, r3
 8000902:	bf1e      	ittt	ne
 8000904:	2100      	movne	r1, #0
 8000906:	2000      	movne	r0, #0
 8000908:	bd30      	popne	{r4, r5, pc}
 800090a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800090e:	d105      	bne.n	800091c <__adddf3+0x230>
 8000910:	0040      	lsls	r0, r0, #1
 8000912:	4149      	adcs	r1, r1
 8000914:	bf28      	it	cs
 8000916:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800091a:	bd30      	pop	{r4, r5, pc}
 800091c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000920:	bf3c      	itt	cc
 8000922:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000926:	bd30      	popcc	{r4, r5, pc}
 8000928:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800092c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000930:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000934:	f04f 0000 	mov.w	r0, #0
 8000938:	bd30      	pop	{r4, r5, pc}
 800093a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800093e:	bf1a      	itte	ne
 8000940:	4619      	movne	r1, r3
 8000942:	4610      	movne	r0, r2
 8000944:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000948:	bf1c      	itt	ne
 800094a:	460b      	movne	r3, r1
 800094c:	4602      	movne	r2, r0
 800094e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000952:	bf06      	itte	eq
 8000954:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000958:	ea91 0f03 	teqeq	r1, r3
 800095c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000960:	bd30      	pop	{r4, r5, pc}
 8000962:	bf00      	nop

08000964 <__aeabi_ui2d>:
 8000964:	f090 0f00 	teq	r0, #0
 8000968:	bf04      	itt	eq
 800096a:	2100      	moveq	r1, #0
 800096c:	4770      	bxeq	lr
 800096e:	b530      	push	{r4, r5, lr}
 8000970:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000974:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000978:	f04f 0500 	mov.w	r5, #0
 800097c:	f04f 0100 	mov.w	r1, #0
 8000980:	e750      	b.n	8000824 <__adddf3+0x138>
 8000982:	bf00      	nop

08000984 <__aeabi_i2d>:
 8000984:	f090 0f00 	teq	r0, #0
 8000988:	bf04      	itt	eq
 800098a:	2100      	moveq	r1, #0
 800098c:	4770      	bxeq	lr
 800098e:	b530      	push	{r4, r5, lr}
 8000990:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000994:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000998:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800099c:	bf48      	it	mi
 800099e:	4240      	negmi	r0, r0
 80009a0:	f04f 0100 	mov.w	r1, #0
 80009a4:	e73e      	b.n	8000824 <__adddf3+0x138>
 80009a6:	bf00      	nop

080009a8 <__aeabi_f2d>:
 80009a8:	0042      	lsls	r2, r0, #1
 80009aa:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80009ae:	ea4f 0131 	mov.w	r1, r1, rrx
 80009b2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80009b6:	bf1f      	itttt	ne
 80009b8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80009bc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80009c0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80009c4:	4770      	bxne	lr
 80009c6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80009ca:	bf08      	it	eq
 80009cc:	4770      	bxeq	lr
 80009ce:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80009d2:	bf04      	itt	eq
 80009d4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80009d8:	4770      	bxeq	lr
 80009da:	b530      	push	{r4, r5, lr}
 80009dc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80009e0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80009e4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80009e8:	e71c      	b.n	8000824 <__adddf3+0x138>
 80009ea:	bf00      	nop

080009ec <__aeabi_ul2d>:
 80009ec:	ea50 0201 	orrs.w	r2, r0, r1
 80009f0:	bf08      	it	eq
 80009f2:	4770      	bxeq	lr
 80009f4:	b530      	push	{r4, r5, lr}
 80009f6:	f04f 0500 	mov.w	r5, #0
 80009fa:	e00a      	b.n	8000a12 <__aeabi_l2d+0x16>

080009fc <__aeabi_l2d>:
 80009fc:	ea50 0201 	orrs.w	r2, r0, r1
 8000a00:	bf08      	it	eq
 8000a02:	4770      	bxeq	lr
 8000a04:	b530      	push	{r4, r5, lr}
 8000a06:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000a0a:	d502      	bpl.n	8000a12 <__aeabi_l2d+0x16>
 8000a0c:	4240      	negs	r0, r0
 8000a0e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000a12:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000a16:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000a1a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000a1e:	f43f aed8 	beq.w	80007d2 <__adddf3+0xe6>
 8000a22:	f04f 0203 	mov.w	r2, #3
 8000a26:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000a2a:	bf18      	it	ne
 8000a2c:	3203      	addne	r2, #3
 8000a2e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000a32:	bf18      	it	ne
 8000a34:	3203      	addne	r2, #3
 8000a36:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000a3a:	f1c2 0320 	rsb	r3, r2, #32
 8000a3e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000a42:	fa20 f002 	lsr.w	r0, r0, r2
 8000a46:	fa01 fe03 	lsl.w	lr, r1, r3
 8000a4a:	ea40 000e 	orr.w	r0, r0, lr
 8000a4e:	fa21 f102 	lsr.w	r1, r1, r2
 8000a52:	4414      	add	r4, r2
 8000a54:	e6bd      	b.n	80007d2 <__adddf3+0xe6>
 8000a56:	bf00      	nop

08000a58 <__aeabi_dmul>:
 8000a58:	b570      	push	{r4, r5, r6, lr}
 8000a5a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000a5e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000a62:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000a66:	bf1d      	ittte	ne
 8000a68:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000a6c:	ea94 0f0c 	teqne	r4, ip
 8000a70:	ea95 0f0c 	teqne	r5, ip
 8000a74:	f000 f8de 	bleq	8000c34 <__aeabi_dmul+0x1dc>
 8000a78:	442c      	add	r4, r5
 8000a7a:	ea81 0603 	eor.w	r6, r1, r3
 8000a7e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000a82:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000a86:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000a8a:	bf18      	it	ne
 8000a8c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000a90:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a94:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000a98:	d038      	beq.n	8000b0c <__aeabi_dmul+0xb4>
 8000a9a:	fba0 ce02 	umull	ip, lr, r0, r2
 8000a9e:	f04f 0500 	mov.w	r5, #0
 8000aa2:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000aa6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000aaa:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000aae:	f04f 0600 	mov.w	r6, #0
 8000ab2:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000ab6:	f09c 0f00 	teq	ip, #0
 8000aba:	bf18      	it	ne
 8000abc:	f04e 0e01 	orrne.w	lr, lr, #1
 8000ac0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000ac4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000ac8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000acc:	d204      	bcs.n	8000ad8 <__aeabi_dmul+0x80>
 8000ace:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000ad2:	416d      	adcs	r5, r5
 8000ad4:	eb46 0606 	adc.w	r6, r6, r6
 8000ad8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000adc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000ae0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000ae4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000ae8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000aec:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000af0:	bf88      	it	hi
 8000af2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000af6:	d81e      	bhi.n	8000b36 <__aeabi_dmul+0xde>
 8000af8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000afc:	bf08      	it	eq
 8000afe:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000b02:	f150 0000 	adcs.w	r0, r0, #0
 8000b06:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000b0a:	bd70      	pop	{r4, r5, r6, pc}
 8000b0c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000b10:	ea46 0101 	orr.w	r1, r6, r1
 8000b14:	ea40 0002 	orr.w	r0, r0, r2
 8000b18:	ea81 0103 	eor.w	r1, r1, r3
 8000b1c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000b20:	bfc2      	ittt	gt
 8000b22:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000b26:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000b2a:	bd70      	popgt	{r4, r5, r6, pc}
 8000b2c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b30:	f04f 0e00 	mov.w	lr, #0
 8000b34:	3c01      	subs	r4, #1
 8000b36:	f300 80ab 	bgt.w	8000c90 <__aeabi_dmul+0x238>
 8000b3a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000b3e:	bfde      	ittt	le
 8000b40:	2000      	movle	r0, #0
 8000b42:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000b46:	bd70      	pople	{r4, r5, r6, pc}
 8000b48:	f1c4 0400 	rsb	r4, r4, #0
 8000b4c:	3c20      	subs	r4, #32
 8000b4e:	da35      	bge.n	8000bbc <__aeabi_dmul+0x164>
 8000b50:	340c      	adds	r4, #12
 8000b52:	dc1b      	bgt.n	8000b8c <__aeabi_dmul+0x134>
 8000b54:	f104 0414 	add.w	r4, r4, #20
 8000b58:	f1c4 0520 	rsb	r5, r4, #32
 8000b5c:	fa00 f305 	lsl.w	r3, r0, r5
 8000b60:	fa20 f004 	lsr.w	r0, r0, r4
 8000b64:	fa01 f205 	lsl.w	r2, r1, r5
 8000b68:	ea40 0002 	orr.w	r0, r0, r2
 8000b6c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000b70:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000b74:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000b78:	fa21 f604 	lsr.w	r6, r1, r4
 8000b7c:	eb42 0106 	adc.w	r1, r2, r6
 8000b80:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000b84:	bf08      	it	eq
 8000b86:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000b8a:	bd70      	pop	{r4, r5, r6, pc}
 8000b8c:	f1c4 040c 	rsb	r4, r4, #12
 8000b90:	f1c4 0520 	rsb	r5, r4, #32
 8000b94:	fa00 f304 	lsl.w	r3, r0, r4
 8000b98:	fa20 f005 	lsr.w	r0, r0, r5
 8000b9c:	fa01 f204 	lsl.w	r2, r1, r4
 8000ba0:	ea40 0002 	orr.w	r0, r0, r2
 8000ba4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000ba8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000bac:	f141 0100 	adc.w	r1, r1, #0
 8000bb0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000bb4:	bf08      	it	eq
 8000bb6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000bba:	bd70      	pop	{r4, r5, r6, pc}
 8000bbc:	f1c4 0520 	rsb	r5, r4, #32
 8000bc0:	fa00 f205 	lsl.w	r2, r0, r5
 8000bc4:	ea4e 0e02 	orr.w	lr, lr, r2
 8000bc8:	fa20 f304 	lsr.w	r3, r0, r4
 8000bcc:	fa01 f205 	lsl.w	r2, r1, r5
 8000bd0:	ea43 0302 	orr.w	r3, r3, r2
 8000bd4:	fa21 f004 	lsr.w	r0, r1, r4
 8000bd8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000bdc:	fa21 f204 	lsr.w	r2, r1, r4
 8000be0:	ea20 0002 	bic.w	r0, r0, r2
 8000be4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000be8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000bec:	bf08      	it	eq
 8000bee:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000bf2:	bd70      	pop	{r4, r5, r6, pc}
 8000bf4:	f094 0f00 	teq	r4, #0
 8000bf8:	d10f      	bne.n	8000c1a <__aeabi_dmul+0x1c2>
 8000bfa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000bfe:	0040      	lsls	r0, r0, #1
 8000c00:	eb41 0101 	adc.w	r1, r1, r1
 8000c04:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000c08:	bf08      	it	eq
 8000c0a:	3c01      	subeq	r4, #1
 8000c0c:	d0f7      	beq.n	8000bfe <__aeabi_dmul+0x1a6>
 8000c0e:	ea41 0106 	orr.w	r1, r1, r6
 8000c12:	f095 0f00 	teq	r5, #0
 8000c16:	bf18      	it	ne
 8000c18:	4770      	bxne	lr
 8000c1a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000c1e:	0052      	lsls	r2, r2, #1
 8000c20:	eb43 0303 	adc.w	r3, r3, r3
 8000c24:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000c28:	bf08      	it	eq
 8000c2a:	3d01      	subeq	r5, #1
 8000c2c:	d0f7      	beq.n	8000c1e <__aeabi_dmul+0x1c6>
 8000c2e:	ea43 0306 	orr.w	r3, r3, r6
 8000c32:	4770      	bx	lr
 8000c34:	ea94 0f0c 	teq	r4, ip
 8000c38:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000c3c:	bf18      	it	ne
 8000c3e:	ea95 0f0c 	teqne	r5, ip
 8000c42:	d00c      	beq.n	8000c5e <__aeabi_dmul+0x206>
 8000c44:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000c48:	bf18      	it	ne
 8000c4a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000c4e:	d1d1      	bne.n	8000bf4 <__aeabi_dmul+0x19c>
 8000c50:	ea81 0103 	eor.w	r1, r1, r3
 8000c54:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000c58:	f04f 0000 	mov.w	r0, #0
 8000c5c:	bd70      	pop	{r4, r5, r6, pc}
 8000c5e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000c62:	bf06      	itte	eq
 8000c64:	4610      	moveq	r0, r2
 8000c66:	4619      	moveq	r1, r3
 8000c68:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000c6c:	d019      	beq.n	8000ca2 <__aeabi_dmul+0x24a>
 8000c6e:	ea94 0f0c 	teq	r4, ip
 8000c72:	d102      	bne.n	8000c7a <__aeabi_dmul+0x222>
 8000c74:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000c78:	d113      	bne.n	8000ca2 <__aeabi_dmul+0x24a>
 8000c7a:	ea95 0f0c 	teq	r5, ip
 8000c7e:	d105      	bne.n	8000c8c <__aeabi_dmul+0x234>
 8000c80:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000c84:	bf1c      	itt	ne
 8000c86:	4610      	movne	r0, r2
 8000c88:	4619      	movne	r1, r3
 8000c8a:	d10a      	bne.n	8000ca2 <__aeabi_dmul+0x24a>
 8000c8c:	ea81 0103 	eor.w	r1, r1, r3
 8000c90:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000c94:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000c98:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000c9c:	f04f 0000 	mov.w	r0, #0
 8000ca0:	bd70      	pop	{r4, r5, r6, pc}
 8000ca2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000ca6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000caa:	bd70      	pop	{r4, r5, r6, pc}

08000cac <__aeabi_ddiv>:
 8000cac:	b570      	push	{r4, r5, r6, lr}
 8000cae:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000cb2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000cb6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000cba:	bf1d      	ittte	ne
 8000cbc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000cc0:	ea94 0f0c 	teqne	r4, ip
 8000cc4:	ea95 0f0c 	teqne	r5, ip
 8000cc8:	f000 f8a7 	bleq	8000e1a <__aeabi_ddiv+0x16e>
 8000ccc:	eba4 0405 	sub.w	r4, r4, r5
 8000cd0:	ea81 0e03 	eor.w	lr, r1, r3
 8000cd4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000cd8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000cdc:	f000 8088 	beq.w	8000df0 <__aeabi_ddiv+0x144>
 8000ce0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000ce4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000ce8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000cec:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000cf0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000cf4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000cf8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000cfc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000d00:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000d04:	429d      	cmp	r5, r3
 8000d06:	bf08      	it	eq
 8000d08:	4296      	cmpeq	r6, r2
 8000d0a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000d0e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000d12:	d202      	bcs.n	8000d1a <__aeabi_ddiv+0x6e>
 8000d14:	085b      	lsrs	r3, r3, #1
 8000d16:	ea4f 0232 	mov.w	r2, r2, rrx
 8000d1a:	1ab6      	subs	r6, r6, r2
 8000d1c:	eb65 0503 	sbc.w	r5, r5, r3
 8000d20:	085b      	lsrs	r3, r3, #1
 8000d22:	ea4f 0232 	mov.w	r2, r2, rrx
 8000d26:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000d2a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000d2e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000d32:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000d36:	bf22      	ittt	cs
 8000d38:	1ab6      	subcs	r6, r6, r2
 8000d3a:	4675      	movcs	r5, lr
 8000d3c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000d40:	085b      	lsrs	r3, r3, #1
 8000d42:	ea4f 0232 	mov.w	r2, r2, rrx
 8000d46:	ebb6 0e02 	subs.w	lr, r6, r2
 8000d4a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000d4e:	bf22      	ittt	cs
 8000d50:	1ab6      	subcs	r6, r6, r2
 8000d52:	4675      	movcs	r5, lr
 8000d54:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000d58:	085b      	lsrs	r3, r3, #1
 8000d5a:	ea4f 0232 	mov.w	r2, r2, rrx
 8000d5e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000d62:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000d66:	bf22      	ittt	cs
 8000d68:	1ab6      	subcs	r6, r6, r2
 8000d6a:	4675      	movcs	r5, lr
 8000d6c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000d70:	085b      	lsrs	r3, r3, #1
 8000d72:	ea4f 0232 	mov.w	r2, r2, rrx
 8000d76:	ebb6 0e02 	subs.w	lr, r6, r2
 8000d7a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000d7e:	bf22      	ittt	cs
 8000d80:	1ab6      	subcs	r6, r6, r2
 8000d82:	4675      	movcs	r5, lr
 8000d84:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000d88:	ea55 0e06 	orrs.w	lr, r5, r6
 8000d8c:	d018      	beq.n	8000dc0 <__aeabi_ddiv+0x114>
 8000d8e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000d92:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000d96:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000d9a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000d9e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000da2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000da6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000daa:	d1c0      	bne.n	8000d2e <__aeabi_ddiv+0x82>
 8000dac:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000db0:	d10b      	bne.n	8000dca <__aeabi_ddiv+0x11e>
 8000db2:	ea41 0100 	orr.w	r1, r1, r0
 8000db6:	f04f 0000 	mov.w	r0, #0
 8000dba:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000dbe:	e7b6      	b.n	8000d2e <__aeabi_ddiv+0x82>
 8000dc0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000dc4:	bf04      	itt	eq
 8000dc6:	4301      	orreq	r1, r0
 8000dc8:	2000      	moveq	r0, #0
 8000dca:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000dce:	bf88      	it	hi
 8000dd0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000dd4:	f63f aeaf 	bhi.w	8000b36 <__aeabi_dmul+0xde>
 8000dd8:	ebb5 0c03 	subs.w	ip, r5, r3
 8000ddc:	bf04      	itt	eq
 8000dde:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000de2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000de6:	f150 0000 	adcs.w	r0, r0, #0
 8000dea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000dee:	bd70      	pop	{r4, r5, r6, pc}
 8000df0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000df4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000df8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000dfc:	bfc2      	ittt	gt
 8000dfe:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000e02:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000e06:	bd70      	popgt	{r4, r5, r6, pc}
 8000e08:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000e0c:	f04f 0e00 	mov.w	lr, #0
 8000e10:	3c01      	subs	r4, #1
 8000e12:	e690      	b.n	8000b36 <__aeabi_dmul+0xde>
 8000e14:	ea45 0e06 	orr.w	lr, r5, r6
 8000e18:	e68d      	b.n	8000b36 <__aeabi_dmul+0xde>
 8000e1a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000e1e:	ea94 0f0c 	teq	r4, ip
 8000e22:	bf08      	it	eq
 8000e24:	ea95 0f0c 	teqeq	r5, ip
 8000e28:	f43f af3b 	beq.w	8000ca2 <__aeabi_dmul+0x24a>
 8000e2c:	ea94 0f0c 	teq	r4, ip
 8000e30:	d10a      	bne.n	8000e48 <__aeabi_ddiv+0x19c>
 8000e32:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000e36:	f47f af34 	bne.w	8000ca2 <__aeabi_dmul+0x24a>
 8000e3a:	ea95 0f0c 	teq	r5, ip
 8000e3e:	f47f af25 	bne.w	8000c8c <__aeabi_dmul+0x234>
 8000e42:	4610      	mov	r0, r2
 8000e44:	4619      	mov	r1, r3
 8000e46:	e72c      	b.n	8000ca2 <__aeabi_dmul+0x24a>
 8000e48:	ea95 0f0c 	teq	r5, ip
 8000e4c:	d106      	bne.n	8000e5c <__aeabi_ddiv+0x1b0>
 8000e4e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000e52:	f43f aefd 	beq.w	8000c50 <__aeabi_dmul+0x1f8>
 8000e56:	4610      	mov	r0, r2
 8000e58:	4619      	mov	r1, r3
 8000e5a:	e722      	b.n	8000ca2 <__aeabi_dmul+0x24a>
 8000e5c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000e60:	bf18      	it	ne
 8000e62:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000e66:	f47f aec5 	bne.w	8000bf4 <__aeabi_dmul+0x19c>
 8000e6a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000e6e:	f47f af0d 	bne.w	8000c8c <__aeabi_dmul+0x234>
 8000e72:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000e76:	f47f aeeb 	bne.w	8000c50 <__aeabi_dmul+0x1f8>
 8000e7a:	e712      	b.n	8000ca2 <__aeabi_dmul+0x24a>

08000e7c <__aeabi_d2uiz>:
 8000e7c:	004a      	lsls	r2, r1, #1
 8000e7e:	d211      	bcs.n	8000ea4 <__aeabi_d2uiz+0x28>
 8000e80:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000e84:	d211      	bcs.n	8000eaa <__aeabi_d2uiz+0x2e>
 8000e86:	d50d      	bpl.n	8000ea4 <__aeabi_d2uiz+0x28>
 8000e88:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000e8c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000e90:	d40e      	bmi.n	8000eb0 <__aeabi_d2uiz+0x34>
 8000e92:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000e96:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000e9a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000e9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ea2:	4770      	bx	lr
 8000ea4:	f04f 0000 	mov.w	r0, #0
 8000ea8:	4770      	bx	lr
 8000eaa:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000eae:	d102      	bne.n	8000eb6 <__aeabi_d2uiz+0x3a>
 8000eb0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000eb4:	4770      	bx	lr
 8000eb6:	f04f 0000 	mov.w	r0, #0
 8000eba:	4770      	bx	lr

08000ebc <__aeabi_f2uiz>:
 8000ebc:	0042      	lsls	r2, r0, #1
 8000ebe:	d20e      	bcs.n	8000ede <__aeabi_f2uiz+0x22>
 8000ec0:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8000ec4:	d30b      	bcc.n	8000ede <__aeabi_f2uiz+0x22>
 8000ec6:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8000eca:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000ece:	d409      	bmi.n	8000ee4 <__aeabi_f2uiz+0x28>
 8000ed0:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000ed4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ed8:	fa23 f002 	lsr.w	r0, r3, r2
 8000edc:	4770      	bx	lr
 8000ede:	f04f 0000 	mov.w	r0, #0
 8000ee2:	4770      	bx	lr
 8000ee4:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8000ee8:	d101      	bne.n	8000eee <__aeabi_f2uiz+0x32>
 8000eea:	0242      	lsls	r2, r0, #9
 8000eec:	d102      	bne.n	8000ef4 <__aeabi_f2uiz+0x38>
 8000eee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ef2:	4770      	bx	lr
 8000ef4:	f04f 0000 	mov.w	r0, #0
 8000ef8:	4770      	bx	lr
 8000efa:	bf00      	nop

08000efc <Reset_Handler>:
 8000efc:	480c      	ldr	r0, [pc, #48]	; (8000f30 <Zerobss+0x10>)
 8000efe:	4685      	mov	sp, r0
 8000f00:	2100      	movs	r1, #0
 8000f02:	e003      	b.n	8000f0c <DataInit>

08000f04 <CopyData>:
 8000f04:	4b0b      	ldr	r3, [pc, #44]	; (8000f34 <Zerobss+0x14>)
 8000f06:	585b      	ldr	r3, [r3, r1]
 8000f08:	5043      	str	r3, [r0, r1]
 8000f0a:	3104      	adds	r1, #4

08000f0c <DataInit>:
 8000f0c:	480a      	ldr	r0, [pc, #40]	; (8000f38 <Zerobss+0x18>)
 8000f0e:	4b0b      	ldr	r3, [pc, #44]	; (8000f3c <Zerobss+0x1c>)
 8000f10:	1842      	adds	r2, r0, r1
 8000f12:	429a      	cmp	r2, r3
 8000f14:	d3f6      	bcc.n	8000f04 <CopyData>
 8000f16:	4a0a      	ldr	r2, [pc, #40]	; (8000f40 <Zerobss+0x20>)
 8000f18:	e002      	b.n	8000f20 <Zerobss>

08000f1a <FillZerobss>:
 8000f1a:	2300      	movs	r3, #0
 8000f1c:	f842 3b04 	str.w	r3, [r2], #4

08000f20 <Zerobss>:
 8000f20:	4b08      	ldr	r3, [pc, #32]	; (8000f44 <Zerobss+0x24>)
 8000f22:	429a      	cmp	r2, r3
 8000f24:	d3f9      	bcc.n	8000f1a <FillZerobss>
 8000f26:	f003 fb37 	bl	8004598 <SystemInit>
 8000f2a:	f000 f837 	bl	8000f9c <main>
 8000f2e:	4770      	bx	lr
 8000f30:	2000c000 	andcs	ip, r0, r0
 8000f34:	0800601c 	stmdaeq	r0, {r2, r3, r4, sp, lr}
 8000f38:	20000000 	andcs	r0, r0, r0
 8000f3c:	200000ec 	andcs	r0, r0, ip, ror #1
 8000f40:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8000f44:	20001824 	andcs	r1, r0, r4, lsr #16

08000f48 <ADC0_1_IRQHandler>:
 8000f48:	e7fe      	b.n	8000f48 <ADC0_1_IRQHandler>

08000f4a <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 8000f4a:	b470      	push	{r4, r5, r6}
 8000f4c:	790a      	ldrb	r2, [r1, #4]
 8000f4e:	680b      	ldr	r3, [r1, #0]
 8000f50:	2a20      	cmp	r2, #32
 8000f52:	bf28      	it	cs
 8000f54:	2220      	movcs	r2, #32
 8000f56:	7801      	ldrb	r1, [r0, #0]
 8000f58:	189c      	adds	r4, r3, r2
 8000f5a:	b191      	cbz	r1, 8000f82 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x38>
 8000f5c:	f100 010b 	add.w	r1, r0, #11
 8000f60:	f100 050a 	add.w	r5, r0, #10
 8000f64:	42a3      	cmp	r3, r4
 8000f66:	d107      	bne.n	8000f78 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x2e>
 8000f68:	f880 202b 	strb.w	r2, [r0, #43]	; 0x2b
 8000f6c:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8000f6e:	b170      	cbz	r0, 8000f8e <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x44>
 8000f70:	bc70      	pop	{r4, r5, r6}
 8000f72:	6803      	ldr	r3, [r0, #0]
 8000f74:	689b      	ldr	r3, [r3, #8]
 8000f76:	4718      	bx	r3
 8000f78:	f813 6b01 	ldrb.w	r6, [r3], #1
 8000f7c:	f805 6f01 	strb.w	r6, [r5, #1]!
 8000f80:	e7f0      	b.n	8000f64 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x1a>
 8000f82:	f100 0151 	add.w	r1, r0, #81	; 0x51
 8000f86:	42a3      	cmp	r3, r4
 8000f88:	d103      	bne.n	8000f92 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x48>
 8000f8a:	f880 2072 	strb.w	r2, [r0, #114]	; 0x72
 8000f8e:	bc70      	pop	{r4, r5, r6}
 8000f90:	4770      	bx	lr
 8000f92:	f813 5b01 	ldrb.w	r5, [r3], #1
 8000f96:	f801 5f01 	strb.w	r5, [r1, #1]!
 8000f9a:	e7f4      	b.n	8000f86 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3c>

08000f9c <main>:
 8000f9c:	b570      	push	{r4, r5, r6, lr}
 8000f9e:	f5ad 7d74 	sub.w	sp, sp, #976	; 0x3d0
 8000fa2:	a804      	add	r0, sp, #16
 8000fa4:	f003 f910 	bl	80041c8 <Hardware::Hardware()>
 8000fa8:	a80c      	add	r0, sp, #48	; 0x30
 8000faa:	f002 fa2b 	bl	8003404 <Network::Network()>
 8000fae:	a814      	add	r0, sp, #80	; 0x50
 8000fb0:	f003 f8e8 	bl	8004184 <LedBlink::LedBlink()>
 8000fb4:	a81a      	add	r0, sp, #104	; 0x68
 8000fb6:	f002 febd 	bl	8003d34 <Display::Display()>
 8000fba:	a805      	add	r0, sp, #20
 8000fbc:	f002 fad6 	bl	800356c <ConfigStore::ConfigStore()>
 8000fc0:	a82d      	add	r0, sp, #180	; 0xb4
 8000fc2:	f000 fd49 	bl	8001a58 <Widget::Widget()>
 8000fc6:	2300      	movs	r3, #0
 8000fc8:	2201      	movs	r2, #1
 8000fca:	4619      	mov	r1, r3
 8000fcc:	a82d      	add	r0, sp, #180	; 0xb4
 8000fce:	f001 fe43 	bl	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000fd2:	a806      	add	r0, sp, #24
 8000fd4:	f002 fc70 	bl	80038b8 <StoreWidget::StoreWidget()>
 8000fd8:	a906      	add	r1, sp, #24
 8000fda:	a810      	add	r0, sp, #64	; 0x40
 8000fdc:	f001 f8ee 	bl	80021bc <WidgetParams::WidgetParams(WidgetParamsStore*)>
 8000fe0:	a810      	add	r0, sp, #64	; 0x40
 8000fe2:	f001 f8f3 	bl	80021cc <WidgetParams::Load()>
 8000fe6:	b128      	cbz	r0, 8000ff4 <main+0x58>
 8000fe8:	a810      	add	r0, sp, #64	; 0x40
 8000fea:	f001 f98e 	bl	800230a <WidgetParams::Dump()>
 8000fee:	a810      	add	r0, sp, #64	; 0x40
 8000ff0:	f001 f968 	bl	80022c4 <WidgetParams::Set()>
 8000ff4:	a808      	add	r0, sp, #32
 8000ff6:	f002 fc21 	bl	800383c <StoreRDMDevice::StoreRDMDevice()>
 8000ffa:	a908      	add	r1, sp, #32
 8000ffc:	a821      	add	r0, sp, #132	; 0x84
 8000ffe:	f002 f9af 	bl	8003360 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 8001002:	a834      	add	r0, sp, #208	; 0xd0
 8001004:	494f      	ldr	r1, [pc, #316]	; (8001144 <main+0x1a8>)
 8001006:	f7ff ffa0 	bl	8000f4a <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800100a:	a821      	add	r0, sp, #132	; 0x84
 800100c:	f002 f9ba 	bl	8003384 <RDMDeviceParams::Load()>
 8001010:	b130      	cbz	r0, 8001020 <main+0x84>
 8001012:	a821      	add	r0, sp, #132	; 0x84
 8001014:	f002 f9f5 	bl	8003402 <RDMDeviceParams::Dump()>
 8001018:	a934      	add	r1, sp, #208	; 0xd0
 800101a:	a821      	add	r0, sp, #132	; 0x84
 800101c:	f002 f9bd 	bl	800339a <RDMDeviceParams::Set(RDMDevice*)>
 8001020:	2301      	movs	r3, #1
 8001022:	f88d 30d0 	strb.w	r3, [sp, #208]	; 0xd0
 8001026:	f50d 7391 	add.w	r3, sp, #290	; 0x122
 800102a:	930a      	str	r3, [sp, #40]	; 0x28
 800102c:	f89d 3142 	ldrb.w	r3, [sp, #322]	; 0x142
 8001030:	a90a      	add	r1, sp, #40	; 0x28
 8001032:	a834      	add	r0, sp, #208	; 0xd0
 8001034:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8001038:	f7ff ff87 	bl	8000f4a <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800103c:	2200      	movs	r2, #0
 800103e:	f89d 3142 	ldrb.w	r3, [sp, #322]	; 0x142
 8001042:	f89d 50fb 	ldrb.w	r5, [sp, #251]	; 0xfb
 8001046:	f10d 01da 	add.w	r1, sp, #218	; 0xda
 800104a:	42aa      	cmp	r2, r5
 800104c:	d374      	bcc.n	8001138 <main+0x19c>
 800104e:	f8ad 3144 	strh.w	r3, [sp, #324]	; 0x144
 8001052:	4b3d      	ldr	r3, [pc, #244]	; (8001148 <main+0x1ac>)
 8001054:	4a3d      	ldr	r2, [pc, #244]	; (800114c <main+0x1b0>)
 8001056:	493e      	ldr	r1, [pc, #248]	; (8001150 <main+0x1b4>)
 8001058:	9300      	str	r3, [sp, #0]
 800105a:	483e      	ldr	r0, [pc, #248]	; (8001154 <main+0x1b8>)
 800105c:	4b3e      	ldr	r3, [pc, #248]	; (8001158 <main+0x1bc>)
 800105e:	f89d 404b 	ldrb.w	r4, [sp, #75]	; 0x4b
 8001062:	f000 fb83 	bl	800176c <printf>
 8001066:	220c      	movs	r2, #12
 8001068:	4b3c      	ldr	r3, [pc, #240]	; (800115c <main+0x1c0>)
 800106a:	4621      	mov	r1, r4
 800106c:	fb02 3204 	mla	r2, r2, r4, r3
 8001070:	483b      	ldr	r0, [pc, #236]	; (8001160 <main+0x1c4>)
 8001072:	f000 fb7b 	bl	800176c <printf>
 8001076:	f89d 30d6 	ldrb.w	r3, [sp, #214]	; 0xd6
 800107a:	f89d 20d2 	ldrb.w	r2, [sp, #210]	; 0xd2
 800107e:	9302      	str	r3, [sp, #8]
 8001080:	f89d 30d5 	ldrb.w	r3, [sp, #213]	; 0xd5
 8001084:	f89d 10d1 	ldrb.w	r1, [sp, #209]	; 0xd1
 8001088:	9301      	str	r3, [sp, #4]
 800108a:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 800108e:	4835      	ldr	r0, [pc, #212]	; (8001164 <main+0x1c8>)
 8001090:	9300      	str	r3, [sp, #0]
 8001092:	f89d 30d3 	ldrb.w	r3, [sp, #211]	; 0xd3
 8001096:	f000 fb69 	bl	800176c <printf>
 800109a:	4629      	mov	r1, r5
 800109c:	f10d 02db 	add.w	r2, sp, #219	; 0xdb
 80010a0:	4831      	ldr	r0, [pc, #196]	; (8001168 <main+0x1cc>)
 80010a2:	f000 fb63 	bl	800176c <printf>
 80010a6:	2102      	movs	r1, #2
 80010a8:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80010ac:	f003 fbc8 	bl	8004840 <fwdgt_config>
 80010b0:	2801      	cmp	r0, #1
 80010b2:	bf0c      	ite	eq
 80010b4:	2301      	moveq	r3, #1
 80010b6:	2300      	movne	r3, #0
 80010b8:	f88d 3010 	strb.w	r3, [sp, #16]
 80010bc:	d101      	bne.n	80010c2 <main+0x126>
 80010be:	f003 fbaf 	bl	8004820 <fwdgt_enable>
 80010c2:	2c03      	cmp	r4, #3
 80010c4:	d108      	bne.n	80010d8 <main+0x13c>
 80010c6:	2301      	movs	r3, #1
 80010c8:	a82d      	add	r0, sp, #180	; 0xb4
 80010ca:	461a      	mov	r2, r3
 80010cc:	2100      	movs	r1, #0
 80010ce:	f001 fdc3 	bl	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80010d2:	a82d      	add	r0, sp, #180	; 0xb4
 80010d4:	f001 f9fc 	bl	80024d0 <Widget::SnifferFillTransmitBuffer()>
 80010d8:	2601      	movs	r6, #1
 80010da:	4d24      	ldr	r5, [pc, #144]	; (800116c <main+0x1d0>)
 80010dc:	4c24      	ldr	r4, [pc, #144]	; (8001170 <main+0x1d4>)
 80010de:	f003 fba7 	bl	8004830 <fwdgt_counter_reload>
 80010e2:	a82d      	add	r0, sp, #180	; 0xb4
 80010e4:	f000 ff82 	bl	8001fec <Widget::ReceiveDataFromHost()>
 80010e8:	a82d      	add	r0, sp, #180	; 0xb4
 80010ea:	f000 fd2f 	bl	8001b4c <Widget::ReceivedDmxPacket()>
 80010ee:	a82d      	add	r0, sp, #180	; 0xb4
 80010f0:	f000 fdf4 	bl	8001cdc <Widget::ReceivedDmxChangeOfStatePacket()>
 80010f4:	a82d      	add	r0, sp, #180	; 0xb4
 80010f6:	f000 fe7f 	bl	8001df8 <Widget::ReceivedRdmPacket()>
 80010fa:	a82d      	add	r0, sp, #180	; 0xb4
 80010fc:	f000 fef2 	bl	8001ee4 <Widget::RdmTimeout()>
 8001100:	a82d      	add	r0, sp, #180	; 0xb4
 8001102:	f001 f98f 	bl	8002424 <Widget::SnifferRdm()>
 8001106:	a82d      	add	r0, sp, #180	; 0xb4
 8001108:	f001 f966 	bl	80023d8 <Widget::SnifferDmx()>
 800110c:	a805      	add	r0, sp, #20
 800110e:	f002 fac3 	bl	8003698 <ConfigStore::Flash()>
 8001112:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8001114:	2a00      	cmp	r2, #0
 8001116:	d0e2      	beq.n	80010de <main+0x142>
 8001118:	682b      	ldr	r3, [r5, #0]
 800111a:	9919      	ldr	r1, [sp, #100]	; 0x64
 800111c:	1a5b      	subs	r3, r3, r1
 800111e:	429a      	cmp	r2, r3
 8001120:	d8dd      	bhi.n	80010de <main+0x142>
 8001122:	682b      	ldr	r3, [r5, #0]
 8001124:	9319      	str	r3, [sp, #100]	; 0x64
 8001126:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8001128:	2b01      	cmp	r3, #1
 800112a:	f083 0201 	eor.w	r2, r3, #1
 800112e:	9218      	str	r2, [sp, #96]	; 0x60
 8001130:	bf14      	ite	ne
 8001132:	6126      	strne	r6, [r4, #16]
 8001134:	6163      	streq	r3, [r4, #20]
 8001136:	e7d2      	b.n	80010de <main+0x142>
 8001138:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800113c:	3201      	adds	r2, #1
 800113e:	4403      	add	r3, r0
 8001140:	b29b      	uxth	r3, r3
 8001142:	e782      	b.n	800104a <main+0xae>
 8001144:	08005840 	stmdaeq	r0, {r6, fp, ip, lr}
 8001148:	0800578e 	stmdaeq	r0, {r1, r2, r3, r7, r8, r9, sl, ip, lr}
 800114c:	08005764 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, ip, lr}
 8001150:	08005848 	stmdaeq	r0, {r3, r6, fp, ip, lr}
 8001154:	0800576f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, lr}
 8001158:	08005758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl, ip, lr}
 800115c:	0800584c 	stmdaeq	r0, {r2, r3, r6, fp, ip, lr}
 8001160:	08005797 	stmdaeq	r0, {r0, r1, r2, r4, r7, r8, r9, sl, ip, lr}
 8001164:	080057f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, sl, ip, lr}
 8001168:	0800581b 	stmdaeq	r0, {r0, r1, r3, r4, fp, ip, lr}
 800116c:	2000181c 	andcs	r1, r0, ip, lsl r8
 8001170:	40011000 	andmi	r1, r1, r0

08001174 <_itostr>:
 8001174:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001176:	0fc7      	lsrs	r7, r0, #31
 8001178:	b091      	sub	sp, #68	; 0x44
 800117a:	bf18      	it	ne
 800117c:	4240      	negne	r0, r0
 800117e:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8001182:	b9c8      	cbnz	r0, 80011b8 <_itostr+0x44>
 8001184:	2330      	movs	r3, #48	; 0x30
 8001186:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800118a:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 800118e:	b132      	cbz	r2, 800119e <_itostr+0x2a>
 8001190:	4668      	mov	r0, sp
 8001192:	2530      	movs	r5, #48	; 0x30
 8001194:	1ae6      	subs	r6, r4, r3
 8001196:	4296      	cmp	r6, r2
 8001198:	da01      	bge.n	800119e <_itostr+0x2a>
 800119a:	4283      	cmp	r3, r0
 800119c:	d81c      	bhi.n	80011d8 <_itostr+0x64>
 800119e:	b117      	cbz	r7, 80011a6 <_itostr+0x32>
 80011a0:	222d      	movs	r2, #45	; 0x2d
 80011a2:	f803 2901 	strb.w	r2, [r3], #-1
 80011a6:	3301      	adds	r3, #1
 80011a8:	1ae0      	subs	r0, r4, r3
 80011aa:	3901      	subs	r1, #1
 80011ac:	aa10      	add	r2, sp, #64	; 0x40
 80011ae:	4293      	cmp	r3, r2
 80011b0:	d315      	bcc.n	80011de <_itostr+0x6a>
 80011b2:	3001      	adds	r0, #1
 80011b4:	b011      	add	sp, #68	; 0x44
 80011b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011b8:	4623      	mov	r3, r4
 80011ba:	250a      	movs	r5, #10
 80011bc:	46ec      	mov	ip, sp
 80011be:	fb90 f6f5 	sdiv	r6, r0, r5
 80011c2:	fb05 0016 	mls	r0, r5, r6, r0
 80011c6:	3030      	adds	r0, #48	; 0x30
 80011c8:	f803 0901 	strb.w	r0, [r3], #-1
 80011cc:	4630      	mov	r0, r6
 80011ce:	2e00      	cmp	r6, #0
 80011d0:	d0dd      	beq.n	800118e <_itostr+0x1a>
 80011d2:	4563      	cmp	r3, ip
 80011d4:	d1f3      	bne.n	80011be <_itostr+0x4a>
 80011d6:	e7da      	b.n	800118e <_itostr+0x1a>
 80011d8:	f803 5901 	strb.w	r5, [r3], #-1
 80011dc:	e7da      	b.n	8001194 <_itostr+0x20>
 80011de:	f813 2b01 	ldrb.w	r2, [r3], #1
 80011e2:	f801 2f01 	strb.w	r2, [r1, #1]!
 80011e6:	e7e1      	b.n	80011ac <_itostr+0x38>

080011e8 <_xputch>:
 80011e8:	4603      	mov	r3, r0
 80011ea:	b410      	push	{r4}
 80011ec:	4c08      	ldr	r4, [pc, #32]	; (8001210 <_xputch+0x28>)
 80011ee:	68da      	ldr	r2, [r3, #12]
 80011f0:	4608      	mov	r0, r1
 80011f2:	6821      	ldr	r1, [r4, #0]
 80011f4:	3201      	adds	r2, #1
 80011f6:	60da      	str	r2, [r3, #12]
 80011f8:	b139      	cbz	r1, 800120a <_xputch+0x22>
 80011fa:	691b      	ldr	r3, [r3, #16]
 80011fc:	429a      	cmp	r2, r3
 80011fe:	da02      	bge.n	8001206 <_xputch+0x1e>
 8001200:	1c4b      	adds	r3, r1, #1
 8001202:	6023      	str	r3, [r4, #0]
 8001204:	7008      	strb	r0, [r1, #0]
 8001206:	bc10      	pop	{r4}
 8001208:	4770      	bx	lr
 800120a:	bc10      	pop	{r4}
 800120c:	f002 bfb5 	b.w	800417a <console_putc>
 8001210:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08001214 <_format_int>:
 8001214:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001218:	4698      	mov	r8, r3
 800121a:	b091      	sub	sp, #68	; 0x44
 800121c:	ea52 0308 	orrs.w	r3, r2, r8
 8001220:	4606      	mov	r6, r0
 8001222:	4617      	mov	r7, r2
 8001224:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8001228:	d133      	bne.n	8001292 <_format_int+0x7e>
 800122a:	2330      	movs	r3, #48	; 0x30
 800122c:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8001230:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8001234:	6833      	ldr	r3, [r6, #0]
 8001236:	07d8      	lsls	r0, r3, #31
 8001238:	d507      	bpl.n	800124a <_format_int+0x36>
 800123a:	466a      	mov	r2, sp
 800123c:	2030      	movs	r0, #48	; 0x30
 800123e:	6871      	ldr	r1, [r6, #4]
 8001240:	1b2f      	subs	r7, r5, r4
 8001242:	428f      	cmp	r7, r1
 8001244:	da01      	bge.n	800124a <_format_int+0x36>
 8001246:	4294      	cmp	r4, r2
 8001248:	d839      	bhi.n	80012be <_format_int+0xaa>
 800124a:	0699      	lsls	r1, r3, #26
 800124c:	d507      	bpl.n	800125e <_format_int+0x4a>
 800124e:	466a      	mov	r2, sp
 8001250:	2030      	movs	r0, #48	; 0x30
 8001252:	68b1      	ldr	r1, [r6, #8]
 8001254:	1b2f      	subs	r7, r5, r4
 8001256:	428f      	cmp	r7, r1
 8001258:	da01      	bge.n	800125e <_format_int+0x4a>
 800125a:	4294      	cmp	r4, r2
 800125c:	d832      	bhi.n	80012c4 <_format_int+0xb0>
 800125e:	071a      	lsls	r2, r3, #28
 8001260:	bf44      	itt	mi
 8001262:	222d      	movmi	r2, #45	; 0x2d
 8001264:	f804 2901 	strbmi.w	r2, [r4], #-1
 8001268:	065b      	lsls	r3, r3, #25
 800126a:	d407      	bmi.n	800127c <_format_int+0x68>
 800126c:	466b      	mov	r3, sp
 800126e:	2120      	movs	r1, #32
 8001270:	68b2      	ldr	r2, [r6, #8]
 8001272:	1b28      	subs	r0, r5, r4
 8001274:	4290      	cmp	r0, r2
 8001276:	da01      	bge.n	800127c <_format_int+0x68>
 8001278:	429c      	cmp	r4, r3
 800127a:	d826      	bhi.n	80012ca <_format_int+0xb6>
 800127c:	1b2d      	subs	r5, r5, r4
 800127e:	3401      	adds	r4, #1
 8001280:	ab10      	add	r3, sp, #64	; 0x40
 8001282:	429c      	cmp	r4, r3
 8001284:	d324      	bcc.n	80012d0 <_format_int+0xbc>
 8001286:	68b3      	ldr	r3, [r6, #8]
 8001288:	42ab      	cmp	r3, r5
 800128a:	dc27      	bgt.n	80012dc <_format_int+0xc8>
 800128c:	b011      	add	sp, #68	; 0x44
 800128e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001292:	462c      	mov	r4, r5
 8001294:	46e9      	mov	r9, sp
 8001296:	4638      	mov	r0, r7
 8001298:	4641      	mov	r1, r8
 800129a:	220a      	movs	r2, #10
 800129c:	2300      	movs	r3, #0
 800129e:	f7ff fa05 	bl	80006ac <__aeabi_uldivmod>
 80012a2:	3230      	adds	r2, #48	; 0x30
 80012a4:	f804 2901 	strb.w	r2, [r4], #-1
 80012a8:	463a      	mov	r2, r7
 80012aa:	4643      	mov	r3, r8
 80012ac:	2a0a      	cmp	r2, #10
 80012ae:	f173 0300 	sbcs.w	r3, r3, #0
 80012b2:	4607      	mov	r7, r0
 80012b4:	4688      	mov	r8, r1
 80012b6:	d3bd      	bcc.n	8001234 <_format_int+0x20>
 80012b8:	454c      	cmp	r4, r9
 80012ba:	d1ec      	bne.n	8001296 <_format_int+0x82>
 80012bc:	e7ba      	b.n	8001234 <_format_int+0x20>
 80012be:	f804 0901 	strb.w	r0, [r4], #-1
 80012c2:	e7bd      	b.n	8001240 <_format_int+0x2c>
 80012c4:	f804 0901 	strb.w	r0, [r4], #-1
 80012c8:	e7c4      	b.n	8001254 <_format_int+0x40>
 80012ca:	f804 1901 	strb.w	r1, [r4], #-1
 80012ce:	e7d0      	b.n	8001272 <_format_int+0x5e>
 80012d0:	4630      	mov	r0, r6
 80012d2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80012d6:	f7ff ff87 	bl	80011e8 <_xputch>
 80012da:	e7d1      	b.n	8001280 <_format_int+0x6c>
 80012dc:	2120      	movs	r1, #32
 80012de:	4630      	mov	r0, r6
 80012e0:	f7ff ff82 	bl	80011e8 <_xputch>
 80012e4:	3501      	adds	r5, #1
 80012e6:	e7ce      	b.n	8001286 <_format_int+0x72>

080012e8 <_format_hex>:
 80012e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80012ea:	b091      	sub	sp, #68	; 0x44
 80012ec:	4606      	mov	r6, r0
 80012ee:	6804      	ldr	r4, [r0, #0]
 80012f0:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 80012f4:	bb61      	cbnz	r1, 8001350 <_format_hex+0x68>
 80012f6:	2330      	movs	r3, #48	; 0x30
 80012f8:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80012fc:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8001300:	07e5      	lsls	r5, r4, #31
 8001302:	d507      	bpl.n	8001314 <_format_hex+0x2c>
 8001304:	4669      	mov	r1, sp
 8001306:	2530      	movs	r5, #48	; 0x30
 8001308:	6870      	ldr	r0, [r6, #4]
 800130a:	1ad7      	subs	r7, r2, r3
 800130c:	4287      	cmp	r7, r0
 800130e:	da01      	bge.n	8001314 <_format_hex+0x2c>
 8001310:	428b      	cmp	r3, r1
 8001312:	d831      	bhi.n	8001378 <_format_hex+0x90>
 8001314:	06a0      	lsls	r0, r4, #26
 8001316:	d507      	bpl.n	8001328 <_format_hex+0x40>
 8001318:	4669      	mov	r1, sp
 800131a:	2530      	movs	r5, #48	; 0x30
 800131c:	68b0      	ldr	r0, [r6, #8]
 800131e:	1ad7      	subs	r7, r2, r3
 8001320:	4287      	cmp	r7, r0
 8001322:	da01      	bge.n	8001328 <_format_hex+0x40>
 8001324:	428b      	cmp	r3, r1
 8001326:	d82a      	bhi.n	800137e <_format_hex+0x96>
 8001328:	0661      	lsls	r1, r4, #25
 800132a:	d407      	bmi.n	800133c <_format_hex+0x54>
 800132c:	4669      	mov	r1, sp
 800132e:	2420      	movs	r4, #32
 8001330:	68b0      	ldr	r0, [r6, #8]
 8001332:	1ad5      	subs	r5, r2, r3
 8001334:	4285      	cmp	r5, r0
 8001336:	da01      	bge.n	800133c <_format_hex+0x54>
 8001338:	428b      	cmp	r3, r1
 800133a:	d823      	bhi.n	8001384 <_format_hex+0x9c>
 800133c:	1ad5      	subs	r5, r2, r3
 800133e:	1c5c      	adds	r4, r3, #1
 8001340:	ab10      	add	r3, sp, #64	; 0x40
 8001342:	429c      	cmp	r4, r3
 8001344:	d321      	bcc.n	800138a <_format_hex+0xa2>
 8001346:	68b3      	ldr	r3, [r6, #8]
 8001348:	429d      	cmp	r5, r3
 800134a:	db24      	blt.n	8001396 <_format_hex+0xae>
 800134c:	b011      	add	sp, #68	; 0x44
 800134e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001350:	f014 0f02 	tst.w	r4, #2
 8001354:	bf0c      	ite	eq
 8001356:	2757      	moveq	r7, #87	; 0x57
 8001358:	2737      	movne	r7, #55	; 0x37
 800135a:	4613      	mov	r3, r2
 800135c:	466d      	mov	r5, sp
 800135e:	f001 000f 	and.w	r0, r1, #15
 8001362:	2809      	cmp	r0, #9
 8001364:	bf94      	ite	ls
 8001366:	3030      	addls	r0, #48	; 0x30
 8001368:	19c0      	addhi	r0, r0, r7
 800136a:	0909      	lsrs	r1, r1, #4
 800136c:	f803 0901 	strb.w	r0, [r3], #-1
 8001370:	d0c6      	beq.n	8001300 <_format_hex+0x18>
 8001372:	42ab      	cmp	r3, r5
 8001374:	d1f3      	bne.n	800135e <_format_hex+0x76>
 8001376:	e7c3      	b.n	8001300 <_format_hex+0x18>
 8001378:	f803 5901 	strb.w	r5, [r3], #-1
 800137c:	e7c5      	b.n	800130a <_format_hex+0x22>
 800137e:	f803 5901 	strb.w	r5, [r3], #-1
 8001382:	e7cc      	b.n	800131e <_format_hex+0x36>
 8001384:	f803 4901 	strb.w	r4, [r3], #-1
 8001388:	e7d3      	b.n	8001332 <_format_hex+0x4a>
 800138a:	4630      	mov	r0, r6
 800138c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001390:	f7ff ff2a 	bl	80011e8 <_xputch>
 8001394:	e7d4      	b.n	8001340 <_format_hex+0x58>
 8001396:	2120      	movs	r1, #32
 8001398:	4630      	mov	r0, r6
 800139a:	f7ff ff25 	bl	80011e8 <_xputch>
 800139e:	3501      	adds	r5, #1
 80013a0:	e7d1      	b.n	8001346 <_format_hex+0x5e>
	...

080013a4 <_vprintf>:
 80013a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80013a8:	4614      	mov	r4, r2
 80013aa:	2200      	movs	r2, #0
 80013ac:	460b      	mov	r3, r1
 80013ae:	f04f 0800 	mov.w	r8, #0
 80013b2:	b099      	sub	sp, #100	; 0x64
 80013b4:	e9cd 2006 	strd	r2, r0, [sp, #24]
 80013b8:	af08      	add	r7, sp, #32
 80013ba:	7819      	ldrb	r1, [r3, #0]
 80013bc:	b919      	cbnz	r1, 80013c6 <_vprintf+0x22>
 80013be:	9806      	ldr	r0, [sp, #24]
 80013c0:	b019      	add	sp, #100	; 0x64
 80013c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80013c6:	2925      	cmp	r1, #37	; 0x25
 80013c8:	f103 0601 	add.w	r6, r3, #1
 80013cc:	d004      	beq.n	80013d8 <_vprintf+0x34>
 80013ce:	a803      	add	r0, sp, #12
 80013d0:	f7ff ff0a 	bl	80011e8 <_xputch>
 80013d4:	4633      	mov	r3, r6
 80013d6:	e7f0      	b.n	80013ba <_vprintf+0x16>
 80013d8:	2200      	movs	r2, #0
 80013da:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80013de:	9205      	str	r2, [sp, #20]
 80013e0:	785a      	ldrb	r2, [r3, #1]
 80013e2:	2a30      	cmp	r2, #48	; 0x30
 80013e4:	d129      	bne.n	800143a <_vprintf+0x96>
 80013e6:	2220      	movs	r2, #32
 80013e8:	9203      	str	r2, [sp, #12]
 80013ea:	1c9e      	adds	r6, r3, #2
 80013ec:	2200      	movs	r2, #0
 80013ee:	4635      	mov	r5, r6
 80013f0:	4613      	mov	r3, r2
 80013f2:	f04f 0c0a 	mov.w	ip, #10
 80013f6:	7829      	ldrb	r1, [r5, #0]
 80013f8:	462e      	mov	r6, r5
 80013fa:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 80013fe:	2809      	cmp	r0, #9
 8001400:	f105 0501 	add.w	r5, r5, #1
 8001404:	d91d      	bls.n	8001442 <_vprintf+0x9e>
 8001406:	b12a      	cbz	r2, 8001414 <_vprintf+0x70>
 8001408:	9305      	str	r3, [sp, #20]
 800140a:	b11b      	cbz	r3, 8001414 <_vprintf+0x70>
 800140c:	9b03      	ldr	r3, [sp, #12]
 800140e:	f043 0310 	orr.w	r3, r3, #16
 8001412:	9303      	str	r3, [sp, #12]
 8001414:	292e      	cmp	r1, #46	; 0x2e
 8001416:	d123      	bne.n	8001460 <_vprintf+0xbc>
 8001418:	7873      	ldrb	r3, [r6, #1]
 800141a:	2b2a      	cmp	r3, #42	; 0x2a
 800141c:	d015      	beq.n	800144a <_vprintf+0xa6>
 800141e:	2100      	movs	r1, #0
 8001420:	250a      	movs	r5, #10
 8001422:	460a      	mov	r2, r1
 8001424:	1c70      	adds	r0, r6, #1
 8001426:	7803      	ldrb	r3, [r0, #0]
 8001428:	4606      	mov	r6, r0
 800142a:	3b30      	subs	r3, #48	; 0x30
 800142c:	2b09      	cmp	r3, #9
 800142e:	f100 0001 	add.w	r0, r0, #1
 8001432:	d959      	bls.n	80014e8 <_vprintf+0x144>
 8001434:	b181      	cbz	r1, 8001458 <_vprintf+0xb4>
 8001436:	9204      	str	r2, [sp, #16]
 8001438:	e00e      	b.n	8001458 <_vprintf+0xb4>
 800143a:	2a2d      	cmp	r2, #45	; 0x2d
 800143c:	d1d6      	bne.n	80013ec <_vprintf+0x48>
 800143e:	2240      	movs	r2, #64	; 0x40
 8001440:	e7d2      	b.n	80013e8 <_vprintf+0x44>
 8001442:	2201      	movs	r2, #1
 8001444:	fb0c 0303 	mla	r3, ip, r3, r0
 8001448:	e7d5      	b.n	80013f6 <_vprintf+0x52>
 800144a:	f854 3b04 	ldr.w	r3, [r4], #4
 800144e:	3602      	adds	r6, #2
 8001450:	2b00      	cmp	r3, #0
 8001452:	bfb8      	it	lt
 8001454:	425b      	neglt	r3, r3
 8001456:	9304      	str	r3, [sp, #16]
 8001458:	9b03      	ldr	r3, [sp, #12]
 800145a:	f043 0301 	orr.w	r3, r3, #1
 800145e:	9303      	str	r3, [sp, #12]
 8001460:	7833      	ldrb	r3, [r6, #0]
 8001462:	2b6c      	cmp	r3, #108	; 0x6c
 8001464:	bf04      	itt	eq
 8001466:	9b03      	ldreq	r3, [sp, #12]
 8001468:	3601      	addeq	r6, #1
 800146a:	7831      	ldrb	r1, [r6, #0]
 800146c:	bf04      	itt	eq
 800146e:	f043 0304 	orreq.w	r3, r3, #4
 8001472:	9303      	streq	r3, [sp, #12]
 8001474:	2958      	cmp	r1, #88	; 0x58
 8001476:	f000 8171 	beq.w	800175c <_vprintf+0x3b8>
 800147a:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 800147e:	b2da      	uxtb	r2, r3
 8001480:	2a15      	cmp	r2, #21
 8001482:	d8a4      	bhi.n	80013ce <_vprintf+0x2a>
 8001484:	2b15      	cmp	r3, #21
 8001486:	d8a2      	bhi.n	80013ce <_vprintf+0x2a>
 8001488:	a201      	add	r2, pc, #4	; (adr r2, 8001490 <_vprintf+0xec>)
 800148a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800148e:	bf00      	nop
 8001490:	080014f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, sl, ip}
 8001494:	08001503 	stmdaeq	r0, {r0, r1, r8, sl, ip}
 8001498:	080013cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, ip}
 800149c:	08001539 	stmdaeq	r0, {r0, r3, r4, r5, r8, sl, ip}
 80014a0:	080013cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, ip}
 80014a4:	080013cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, ip}
 80014a8:	08001503 	stmdaeq	r0, {r0, r1, r8, sl, ip}
 80014ac:	080013cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, ip}
 80014b0:	080013cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, ip}
 80014b4:	080013cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, ip}
 80014b8:	080013cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, ip}
 80014bc:	080013cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, ip}
 80014c0:	080013cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, ip}
 80014c4:	0800169f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, r9, sl, ip}
 80014c8:	080013cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, ip}
 80014cc:	080013cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, ip}
 80014d0:	080016c7 	stmdaeq	r0, {r0, r1, r2, r6, r7, r9, sl, ip}
 80014d4:	080013cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, ip}
 80014d8:	0800173d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, sl, ip}
 80014dc:	080013cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, ip}
 80014e0:	080013cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, ip}
 80014e4:	08001765 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, sl, ip}
 80014e8:	2101      	movs	r1, #1
 80014ea:	fb05 3202 	mla	r2, r5, r2, r3
 80014ee:	e79a      	b.n	8001426 <_vprintf+0x82>
 80014f0:	4625      	mov	r5, r4
 80014f2:	a803      	add	r0, sp, #12
 80014f4:	f855 1b04 	ldr.w	r1, [r5], #4
 80014f8:	f7ff fe76 	bl	80011e8 <_xputch>
 80014fc:	462c      	mov	r4, r5
 80014fe:	3601      	adds	r6, #1
 8001500:	e768      	b.n	80013d4 <_vprintf+0x30>
 8001502:	9903      	ldr	r1, [sp, #12]
 8001504:	074d      	lsls	r5, r1, #29
 8001506:	bf51      	iteee	pl
 8001508:	4625      	movpl	r5, r4
 800150a:	3407      	addmi	r4, #7
 800150c:	f024 0407 	bicmi.w	r4, r4, #7
 8001510:	4625      	movmi	r5, r4
 8001512:	bf55      	itete	pl
 8001514:	f855 2b04 	ldrpl.w	r2, [r5], #4
 8001518:	6863      	ldrmi	r3, [r4, #4]
 800151a:	17d3      	asrpl	r3, r2, #31
 800151c:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8001520:	2b00      	cmp	r3, #0
 8001522:	da05      	bge.n	8001530 <_vprintf+0x18c>
 8001524:	f041 0108 	orr.w	r1, r1, #8
 8001528:	4252      	negs	r2, r2
 800152a:	9103      	str	r1, [sp, #12]
 800152c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8001530:	a803      	add	r0, sp, #12
 8001532:	f7ff fe6f 	bl	8001214 <_format_int>
 8001536:	e7e1      	b.n	80014fc <_vprintf+0x158>
 8001538:	3407      	adds	r4, #7
 800153a:	f024 0507 	bic.w	r5, r4, #7
 800153e:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 8001542:	f7fe feb9 	bl	80002b8 <__aeabi_d2f>
 8001546:	9b03      	ldr	r3, [sp, #12]
 8001548:	4641      	mov	r1, r8
 800154a:	07dc      	lsls	r4, r3, #31
 800154c:	bf54      	ite	pl
 800154e:	f04f 0a06 	movpl.w	sl, #6
 8001552:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 8001556:	4681      	mov	r9, r0
 8001558:	f7ff f85a 	bl	8000610 <__aeabi_fcmplt>
 800155c:	2800      	cmp	r0, #0
 800155e:	d063      	beq.n	8001628 <_vprintf+0x284>
 8001560:	232d      	movs	r3, #45	; 0x2d
 8001562:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 8001566:	f88d 3020 	strb.w	r3, [sp, #32]
 800156a:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 800156e:	4648      	mov	r0, r9
 8001570:	f7ff f876 	bl	8000660 <__aeabi_f2iz>
 8001574:	4659      	mov	r1, fp
 8001576:	2200      	movs	r2, #0
 8001578:	4604      	mov	r4, r0
 800157a:	f7ff fdfb 	bl	8001174 <_itostr>
 800157e:	eb0b 0200 	add.w	r2, fp, r0
 8001582:	e9cd 2000 	strd	r2, r0, [sp]
 8001586:	4620      	mov	r0, r4
 8001588:	f7fe ffa0 	bl	80004cc <__aeabi_i2f>
 800158c:	4601      	mov	r1, r0
 800158e:	4648      	mov	r0, r9
 8001590:	f7fe fee6 	bl	8000360 <__aeabi_fsub>
 8001594:	222e      	movs	r2, #46	; 0x2e
 8001596:	4601      	mov	r1, r0
 8001598:	200a      	movs	r0, #10
 800159a:	9b00      	ldr	r3, [sp, #0]
 800159c:	f10a 0901 	add.w	r9, sl, #1
 80015a0:	1c5c      	adds	r4, r3, #1
 80015a2:	9b01      	ldr	r3, [sp, #4]
 80015a4:	f80b 2003 	strb.w	r2, [fp, r3]
 80015a8:	4603      	mov	r3, r0
 80015aa:	f1ba 0f00 	cmp.w	sl, #0
 80015ae:	dc3d      	bgt.n	800162c <_vprintf+0x288>
 80015b0:	9100      	str	r1, [sp, #0]
 80015b2:	f7fe ff8b 	bl	80004cc <__aeabi_i2f>
 80015b6:	9900      	ldr	r1, [sp, #0]
 80015b8:	f7fe fdca 	bl	8000150 <__aeabi_fmul>
 80015bc:	f7ff f850 	bl	8000660 <__aeabi_f2iz>
 80015c0:	464a      	mov	r2, r9
 80015c2:	4621      	mov	r1, r4
 80015c4:	f7ff fdd6 	bl	8001174 <_itostr>
 80015c8:	4404      	add	r4, r0
 80015ca:	1be0      	subs	r0, r4, r7
 80015cc:	1e44      	subs	r4, r0, #1
 80015ce:	5d3b      	ldrb	r3, [r7, r4]
 80015d0:	193a      	adds	r2, r7, r4
 80015d2:	2b34      	cmp	r3, #52	; 0x34
 80015d4:	d910      	bls.n	80015f8 <_vprintf+0x254>
 80015d6:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 80015da:	1e53      	subs	r3, r2, #1
 80015dc:	292e      	cmp	r1, #46	; 0x2e
 80015de:	d02c      	beq.n	800163a <_vprintf+0x296>
 80015e0:	469c      	mov	ip, r3
 80015e2:	f04f 0e30 	mov.w	lr, #48	; 0x30
 80015e6:	4663      	mov	r3, ip
 80015e8:	f81c 1901 	ldrb.w	r1, [ip], #-1
 80015ec:	2939      	cmp	r1, #57	; 0x39
 80015ee:	d021      	beq.n	8001634 <_vprintf+0x290>
 80015f0:	292e      	cmp	r1, #46	; 0x2e
 80015f2:	d022      	beq.n	800163a <_vprintf+0x296>
 80015f4:	3101      	adds	r1, #1
 80015f6:	7019      	strb	r1, [r3, #0]
 80015f8:	f104 0360 	add.w	r3, r4, #96	; 0x60
 80015fc:	446b      	add	r3, sp
 80015fe:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8001602:	2b2e      	cmp	r3, #46	; 0x2e
 8001604:	bf08      	it	eq
 8001606:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800160a:	46a1      	mov	r9, r4
 800160c:	9b05      	ldr	r3, [sp, #20]
 800160e:	4599      	cmp	r9, r3
 8001610:	db3e      	blt.n	8001690 <_vprintf+0x2ec>
 8001612:	46b9      	mov	r9, r7
 8001614:	2c00      	cmp	r4, #0
 8001616:	f77f af71 	ble.w	80014fc <_vprintf+0x158>
 800161a:	f819 1b01 	ldrb.w	r1, [r9], #1
 800161e:	a803      	add	r0, sp, #12
 8001620:	f7ff fde2 	bl	80011e8 <_xputch>
 8001624:	3c01      	subs	r4, #1
 8001626:	e7f5      	b.n	8001614 <_vprintf+0x270>
 8001628:	46bb      	mov	fp, r7
 800162a:	e7a0      	b.n	800156e <_vprintf+0x1ca>
 800162c:	4358      	muls	r0, r3
 800162e:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8001632:	e7ba      	b.n	80015aa <_vprintf+0x206>
 8001634:	f88c e001 	strb.w	lr, [ip, #1]
 8001638:	e7d5      	b.n	80015e6 <_vprintf+0x242>
 800163a:	f04f 0c30 	mov.w	ip, #48	; 0x30
 800163e:	3b01      	subs	r3, #1
 8001640:	7819      	ldrb	r1, [r3, #0]
 8001642:	2939      	cmp	r1, #57	; 0x39
 8001644:	d112      	bne.n	800166c <_vprintf+0x2c8>
 8001646:	42bb      	cmp	r3, r7
 8001648:	d20d      	bcs.n	8001666 <_vprintf+0x2c2>
 800164a:	1c5c      	adds	r4, r3, #1
 800164c:	1c99      	adds	r1, r3, #2
 800164e:	428c      	cmp	r4, r1
 8001650:	eba2 0203 	sub.w	r2, r2, r3
 8001654:	d913      	bls.n	800167e <_vprintf+0x2da>
 8001656:	4619      	mov	r1, r3
 8001658:	441a      	add	r2, r3
 800165a:	428a      	cmp	r2, r1
 800165c:	d10b      	bne.n	8001676 <_vprintf+0x2d2>
 800165e:	2231      	movs	r2, #49	; 0x31
 8001660:	4604      	mov	r4, r0
 8001662:	705a      	strb	r2, [r3, #1]
 8001664:	e7c8      	b.n	80015f8 <_vprintf+0x254>
 8001666:	f803 c901 	strb.w	ip, [r3], #-1
 800166a:	e7e9      	b.n	8001640 <_vprintf+0x29c>
 800166c:	42bb      	cmp	r3, r7
 800166e:	d3ec      	bcc.n	800164a <_vprintf+0x2a6>
 8001670:	292d      	cmp	r1, #45	; 0x2d
 8001672:	d0ea      	beq.n	800164a <_vprintf+0x2a6>
 8001674:	e7be      	b.n	80015f4 <_vprintf+0x250>
 8001676:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800167a:	704c      	strb	r4, [r1, #1]
 800167c:	e7ed      	b.n	800165a <_vprintf+0x2b6>
 800167e:	4414      	add	r4, r2
 8001680:	440a      	add	r2, r1
 8001682:	428a      	cmp	r2, r1
 8001684:	d0eb      	beq.n	800165e <_vprintf+0x2ba>
 8001686:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 800168a:	f802 cd01 	strb.w	ip, [r2, #-1]!
 800168e:	e7f8      	b.n	8001682 <_vprintf+0x2de>
 8001690:	2120      	movs	r1, #32
 8001692:	a803      	add	r0, sp, #12
 8001694:	f7ff fda8 	bl	80011e8 <_xputch>
 8001698:	f109 0901 	add.w	r9, r9, #1
 800169c:	e7b6      	b.n	800160c <_vprintf+0x268>
 800169e:	2308      	movs	r3, #8
 80016a0:	4625      	mov	r5, r4
 80016a2:	9305      	str	r3, [sp, #20]
 80016a4:	2320      	movs	r3, #32
 80016a6:	2130      	movs	r1, #48	; 0x30
 80016a8:	f855 4b04 	ldr.w	r4, [r5], #4
 80016ac:	a803      	add	r0, sp, #12
 80016ae:	9303      	str	r3, [sp, #12]
 80016b0:	f7ff fd9a 	bl	80011e8 <_xputch>
 80016b4:	2178      	movs	r1, #120	; 0x78
 80016b6:	a803      	add	r0, sp, #12
 80016b8:	f7ff fd96 	bl	80011e8 <_xputch>
 80016bc:	4621      	mov	r1, r4
 80016be:	a803      	add	r0, sp, #12
 80016c0:	f7ff fe12 	bl	80012e8 <_format_hex>
 80016c4:	e71a      	b.n	80014fc <_vprintf+0x158>
 80016c6:	4625      	mov	r5, r4
 80016c8:	2400      	movs	r4, #0
 80016ca:	f855 9b04 	ldr.w	r9, [r5], #4
 80016ce:	f819 3004 	ldrb.w	r3, [r9, r4]
 80016d2:	b993      	cbnz	r3, 80016fa <_vprintf+0x356>
 80016d4:	9b03      	ldr	r3, [sp, #12]
 80016d6:	07d9      	lsls	r1, r3, #31
 80016d8:	d503      	bpl.n	80016e2 <_vprintf+0x33e>
 80016da:	9b04      	ldr	r3, [sp, #16]
 80016dc:	429c      	cmp	r4, r3
 80016de:	bfa8      	it	ge
 80016e0:	461c      	movge	r4, r3
 80016e2:	9b03      	ldr	r3, [sp, #12]
 80016e4:	f104 0a01 	add.w	sl, r4, #1
 80016e8:	065a      	lsls	r2, r3, #25
 80016ea:	d403      	bmi.n	80016f4 <_vprintf+0x350>
 80016ec:	9b05      	ldr	r3, [sp, #20]
 80016ee:	429c      	cmp	r4, r3
 80016f0:	db05      	blt.n	80016fe <_vprintf+0x35a>
 80016f2:	4654      	mov	r4, sl
 80016f4:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80016f8:	e00d      	b.n	8001716 <_vprintf+0x372>
 80016fa:	3401      	adds	r4, #1
 80016fc:	e7e7      	b.n	80016ce <_vprintf+0x32a>
 80016fe:	2120      	movs	r1, #32
 8001700:	a803      	add	r0, sp, #12
 8001702:	f7ff fd71 	bl	80011e8 <_xputch>
 8001706:	4654      	mov	r4, sl
 8001708:	e7eb      	b.n	80016e2 <_vprintf+0x33e>
 800170a:	a803      	add	r0, sp, #12
 800170c:	f7ff fd6c 	bl	80011e8 <_xputch>
 8001710:	9b04      	ldr	r3, [sp, #16]
 8001712:	3b01      	subs	r3, #1
 8001714:	9304      	str	r3, [sp, #16]
 8001716:	9b03      	ldr	r3, [sp, #12]
 8001718:	07db      	lsls	r3, r3, #31
 800171a:	d501      	bpl.n	8001720 <_vprintf+0x37c>
 800171c:	9b04      	ldr	r3, [sp, #16]
 800171e:	b11b      	cbz	r3, 8001728 <_vprintf+0x384>
 8001720:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8001724:	2900      	cmp	r1, #0
 8001726:	d1f0      	bne.n	800170a <_vprintf+0x366>
 8001728:	9b05      	ldr	r3, [sp, #20]
 800172a:	429c      	cmp	r4, r3
 800172c:	f6bf aee6 	bge.w	80014fc <_vprintf+0x158>
 8001730:	2120      	movs	r1, #32
 8001732:	a803      	add	r0, sp, #12
 8001734:	f7ff fd58 	bl	80011e8 <_xputch>
 8001738:	3401      	adds	r4, #1
 800173a:	e7f5      	b.n	8001728 <_vprintf+0x384>
 800173c:	9b03      	ldr	r3, [sp, #12]
 800173e:	f013 0304 	ands.w	r3, r3, #4
 8001742:	bf1d      	ittte	ne
 8001744:	3407      	addne	r4, #7
 8001746:	f024 0407 	bicne.w	r4, r4, #7
 800174a:	4625      	movne	r5, r4
 800174c:	4625      	moveq	r5, r4
 800174e:	bf1a      	itte	ne
 8001750:	f855 2b08 	ldrne.w	r2, [r5], #8
 8001754:	6863      	ldrne	r3, [r4, #4]
 8001756:	f855 2b04 	ldreq.w	r2, [r5], #4
 800175a:	e6e9      	b.n	8001530 <_vprintf+0x18c>
 800175c:	9b03      	ldr	r3, [sp, #12]
 800175e:	f043 0302 	orr.w	r3, r3, #2
 8001762:	9303      	str	r3, [sp, #12]
 8001764:	4625      	mov	r5, r4
 8001766:	f855 1b04 	ldr.w	r1, [r5], #4
 800176a:	e7a8      	b.n	80016be <_vprintf+0x31a>

0800176c <printf>:
 800176c:	b40f      	push	{r0, r1, r2, r3}
 800176e:	b507      	push	{r0, r1, r2, lr}
 8001770:	aa04      	add	r2, sp, #16
 8001772:	f852 1b04 	ldr.w	r1, [r2], #4
 8001776:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800177a:	9201      	str	r2, [sp, #4]
 800177c:	f7ff fe12 	bl	80013a4 <_vprintf>
 8001780:	b003      	add	sp, #12
 8001782:	f85d eb04 	ldr.w	lr, [sp], #4
 8001786:	b004      	add	sp, #16
 8001788:	4770      	bx	lr
	...

0800178c <__udivmoddi4>:
 800178c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001790:	9e08      	ldr	r6, [sp, #32]
 8001792:	460d      	mov	r5, r1
 8001794:	4604      	mov	r4, r0
 8001796:	468e      	mov	lr, r1
 8001798:	2b00      	cmp	r3, #0
 800179a:	d14c      	bne.n	8001836 <__udivmoddi4+0xaa>
 800179c:	428a      	cmp	r2, r1
 800179e:	4694      	mov	ip, r2
 80017a0:	d967      	bls.n	8001872 <__udivmoddi4+0xe6>
 80017a2:	fab2 f382 	clz	r3, r2
 80017a6:	b153      	cbz	r3, 80017be <__udivmoddi4+0x32>
 80017a8:	fa02 fc03 	lsl.w	ip, r2, r3
 80017ac:	f1c3 0220 	rsb	r2, r3, #32
 80017b0:	fa01 fe03 	lsl.w	lr, r1, r3
 80017b4:	fa20 f202 	lsr.w	r2, r0, r2
 80017b8:	ea42 0e0e 	orr.w	lr, r2, lr
 80017bc:	409c      	lsls	r4, r3
 80017be:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80017c2:	fbbe f1f7 	udiv	r1, lr, r7
 80017c6:	fa1f f58c 	uxth.w	r5, ip
 80017ca:	fb07 ee11 	mls	lr, r7, r1, lr
 80017ce:	fb01 f005 	mul.w	r0, r1, r5
 80017d2:	0c22      	lsrs	r2, r4, #16
 80017d4:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 80017d8:	4290      	cmp	r0, r2
 80017da:	d90a      	bls.n	80017f2 <__udivmoddi4+0x66>
 80017dc:	eb1c 0202 	adds.w	r2, ip, r2
 80017e0:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 80017e4:	f080 8119 	bcs.w	8001a1a <__udivmoddi4+0x28e>
 80017e8:	4290      	cmp	r0, r2
 80017ea:	f240 8116 	bls.w	8001a1a <__udivmoddi4+0x28e>
 80017ee:	3902      	subs	r1, #2
 80017f0:	4462      	add	r2, ip
 80017f2:	1a12      	subs	r2, r2, r0
 80017f4:	fbb2 f0f7 	udiv	r0, r2, r7
 80017f8:	fb07 2210 	mls	r2, r7, r0, r2
 80017fc:	fb00 f505 	mul.w	r5, r0, r5
 8001800:	b2a4      	uxth	r4, r4
 8001802:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8001806:	42a5      	cmp	r5, r4
 8001808:	d90a      	bls.n	8001820 <__udivmoddi4+0x94>
 800180a:	eb1c 0404 	adds.w	r4, ip, r4
 800180e:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8001812:	f080 8104 	bcs.w	8001a1e <__udivmoddi4+0x292>
 8001816:	42a5      	cmp	r5, r4
 8001818:	f240 8101 	bls.w	8001a1e <__udivmoddi4+0x292>
 800181c:	4464      	add	r4, ip
 800181e:	3802      	subs	r0, #2
 8001820:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8001824:	2100      	movs	r1, #0
 8001826:	1b64      	subs	r4, r4, r5
 8001828:	b11e      	cbz	r6, 8001832 <__udivmoddi4+0xa6>
 800182a:	40dc      	lsrs	r4, r3
 800182c:	2300      	movs	r3, #0
 800182e:	e9c6 4300 	strd	r4, r3, [r6]
 8001832:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001836:	428b      	cmp	r3, r1
 8001838:	d908      	bls.n	800184c <__udivmoddi4+0xc0>
 800183a:	2e00      	cmp	r6, #0
 800183c:	f000 80ea 	beq.w	8001a14 <__udivmoddi4+0x288>
 8001840:	2100      	movs	r1, #0
 8001842:	e9c6 0500 	strd	r0, r5, [r6]
 8001846:	4608      	mov	r0, r1
 8001848:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800184c:	fab3 f183 	clz	r1, r3
 8001850:	2900      	cmp	r1, #0
 8001852:	d148      	bne.n	80018e6 <__udivmoddi4+0x15a>
 8001854:	42ab      	cmp	r3, r5
 8001856:	d302      	bcc.n	800185e <__udivmoddi4+0xd2>
 8001858:	4282      	cmp	r2, r0
 800185a:	f200 80f8 	bhi.w	8001a4e <__udivmoddi4+0x2c2>
 800185e:	1a84      	subs	r4, r0, r2
 8001860:	eb65 0203 	sbc.w	r2, r5, r3
 8001864:	2001      	movs	r0, #1
 8001866:	4696      	mov	lr, r2
 8001868:	2e00      	cmp	r6, #0
 800186a:	d0e2      	beq.n	8001832 <__udivmoddi4+0xa6>
 800186c:	e9c6 4e00 	strd	r4, lr, [r6]
 8001870:	e7df      	b.n	8001832 <__udivmoddi4+0xa6>
 8001872:	b902      	cbnz	r2, 8001876 <__udivmoddi4+0xea>
 8001874:	deff      	udf	#255	; 0xff
 8001876:	fab2 f382 	clz	r3, r2
 800187a:	2b00      	cmp	r3, #0
 800187c:	f040 808e 	bne.w	800199c <__udivmoddi4+0x210>
 8001880:	1a88      	subs	r0, r1, r2
 8001882:	2101      	movs	r1, #1
 8001884:	0c17      	lsrs	r7, r2, #16
 8001886:	fa1f fe82 	uxth.w	lr, r2
 800188a:	fbb0 f5f7 	udiv	r5, r0, r7
 800188e:	fb07 0015 	mls	r0, r7, r5, r0
 8001892:	0c22      	lsrs	r2, r4, #16
 8001894:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8001898:	fb0e f005 	mul.w	r0, lr, r5
 800189c:	4290      	cmp	r0, r2
 800189e:	d908      	bls.n	80018b2 <__udivmoddi4+0x126>
 80018a0:	eb1c 0202 	adds.w	r2, ip, r2
 80018a4:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80018a8:	d202      	bcs.n	80018b0 <__udivmoddi4+0x124>
 80018aa:	4290      	cmp	r0, r2
 80018ac:	f200 80cc 	bhi.w	8001a48 <__udivmoddi4+0x2bc>
 80018b0:	4645      	mov	r5, r8
 80018b2:	1a12      	subs	r2, r2, r0
 80018b4:	fbb2 f0f7 	udiv	r0, r2, r7
 80018b8:	fb07 2210 	mls	r2, r7, r0, r2
 80018bc:	fb0e fe00 	mul.w	lr, lr, r0
 80018c0:	b2a4      	uxth	r4, r4
 80018c2:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80018c6:	45a6      	cmp	lr, r4
 80018c8:	d908      	bls.n	80018dc <__udivmoddi4+0x150>
 80018ca:	eb1c 0404 	adds.w	r4, ip, r4
 80018ce:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80018d2:	d202      	bcs.n	80018da <__udivmoddi4+0x14e>
 80018d4:	45a6      	cmp	lr, r4
 80018d6:	f200 80b4 	bhi.w	8001a42 <__udivmoddi4+0x2b6>
 80018da:	4610      	mov	r0, r2
 80018dc:	eba4 040e 	sub.w	r4, r4, lr
 80018e0:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80018e4:	e7a0      	b.n	8001828 <__udivmoddi4+0x9c>
 80018e6:	f1c1 0720 	rsb	r7, r1, #32
 80018ea:	408b      	lsls	r3, r1
 80018ec:	fa22 fc07 	lsr.w	ip, r2, r7
 80018f0:	ea4c 0c03 	orr.w	ip, ip, r3
 80018f4:	fa25 fa07 	lsr.w	sl, r5, r7
 80018f8:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80018fc:	fbba f8f9 	udiv	r8, sl, r9
 8001900:	408d      	lsls	r5, r1
 8001902:	fa20 f307 	lsr.w	r3, r0, r7
 8001906:	fb09 aa18 	mls	sl, r9, r8, sl
 800190a:	fa1f fe8c 	uxth.w	lr, ip
 800190e:	432b      	orrs	r3, r5
 8001910:	fa00 f501 	lsl.w	r5, r0, r1
 8001914:	fb08 f00e 	mul.w	r0, r8, lr
 8001918:	0c1c      	lsrs	r4, r3, #16
 800191a:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 800191e:	42a0      	cmp	r0, r4
 8001920:	fa02 f201 	lsl.w	r2, r2, r1
 8001924:	d90b      	bls.n	800193e <__udivmoddi4+0x1b2>
 8001926:	eb1c 0404 	adds.w	r4, ip, r4
 800192a:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 800192e:	f080 8086 	bcs.w	8001a3e <__udivmoddi4+0x2b2>
 8001932:	42a0      	cmp	r0, r4
 8001934:	f240 8083 	bls.w	8001a3e <__udivmoddi4+0x2b2>
 8001938:	f1a8 0802 	sub.w	r8, r8, #2
 800193c:	4464      	add	r4, ip
 800193e:	1a24      	subs	r4, r4, r0
 8001940:	b298      	uxth	r0, r3
 8001942:	fbb4 f3f9 	udiv	r3, r4, r9
 8001946:	fb09 4413 	mls	r4, r9, r3, r4
 800194a:	fb03 fe0e 	mul.w	lr, r3, lr
 800194e:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 8001952:	45a6      	cmp	lr, r4
 8001954:	d908      	bls.n	8001968 <__udivmoddi4+0x1dc>
 8001956:	eb1c 0404 	adds.w	r4, ip, r4
 800195a:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 800195e:	d26a      	bcs.n	8001a36 <__udivmoddi4+0x2aa>
 8001960:	45a6      	cmp	lr, r4
 8001962:	d968      	bls.n	8001a36 <__udivmoddi4+0x2aa>
 8001964:	3b02      	subs	r3, #2
 8001966:	4464      	add	r4, ip
 8001968:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 800196c:	fba0 9302 	umull	r9, r3, r0, r2
 8001970:	eba4 040e 	sub.w	r4, r4, lr
 8001974:	429c      	cmp	r4, r3
 8001976:	46c8      	mov	r8, r9
 8001978:	469e      	mov	lr, r3
 800197a:	d354      	bcc.n	8001a26 <__udivmoddi4+0x29a>
 800197c:	d051      	beq.n	8001a22 <__udivmoddi4+0x296>
 800197e:	2e00      	cmp	r6, #0
 8001980:	d067      	beq.n	8001a52 <__udivmoddi4+0x2c6>
 8001982:	ebb5 0308 	subs.w	r3, r5, r8
 8001986:	eb64 040e 	sbc.w	r4, r4, lr
 800198a:	40cb      	lsrs	r3, r1
 800198c:	fa04 f707 	lsl.w	r7, r4, r7
 8001990:	431f      	orrs	r7, r3
 8001992:	40cc      	lsrs	r4, r1
 8001994:	e9c6 7400 	strd	r7, r4, [r6]
 8001998:	2100      	movs	r1, #0
 800199a:	e74a      	b.n	8001832 <__udivmoddi4+0xa6>
 800199c:	fa02 fc03 	lsl.w	ip, r2, r3
 80019a0:	f1c3 0020 	rsb	r0, r3, #32
 80019a4:	40c1      	lsrs	r1, r0
 80019a6:	409d      	lsls	r5, r3
 80019a8:	fa24 f000 	lsr.w	r0, r4, r0
 80019ac:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80019b0:	4328      	orrs	r0, r5
 80019b2:	fbb1 f5f7 	udiv	r5, r1, r7
 80019b6:	fb07 1115 	mls	r1, r7, r5, r1
 80019ba:	fa1f fe8c 	uxth.w	lr, ip
 80019be:	0c02      	lsrs	r2, r0, #16
 80019c0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80019c4:	fb05 f10e 	mul.w	r1, r5, lr
 80019c8:	4291      	cmp	r1, r2
 80019ca:	fa04 f403 	lsl.w	r4, r4, r3
 80019ce:	d908      	bls.n	80019e2 <__udivmoddi4+0x256>
 80019d0:	eb1c 0202 	adds.w	r2, ip, r2
 80019d4:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80019d8:	d22f      	bcs.n	8001a3a <__udivmoddi4+0x2ae>
 80019da:	4291      	cmp	r1, r2
 80019dc:	d92d      	bls.n	8001a3a <__udivmoddi4+0x2ae>
 80019de:	3d02      	subs	r5, #2
 80019e0:	4462      	add	r2, ip
 80019e2:	1a52      	subs	r2, r2, r1
 80019e4:	fbb2 f1f7 	udiv	r1, r2, r7
 80019e8:	fb07 2211 	mls	r2, r7, r1, r2
 80019ec:	b280      	uxth	r0, r0
 80019ee:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80019f2:	fb01 f20e 	mul.w	r2, r1, lr
 80019f6:	4282      	cmp	r2, r0
 80019f8:	d908      	bls.n	8001a0c <__udivmoddi4+0x280>
 80019fa:	eb1c 0000 	adds.w	r0, ip, r0
 80019fe:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8001a02:	d216      	bcs.n	8001a32 <__udivmoddi4+0x2a6>
 8001a04:	4282      	cmp	r2, r0
 8001a06:	d914      	bls.n	8001a32 <__udivmoddi4+0x2a6>
 8001a08:	3902      	subs	r1, #2
 8001a0a:	4460      	add	r0, ip
 8001a0c:	1a80      	subs	r0, r0, r2
 8001a0e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8001a12:	e73a      	b.n	800188a <__udivmoddi4+0xfe>
 8001a14:	4631      	mov	r1, r6
 8001a16:	4630      	mov	r0, r6
 8001a18:	e70b      	b.n	8001832 <__udivmoddi4+0xa6>
 8001a1a:	4671      	mov	r1, lr
 8001a1c:	e6e9      	b.n	80017f2 <__udivmoddi4+0x66>
 8001a1e:	4610      	mov	r0, r2
 8001a20:	e6fe      	b.n	8001820 <__udivmoddi4+0x94>
 8001a22:	454d      	cmp	r5, r9
 8001a24:	d2ab      	bcs.n	800197e <__udivmoddi4+0x1f2>
 8001a26:	ebb9 0802 	subs.w	r8, r9, r2
 8001a2a:	eb63 0e0c 	sbc.w	lr, r3, ip
 8001a2e:	3801      	subs	r0, #1
 8001a30:	e7a5      	b.n	800197e <__udivmoddi4+0x1f2>
 8001a32:	4641      	mov	r1, r8
 8001a34:	e7ea      	b.n	8001a0c <__udivmoddi4+0x280>
 8001a36:	4603      	mov	r3, r0
 8001a38:	e796      	b.n	8001968 <__udivmoddi4+0x1dc>
 8001a3a:	4645      	mov	r5, r8
 8001a3c:	e7d1      	b.n	80019e2 <__udivmoddi4+0x256>
 8001a3e:	46d0      	mov	r8, sl
 8001a40:	e77d      	b.n	800193e <__udivmoddi4+0x1b2>
 8001a42:	4464      	add	r4, ip
 8001a44:	3802      	subs	r0, #2
 8001a46:	e749      	b.n	80018dc <__udivmoddi4+0x150>
 8001a48:	3d02      	subs	r5, #2
 8001a4a:	4462      	add	r2, ip
 8001a4c:	e731      	b.n	80018b2 <__udivmoddi4+0x126>
 8001a4e:	4608      	mov	r0, r1
 8001a50:	e70a      	b.n	8001868 <__udivmoddi4+0xdc>
 8001a52:	4631      	mov	r1, r6
 8001a54:	e6ed      	b.n	8001832 <__udivmoddi4+0xa6>
 8001a56:	bf00      	nop

08001a58 <Widget::Widget()>:
 8001a58:	b510      	push	{r4, lr}
 8001a5a:	4604      	mov	r4, r0
 8001a5c:	f001 f92a 	bl	8002cb4 <Dmx::Dmx()>
 8001a60:	f104 001c 	add.w	r0, r4, #28
 8001a64:	f001 fc06 	bl	8003274 <RDMDevice::RDMDevice()>
 8001a68:	2300      	movs	r3, #0
 8001a6a:	e9c4 33bc 	strd	r3, r3, [r4, #752]	; 0x2f0
 8001a6e:	e9c4 33be 	strd	r3, r3, [r4, #760]	; 0x2f8
 8001a72:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8001a76:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 8001a7a:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
 8001a7e:	4b03      	ldr	r3, [pc, #12]	; (8001a8c <Widget::Widget()+0x34>)
 8001a80:	601c      	str	r4, [r3, #0]
 8001a82:	f001 fb13 	bl	80030ac <FT245RL_init>
 8001a86:	4620      	mov	r0, r4
 8001a88:	bd10      	pop	{r4, pc}
 8001a8a:	bf00      	nop
 8001a8c:	200000f4 	strdcs	r0, [r0], -r4

08001a90 <Widget::GetParamsReply()>:
 8001a90:	b513      	push	{r0, r1, r4, lr}
 8001a92:	4604      	mov	r4, r0
 8001a94:	4911      	ldr	r1, [pc, #68]	; (8001adc <Widget::GetParamsReply()+0x4c>)
 8001a96:	2007      	movs	r0, #7
 8001a98:	f000 fb8c 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001a9c:	2100      	movs	r1, #0
 8001a9e:	201c      	movs	r0, #28
 8001aa0:	f000 fb88 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001aa4:	4b0e      	ldr	r3, [pc, #56]	; (8001ae0 <Widget::GetParamsReply()+0x50>)
 8001aa6:	466a      	mov	r2, sp
 8001aa8:	781b      	ldrb	r3, [r3, #0]
 8001aaa:	2103      	movs	r1, #3
 8001aac:	f88d 3002 	strb.w	r3, [sp, #2]
 8001ab0:	4b0c      	ldr	r3, [pc, #48]	; (8001ae4 <Widget::GetParamsReply()+0x54>)
 8001ab2:	4620      	mov	r0, r4
 8001ab4:	781b      	ldrb	r3, [r3, #0]
 8001ab6:	f88d 3000 	strb.w	r3, [sp]
 8001aba:	4b0b      	ldr	r3, [pc, #44]	; (8001ae8 <Widget::GetParamsReply()+0x58>)
 8001abc:	781b      	ldrb	r3, [r3, #0]
 8001abe:	f88d 3001 	strb.w	r3, [sp, #1]
 8001ac2:	4b0a      	ldr	r3, [pc, #40]	; (8001aec <Widget::GetParamsReply()+0x5c>)
 8001ac4:	781b      	ldrb	r3, [r3, #0]
 8001ac6:	f88d 3003 	strb.w	r3, [sp, #3]
 8001aca:	4b09      	ldr	r3, [pc, #36]	; (8001af0 <Widget::GetParamsReply()+0x60>)
 8001acc:	781b      	ldrb	r3, [r3, #0]
 8001ace:	f88d 3004 	strb.w	r3, [sp, #4]
 8001ad2:	2305      	movs	r3, #5
 8001ad4:	f000 fd30 	bl	8002538 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>
 8001ad8:	b002      	add	sp, #8
 8001ada:	bd10      	pop	{r4, pc}
 8001adc:	0800587c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, ip, lr}
 8001ae0:	20000001 	andcs	r0, r0, r1
 8001ae4:	20000002 	andcs	r0, r0, r2
 8001ae8:	20000003 	andcs	r0, r0, r3
 8001aec:	20000000 	andcs	r0, r0, r0
 8001af0:	20000004 	andcs	r0, r0, r4

08001af4 <Widget::SetParams()>:
 8001af4:	b513      	push	{r0, r1, r4, lr}
 8001af6:	4604      	mov	r4, r0
 8001af8:	4912      	ldr	r1, [pc, #72]	; (8001b44 <Widget::SetParams()+0x50>)
 8001afa:	2007      	movs	r0, #7
 8001afc:	f000 fb5a 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001b00:	2100      	movs	r1, #0
 8001b02:	201c      	movs	r0, #28
 8001b04:	f000 fb56 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001b08:	2300      	movs	r3, #0
 8001b0a:	4620      	mov	r0, r4
 8001b0c:	4619      	mov	r1, r3
 8001b0e:	2201      	movs	r2, #1
 8001b10:	f001 f8a2 	bl	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001b14:	f894 309c 	ldrb.w	r3, [r4, #156]	; 0x9c
 8001b18:	f8b4 209a 	ldrh.w	r2, [r4, #154]	; 0x9a
 8001b1c:	4668      	mov	r0, sp
 8001b1e:	f8ad 2002 	strh.w	r2, [sp, #2]
 8001b22:	f88d 3004 	strb.w	r3, [sp, #4]
 8001b26:	f000 fd67 	bl	80025f8 <WidgetConfiguration::Store(TWidgetConfiguration const*)>
 8001b2a:	2301      	movs	r3, #1
 8001b2c:	2100      	movs	r1, #0
 8001b2e:	461a      	mov	r2, r3
 8001b30:	4620      	mov	r0, r4
 8001b32:	f001 f891 	bl	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001b36:	4b04      	ldr	r3, [pc, #16]	; (8001b48 <Widget::SetParams()+0x54>)
 8001b38:	681b      	ldr	r3, [r3, #0]
 8001b3a:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001b3e:	b002      	add	sp, #8
 8001b40:	bd10      	pop	{r4, pc}
 8001b42:	bf00      	nop
 8001b44:	08005894 	stmdaeq	r0, {r2, r4, r7, fp, ip, lr}
 8001b48:	2000181c 	andcs	r1, r0, ip, lsl r8

08001b4c <Widget::ReceivedDmxPacket()>:
 8001b4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001b4e:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001b52:	4604      	mov	r4, r0
 8001b54:	2b03      	cmp	r3, #3
 8001b56:	d042      	beq.n	8001bde <Widget::ReceivedDmxPacket()+0x92>
 8001b58:	f890 7304 	ldrb.w	r7, [r0, #772]	; 0x304
 8001b5c:	2f00      	cmp	r7, #0
 8001b5e:	d13e      	bne.n	8001bde <Widget::ReceivedDmxPacket()+0x92>
 8001b60:	6943      	ldr	r3, [r0, #20]
 8001b62:	2b01      	cmp	r3, #1
 8001b64:	d13b      	bne.n	8001bde <Widget::ReceivedDmxPacket()+0x92>
 8001b66:	f8d0 32f4 	ldr.w	r3, [r0, #756]	; 0x2f4
 8001b6a:	2b01      	cmp	r3, #1
 8001b6c:	d037      	beq.n	8001bde <Widget::ReceivedDmxPacket()+0x92>
 8001b6e:	4639      	mov	r1, r7
 8001b70:	f001 f9ea 	bl	8002f48 <Dmx::GetDmxAvailable(unsigned int)>
 8001b74:	4605      	mov	r5, r0
 8001b76:	b390      	cbz	r0, 8001bde <Widget::ReceivedDmxPacket()+0x92>
 8001b78:	4b19      	ldr	r3, [pc, #100]	; (8001be0 <Widget::ReceivedDmxPacket()+0x94>)
 8001b7a:	f8d4 12f8 	ldr.w	r1, [r4, #760]	; 0x2f8
 8001b7e:	681a      	ldr	r2, [r3, #0]
 8001b80:	f8d4 32fc 	ldr.w	r3, [r4, #764]	; 0x2fc
 8001b84:	1ad3      	subs	r3, r2, r3
 8001b86:	428b      	cmp	r3, r1
 8001b88:	d329      	bcc.n	8001bde <Widget::ReceivedDmxPacket()+0x92>
 8001b8a:	f8d4 3308 	ldr.w	r3, [r4, #776]	; 0x308
 8001b8e:	f8c4 22fc 	str.w	r2, [r4, #764]	; 0x2fc
 8001b92:	3301      	adds	r3, #1
 8001b94:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
 8001b98:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 8001b9c:	4911      	ldr	r1, [pc, #68]	; (8001be4 <Widget::ReceivedDmxPacket()+0x98>)
 8001b9e:	3601      	adds	r6, #1
 8001ba0:	2006      	movs	r0, #6
 8001ba2:	f000 fb07 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001ba6:	4632      	mov	r2, r6
 8001ba8:	2007      	movs	r0, #7
 8001baa:	490f      	ldr	r1, [pc, #60]	; (8001be8 <Widget::ReceivedDmxPacket()+0x9c>)
 8001bac:	f000 fb02 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001bb0:	4639      	mov	r1, r7
 8001bb2:	201c      	movs	r0, #28
 8001bb4:	f000 fafe 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001bb8:	1c72      	adds	r2, r6, #1
 8001bba:	2105      	movs	r1, #5
 8001bbc:	4620      	mov	r0, r4
 8001bbe:	b292      	uxth	r2, r2
 8001bc0:	f000 fc9a 	bl	80024f8 <Widget::SendHeader(unsigned char, unsigned int)>
 8001bc4:	4638      	mov	r0, r7
 8001bc6:	f001 fa52 	bl	800306e <usb_send_byte>
 8001bca:	4620      	mov	r0, r4
 8001bcc:	4629      	mov	r1, r5
 8001bce:	b2b2      	uxth	r2, r6
 8001bd0:	f000 fca4 	bl	800251c <Widget::SendData(unsigned char const*, unsigned int)>
 8001bd4:	4620      	mov	r0, r4
 8001bd6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8001bda:	f000 bcaa 	b.w	8002532 <Widget::SendFooter()>
 8001bde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001be0:	2000181c 	andcs	r1, r0, ip, lsl r8
 8001be4:	080058a6 	stmdaeq	r0, {r1, r2, r5, r7, fp, ip, lr}
 8001be8:	080058ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, fp, ip, lr}

08001bec <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>:
 8001bec:	b570      	push	{r4, r5, r6, lr}
 8001bee:	f8d0 5300 	ldr.w	r5, [r0, #768]	; 0x300
 8001bf2:	4604      	mov	r4, r0
 8001bf4:	460e      	mov	r6, r1
 8001bf6:	b9e5      	cbnz	r5, 8001c32 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x46>
 8001bf8:	2007      	movs	r0, #7
 8001bfa:	490e      	ldr	r1, [pc, #56]	; (8001c34 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x48>)
 8001bfc:	f000 fada 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001c00:	4629      	mov	r1, r5
 8001c02:	201c      	movs	r0, #28
 8001c04:	f000 fad6 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001c08:	462b      	mov	r3, r5
 8001c0a:	462a      	mov	r2, r5
 8001c0c:	4629      	mov	r1, r5
 8001c0e:	4620      	mov	r0, r4
 8001c10:	f001 f822 	bl	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001c14:	4633      	mov	r3, r6
 8001c16:	4629      	mov	r1, r5
 8001c18:	4620      	mov	r0, r4
 8001c1a:	f104 0298 	add.w	r2, r4, #152	; 0x98
 8001c1e:	f001 f96b 	bl	8002ef8 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)>
 8001c22:	462a      	mov	r2, r5
 8001c24:	4629      	mov	r1, r5
 8001c26:	4620      	mov	r0, r4
 8001c28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001c2c:	2301      	movs	r3, #1
 8001c2e:	f001 b813 	b.w	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001c32:	bd70      	pop	{r4, r5, r6, pc}
 8001c34:	080058d4 	stmdaeq	r0, {r2, r4, r6, r7, fp, ip, lr}

08001c38 <Widget::SendRdmPacketRequest(unsigned short)>:
 8001c38:	b570      	push	{r4, r5, r6, lr}
 8001c3a:	4604      	mov	r4, r0
 8001c3c:	460d      	mov	r5, r1
 8001c3e:	2007      	movs	r0, #7
 8001c40:	4910      	ldr	r1, [pc, #64]	; (8001c84 <Widget::SendRdmPacketRequest(unsigned short)+0x4c>)
 8001c42:	f000 fab7 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001c46:	2100      	movs	r1, #0
 8001c48:	201c      	movs	r0, #28
 8001c4a:	f000 fab3 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001c4e:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 8001c52:	f104 0698 	add.w	r6, r4, #152	; 0x98
 8001c56:	f1a3 0210 	sub.w	r2, r3, #16
 8001c5a:	4253      	negs	r3, r2
 8001c5c:	4153      	adcs	r3, r2
 8001c5e:	4631      	mov	r1, r6
 8001c60:	462a      	mov	r2, r5
 8001c62:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 8001c66:	2000      	movs	r0, #0
 8001c68:	f000 fd28 	bl	80026bc <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 8001c6c:	4b06      	ldr	r3, [pc, #24]	; (8001c88 <Widget::SendRdmPacketRequest(unsigned short)+0x50>)
 8001c6e:	4632      	mov	r2, r6
 8001c70:	681b      	ldr	r3, [r3, #0]
 8001c72:	4629      	mov	r1, r5
 8001c74:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8001c78:	2011      	movs	r0, #17
 8001c7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001c7e:	2301      	movs	r3, #1
 8001c80:	f000 bd12 	b.w	80026a8 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8001c84:	080058f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp, ip, lr}
 8001c88:	2000181c 	andcs	r1, r0, ip, lsl r8

08001c8c <Widget::ReceiveDmxOnChange()>:
 8001c8c:	b510      	push	{r4, lr}
 8001c8e:	4604      	mov	r4, r0
 8001c90:	4910      	ldr	r1, [pc, #64]	; (8001cd4 <Widget::ReceiveDmxOnChange()+0x48>)
 8001c92:	2007      	movs	r0, #7
 8001c94:	f000 fa8e 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001c98:	2100      	movs	r1, #0
 8001c9a:	201c      	movs	r0, #28
 8001c9c:	f000 fa8a 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001ca0:	f894 3098 	ldrb.w	r3, [r4, #152]	; 0x98
 8001ca4:	2201      	movs	r2, #1
 8001ca6:	f8c4 32f4 	str.w	r3, [r4, #756]	; 0x2f4
 8001caa:	2300      	movs	r3, #0
 8001cac:	4620      	mov	r0, r4
 8001cae:	4619      	mov	r1, r3
 8001cb0:	f000 ffd2 	bl	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001cb4:	2100      	movs	r1, #0
 8001cb6:	4620      	mov	r0, r4
 8001cb8:	f000 fec0 	bl	8002a3c <Dmx::ClearData(unsigned int)>
 8001cbc:	2301      	movs	r3, #1
 8001cbe:	2100      	movs	r1, #0
 8001cc0:	461a      	mov	r2, r3
 8001cc2:	4620      	mov	r0, r4
 8001cc4:	f000 ffc8 	bl	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001cc8:	4b03      	ldr	r3, [pc, #12]	; (8001cd8 <Widget::ReceiveDmxOnChange()+0x4c>)
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001cd0:	bd10      	pop	{r4, pc}
 8001cd2:	bf00      	nop
 8001cd4:	08005910 	stmdaeq	r0, {r4, r8, fp, ip, lr}
 8001cd8:	2000181c 	andcs	r1, r0, ip, lsl r8

08001cdc <Widget::ReceivedDmxChangeOfStatePacket()>:
 8001cdc:	f8d0 22f0 	ldr.w	r2, [r0, #752]	; 0x2f0
 8001ce0:	b510      	push	{r4, lr}
 8001ce2:	2a03      	cmp	r2, #3
 8001ce4:	d01a      	beq.n	8001d1c <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001ce6:	f890 4304 	ldrb.w	r4, [r0, #772]	; 0x304
 8001cea:	b9bc      	cbnz	r4, 8001d1c <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001cec:	6942      	ldr	r2, [r0, #20]
 8001cee:	2a01      	cmp	r2, #1
 8001cf0:	d114      	bne.n	8001d1c <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001cf2:	f8d0 32f4 	ldr.w	r3, [r0, #756]	; 0x2f4
 8001cf6:	b18b      	cbz	r3, 8001d1c <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001cf8:	4621      	mov	r1, r4
 8001cfa:	f001 f939 	bl	8002f70 <Dmx::GetDmxChanged(unsigned int)>
 8001cfe:	b168      	cbz	r0, 8001d1c <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001d00:	2007      	movs	r0, #7
 8001d02:	4907      	ldr	r1, [pc, #28]	; (8001d20 <Widget::ReceivedDmxChangeOfStatePacket()+0x44>)
 8001d04:	f000 fa56 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001d08:	4621      	mov	r1, r4
 8001d0a:	201c      	movs	r0, #28
 8001d0c:	f000 fa52 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001d10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d14:	2007      	movs	r0, #7
 8001d16:	4903      	ldr	r1, [pc, #12]	; (8001d24 <Widget::ReceivedDmxChangeOfStatePacket()+0x48>)
 8001d18:	f000 ba4c 	b.w	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001d1c:	bd10      	pop	{r4, pc}
 8001d1e:	bf00      	nop
 8001d20:	08005926 	stmdaeq	r0, {r1, r2, r5, r8, fp, ip, lr}
 8001d24:	0800593c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp, ip, lr}

08001d28 <Widget::GetSnReply()>:
 8001d28:	b510      	push	{r4, lr}
 8001d2a:	4910      	ldr	r1, [pc, #64]	; (8001d6c <Widget::GetSnReply()+0x44>)
 8001d2c:	4604      	mov	r4, r0
 8001d2e:	2007      	movs	r0, #7
 8001d30:	f000 fa40 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001d34:	2100      	movs	r1, #0
 8001d36:	201c      	movs	r0, #28
 8001d38:	f000 fa3c 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001d3c:	2300      	movs	r3, #0
 8001d3e:	2201      	movs	r2, #1
 8001d40:	4619      	mov	r1, r3
 8001d42:	4620      	mov	r0, r4
 8001d44:	f000 ff88 	bl	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001d48:	2304      	movs	r3, #4
 8001d4a:	210a      	movs	r1, #10
 8001d4c:	4620      	mov	r0, r4
 8001d4e:	f104 0223 	add.w	r2, r4, #35	; 0x23
 8001d52:	f000 fbf1 	bl	8002538 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>
 8001d56:	2301      	movs	r3, #1
 8001d58:	2100      	movs	r1, #0
 8001d5a:	461a      	mov	r2, r3
 8001d5c:	4620      	mov	r0, r4
 8001d5e:	f000 ff7b 	bl	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001d62:	4b03      	ldr	r3, [pc, #12]	; (8001d70 <Widget::GetSnReply()+0x48>)
 8001d64:	681b      	ldr	r3, [r3, #0]
 8001d66:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001d6a:	bd10      	pop	{r4, pc}
 8001d6c:	0800587c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, ip, lr}
 8001d70:	2000181c 	andcs	r1, r0, ip, lsl r8

08001d74 <Widget::SendRdmDiscoveryRequest(unsigned short)>:
 8001d74:	b570      	push	{r4, r5, r6, lr}
 8001d76:	4604      	mov	r4, r0
 8001d78:	460d      	mov	r5, r1
 8001d7a:	2007      	movs	r0, #7
 8001d7c:	490d      	ldr	r1, [pc, #52]	; (8001db4 <Widget::SendRdmDiscoveryRequest(unsigned short)+0x40>)
 8001d7e:	f000 fa19 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001d82:	f104 0698 	add.w	r6, r4, #152	; 0x98
 8001d86:	2100      	movs	r1, #0
 8001d88:	201c      	movs	r0, #28
 8001d8a:	f000 fa13 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001d8e:	462a      	mov	r2, r5
 8001d90:	4631      	mov	r1, r6
 8001d92:	2000      	movs	r0, #0
 8001d94:	f000 fc92 	bl	80026bc <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 8001d98:	2301      	movs	r3, #1
 8001d9a:	4a07      	ldr	r2, [pc, #28]	; (8001db8 <Widget::SendRdmDiscoveryRequest(unsigned short)+0x44>)
 8001d9c:	4629      	mov	r1, r5
 8001d9e:	6812      	ldr	r2, [r2, #0]
 8001da0:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 8001da4:	f8c4 2300 	str.w	r2, [r4, #768]	; 0x300
 8001da8:	2011      	movs	r0, #17
 8001daa:	4632      	mov	r2, r6
 8001dac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001db0:	f000 bc7a 	b.w	80026a8 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8001db4:	0800595a 	stmdaeq	r0, {r1, r3, r4, r6, r8, fp, ip, lr}
 8001db8:	2000181c 	andcs	r1, r0, ip, lsl r8

08001dbc <Widget::RdmTimeOutMessage()>:
 8001dbc:	b510      	push	{r4, lr}
 8001dbe:	4604      	mov	r4, r0
 8001dc0:	2200      	movs	r2, #0
 8001dc2:	2007      	movs	r0, #7
 8001dc4:	490a      	ldr	r1, [pc, #40]	; (8001df0 <Widget::RdmTimeOutMessage()+0x34>)
 8001dc6:	f000 f9f5 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001dca:	201c      	movs	r0, #28
 8001dcc:	4909      	ldr	r1, [pc, #36]	; (8001df4 <Widget::RdmTimeOutMessage()+0x38>)
 8001dce:	f000 f9f1 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001dd2:	2200      	movs	r2, #0
 8001dd4:	210c      	movs	r1, #12
 8001dd6:	4620      	mov	r0, r4
 8001dd8:	f000 fb8e 	bl	80024f8 <Widget::SendHeader(unsigned char, unsigned int)>
 8001ddc:	4620      	mov	r0, r4
 8001dde:	f000 fba8 	bl	8002532 <Widget::SendFooter()>
 8001de2:	2300      	movs	r3, #0
 8001de4:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 8001de8:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8001dec:	bd10      	pop	{r4, pc}
 8001dee:	bf00      	nop
 8001df0:	08005975 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, fp, ip, lr}
 8001df4:	08005991 	stmdaeq	r0, {r0, r4, r7, r8, fp, ip, lr}

08001df8 <Widget::ReceivedRdmPacket()>:
 8001df8:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001dfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e00:	f023 0302 	bic.w	r3, r3, #2
 8001e04:	2b01      	cmp	r3, #1
 8001e06:	4604      	mov	r4, r0
 8001e08:	d063      	beq.n	8001ed2 <Widget::ReceivedRdmPacket()+0xda>
 8001e0a:	f8d0 32f4 	ldr.w	r3, [r0, #756]	; 0x2f4
 8001e0e:	2b01      	cmp	r3, #1
 8001e10:	d05f      	beq.n	8001ed2 <Widget::ReceivedRdmPacket()+0xda>
 8001e12:	2000      	movs	r0, #0
 8001e14:	f000 fc4a 	bl	80026ac <Rdm::Receive(unsigned int)>
 8001e18:	4605      	mov	r5, r0
 8001e1a:	2800      	cmp	r0, #0
 8001e1c:	d059      	beq.n	8001ed2 <Widget::ReceivedRdmPacket()+0xda>
 8001e1e:	7803      	ldrb	r3, [r0, #0]
 8001e20:	2bcc      	cmp	r3, #204	; 0xcc
 8001e22:	d134      	bne.n	8001e8e <Widget::ReceivedRdmPacket()+0x96>
 8001e24:	7886      	ldrb	r6, [r0, #2]
 8001e26:	7d07      	ldrb	r7, [r0, #20]
 8001e28:	3602      	adds	r6, #2
 8001e2a:	b2f6      	uxtb	r6, r6
 8001e2c:	4632      	mov	r2, r6
 8001e2e:	2007      	movs	r0, #7
 8001e30:	4929      	ldr	r1, [pc, #164]	; (8001ed8 <Widget::ReceivedRdmPacket()+0xe0>)
 8001e32:	f000 f9bf 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001e36:	201c      	movs	r0, #28
 8001e38:	4928      	ldr	r1, [pc, #160]	; (8001edc <Widget::ReceivedRdmPacket()+0xe4>)
 8001e3a:	f000 f9bb 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001e3e:	2105      	movs	r1, #5
 8001e40:	1c72      	adds	r2, r6, #1
 8001e42:	4620      	mov	r0, r4
 8001e44:	f000 fb58 	bl	80024f8 <Widget::SendHeader(unsigned char, unsigned int)>
 8001e48:	2000      	movs	r0, #0
 8001e4a:	f001 f910 	bl	800306e <usb_send_byte>
 8001e4e:	4632      	mov	r2, r6
 8001e50:	4629      	mov	r1, r5
 8001e52:	4620      	mov	r0, r4
 8001e54:	f000 fb62 	bl	800251c <Widget::SendData(unsigned char const*, unsigned int)>
 8001e58:	4620      	mov	r0, r4
 8001e5a:	f000 fb6a 	bl	8002532 <Widget::SendFooter()>
 8001e5e:	2f11      	cmp	r7, #17
 8001e60:	7d6a      	ldrb	r2, [r5, #21]
 8001e62:	7dab      	ldrb	r3, [r5, #22]
 8001e64:	d10f      	bne.n	8001e86 <Widget::ReceivedRdmPacket()+0x8e>
 8001e66:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8001e6a:	b29b      	uxth	r3, r3
 8001e6c:	2b02      	cmp	r3, #2
 8001e6e:	d00a      	beq.n	8001e86 <Widget::ReceivedRdmPacket()+0x8e>
 8001e70:	4620      	mov	r0, r4
 8001e72:	f7ff ffa3 	bl	8001dbc <Widget::RdmTimeOutMessage()>
 8001e76:	462a      	mov	r2, r5
 8001e78:	4631      	mov	r1, r6
 8001e7a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001e7e:	2300      	movs	r3, #0
 8001e80:	2011      	movs	r0, #17
 8001e82:	f000 bc11 	b.w	80026a8 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8001e86:	2300      	movs	r3, #0
 8001e88:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8001e8c:	e7f3      	b.n	8001e76 <Widget::ReceivedRdmPacket()+0x7e>
 8001e8e:	2bfe      	cmp	r3, #254	; 0xfe
 8001e90:	d11d      	bne.n	8001ece <Widget::ReceivedRdmPacket()+0xd6>
 8001e92:	2218      	movs	r2, #24
 8001e94:	2007      	movs	r0, #7
 8001e96:	4910      	ldr	r1, [pc, #64]	; (8001ed8 <Widget::ReceivedRdmPacket()+0xe0>)
 8001e98:	f000 f98c 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001e9c:	201c      	movs	r0, #28
 8001e9e:	4910      	ldr	r1, [pc, #64]	; (8001ee0 <Widget::ReceivedRdmPacket()+0xe8>)
 8001ea0:	f000 f988 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001ea4:	2219      	movs	r2, #25
 8001ea6:	2105      	movs	r1, #5
 8001ea8:	4620      	mov	r0, r4
 8001eaa:	f000 fb25 	bl	80024f8 <Widget::SendHeader(unsigned char, unsigned int)>
 8001eae:	2000      	movs	r0, #0
 8001eb0:	f001 f8dd 	bl	800306e <usb_send_byte>
 8001eb4:	2218      	movs	r2, #24
 8001eb6:	4629      	mov	r1, r5
 8001eb8:	4620      	mov	r0, r4
 8001eba:	f000 fb2f 	bl	800251c <Widget::SendData(unsigned char const*, unsigned int)>
 8001ebe:	4620      	mov	r0, r4
 8001ec0:	f000 fb37 	bl	8002532 <Widget::SendFooter()>
 8001ec4:	4620      	mov	r0, r4
 8001ec6:	f7ff ff79 	bl	8001dbc <Widget::RdmTimeOutMessage()>
 8001eca:	2618      	movs	r6, #24
 8001ecc:	e7d3      	b.n	8001e76 <Widget::ReceivedRdmPacket()+0x7e>
 8001ece:	2600      	movs	r6, #0
 8001ed0:	e7d1      	b.n	8001e76 <Widget::ReceivedRdmPacket()+0x7e>
 8001ed2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001ed6:	bf00      	nop
 8001ed8:	08005975 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, fp, ip, lr}
 8001edc:	0800599d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, fp, ip, lr}
 8001ee0:	080059b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, fp, ip, lr}

08001ee4 <Widget::RdmTimeout()>:
 8001ee4:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001ee8:	b510      	push	{r4, lr}
 8001eea:	2b03      	cmp	r3, #3
 8001eec:	4604      	mov	r4, r0
 8001eee:	d00d      	beq.n	8001f0c <Widget::RdmTimeout()+0x28>
 8001ef0:	f8d0 2300 	ldr.w	r2, [r0, #768]	; 0x300
 8001ef4:	b152      	cbz	r2, 8001f0c <Widget::RdmTimeout()+0x28>
 8001ef6:	4b06      	ldr	r3, [pc, #24]	; (8001f10 <Widget::RdmTimeout()+0x2c>)
 8001ef8:	681b      	ldr	r3, [r3, #0]
 8001efa:	1a9b      	subs	r3, r3, r2
 8001efc:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001f00:	d304      	bcc.n	8001f0c <Widget::RdmTimeout()+0x28>
 8001f02:	f7ff ff5b 	bl	8001dbc <Widget::RdmTimeOutMessage()>
 8001f06:	2300      	movs	r3, #0
 8001f08:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8001f0c:	bd10      	pop	{r4, pc}
 8001f0e:	bf00      	nop
 8001f10:	2000181c 	andcs	r1, r0, ip, lsl r8

08001f14 <Widget::GetManufacturerReply()>:
 8001f14:	b538      	push	{r3, r4, r5, lr}
 8001f16:	4917      	ldr	r1, [pc, #92]	; (8001f74 <Widget::GetManufacturerReply()+0x60>)
 8001f18:	4604      	mov	r4, r0
 8001f1a:	2007      	movs	r0, #7
 8001f1c:	f000 f94a 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001f20:	2100      	movs	r1, #0
 8001f22:	201c      	movs	r0, #28
 8001f24:	f000 f946 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001f28:	2300      	movs	r3, #0
 8001f2a:	f894 5068 	ldrb.w	r5, [r4, #104]	; 0x68
 8001f2e:	4619      	mov	r1, r3
 8001f30:	2201      	movs	r2, #1
 8001f32:	4620      	mov	r0, r4
 8001f34:	f000 fe90 	bl	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001f38:	214d      	movs	r1, #77	; 0x4d
 8001f3a:	4620      	mov	r0, r4
 8001f3c:	1caa      	adds	r2, r5, #2
 8001f3e:	f000 fadb 	bl	80024f8 <Widget::SendHeader(unsigned char, unsigned int)>
 8001f42:	2202      	movs	r2, #2
 8001f44:	4620      	mov	r0, r4
 8001f46:	490c      	ldr	r1, [pc, #48]	; (8001f78 <Widget::GetManufacturerReply()+0x64>)
 8001f48:	f000 fae8 	bl	800251c <Widget::SendData(unsigned char const*, unsigned int)>
 8001f4c:	462a      	mov	r2, r5
 8001f4e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8001f52:	4620      	mov	r0, r4
 8001f54:	f000 fae2 	bl	800251c <Widget::SendData(unsigned char const*, unsigned int)>
 8001f58:	4620      	mov	r0, r4
 8001f5a:	f000 faea 	bl	8002532 <Widget::SendFooter()>
 8001f5e:	2301      	movs	r3, #1
 8001f60:	2100      	movs	r1, #0
 8001f62:	461a      	mov	r2, r3
 8001f64:	4620      	mov	r0, r4
 8001f66:	f000 fe77 	bl	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001f6a:	4b04      	ldr	r3, [pc, #16]	; (8001f7c <Widget::GetManufacturerReply()+0x68>)
 8001f6c:	681b      	ldr	r3, [r3, #0]
 8001f6e:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001f72:	bd38      	pop	{r3, r4, r5, pc}
 8001f74:	080059d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, fp, ip, lr}
 8001f78:	08005abe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9, fp, ip, lr}
 8001f7c:	2000181c 	andcs	r1, r0, ip, lsl r8

08001f80 <Widget::GetNameReply()>:
 8001f80:	b538      	push	{r3, r4, r5, lr}
 8001f82:	4917      	ldr	r1, [pc, #92]	; (8001fe0 <Widget::GetNameReply()+0x60>)
 8001f84:	4604      	mov	r4, r0
 8001f86:	2007      	movs	r0, #7
 8001f88:	f000 f914 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001f8c:	2100      	movs	r1, #0
 8001f8e:	201c      	movs	r0, #28
 8001f90:	f000 f910 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8001f94:	2300      	movs	r3, #0
 8001f96:	f894 5047 	ldrb.w	r5, [r4, #71]	; 0x47
 8001f9a:	4619      	mov	r1, r3
 8001f9c:	2201      	movs	r2, #1
 8001f9e:	4620      	mov	r0, r4
 8001fa0:	f000 fe5a 	bl	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001fa4:	214e      	movs	r1, #78	; 0x4e
 8001fa6:	4620      	mov	r0, r4
 8001fa8:	1caa      	adds	r2, r5, #2
 8001faa:	f000 faa5 	bl	80024f8 <Widget::SendHeader(unsigned char, unsigned int)>
 8001fae:	2202      	movs	r2, #2
 8001fb0:	4620      	mov	r0, r4
 8001fb2:	490c      	ldr	r1, [pc, #48]	; (8001fe4 <Widget::GetNameReply()+0x64>)
 8001fb4:	f000 fab2 	bl	800251c <Widget::SendData(unsigned char const*, unsigned int)>
 8001fb8:	462a      	mov	r2, r5
 8001fba:	f104 0127 	add.w	r1, r4, #39	; 0x27
 8001fbe:	4620      	mov	r0, r4
 8001fc0:	f000 faac 	bl	800251c <Widget::SendData(unsigned char const*, unsigned int)>
 8001fc4:	4620      	mov	r0, r4
 8001fc6:	f000 fab4 	bl	8002532 <Widget::SendFooter()>
 8001fca:	2301      	movs	r3, #1
 8001fcc:	2100      	movs	r1, #0
 8001fce:	461a      	mov	r2, r3
 8001fd0:	4620      	mov	r0, r4
 8001fd2:	f000 fe41 	bl	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001fd6:	4b04      	ldr	r3, [pc, #16]	; (8001fe8 <Widget::GetNameReply()+0x68>)
 8001fd8:	681b      	ldr	r3, [r3, #0]
 8001fda:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001fde:	bd38      	pop	{r3, r4, r5, pc}
 8001fe0:	080059e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp, ip, lr}
 8001fe4:	20000005 	andcs	r0, r0, r5
 8001fe8:	2000181c 	andcs	r1, r0, ip, lsl r8

08001fec <Widget::ReceiveDataFromHost()>:
 8001fec:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001ff0:	4604      	mov	r4, r0
 8001ff2:	f001 f927 	bl	8003244 <FT245RL_data_available>
 8001ff6:	2800      	cmp	r0, #0
 8001ff8:	d040      	beq.n	800207c <Widget::ReceiveDataFromHost()+0x90>
 8001ffa:	f001 f82f 	bl	800305c <usb_read_byte>
 8001ffe:	287e      	cmp	r0, #126	; 0x7e
 8002000:	d13c      	bne.n	800207c <Widget::ReceiveDataFromHost()+0x90>
 8002002:	f001 f82b 	bl	800305c <usb_read_byte>
 8002006:	4607      	mov	r7, r0
 8002008:	f001 f828 	bl	800305c <usb_read_byte>
 800200c:	4605      	mov	r5, r0
 800200e:	f001 f825 	bl	800305c <usb_read_byte>
 8002012:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8002016:	f06f 0996 	mvn.w	r9, #150	; 0x96
 800201a:	b2ad      	uxth	r5, r5
 800201c:	462e      	mov	r6, r5
 800201e:	f104 0897 	add.w	r8, r4, #151	; 0x97
 8002022:	eba9 0904 	sub.w	r9, r9, r4
 8002026:	eb09 0308 	add.w	r3, r9, r8
 800202a:	429d      	cmp	r5, r3
 800202c:	d81d      	bhi.n	800206a <Widget::ReceiveDataFromHost()+0x7e>
 800202e:	f001 f815 	bl	800305c <usb_read_byte>
 8002032:	28e7      	cmp	r0, #231	; 0xe7
 8002034:	d004      	beq.n	8002040 <Widget::ReceiveDataFromHost()+0x54>
 8002036:	1c73      	adds	r3, r6, #1
 8002038:	f5b6 7f16 	cmp.w	r6, #600	; 0x258
 800203c:	461e      	mov	r6, r3
 800203e:	d3f6      	bcc.n	800202e <Widget::ReceiveDataFromHost()+0x42>
 8002040:	462b      	mov	r3, r5
 8002042:	463a      	mov	r2, r7
 8002044:	2006      	movs	r0, #6
 8002046:	492b      	ldr	r1, [pc, #172]	; (80020f4 <Widget::ReceiveDataFromHost()+0x108>)
 8002048:	9600      	str	r6, [sp, #0]
 800204a:	f000 f8b3 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 800204e:	2f0b      	cmp	r7, #11
 8002050:	d810      	bhi.n	8002074 <Widget::ReceiveDataFromHost()+0x88>
 8002052:	2f02      	cmp	r7, #2
 8002054:	d912      	bls.n	800207c <Widget::ReceiveDataFromHost()+0x90>
 8002056:	3f03      	subs	r7, #3
 8002058:	2f08      	cmp	r7, #8
 800205a:	d80f      	bhi.n	800207c <Widget::ReceiveDataFromHost()+0x90>
 800205c:	e8df f007 	tbb	[pc, r7]
 8002060:	2f0e1d11 	svccs	0x000e1d11
 8002064:	170e363c 	smladxne	lr, ip, r6, r3
 8002068:	f0000043 			; <UNDEFINED> instruction: 0xf0000043
 800206c:	fff7 f808 	vtbl.8	d31, {d7}, d8
 8002070:	0f01      	lsrs	r1, r0, #28
 8002072:	e7d8      	b.n	8002026 <Widget::ReceiveDataFromHost()+0x3a>
 8002074:	2f4d      	cmp	r7, #77	; 0x4d
 8002076:	d01c      	beq.n	80020b2 <Widget::ReceiveDataFromHost()+0xc6>
 8002078:	2f4e      	cmp	r7, #78	; 0x4e
 800207a:	d014      	beq.n	80020a6 <Widget::ReceiveDataFromHost()+0xba>
 800207c:	b003      	add	sp, #12
 800207e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002082:	4620      	mov	r0, r4
 8002084:	b003      	add	sp, #12
 8002086:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800208a:	f7ff bd01 	b.w	8001a90 <Widget::GetParamsReply()>
 800208e:	4620      	mov	r0, r4
 8002090:	b003      	add	sp, #12
 8002092:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002096:	f7ff be47 	b.w	8001d28 <Widget::GetSnReply()>
 800209a:	4620      	mov	r0, r4
 800209c:	b003      	add	sp, #12
 800209e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020a2:	f7ff bd27 	b.w	8001af4 <Widget::SetParams()>
 80020a6:	4620      	mov	r0, r4
 80020a8:	b003      	add	sp, #12
 80020aa:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020ae:	f7ff bf67 	b.w	8001f80 <Widget::GetNameReply()>
 80020b2:	4620      	mov	r0, r4
 80020b4:	b003      	add	sp, #12
 80020b6:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020ba:	f7ff bf2b 	b.w	8001f14 <Widget::GetManufacturerReply()>
 80020be:	4629      	mov	r1, r5
 80020c0:	4620      	mov	r0, r4
 80020c2:	b003      	add	sp, #12
 80020c4:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020c8:	f7ff bd90 	b.w	8001bec <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>
 80020cc:	4620      	mov	r0, r4
 80020ce:	b003      	add	sp, #12
 80020d0:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020d4:	f7ff bdda 	b.w	8001c8c <Widget::ReceiveDmxOnChange()>
 80020d8:	4629      	mov	r1, r5
 80020da:	4620      	mov	r0, r4
 80020dc:	b003      	add	sp, #12
 80020de:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020e2:	f7ff bda9 	b.w	8001c38 <Widget::SendRdmPacketRequest(unsigned short)>
 80020e6:	4629      	mov	r1, r5
 80020e8:	4620      	mov	r0, r4
 80020ea:	b003      	add	sp, #12
 80020ec:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020f0:	f7ff be40 	b.w	8001d74 <Widget::SendRdmDiscoveryRequest(unsigned short)>
 80020f4:	080059fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, fp, ip, lr}

080020f8 <WidgetConfiguration::SetRefreshRate(unsigned char)>:
 80020f8:	4b05      	ldr	r3, [pc, #20]	; (8002110 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x18>)
 80020fa:	4601      	mov	r1, r0
 80020fc:	7018      	strb	r0, [r3, #0]
 80020fe:	b110      	cbz	r0, 8002106 <WidgetConfiguration::SetRefreshRate(unsigned char)+0xe>
 8002100:	4b04      	ldr	r3, [pc, #16]	; (8002114 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x1c>)
 8002102:	fbb3 f1f0 	udiv	r1, r3, r0
 8002106:	4b04      	ldr	r3, [pc, #16]	; (8002118 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x20>)
 8002108:	6818      	ldr	r0, [r3, #0]
 800210a:	f000 beb1 	b.w	8002e70 <Dmx::SetDmxPeriodTime(unsigned int)>
 800210e:	bf00      	nop
 8002110:	20000004 	andcs	r0, r0, r4
 8002114:	000f4240 	andeq	r4, pc, r0, asr #4
 8002118:	20000728 	andcs	r0, r0, r8, lsr #14

0800211c <WidgetConfiguration::SetBreakTime(unsigned char)>:
 800211c:	b508      	push	{r3, lr}
 800211e:	4b08      	ldr	r3, [pc, #32]	; (8002140 <WidgetConfiguration::SetBreakTime(unsigned char)+0x24>)
 8002120:	7018      	strb	r0, [r3, #0]
 8002122:	f7fe f9d3 	bl	80004cc <__aeabi_i2f>
 8002126:	4907      	ldr	r1, [pc, #28]	; (8002144 <WidgetConfiguration::SetBreakTime(unsigned char)+0x28>)
 8002128:	f7fe f812 	bl	8000150 <__aeabi_fmul>
 800212c:	f7fe fec6 	bl	8000ebc <__aeabi_f2uiz>
 8002130:	4b05      	ldr	r3, [pc, #20]	; (8002148 <WidgetConfiguration::SetBreakTime(unsigned char)+0x2c>)
 8002132:	4601      	mov	r1, r0
 8002134:	6818      	ldr	r0, [r3, #0]
 8002136:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800213a:	f000 bec9 	b.w	8002ed0 <Dmx::SetDmxBreakTime(unsigned int)>
 800213e:	bf00      	nop
 8002140:	20000001 	andcs	r0, r0, r1
 8002144:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 8002148:	20000728 	andcs	r0, r0, r8, lsr #14

0800214c <WidgetConfiguration::SetMabTime(unsigned char)>:
 800214c:	b508      	push	{r3, lr}
 800214e:	4b08      	ldr	r3, [pc, #32]	; (8002170 <WidgetConfiguration::SetMabTime(unsigned char)+0x24>)
 8002150:	7018      	strb	r0, [r3, #0]
 8002152:	f7fe f9bb 	bl	80004cc <__aeabi_i2f>
 8002156:	4907      	ldr	r1, [pc, #28]	; (8002174 <WidgetConfiguration::SetMabTime(unsigned char)+0x28>)
 8002158:	f7fd fffa 	bl	8000150 <__aeabi_fmul>
 800215c:	f7fe feae 	bl	8000ebc <__aeabi_f2uiz>
 8002160:	4b05      	ldr	r3, [pc, #20]	; (8002178 <WidgetConfiguration::SetMabTime(unsigned char)+0x2c>)
 8002162:	4601      	mov	r1, r0
 8002164:	6818      	ldr	r0, [r3, #0]
 8002166:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800216a:	f000 bebb 	b.w	8002ee4 <Dmx::SetDmxMabTime(unsigned int)>
 800216e:	bf00      	nop
 8002170:	20000000 	andcs	r0, r0, r0
 8002174:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 8002178:	20000728 	andcs	r0, r0, r8, lsr #14

0800217c <WidgetConfiguration::SetMode(widget::Mode)>:
 800217c:	2800      	cmp	r0, #0
 800217e:	bf14      	ite	ne
 8002180:	4602      	movne	r2, r0
 8002182:	2202      	moveq	r2, #2
 8002184:	4b03      	ldr	r3, [pc, #12]	; (8002194 <WidgetConfiguration::SetMode(widget::Mode)+0x18>)
 8002186:	701a      	strb	r2, [r3, #0]
 8002188:	4b03      	ldr	r3, [pc, #12]	; (8002198 <WidgetConfiguration::SetMode(widget::Mode)+0x1c>)
 800218a:	681b      	ldr	r3, [r3, #0]
 800218c:	f8c3 02f0 	str.w	r0, [r3, #752]	; 0x2f0
 8002190:	4770      	bx	lr
 8002192:	bf00      	nop
 8002194:	20000002 	andcs	r0, r0, r2
 8002198:	200000f4 	strdcs	r0, [r0], -r4

0800219c <WidgetConfiguration::SetThrottle(unsigned char)>:
 800219c:	b118      	cbz	r0, 80021a6 <WidgetConfiguration::SetThrottle(unsigned char)+0xa>
 800219e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80021a2:	fbb3 f0f0 	udiv	r0, r3, r0
 80021a6:	4b02      	ldr	r3, [pc, #8]	; (80021b0 <WidgetConfiguration::SetThrottle(unsigned char)+0x14>)
 80021a8:	681b      	ldr	r3, [r3, #0]
 80021aa:	f8c3 02f8 	str.w	r0, [r3, #760]	; 0x2f8
 80021ae:	4770      	bx	lr
 80021b0:	200000f4 	strdcs	r0, [r0], -r4

080021b4 <WidgetMonitor::Line(int, char const*, ...)>:
 80021b4:	b40e      	push	{r1, r2, r3}
 80021b6:	b003      	add	sp, #12
 80021b8:	4770      	bx	lr
	...

080021bc <WidgetParams::WidgetParams(WidgetParamsStore*)>:
 80021bc:	4a02      	ldr	r2, [pc, #8]	; (80021c8 <WidgetParams::WidgetParams(WidgetParamsStore*)+0xc>)
 80021be:	6001      	str	r1, [r0, #0]
 80021c0:	6082      	str	r2, [r0, #8]
 80021c2:	2200      	movs	r2, #0
 80021c4:	7302      	strb	r2, [r0, #12]
 80021c6:	4770      	bx	lr
 80021c8:	00280109 	eoreq	r0, r8, r9, lsl #2

080021cc <WidgetParams::Load()>:
 80021cc:	2300      	movs	r3, #0
 80021ce:	b513      	push	{r0, r1, r4, lr}
 80021d0:	4604      	mov	r4, r0
 80021d2:	4602      	mov	r2, r0
 80021d4:	6043      	str	r3, [r0, #4]
 80021d6:	4909      	ldr	r1, [pc, #36]	; (80021fc <WidgetParams::Load()+0x30>)
 80021d8:	4668      	mov	r0, sp
 80021da:	f001 fcf3 	bl	8003bc4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80021de:	6820      	ldr	r0, [r4, #0]
 80021e0:	b150      	cbz	r0, 80021f8 <WidgetParams::Load()+0x2c>
 80021e2:	6803      	ldr	r3, [r0, #0]
 80021e4:	1d21      	adds	r1, r4, #4
 80021e6:	68db      	ldr	r3, [r3, #12]
 80021e8:	4798      	blx	r3
 80021ea:	2401      	movs	r4, #1
 80021ec:	4668      	mov	r0, sp
 80021ee:	f001 fcec 	bl	8003bca <ReadConfigFile::~ReadConfigFile()>
 80021f2:	4620      	mov	r0, r4
 80021f4:	b002      	add	sp, #8
 80021f6:	bd10      	pop	{r4, pc}
 80021f8:	4604      	mov	r4, r0
 80021fa:	e7f7      	b.n	80021ec <WidgetParams::Load()+0x20>
 80021fc:	080022c1 	stmdaeq	r0, {r0, r6, r7, r9, sp}

08002200 <WidgetParams::callbackFunction(char const*)>:
 8002200:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002202:	460d      	mov	r5, r1
 8002204:	4604      	mov	r4, r0
 8002206:	4929      	ldr	r1, [pc, #164]	; (80022ac <WidgetParams::callbackFunction(char const*)+0xac>)
 8002208:	4628      	mov	r0, r5
 800220a:	f10d 0207 	add.w	r2, sp, #7
 800220e:	f001 fcdd 	bl	8003bcc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8002212:	b960      	cbnz	r0, 800222e <WidgetParams::callbackFunction(char const*)+0x2e>
 8002214:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002218:	f1a3 0209 	sub.w	r2, r3, #9
 800221c:	2a76      	cmp	r2, #118	; 0x76
 800221e:	d806      	bhi.n	800222e <WidgetParams::callbackFunction(char const*)+0x2e>
 8002220:	7223      	strb	r3, [r4, #8]
 8002222:	6863      	ldr	r3, [r4, #4]
 8002224:	f043 0301 	orr.w	r3, r3, #1
 8002228:	6063      	str	r3, [r4, #4]
 800222a:	b003      	add	sp, #12
 800222c:	bd30      	pop	{r4, r5, pc}
 800222e:	4628      	mov	r0, r5
 8002230:	491f      	ldr	r1, [pc, #124]	; (80022b0 <WidgetParams::callbackFunction(char const*)+0xb0>)
 8002232:	f10d 0207 	add.w	r2, sp, #7
 8002236:	f001 fcc9 	bl	8003bcc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800223a:	b950      	cbnz	r0, 8002252 <WidgetParams::callbackFunction(char const*)+0x52>
 800223c:	f99d 2007 	ldrsb.w	r2, [sp, #7]
 8002240:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002244:	2a00      	cmp	r2, #0
 8002246:	dd04      	ble.n	8002252 <WidgetParams::callbackFunction(char const*)+0x52>
 8002248:	7263      	strb	r3, [r4, #9]
 800224a:	6863      	ldr	r3, [r4, #4]
 800224c:	f043 0302 	orr.w	r3, r3, #2
 8002250:	e7ea      	b.n	8002228 <WidgetParams::callbackFunction(char const*)+0x28>
 8002252:	4628      	mov	r0, r5
 8002254:	4917      	ldr	r1, [pc, #92]	; (80022b4 <WidgetParams::callbackFunction(char const*)+0xb4>)
 8002256:	f10d 0207 	add.w	r2, sp, #7
 800225a:	f001 fcb7 	bl	8003bcc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800225e:	b930      	cbnz	r0, 800226e <WidgetParams::callbackFunction(char const*)+0x6e>
 8002260:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002264:	72a3      	strb	r3, [r4, #10]
 8002266:	6863      	ldr	r3, [r4, #4]
 8002268:	f043 0304 	orr.w	r3, r3, #4
 800226c:	e7dc      	b.n	8002228 <WidgetParams::callbackFunction(char const*)+0x28>
 800226e:	4628      	mov	r0, r5
 8002270:	4911      	ldr	r1, [pc, #68]	; (80022b8 <WidgetParams::callbackFunction(char const*)+0xb8>)
 8002272:	f10d 0207 	add.w	r2, sp, #7
 8002276:	f001 fca9 	bl	8003bcc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800227a:	b940      	cbnz	r0, 800228e <WidgetParams::callbackFunction(char const*)+0x8e>
 800227c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002280:	2b03      	cmp	r3, #3
 8002282:	d804      	bhi.n	800228e <WidgetParams::callbackFunction(char const*)+0x8e>
 8002284:	72e3      	strb	r3, [r4, #11]
 8002286:	6863      	ldr	r3, [r4, #4]
 8002288:	f043 0308 	orr.w	r3, r3, #8
 800228c:	e7cc      	b.n	8002228 <WidgetParams::callbackFunction(char const*)+0x28>
 800228e:	4628      	mov	r0, r5
 8002290:	490a      	ldr	r1, [pc, #40]	; (80022bc <WidgetParams::callbackFunction(char const*)+0xbc>)
 8002292:	f10d 0207 	add.w	r2, sp, #7
 8002296:	f001 fc99 	bl	8003bcc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800229a:	2800      	cmp	r0, #0
 800229c:	d1c5      	bne.n	800222a <WidgetParams::callbackFunction(char const*)+0x2a>
 800229e:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80022a2:	7323      	strb	r3, [r4, #12]
 80022a4:	6863      	ldr	r3, [r4, #4]
 80022a6:	f043 0310 	orr.w	r3, r3, #16
 80022aa:	e7bd      	b.n	8002228 <WidgetParams::callbackFunction(char const*)+0x28>
 80022ac:	08005a29 	stmdaeq	r0, {r0, r3, r5, r9, fp, ip, lr}
 80022b0:	08005a16 	stmdaeq	r0, {r1, r2, r4, r9, fp, ip, lr}
 80022b4:	08005a3e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r9, fp, ip, lr}
 80022b8:	08005a0a 	stmdaeq	r0, {r1, r3, r9, fp, ip, lr}
 80022bc:	08005a55 	stmdaeq	r0, {r0, r2, r4, r6, r9, fp, ip, lr}

080022c0 <WidgetParams::staticCallbackFunction(void*, char const*)>:
 80022c0:	f7ff bf9e 	b.w	8002200 <WidgetParams::callbackFunction(char const*)>

080022c4 <WidgetParams::Set()>:
 80022c4:	6843      	ldr	r3, [r0, #4]
 80022c6:	b510      	push	{r4, lr}
 80022c8:	075b      	lsls	r3, r3, #29
 80022ca:	4604      	mov	r4, r0
 80022cc:	d502      	bpl.n	80022d4 <WidgetParams::Set()+0x10>
 80022ce:	7a80      	ldrb	r0, [r0, #10]
 80022d0:	f7ff ff12 	bl	80020f8 <WidgetConfiguration::SetRefreshRate(unsigned char)>
 80022d4:	6863      	ldr	r3, [r4, #4]
 80022d6:	07d8      	lsls	r0, r3, #31
 80022d8:	d502      	bpl.n	80022e0 <WidgetParams::Set()+0x1c>
 80022da:	7a20      	ldrb	r0, [r4, #8]
 80022dc:	f7ff ff1e 	bl	800211c <WidgetConfiguration::SetBreakTime(unsigned char)>
 80022e0:	6863      	ldr	r3, [r4, #4]
 80022e2:	0799      	lsls	r1, r3, #30
 80022e4:	d502      	bpl.n	80022ec <WidgetParams::Set()+0x28>
 80022e6:	7a60      	ldrb	r0, [r4, #9]
 80022e8:	f7ff ff30 	bl	800214c <WidgetConfiguration::SetMabTime(unsigned char)>
 80022ec:	6863      	ldr	r3, [r4, #4]
 80022ee:	06da      	lsls	r2, r3, #27
 80022f0:	d502      	bpl.n	80022f8 <WidgetParams::Set()+0x34>
 80022f2:	7b20      	ldrb	r0, [r4, #12]
 80022f4:	f7ff ff52 	bl	800219c <WidgetConfiguration::SetThrottle(unsigned char)>
 80022f8:	6863      	ldr	r3, [r4, #4]
 80022fa:	071b      	lsls	r3, r3, #28
 80022fc:	d504      	bpl.n	8002308 <WidgetParams::Set()+0x44>
 80022fe:	7ae0      	ldrb	r0, [r4, #11]
 8002300:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002304:	f7ff bf3a 	b.w	800217c <WidgetConfiguration::SetMode(widget::Mode)>
 8002308:	bd10      	pop	{r4, pc}

0800230a <WidgetParams::Dump()>:
 800230a:	4770      	bx	lr

0800230c <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>:
 800230c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002310:	4606      	mov	r6, r0
 8002312:	460f      	mov	r7, r1
 8002314:	461d      	mov	r5, r3
 8002316:	eb03 0802 	add.w	r8, r3, r2
 800231a:	eba8 0405 	sub.w	r4, r8, r5
 800231e:	b2a4      	uxth	r4, r4
 8002320:	2d63      	cmp	r5, #99	; 0x63
 8002322:	f04f 02c8 	mov.w	r2, #200	; 0xc8
 8002326:	f04f 0181 	mov.w	r1, #129	; 0x81
 800232a:	4630      	mov	r0, r6
 800232c:	443c      	add	r4, r7
 800232e:	d81e      	bhi.n	800236e <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x62>
 8002330:	f000 f8e2 	bl	80024f8 <Widget::SendHeader(unsigned char, unsigned int)>
 8002334:	f04f 0800 	mov.w	r8, #0
 8002338:	4545      	cmp	r5, r8
 800233a:	462f      	mov	r7, r5
 800233c:	d80d      	bhi.n	800235a <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x4e>
 800233e:	2000      	movs	r0, #0
 8002340:	f000 fe95 	bl	800306e <usb_send_byte>
 8002344:	3701      	adds	r7, #1
 8002346:	2002      	movs	r0, #2
 8002348:	f000 fe91 	bl	800306e <usb_send_byte>
 800234c:	2f64      	cmp	r7, #100	; 0x64
 800234e:	d1f6      	bne.n	800233e <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x32>
 8002350:	4630      	mov	r0, r6
 8002352:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002356:	f000 b8ec 	b.w	8002532 <Widget::SendFooter()>
 800235a:	2080      	movs	r0, #128	; 0x80
 800235c:	f000 fe87 	bl	800306e <usb_send_byte>
 8002360:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002364:	f000 fe83 	bl	800306e <usb_send_byte>
 8002368:	f108 0801 	add.w	r8, r8, #1
 800236c:	e7e4      	b.n	8002338 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x2c>
 800236e:	f000 f8c3 	bl	80024f8 <Widget::SendHeader(unsigned char, unsigned int)>
 8002372:	f04f 0900 	mov.w	r9, #0
 8002376:	2080      	movs	r0, #128	; 0x80
 8002378:	f000 fe79 	bl	800306e <usb_send_byte>
 800237c:	f109 0901 	add.w	r9, r9, #1
 8002380:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002384:	f000 fe73 	bl	800306e <usb_send_byte>
 8002388:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 800238c:	d1f3      	bne.n	8002376 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x6a>
 800238e:	4630      	mov	r0, r6
 8002390:	3d64      	subs	r5, #100	; 0x64
 8002392:	f000 f8ce 	bl	8002532 <Widget::SendFooter()>
 8002396:	b2ad      	uxth	r5, r5
 8002398:	e7bf      	b.n	800231a <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0xe>
	...

0800239c <Widget::UsbCanSend()>:
 800239c:	b570      	push	{r4, r5, r6, lr}
 800239e:	256c      	movs	r5, #108	; 0x6c
 80023a0:	4e0b      	ldr	r6, [pc, #44]	; (80023d0 <Widget::UsbCanSend()+0x34>)
 80023a2:	6874      	ldr	r4, [r6, #4]
 80023a4:	fbb4 f4f5 	udiv	r4, r4, r5
 80023a8:	f000 ff58 	bl	800325c <FT245RL_can_write>
 80023ac:	b930      	cbnz	r0, 80023bc <Widget::UsbCanSend()+0x20>
 80023ae:	6873      	ldr	r3, [r6, #4]
 80023b0:	fbb3 f3f5 	udiv	r3, r3, r5
 80023b4:	1b1b      	subs	r3, r3, r4
 80023b6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80023ba:	d3f5      	bcc.n	80023a8 <Widget::UsbCanSend()+0xc>
 80023bc:	f000 ff4e 	bl	800325c <FT245RL_can_write>
 80023c0:	4604      	mov	r4, r0
 80023c2:	b918      	cbnz	r0, 80023cc <Widget::UsbCanSend()+0x30>
 80023c4:	2007      	movs	r0, #7
 80023c6:	4903      	ldr	r1, [pc, #12]	; (80023d4 <Widget::UsbCanSend()+0x38>)
 80023c8:	f7ff fef4 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 80023cc:	4620      	mov	r0, r4
 80023ce:	bd70      	pop	{r4, r5, r6, pc}
 80023d0:	e0001000 	and	r1, r0, r0
 80023d4:	08005a6f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r9, fp, ip, lr}

080023d8 <Widget::SnifferDmx()>:
 80023d8:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 80023dc:	b570      	push	{r4, r5, r6, lr}
 80023de:	2b03      	cmp	r3, #3
 80023e0:	4604      	mov	r4, r0
 80023e2:	d11c      	bne.n	800241e <Widget::SnifferDmx()+0x46>
 80023e4:	f7ff ffda 	bl	800239c <Widget::UsbCanSend()>
 80023e8:	b1c8      	cbz	r0, 800241e <Widget::SnifferDmx()+0x46>
 80023ea:	2100      	movs	r1, #0
 80023ec:	4620      	mov	r0, r4
 80023ee:	f000 fdbf 	bl	8002f70 <Dmx::GetDmxChanged(unsigned int)>
 80023f2:	4605      	mov	r5, r0
 80023f4:	b198      	cbz	r0, 800241e <Widget::SnifferDmx()+0x46>
 80023f6:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 80023fa:	4620      	mov	r0, r4
 80023fc:	f7ff ffce 	bl	800239c <Widget::UsbCanSend()>
 8002400:	b168      	cbz	r0, 800241e <Widget::SnifferDmx()+0x46>
 8002402:	3601      	adds	r6, #1
 8002404:	4632      	mov	r2, r6
 8002406:	2007      	movs	r0, #7
 8002408:	4905      	ldr	r1, [pc, #20]	; (8002420 <Widget::SnifferDmx()+0x48>)
 800240a:	f7ff fed3 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 800240e:	4629      	mov	r1, r5
 8002410:	4620      	mov	r0, r4
 8002412:	b2b3      	uxth	r3, r6
 8002414:	2200      	movs	r2, #0
 8002416:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800241a:	f7ff bf77 	b.w	800230c <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 800241e:	bd70      	pop	{r4, r5, r6, pc}
 8002420:	08005a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp, ip, lr}

08002424 <Widget::SnifferRdm()>:
 8002424:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8002428:	b570      	push	{r4, r5, r6, lr}
 800242a:	2b03      	cmp	r3, #3
 800242c:	4604      	mov	r4, r0
 800242e:	d14c      	bne.n	80024ca <Widget::SnifferRdm()+0xa6>
 8002430:	f7ff ffb4 	bl	800239c <Widget::UsbCanSend()>
 8002434:	2800      	cmp	r0, #0
 8002436:	d048      	beq.n	80024ca <Widget::SnifferRdm()+0xa6>
 8002438:	2000      	movs	r0, #0
 800243a:	f000 f937 	bl	80026ac <Rdm::Receive(unsigned int)>
 800243e:	4605      	mov	r5, r0
 8002440:	2800      	cmp	r0, #0
 8002442:	d042      	beq.n	80024ca <Widget::SnifferRdm()+0xa6>
 8002444:	7803      	ldrb	r3, [r0, #0]
 8002446:	2bcc      	cmp	r3, #204	; 0xcc
 8002448:	d134      	bne.n	80024b4 <Widget::SnifferRdm()+0x90>
 800244a:	7886      	ldrb	r6, [r0, #2]
 800244c:	7d03      	ldrb	r3, [r0, #20]
 800244e:	3602      	adds	r6, #2
 8002450:	2b20      	cmp	r3, #32
 8002452:	b2f6      	uxtb	r6, r6
 8002454:	d028      	beq.n	80024a8 <Widget::SnifferRdm()+0x84>
 8002456:	d813      	bhi.n	8002480 <Widget::SnifferRdm()+0x5c>
 8002458:	2b10      	cmp	r3, #16
 800245a:	d019      	beq.n	8002490 <Widget::SnifferRdm()+0x6c>
 800245c:	2b11      	cmp	r3, #17
 800245e:	d01d      	beq.n	800249c <Widget::SnifferRdm()+0x78>
 8002460:	4620      	mov	r0, r4
 8002462:	f7ff ff9b 	bl	800239c <Widget::UsbCanSend()>
 8002466:	b380      	cbz	r0, 80024ca <Widget::SnifferRdm()+0xa6>
 8002468:	2007      	movs	r0, #7
 800246a:	4918      	ldr	r1, [pc, #96]	; (80024cc <Widget::SnifferRdm()+0xa8>)
 800246c:	f7ff fea2 	bl	80021b4 <WidgetMonitor::Line(int, char const*, ...)>
 8002470:	4633      	mov	r3, r6
 8002472:	4629      	mov	r1, r5
 8002474:	4620      	mov	r0, r4
 8002476:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800247a:	2200      	movs	r2, #0
 800247c:	f7ff bf46 	b.w	800230c <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 8002480:	2b30      	cmp	r3, #48	; 0x30
 8002482:	d1ed      	bne.n	8002460 <Widget::SnifferRdm()+0x3c>
 8002484:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
 8002488:	3301      	adds	r3, #1
 800248a:	f8c4 3318 	str.w	r3, [r4, #792]	; 0x318
 800248e:	e7e7      	b.n	8002460 <Widget::SnifferRdm()+0x3c>
 8002490:	f8d4 330c 	ldr.w	r3, [r4, #780]	; 0x30c
 8002494:	3301      	adds	r3, #1
 8002496:	f8c4 330c 	str.w	r3, [r4, #780]	; 0x30c
 800249a:	e7e1      	b.n	8002460 <Widget::SnifferRdm()+0x3c>
 800249c:	f8d4 3310 	ldr.w	r3, [r4, #784]	; 0x310
 80024a0:	3301      	adds	r3, #1
 80024a2:	f8c4 3310 	str.w	r3, [r4, #784]	; 0x310
 80024a6:	e7db      	b.n	8002460 <Widget::SnifferRdm()+0x3c>
 80024a8:	f8d4 3314 	ldr.w	r3, [r4, #788]	; 0x314
 80024ac:	3301      	adds	r3, #1
 80024ae:	f8c4 3314 	str.w	r3, [r4, #788]	; 0x314
 80024b2:	e7d5      	b.n	8002460 <Widget::SnifferRdm()+0x3c>
 80024b4:	2bfe      	cmp	r3, #254	; 0xfe
 80024b6:	bf03      	ittte	eq
 80024b8:	f8d4 3310 	ldreq.w	r3, [r4, #784]	; 0x310
 80024bc:	2618      	moveq	r6, #24
 80024be:	3301      	addeq	r3, #1
 80024c0:	2600      	movne	r6, #0
 80024c2:	bf08      	it	eq
 80024c4:	f8c4 3310 	streq.w	r3, [r4, #784]	; 0x310
 80024c8:	e7ca      	b.n	8002460 <Widget::SnifferRdm()+0x3c>
 80024ca:	bd70      	pop	{r4, r5, r6, pc}
 80024cc:	08005aa8 	stmdaeq	r0, {r3, r5, r7, r9, fp, ip, lr}

080024d0 <Widget::SnifferFillTransmitBuffer()>:
 80024d0:	b538      	push	{r3, r4, r5, lr}
 80024d2:	4605      	mov	r5, r0
 80024d4:	f7ff ff62 	bl	800239c <Widget::UsbCanSend()>
 80024d8:	b958      	cbnz	r0, 80024f2 <Widget::SnifferFillTransmitBuffer()+0x22>
 80024da:	bd38      	pop	{r3, r4, r5, pc}
 80024dc:	4628      	mov	r0, r5
 80024de:	f7ff ff5d 	bl	800239c <Widget::UsbCanSend()>
 80024e2:	2800      	cmp	r0, #0
 80024e4:	d0f9      	beq.n	80024da <Widget::SnifferFillTransmitBuffer()+0xa>
 80024e6:	2000      	movs	r0, #0
 80024e8:	f000 fdc1 	bl	800306e <usb_send_byte>
 80024ec:	3c01      	subs	r4, #1
 80024ee:	d1f5      	bne.n	80024dc <Widget::SnifferFillTransmitBuffer()+0xc>
 80024f0:	e7f3      	b.n	80024da <Widget::SnifferFillTransmitBuffer()+0xa>
 80024f2:	f240 1401 	movw	r4, #257	; 0x101
 80024f6:	e7f9      	b.n	80024ec <Widget::SnifferFillTransmitBuffer()+0x1c>

080024f8 <Widget::SendHeader(unsigned char, unsigned int)>:
 80024f8:	b538      	push	{r3, r4, r5, lr}
 80024fa:	460d      	mov	r5, r1
 80024fc:	4614      	mov	r4, r2
 80024fe:	207e      	movs	r0, #126	; 0x7e
 8002500:	f000 fdb5 	bl	800306e <usb_send_byte>
 8002504:	4628      	mov	r0, r5
 8002506:	f000 fdb2 	bl	800306e <usb_send_byte>
 800250a:	b2e0      	uxtb	r0, r4
 800250c:	f000 fdaf 	bl	800306e <usb_send_byte>
 8002510:	f3c4 2007 	ubfx	r0, r4, #8, #8
 8002514:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002518:	f000 bda9 	b.w	800306e <usb_send_byte>

0800251c <Widget::SendData(unsigned char const*, unsigned int)>:
 800251c:	b538      	push	{r3, r4, r5, lr}
 800251e:	460c      	mov	r4, r1
 8002520:	188d      	adds	r5, r1, r2
 8002522:	42ac      	cmp	r4, r5
 8002524:	d100      	bne.n	8002528 <Widget::SendData(unsigned char const*, unsigned int)+0xc>
 8002526:	bd38      	pop	{r3, r4, r5, pc}
 8002528:	f814 0b01 	ldrb.w	r0, [r4], #1
 800252c:	f000 fd9f 	bl	800306e <usb_send_byte>
 8002530:	e7f7      	b.n	8002522 <Widget::SendData(unsigned char const*, unsigned int)+0x6>

08002532 <Widget::SendFooter()>:
 8002532:	20e7      	movs	r0, #231	; 0xe7
 8002534:	f000 bd9b 	b.w	800306e <usb_send_byte>

08002538 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>:
 8002538:	b570      	push	{r4, r5, r6, lr}
 800253a:	461c      	mov	r4, r3
 800253c:	4605      	mov	r5, r0
 800253e:	4616      	mov	r6, r2
 8002540:	461a      	mov	r2, r3
 8002542:	f7ff ffd9 	bl	80024f8 <Widget::SendHeader(unsigned char, unsigned int)>
 8002546:	4628      	mov	r0, r5
 8002548:	4622      	mov	r2, r4
 800254a:	4631      	mov	r1, r6
 800254c:	f7ff ffe6 	bl	800251c <Widget::SendData(unsigned char const*, unsigned int)>
 8002550:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002554:	20e7      	movs	r0, #231	; 0xe7
 8002556:	f000 bd8a 	b.w	800306e <usb_send_byte>
	...

0800255c <StoreWidget::UpdateBreakTime(unsigned char)>:
 800255c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800255e:	2301      	movs	r3, #1
 8002560:	2200      	movs	r2, #0
 8002562:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002566:	4807      	ldr	r0, [pc, #28]	; (8002584 <StoreWidget::UpdateBreakTime(unsigned char)+0x28>)
 8002568:	9300      	str	r3, [sp, #0]
 800256a:	f88d 1017 	strb.w	r1, [sp, #23]
 800256e:	2204      	movs	r2, #4
 8002570:	210a      	movs	r1, #10
 8002572:	6800      	ldr	r0, [r0, #0]
 8002574:	f10d 0317 	add.w	r3, sp, #23
 8002578:	f001 f81c 	bl	80035b4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800257c:	b007      	add	sp, #28
 800257e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002582:	bf00      	nop
 8002584:	20001748 	andcs	r1, r0, r8, asr #14

08002588 <non-virtual thunk to StoreWidget::UpdateBreakTime(unsigned char)>:
 8002588:	f1a0 0004 	sub.w	r0, r0, #4
 800258c:	e7e6      	b.n	800255c <StoreWidget::UpdateBreakTime(unsigned char)>
 800258e:	bf00      	nop

08002590 <StoreWidget::UpdateMabTime(unsigned char)>:
 8002590:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002592:	2302      	movs	r3, #2
 8002594:	2200      	movs	r2, #0
 8002596:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800259a:	2301      	movs	r3, #1
 800259c:	4806      	ldr	r0, [pc, #24]	; (80025b8 <StoreWidget::UpdateMabTime(unsigned char)+0x28>)
 800259e:	9300      	str	r3, [sp, #0]
 80025a0:	f88d 1017 	strb.w	r1, [sp, #23]
 80025a4:	2205      	movs	r2, #5
 80025a6:	210a      	movs	r1, #10
 80025a8:	6800      	ldr	r0, [r0, #0]
 80025aa:	f10d 0317 	add.w	r3, sp, #23
 80025ae:	f001 f801 	bl	80035b4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80025b2:	b007      	add	sp, #28
 80025b4:	f85d fb04 	ldr.w	pc, [sp], #4
 80025b8:	20001748 	andcs	r1, r0, r8, asr #14

080025bc <non-virtual thunk to StoreWidget::UpdateMabTime(unsigned char)>:
 80025bc:	f1a0 0004 	sub.w	r0, r0, #4
 80025c0:	e7e6      	b.n	8002590 <StoreWidget::UpdateMabTime(unsigned char)>
 80025c2:	bf00      	nop

080025c4 <StoreWidget::UpdateRefreshRate(unsigned char)>:
 80025c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80025c6:	2304      	movs	r3, #4
 80025c8:	2200      	movs	r2, #0
 80025ca:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80025ce:	2301      	movs	r3, #1
 80025d0:	4806      	ldr	r0, [pc, #24]	; (80025ec <StoreWidget::UpdateRefreshRate(unsigned char)+0x28>)
 80025d2:	9300      	str	r3, [sp, #0]
 80025d4:	f88d 1017 	strb.w	r1, [sp, #23]
 80025d8:	2206      	movs	r2, #6
 80025da:	210a      	movs	r1, #10
 80025dc:	6800      	ldr	r0, [r0, #0]
 80025de:	f10d 0317 	add.w	r3, sp, #23
 80025e2:	f000 ffe7 	bl	80035b4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80025e6:	b007      	add	sp, #28
 80025e8:	f85d fb04 	ldr.w	pc, [sp], #4
 80025ec:	20001748 	andcs	r1, r0, r8, asr #14

080025f0 <non-virtual thunk to StoreWidget::UpdateRefreshRate(unsigned char)>:
 80025f0:	f1a0 0004 	sub.w	r0, r0, #4
 80025f4:	e7e6      	b.n	80025c4 <StoreWidget::UpdateRefreshRate(unsigned char)>
 80025f6:	bf00      	nop

080025f8 <WidgetConfiguration::Store(TWidgetConfiguration const*)>:
 80025f8:	b510      	push	{r4, lr}
 80025fa:	4b25      	ldr	r3, [pc, #148]	; (8002690 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x98>)
 80025fc:	4604      	mov	r4, r0
 80025fe:	781a      	ldrb	r2, [r3, #0]
 8002600:	7880      	ldrb	r0, [r0, #2]
 8002602:	4282      	cmp	r2, r0
 8002604:	d013      	beq.n	800262e <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x36>
 8002606:	7018      	strb	r0, [r3, #0]
 8002608:	f7fe f9bc 	bl	8000984 <__aeabi_i2d>
 800260c:	a31e      	add	r3, pc, #120	; (adr r3, 8002688 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x90>)
 800260e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002612:	f7fe fa21 	bl	8000a58 <__aeabi_dmul>
 8002616:	f7fe fc31 	bl	8000e7c <__aeabi_d2uiz>
 800261a:	4b1e      	ldr	r3, [pc, #120]	; (8002694 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>)
 800261c:	4601      	mov	r1, r0
 800261e:	6818      	ldr	r0, [r3, #0]
 8002620:	f000 fc56 	bl	8002ed0 <Dmx::SetDmxBreakTime(unsigned int)>
 8002624:	4b1c      	ldr	r3, [pc, #112]	; (8002698 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 8002626:	78a1      	ldrb	r1, [r4, #2]
 8002628:	6818      	ldr	r0, [r3, #0]
 800262a:	f7ff ff97 	bl	800255c <StoreWidget::UpdateBreakTime(unsigned char)>
 800262e:	4b1b      	ldr	r3, [pc, #108]	; (800269c <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa4>)
 8002630:	78e0      	ldrb	r0, [r4, #3]
 8002632:	781a      	ldrb	r2, [r3, #0]
 8002634:	4282      	cmp	r2, r0
 8002636:	d013      	beq.n	8002660 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x68>
 8002638:	7018      	strb	r0, [r3, #0]
 800263a:	f7fe f9a3 	bl	8000984 <__aeabi_i2d>
 800263e:	a312      	add	r3, pc, #72	; (adr r3, 8002688 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x90>)
 8002640:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002644:	f7fe fa08 	bl	8000a58 <__aeabi_dmul>
 8002648:	f7fe fc18 	bl	8000e7c <__aeabi_d2uiz>
 800264c:	4b11      	ldr	r3, [pc, #68]	; (8002694 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>)
 800264e:	4601      	mov	r1, r0
 8002650:	6818      	ldr	r0, [r3, #0]
 8002652:	f000 fc47 	bl	8002ee4 <Dmx::SetDmxMabTime(unsigned int)>
 8002656:	4b10      	ldr	r3, [pc, #64]	; (8002698 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 8002658:	78e1      	ldrb	r1, [r4, #3]
 800265a:	6818      	ldr	r0, [r3, #0]
 800265c:	f7ff ff98 	bl	8002590 <StoreWidget::UpdateMabTime(unsigned char)>
 8002660:	4b0f      	ldr	r3, [pc, #60]	; (80026a0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa8>)
 8002662:	7921      	ldrb	r1, [r4, #4]
 8002664:	781a      	ldrb	r2, [r3, #0]
 8002666:	428a      	cmp	r2, r1
 8002668:	d00d      	beq.n	8002686 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x8e>
 800266a:	7019      	strb	r1, [r3, #0]
 800266c:	4b09      	ldr	r3, [pc, #36]	; (8002694 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>)
 800266e:	6818      	ldr	r0, [r3, #0]
 8002670:	b111      	cbz	r1, 8002678 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x80>
 8002672:	4b0c      	ldr	r3, [pc, #48]	; (80026a4 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xac>)
 8002674:	fbb3 f1f1 	udiv	r1, r3, r1
 8002678:	f000 fbfa 	bl	8002e70 <Dmx::SetDmxPeriodTime(unsigned int)>
 800267c:	4b06      	ldr	r3, [pc, #24]	; (8002698 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 800267e:	7921      	ldrb	r1, [r4, #4]
 8002680:	6818      	ldr	r0, [r3, #0]
 8002682:	f7ff ff9f 	bl	80025c4 <StoreWidget::UpdateRefreshRate(unsigned char)>
 8002686:	bd10      	pop	{r4, pc}
 8002688:	3d70a3d7 	ldclcc	3, cr10, [r0, #-860]!	; 0xfffffca4
 800268c:	4025570a 	eormi	r5, r5, sl, lsl #14
 8002690:	20000001 	andcs	r0, r0, r1
 8002694:	20000728 	andcs	r0, r0, r8, lsr #14
 8002698:	20001754 	andcs	r1, r0, r4, asr r7
 800269c:	20000000 	andcs	r0, r0, r0
 80026a0:	20000004 	andcs	r0, r0, r4
 80026a4:	000f4240 	andeq	r4, pc, r0, asr #4

080026a8 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>:
 80026a8:	4770      	bx	lr
	...

080026ac <Rdm::Receive(unsigned int)>:
 80026ac:	4b02      	ldr	r3, [pc, #8]	; (80026b8 <Rdm::Receive(unsigned int)+0xc>)
 80026ae:	4601      	mov	r1, r0
 80026b0:	6818      	ldr	r0, [r3, #0]
 80026b2:	f000 bcc1 	b.w	8003038 <Dmx::RdmReceive(unsigned int)>
 80026b6:	bf00      	nop
 80026b8:	20000728 	andcs	r0, r0, r8, lsr #14

080026bc <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>:
 80026bc:	2300      	movs	r3, #0
 80026be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80026c2:	4604      	mov	r4, r0
 80026c4:	460e      	mov	r6, r1
 80026c6:	4617      	mov	r7, r2
 80026c8:	4d0b      	ldr	r5, [pc, #44]	; (80026f8 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)+0x3c>)
 80026ca:	461a      	mov	r2, r3
 80026cc:	4601      	mov	r1, r0
 80026ce:	6828      	ldr	r0, [r5, #0]
 80026d0:	f000 fac2 	bl	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80026d4:	463b      	mov	r3, r7
 80026d6:	4632      	mov	r2, r6
 80026d8:	4621      	mov	r1, r4
 80026da:	6828      	ldr	r0, [r5, #0]
 80026dc:	f000 fc66 	bl	8002fac <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>
 80026e0:	2100      	movs	r1, #0
 80026e2:	2004      	movs	r0, #4
 80026e4:	f002 fe7e 	bl	80053e4 <udelay(unsigned int, unsigned int)>
 80026e8:	2301      	movs	r3, #1
 80026ea:	4621      	mov	r1, r4
 80026ec:	6828      	ldr	r0, [r5, #0]
 80026ee:	461a      	mov	r2, r3
 80026f0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80026f4:	f000 bab0 	b.w	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80026f8:	20000728 	andcs	r0, r0, r8, lsr #14

080026fc <USART2_IRQHandler>:
 80026fc:	b510      	push	{r4, lr}
 80026fe:	2408      	movs	r4, #8
 8002700:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 8002704:	4975      	ldr	r1, [pc, #468]	; (80028dc <USART2_IRQHandler+0x1e0>)
 8002706:	f8c1 4c10 	str.w	r4, [r1, #3088]	; 0xc10
 800270a:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 800270e:	f013 0f02 	tst.w	r3, #2
 8002712:	4b73      	ldr	r3, [pc, #460]	; (80028e0 <USART2_IRQHandler+0x1e4>)
 8002714:	d018      	beq.n	8002748 <USART2_IRQHandler+0x4c>
 8002716:	f8d2 0800 	ldr.w	r0, [r2, #2048]	; 0x800
 800271a:	f020 0002 	bic.w	r0, r0, #2
 800271e:	f8c2 0800 	str.w	r0, [r2, #2048]	; 0x800
 8002722:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8002726:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800272a:	b962      	cbnz	r2, 8002746 <USART2_IRQHandler+0x4a>
 800272c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8002730:	2201      	movs	r2, #1
 8002732:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002736:	2310      	movs	r3, #16
 8002738:	f8c1 4c14 	str.w	r4, [r1, #3092]	; 0xc14
 800273c:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 8002740:	2320      	movs	r3, #32
 8002742:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 8002746:	bd10      	pop	{r4, pc}
 8002748:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 800274c:	f8d3 020c 	ldr.w	r0, [r3, #524]	; 0x20c
 8002750:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002754:	2807      	cmp	r0, #7
 8002756:	f200 80bc 	bhi.w	80028d2 <USART2_IRQHandler+0x1d6>
 800275a:	e8df f000 	tbb	[pc, r0]
 800275e:	41ba1804 			; <UNDEFINED> instruction: 0x41ba1804
 8002762:	a1807056 	orrge	r7, r0, r6, asr r0
 8002766:	701a      	strb	r2, [r3, #0]
 8002768:	2107      	movs	r1, #7
 800276a:	2201      	movs	r2, #1
 800276c:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8002770:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8002774:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002778:	f8d3 3424 	ldr.w	r3, [r3, #1060]	; 0x424
 800277c:	4a59      	ldr	r2, [pc, #356]	; (80028e4 <USART2_IRQHandler+0x1e8>)
 800277e:	b29b      	uxth	r3, r3
 8002780:	8193      	strh	r3, [r2, #12]
 8002782:	2210      	movs	r2, #16
 8002784:	4b55      	ldr	r3, [pc, #340]	; (80028dc <USART2_IRQHandler+0x1e0>)
 8002786:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800278a:	2220      	movs	r2, #32
 800278c:	e017      	b.n	80027be <USART2_IRQHandler+0xc2>
 800278e:	b11a      	cbz	r2, 8002798 <USART2_IRQHandler+0x9c>
 8002790:	2acc      	cmp	r2, #204	; 0xcc
 8002792:	d01b      	beq.n	80027cc <USART2_IRQHandler+0xd0>
 8002794:	2200      	movs	r2, #0
 8002796:	e05f      	b.n	8002858 <USART2_IRQHandler+0x15c>
 8002798:	701a      	strb	r2, [r3, #0]
 800279a:	2201      	movs	r2, #1
 800279c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80027a0:	4a50      	ldr	r2, [pc, #320]	; (80028e4 <USART2_IRQHandler+0x1e8>)
 80027a2:	6851      	ldr	r1, [r2, #4]
 80027a4:	3101      	adds	r1, #1
 80027a6:	6051      	str	r1, [r2, #4]
 80027a8:	2103      	movs	r1, #3
 80027aa:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 80027ae:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80027b2:	f8d3 3424 	ldr.w	r3, [r3, #1060]	; 0x424
 80027b6:	b29b      	uxth	r3, r3
 80027b8:	8193      	strh	r3, [r2, #12]
 80027ba:	2210      	movs	r2, #16
 80027bc:	4b47      	ldr	r3, [pc, #284]	; (80028dc <USART2_IRQHandler+0x1e0>)
 80027be:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 80027c2:	2208      	movs	r2, #8
 80027c4:	4b45      	ldr	r3, [pc, #276]	; (80028dc <USART2_IRQHandler+0x1e0>)
 80027c6:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80027ca:	e7bc      	b.n	8002746 <USART2_IRQHandler+0x4a>
 80027cc:	701a      	strb	r2, [r3, #0]
 80027ce:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 80027d2:	2201      	movs	r2, #1
 80027d4:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80027d8:	2204      	movs	r2, #4
 80027da:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 80027de:	e7ec      	b.n	80027ba <USART2_IRQHandler+0xbe>
 80027e0:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 80027e4:	545a      	strb	r2, [r3, r1]
 80027e6:	1c4a      	adds	r2, r1, #1
 80027e8:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 80027ec:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80027f0:	d95e      	bls.n	80028b0 <USART2_IRQHandler+0x1b4>
 80027f2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80027f6:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80027fa:	2200      	movs	r2, #0
 80027fc:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002800:	2210      	movs	r2, #16
 8002802:	4b36      	ldr	r3, [pc, #216]	; (80028dc <USART2_IRQHandler+0x1e0>)
 8002804:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8002808:	e7db      	b.n	80027c2 <USART2_IRQHandler+0xc6>
 800280a:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 800280e:	f8b3 4208 	ldrh.w	r4, [r3, #520]	; 0x208
 8002812:	545a      	strb	r2, [r3, r1]
 8002814:	1c48      	adds	r0, r1, #1
 8002816:	3917      	subs	r1, #23
 8002818:	4422      	add	r2, r4
 800281a:	29e9      	cmp	r1, #233	; 0xe9
 800281c:	f8c3 0204 	str.w	r0, [r3, #516]	; 0x204
 8002820:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8002824:	d807      	bhi.n	8002836 <USART2_IRQHandler+0x13a>
 8002826:	789a      	ldrb	r2, [r3, #2]
 8002828:	4290      	cmp	r0, r2
 800282a:	d104      	bne.n	8002836 <USART2_IRQHandler+0x13a>
 800282c:	2205      	movs	r2, #5
 800282e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002832:	4b2a      	ldr	r3, [pc, #168]	; (80028dc <USART2_IRQHandler+0x1e0>)
 8002834:	e7a9      	b.n	800278a <USART2_IRQHandler+0x8e>
 8002836:	f5b0 7f81 	cmp.w	r0, #258	; 0x102
 800283a:	d3c2      	bcc.n	80027c2 <USART2_IRQHandler+0xc6>
 800283c:	e7aa      	b.n	8002794 <USART2_IRQHandler+0x98>
 800283e:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 8002842:	545a      	strb	r2, [r3, r1]
 8002844:	3101      	adds	r1, #1
 8002846:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204
 800284a:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 800284e:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 8002852:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8002856:	2206      	movs	r2, #6
 8002858:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800285c:	e7b1      	b.n	80027c2 <USART2_IRQHandler+0xc6>
 800285e:	2020      	movs	r0, #32
 8002860:	f8c1 0c14 	str.w	r0, [r1, #3092]	; 0xc14
 8002864:	f8b3 4208 	ldrh.w	r4, [r3, #520]	; 0x208
 8002868:	f8d3 0204 	ldr.w	r0, [r3, #516]	; 0x204
 800286c:	541a      	strb	r2, [r3, r0]
 800286e:	1aa2      	subs	r2, r4, r2
 8002870:	b292      	uxth	r2, r2
 8002872:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8002876:	b912      	cbnz	r2, 800287e <USART2_IRQHandler+0x182>
 8002878:	785a      	ldrb	r2, [r3, #1]
 800287a:	2a01      	cmp	r2, #1
 800287c:	d003      	beq.n	8002886 <USART2_IRQHandler+0x18a>
 800287e:	2200      	movs	r2, #0
 8002880:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8002884:	e786      	b.n	8002794 <USART2_IRQHandler+0x98>
 8002886:	3001      	adds	r0, #1
 8002888:	4a17      	ldr	r2, [pc, #92]	; (80028e8 <USART2_IRQHandler+0x1ec>)
 800288a:	f440 4080 	orr.w	r0, r0, #16384	; 0x4000
 800288e:	f8c3 0204 	str.w	r0, [r3, #516]	; 0x204
 8002892:	6850      	ldr	r0, [r2, #4]
 8002894:	4a15      	ldr	r2, [pc, #84]	; (80028ec <USART2_IRQHandler+0x1f0>)
 8002896:	6010      	str	r0, [r2, #0]
 8002898:	2210      	movs	r2, #16
 800289a:	f8c1 2c14 	str.w	r2, [r1, #3092]	; 0xc14
 800289e:	e779      	b.n	8002794 <USART2_IRQHandler+0x98>
 80028a0:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 80028a4:	2917      	cmp	r1, #23
 80028a6:	bf9e      	ittt	ls
 80028a8:	545a      	strbls	r2, [r3, r1]
 80028aa:	3101      	addls	r1, #1
 80028ac:	f8c3 1204 	strls.w	r1, [r3, #516]	; 0x204
 80028b0:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80028b4:	480b      	ldr	r0, [pc, #44]	; (80028e4 <USART2_IRQHandler+0x1e8>)
 80028b6:	f8d1 2424 	ldr.w	r2, [r1, #1060]	; 0x424
 80028ba:	8983      	ldrh	r3, [r0, #12]
 80028bc:	b292      	uxth	r2, r2
 80028be:	b29b      	uxth	r3, r3
 80028c0:	f1c3 0304 	rsb	r3, r3, #4
 80028c4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80028c8:	b29b      	uxth	r3, r3
 80028ca:	8182      	strh	r2, [r0, #12]
 80028cc:	f8c1 3434 	str.w	r3, [r1, #1076]	; 0x434
 80028d0:	e777      	b.n	80027c2 <USART2_IRQHandler+0xc6>
 80028d2:	2200      	movs	r2, #0
 80028d4:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80028d8:	e7be      	b.n	8002858 <USART2_IRQHandler+0x15c>
 80028da:	bf00      	nop
 80028dc:	40010000 	andmi	r0, r1, r0
 80028e0:	200000f8 	strdcs	r0, [r0], -r8
 80028e4:	20000714 	andcs	r0, r0, r4, lsl r7
 80028e8:	e0001000 	and	r1, r0, r0
 80028ec:	2000072c 	andcs	r0, r0, ip, lsr #14

080028f0 <TIMER1_IRQHandler>:
 80028f0:	b538      	push	{r3, r4, r5, lr}
 80028f2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80028f6:	2008      	movs	r0, #8
 80028f8:	4a23      	ldr	r2, [pc, #140]	; (8002988 <TIMER1_IRQHandler+0x98>)
 80028fa:	691c      	ldr	r4, [r3, #16]
 80028fc:	4923      	ldr	r1, [pc, #140]	; (800298c <TIMER1_IRQHandler+0x9c>)
 80028fe:	8813      	ldrh	r3, [r2, #0]
 8002900:	f8c1 0c10 	str.w	r0, [r1, #3088]	; 0xc10
 8002904:	07a1      	lsls	r1, r4, #30
 8002906:	b29b      	uxth	r3, r3
 8002908:	d51b      	bpl.n	8002942 <TIMER1_IRQHandler+0x52>
 800290a:	07dd      	lsls	r5, r3, #31
 800290c:	d50f      	bpl.n	800292e <TIMER1_IRQHandler+0x3e>
 800290e:	8813      	ldrh	r3, [r2, #0]
 8002910:	4d1f      	ldr	r5, [pc, #124]	; (8002990 <TIMER1_IRQHandler+0xa0>)
 8002912:	b29b      	uxth	r3, r3
 8002914:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002918:	8013      	strh	r3, [r2, #0]
 800291a:	2110      	movs	r1, #16
 800291c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002920:	2203      	movs	r2, #3
 8002922:	4628      	mov	r0, r5
 8002924:	f001 ffb6 	bl	8004894 <gpio_init>
 8002928:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800292c:	616b      	str	r3, [r5, #20]
 800292e:	4621      	mov	r1, r4
 8002930:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002934:	f002 f9dd 	bl	8004cf2 <timer_interrupt_flag_clear>
 8002938:	2208      	movs	r2, #8
 800293a:	4b14      	ldr	r3, [pc, #80]	; (800298c <TIMER1_IRQHandler+0x9c>)
 800293c:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8002940:	bd38      	pop	{r3, r4, r5, pc}
 8002942:	0760      	lsls	r0, r4, #29
 8002944:	d509      	bpl.n	800295a <TIMER1_IRQHandler+0x6a>
 8002946:	05d9      	lsls	r1, r3, #23
 8002948:	d5f1      	bpl.n	800292e <TIMER1_IRQHandler+0x3e>
 800294a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800294e:	2203      	movs	r2, #3
 8002950:	2118      	movs	r1, #24
 8002952:	480f      	ldr	r0, [pc, #60]	; (8002990 <TIMER1_IRQHandler+0xa0>)
 8002954:	f001 ff9e 	bl	8004894 <gpio_init>
 8002958:	e7e9      	b.n	800292e <TIMER1_IRQHandler+0x3e>
 800295a:	0722      	lsls	r2, r4, #28
 800295c:	d5e7      	bpl.n	800292e <TIMER1_IRQHandler+0x3e>
 800295e:	05db      	lsls	r3, r3, #23
 8002960:	d5e5      	bpl.n	800292e <TIMER1_IRQHandler+0x3e>
 8002962:	4b0c      	ldr	r3, [pc, #48]	; (8002994 <TIMER1_IRQHandler+0xa4>)
 8002964:	2180      	movs	r1, #128	; 0x80
 8002966:	69da      	ldr	r2, [r3, #28]
 8002968:	480b      	ldr	r0, [pc, #44]	; (8002998 <TIMER1_IRQHandler+0xa8>)
 800296a:	f022 0201 	bic.w	r2, r2, #1
 800296e:	61da      	str	r2, [r3, #28]
 8002970:	4a0a      	ldr	r2, [pc, #40]	; (800299c <TIMER1_IRQHandler+0xac>)
 8002972:	629a      	str	r2, [r3, #40]	; 0x28
 8002974:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 8002978:	621a      	str	r2, [r3, #32]
 800297a:	69da      	ldr	r2, [r3, #28]
 800297c:	f042 0201 	orr.w	r2, r2, #1
 8002980:	61da      	str	r2, [r3, #28]
 8002982:	f002 fa55 	bl	8004e30 <usart_dma_transmit_config>
 8002986:	e7d2      	b.n	800292e <TIMER1_IRQHandler+0x3e>
 8002988:	20000724 	andcs	r0, r0, r4, lsr #14
 800298c:	40010000 	andmi	r0, r1, r0
 8002990:	40011000 	andmi	r1, r1, r0
 8002994:	40020000 	andmi	r0, r2, r0
 8002998:	40004800 	andmi	r4, r0, r0, lsl #16
 800299c:	20000308 	andcs	r0, r0, r8, lsl #6

080029a0 <TIMER2_IRQHandler>:
 80029a0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80029a4:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 80029a8:	078b      	lsls	r3, r1, #30
 80029aa:	d511      	bpl.n	80029d0 <TIMER2_IRQHandler+0x30>
 80029ac:	4b13      	ldr	r3, [pc, #76]	; (80029fc <TIMER2_IRQHandler+0x5c>)
 80029ae:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 80029b2:	2a03      	cmp	r2, #3
 80029b4:	d10f      	bne.n	80029d6 <TIMER2_IRQHandler+0x36>
 80029b6:	2200      	movs	r2, #0
 80029b8:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 80029bc:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 80029c0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80029c4:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80029c8:	2210      	movs	r2, #16
 80029ca:	4b0d      	ldr	r3, [pc, #52]	; (8002a00 <TIMER2_IRQHandler+0x60>)
 80029cc:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80029d0:	480c      	ldr	r0, [pc, #48]	; (8002a04 <TIMER2_IRQHandler+0x64>)
 80029d2:	f002 b98e 	b.w	8004cf2 <timer_interrupt_flag_clear>
 80029d6:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 80029da:	2a07      	cmp	r2, #7
 80029dc:	d1f8      	bne.n	80029d0 <TIMER2_IRQHandler+0x30>
 80029de:	2200      	movs	r2, #0
 80029e0:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 80029e4:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 80029e8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80029ec:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80029f0:	2210      	movs	r2, #16
 80029f2:	4b03      	ldr	r3, [pc, #12]	; (8002a00 <TIMER2_IRQHandler+0x60>)
 80029f4:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80029f8:	2220      	movs	r2, #32
 80029fa:	e7e7      	b.n	80029cc <TIMER2_IRQHandler+0x2c>
 80029fc:	200000f8 	strdcs	r0, [r0], -r8
 8002a00:	40010000 	andmi	r0, r1, r0
 8002a04:	40000400 	andmi	r0, r0, r0, lsl #8

08002a08 <TIMER3_IRQHandler>:
 8002a08:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002a0c:	4802      	ldr	r0, [pc, #8]	; (8002a18 <TIMER3_IRQHandler+0x10>)
 8002a0e:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 8002a12:	f002 b96e 	b.w	8004cf2 <timer_interrupt_flag_clear>
 8002a16:	bf00      	nop
 8002a18:	40000800 	andmi	r0, r0, r0, lsl #16

08002a1c <TIMER6_IRQHandler>:
 8002a1c:	4b05      	ldr	r3, [pc, #20]	; (8002a34 <TIMER6_IRQHandler+0x18>)
 8002a1e:	4806      	ldr	r0, [pc, #24]	; (8002a38 <TIMER6_IRQHandler+0x1c>)
 8002a20:	685a      	ldr	r2, [r3, #4]
 8002a22:	6899      	ldr	r1, [r3, #8]
 8002a24:	1a52      	subs	r2, r2, r1
 8002a26:	601a      	str	r2, [r3, #0]
 8002a28:	685a      	ldr	r2, [r3, #4]
 8002a2a:	2101      	movs	r1, #1
 8002a2c:	609a      	str	r2, [r3, #8]
 8002a2e:	f002 b960 	b.w	8004cf2 <timer_interrupt_flag_clear>
 8002a32:	bf00      	nop
 8002a34:	20000714 	andcs	r0, r0, r4, lsl r7
 8002a38:	40001400 	andmi	r1, r0, r0, lsl #8

08002a3c <Dmx::ClearData(unsigned int)>:
 8002a3c:	f44f 7301 	mov.w	r3, #516	; 0x204
 8002a40:	b510      	push	{r4, lr}
 8002a42:	2400      	movs	r4, #0
 8002a44:	4a08      	ldr	r2, [pc, #32]	; (8002a68 <Dmx::ClearData(unsigned int)+0x2c>)
 8002a46:	fb03 2301 	mla	r3, r3, r1, r2
 8002a4a:	f203 2002 	addw	r0, r3, #514	; 0x202
 8002a4e:	f823 4b02 	strh.w	r4, [r3], #2
 8002a52:	4283      	cmp	r3, r0
 8002a54:	d1fb      	bne.n	8002a4e <Dmx::ClearData(unsigned int)+0x12>
 8002a56:	f44f 7301 	mov.w	r3, #516	; 0x204
 8002a5a:	fb03 2201 	mla	r2, r3, r1, r2
 8002a5e:	f240 2301 	movw	r3, #513	; 0x201
 8002a62:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 8002a66:	bd10      	pop	{r4, pc}
 8002a68:	20000308 	andcs	r0, r0, r8, lsl #6

08002a6c <Dmx::StartData(unsigned int, unsigned int)>:
 8002a6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002a6e:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8002a72:	6943      	ldr	r3, [r0, #20]
 8002a74:	460c      	mov	r4, r1
 8002a76:	4615      	mov	r5, r2
 8002a78:	b085      	sub	sp, #20
 8002a7a:	2b00      	cmp	r3, #0
 8002a7c:	d16c      	bne.n	8002b58 <Dmx::StartData(unsigned int, unsigned int)+0xec>
 8002a7e:	4e48      	ldr	r6, [pc, #288]	; (8002ba0 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 8002a80:	8834      	ldrh	r4, [r6, #0]
 8002a82:	b2a4      	uxth	r4, r4
 8002a84:	2c00      	cmp	r4, #0
 8002a86:	d15b      	bne.n	8002b40 <Dmx::StartData(unsigned int, unsigned int)+0xd4>
 8002a88:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 8002a8c:	f001 ff94 	bl	80049b8 <rcu_periph_clock_enable>
 8002a90:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002a94:	f002 f836 	bl	8004b04 <timer_deinit>
 8002a98:	236b      	movs	r3, #107	; 0x6b
 8002a9a:	9300      	str	r3, [sp, #0]
 8002a9c:	4b41      	ldr	r3, [pc, #260]	; (8002ba4 <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 8002a9e:	4669      	mov	r1, sp
 8002aa0:	681b      	ldr	r3, [r3, #0]
 8002aa2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002aa6:	9302      	str	r3, [sp, #8]
 8002aa8:	f8ad 4004 	strh.w	r4, [sp, #4]
 8002aac:	f8ad 400c 	strh.w	r4, [sp, #12]
 8002ab0:	f88d 400e 	strb.w	r4, [sp, #14]
 8002ab4:	f002 f888 	bl	8004bc8 <timer_init>
 8002ab8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002abc:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002ac0:	f002 f91a 	bl	8004cf8 <timer_flag_clear>
 8002ac4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002ac8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002acc:	f002 f911 	bl	8004cf2 <timer_interrupt_flag_clear>
 8002ad0:	2210      	movs	r2, #16
 8002ad2:	4621      	mov	r1, r4
 8002ad4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002ad8:	f002 f8d3 	bl	8004c82 <timer_channel_output_mode_config>
 8002adc:	2210      	movs	r2, #16
 8002ade:	2101      	movs	r1, #1
 8002ae0:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002ae4:	f002 f8cd 	bl	8004c82 <timer_channel_output_mode_config>
 8002ae8:	4f2f      	ldr	r7, [pc, #188]	; (8002ba8 <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 8002aea:	2210      	movs	r2, #16
 8002aec:	2102      	movs	r1, #2
 8002aee:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002af2:	f002 f8c6 	bl	8004c82 <timer_channel_output_mode_config>
 8002af6:	4622      	mov	r2, r4
 8002af8:	4621      	mov	r1, r4
 8002afa:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002afe:	f002 f8e6 	bl	8004cce <timer_channel_output_pulse_value_config>
 8002b02:	2101      	movs	r1, #1
 8002b04:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002b08:	883a      	ldrh	r2, [r7, #0]
 8002b0a:	f002 f8e0 	bl	8004cce <timer_channel_output_pulse_value_config>
 8002b0e:	4b27      	ldr	r3, [pc, #156]	; (8002bac <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 8002b10:	683a      	ldr	r2, [r7, #0]
 8002b12:	681b      	ldr	r3, [r3, #0]
 8002b14:	2102      	movs	r1, #2
 8002b16:	441a      	add	r2, r3
 8002b18:	b292      	uxth	r2, r2
 8002b1a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002b1e:	f002 f8d6 	bl	8004cce <timer_channel_output_pulse_value_config>
 8002b22:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002b26:	210e      	movs	r1, #14
 8002b28:	f002 f8df 	bl	8004cea <timer_interrupt_enable>
 8002b2c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002b30:	4b1f      	ldr	r3, [pc, #124]	; (8002bb0 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 8002b32:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002b36:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 8002b3a:	601a      	str	r2, [r3, #0]
 8002b3c:	f002 f89c 	bl	8004c78 <timer_enable>
 8002b40:	2201      	movs	r2, #1
 8002b42:	8831      	ldrh	r1, [r6, #0]
 8002b44:	fa02 f305 	lsl.w	r3, r2, r5
 8002b48:	430b      	orrs	r3, r1
 8002b4a:	b29b      	uxth	r3, r3
 8002b4c:	8033      	strh	r3, [r6, #0]
 8002b4e:	4b19      	ldr	r3, [pc, #100]	; (8002bb4 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 8002b50:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8002b54:	b005      	add	sp, #20
 8002b56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002b58:	f44f 7204 	mov.w	r2, #528	; 0x210
 8002b5c:	4b16      	ldr	r3, [pc, #88]	; (8002bb8 <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 8002b5e:	fb02 3305 	mla	r3, r2, r5, r3
 8002b62:	2200      	movs	r2, #0
 8002b64:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002b68:	2107      	movs	r1, #7
 8002b6a:	4620      	mov	r0, r4
 8002b6c:	f002 f966 	bl	8004e3c <usart_flag_get>
 8002b70:	2800      	cmp	r0, #0
 8002b72:	d0f9      	beq.n	8002b68 <Dmx::StartData(unsigned int, unsigned int)+0xfc>
 8002b74:	4620      	mov	r0, r4
 8002b76:	4911      	ldr	r1, [pc, #68]	; (8002bbc <Dmx::StartData(unsigned int, unsigned int)+0x150>)
 8002b78:	f002 f982 	bl	8004e80 <usart_interrupt_flag_clear>
 8002b7c:	f240 3105 	movw	r1, #773	; 0x305
 8002b80:	4620      	mov	r0, r4
 8002b82:	f002 f966 	bl	8004e52 <usart_interrupt_enable>
 8002b86:	2202      	movs	r2, #2
 8002b88:	4b0a      	ldr	r3, [pc, #40]	; (8002bb4 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 8002b8a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8002b8e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002b92:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8002b96:	f043 0302 	orr.w	r3, r3, #2
 8002b9a:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8002b9e:	e7d9      	b.n	8002b54 <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 8002ba0:	20000724 	andcs	r0, r0, r4, lsr #14
 8002ba4:	20000008 	andcs	r0, r0, r8
 8002ba8:	20000010 	andcs	r0, r0, r0, lsl r0
 8002bac:	2000000c 	andcs	r0, r0, ip
 8002bb0:	e000e100 	and	lr, r0, r0, lsl #2
 8002bb4:	2000050c 	andcs	r0, r0, ip, lsl #10
 8002bb8:	200000f8 	strdcs	r0, [r0], -r8
 8002bbc:	00050305 	andeq	r0, r5, r5, lsl #6

08002bc0 <Dmx::StopData(unsigned int, unsigned int)>:
 8002bc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002bc4:	4f21      	ldr	r7, [pc, #132]	; (8002c4c <Dmx::StopData(unsigned int, unsigned int)+0x8c>)
 8002bc6:	4688      	mov	r8, r1
 8002bc8:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
 8002bcc:	4614      	mov	r4, r2
 8002bce:	b323      	cbz	r3, 8002c1a <Dmx::StopData(unsigned int, unsigned int)+0x5a>
 8002bd0:	6943      	ldr	r3, [r0, #20]
 8002bd2:	bb23      	cbnz	r3, 8002c1e <Dmx::StopData(unsigned int, unsigned int)+0x5e>
 8002bd4:	2601      	movs	r6, #1
 8002bd6:	4d1e      	ldr	r5, [pc, #120]	; (8002c50 <Dmx::StopData(unsigned int, unsigned int)+0x90>)
 8002bd8:	fa06 f202 	lsl.w	r2, r6, r2
 8002bdc:	882b      	ldrh	r3, [r5, #0]
 8002bde:	b29b      	uxth	r3, r3
 8002be0:	ea23 0302 	bic.w	r3, r3, r2
 8002be4:	802b      	strh	r3, [r5, #0]
 8002be6:	f3bf 8f5f 	dmb	sy
 8002bea:	882b      	ldrh	r3, [r5, #0]
 8002bec:	f104 0208 	add.w	r2, r4, #8
 8002bf0:	b29b      	uxth	r3, r3
 8002bf2:	4096      	lsls	r6, r2
 8002bf4:	ea36 0303 	bics.w	r3, r6, r3
 8002bf8:	d105      	bne.n	8002c06 <Dmx::StopData(unsigned int, unsigned int)+0x46>
 8002bfa:	2107      	movs	r1, #7
 8002bfc:	4640      	mov	r0, r8
 8002bfe:	f002 f91d 	bl	8004e3c <usart_flag_get>
 8002c02:	2801      	cmp	r0, #1
 8002c04:	d1f9      	bne.n	8002bfa <Dmx::StopData(unsigned int, unsigned int)+0x3a>
 8002c06:	882b      	ldrh	r3, [r5, #0]
 8002c08:	b29b      	uxth	r3, r3
 8002c0a:	ea23 0306 	bic.w	r3, r3, r6
 8002c0e:	802b      	strh	r3, [r5, #0]
 8002c10:	f3bf 8f4f 	dsb	sy
 8002c14:	2300      	movs	r3, #0
 8002c16:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 8002c1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002c1e:	f240 3105 	movw	r1, #773	; 0x305
 8002c22:	4640      	mov	r0, r8
 8002c24:	f002 f920 	bl	8004e68 <usart_interrupt_disable>
 8002c28:	f44f 7204 	mov.w	r2, #528	; 0x210
 8002c2c:	4b09      	ldr	r3, [pc, #36]	; (8002c54 <Dmx::StopData(unsigned int, unsigned int)+0x94>)
 8002c2e:	fb02 3304 	mla	r3, r2, r4, r3
 8002c32:	2200      	movs	r2, #0
 8002c34:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002c38:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002c3c:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8002c40:	f023 0302 	bic.w	r3, r3, #2
 8002c44:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8002c48:	e7e4      	b.n	8002c14 <Dmx::StopData(unsigned int, unsigned int)+0x54>
 8002c4a:	bf00      	nop
 8002c4c:	2000050c 	andcs	r0, r0, ip, lsl #10
 8002c50:	20000724 	andcs	r0, r0, r4, lsr #14
 8002c54:	200000f8 	strdcs	r0, [r0], -r8

08002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 8002c58:	b570      	push	{r4, r5, r6, lr}
 8002c5a:	461d      	mov	r5, r3
 8002c5c:	6943      	ldr	r3, [r0, #20]
 8002c5e:	4606      	mov	r6, r0
 8002c60:	4293      	cmp	r3, r2
 8002c62:	4614      	mov	r4, r2
 8002c64:	d014      	beq.n	8002c90 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 8002c66:	6142      	str	r2, [r0, #20]
 8002c68:	4910      	ldr	r1, [pc, #64]	; (8002cac <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8002c6a:	2200      	movs	r2, #0
 8002c6c:	f7ff ffa8 	bl	8002bc0 <Dmx::StopData(unsigned int, unsigned int)>
 8002c70:	b934      	cbnz	r4, 8002c80 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 8002c72:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002c76:	4b0e      	ldr	r3, [pc, #56]	; (8002cb0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 8002c78:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8002c7c:	b94d      	cbnz	r5, 8002c92 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 8002c7e:	bd70      	pop	{r4, r5, r6, pc}
 8002c80:	2c01      	cmp	r4, #1
 8002c82:	d1fb      	bne.n	8002c7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 8002c84:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002c88:	4b09      	ldr	r3, [pc, #36]	; (8002cb0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 8002c8a:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8002c8e:	e7f5      	b.n	8002c7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 8002c90:	b135      	cbz	r5, 8002ca0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 8002c92:	4630      	mov	r0, r6
 8002c94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002c98:	2200      	movs	r2, #0
 8002c9a:	4904      	ldr	r1, [pc, #16]	; (8002cac <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8002c9c:	f7ff bee6 	b.w	8002a6c <Dmx::StartData(unsigned int, unsigned int)>
 8002ca0:	462a      	mov	r2, r5
 8002ca2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002ca6:	4901      	ldr	r1, [pc, #4]	; (8002cac <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8002ca8:	f7ff bf8a 	b.w	8002bc0 <Dmx::StopData(unsigned int, unsigned int)>
 8002cac:	40004800 	andmi	r4, r0, r0, lsl #16
 8002cb0:	40010000 	andmi	r0, r1, r0

08002cb4 <Dmx::Dmx()>:
 8002cb4:	225c      	movs	r2, #92	; 0x5c
 8002cb6:	230c      	movs	r3, #12
 8002cb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002cbc:	e9c0 2300 	strd	r2, r3, [r0]
 8002cc0:	f246 13a8 	movw	r3, #25000	; 0x61a8
 8002cc4:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8002cc8:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002ccc:	2400      	movs	r4, #0
 8002cce:	4605      	mov	r5, r0
 8002cd0:	8203      	strh	r3, [r0, #16]
 8002cd2:	4b5d      	ldr	r3, [pc, #372]	; (8002e48 <Dmx::Dmx()+0x194>)
 8002cd4:	b08b      	sub	sp, #44	; 0x2c
 8002cd6:	6018      	str	r0, [r3, #0]
 8002cd8:	4b5c      	ldr	r3, [pc, #368]	; (8002e4c <Dmx::Dmx()+0x198>)
 8002cda:	2203      	movs	r2, #3
 8002cdc:	801c      	strh	r4, [r3, #0]
 8002cde:	2110      	movs	r1, #16
 8002ce0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002ce4:	485a      	ldr	r0, [pc, #360]	; (8002e50 <Dmx::Dmx()+0x19c>)
 8002ce6:	f001 fdd5 	bl	8004894 <gpio_init>
 8002cea:	4621      	mov	r1, r4
 8002cec:	4628      	mov	r0, r5
 8002cee:	f7ff fea5 	bl	8002a3c <Dmx::ClearData(unsigned int)>
 8002cf2:	4b58      	ldr	r3, [pc, #352]	; (8002e54 <Dmx::Dmx()+0x1a0>)
 8002cf4:	2201      	movs	r2, #1
 8002cf6:	4628      	mov	r0, r5
 8002cf8:	601c      	str	r4, [r3, #0]
 8002cfa:	4623      	mov	r3, r4
 8002cfc:	f7ff ffac 	bl	8002c58 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8002d00:	4b55      	ldr	r3, [pc, #340]	; (8002e58 <Dmx::Dmx()+0x1a4>)
 8002d02:	4e56      	ldr	r6, [pc, #344]	; (8002e5c <Dmx::Dmx()+0x1a8>)
 8002d04:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 8002d08:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8002d0c:	f001 fe54 	bl	80049b8 <rcu_periph_clock_enable>
 8002d10:	f240 5001 	movw	r0, #1281	; 0x501
 8002d14:	f001 fe50 	bl	80049b8 <rcu_periph_clock_enable>
 8002d18:	4630      	mov	r0, r6
 8002d1a:	2101      	movs	r1, #1
 8002d1c:	f001 fcba 	bl	8004694 <dma_deinit>
 8002d20:	4b4f      	ldr	r3, [pc, #316]	; (8002e60 <Dmx::Dmx()+0x1ac>)
 8002d22:	2701      	movs	r7, #1
 8002d24:	e9cd 3403 	strd	r3, r4, [sp, #12]
 8002d28:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002d2c:	9308      	str	r3, [sp, #32]
 8002d2e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002d32:	aa03      	add	r2, sp, #12
 8002d34:	4639      	mov	r1, r7
 8002d36:	4630      	mov	r0, r6
 8002d38:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002d3c:	9406      	str	r4, [sp, #24]
 8002d3e:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 8002d42:	f001 fcc3 	bl	80046cc <dma_init>
 8002d46:	4639      	mov	r1, r7
 8002d48:	4630      	mov	r0, r6
 8002d4a:	f001 fcf9 	bl	8004740 <dma_circulation_disable>
 8002d4e:	4639      	mov	r1, r7
 8002d50:	4630      	mov	r0, r6
 8002d52:	f001 fd05 	bl	8004760 <dma_memory_to_memory_disable>
 8002d56:	f5a6 36fe 	sub.w	r6, r6, #130048	; 0x1fc00
 8002d5a:	f240 7001 	movw	r0, #1793	; 0x701
 8002d5e:	f001 fe2b 	bl	80049b8 <rcu_periph_clock_enable>
 8002d62:	4630      	mov	r0, r6
 8002d64:	f001 fece 	bl	8004b04 <timer_deinit>
 8002d68:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 8002d6c:	236b      	movs	r3, #107	; 0x6b
 8002d6e:	4630      	mov	r0, r6
 8002d70:	a903      	add	r1, sp, #12
 8002d72:	9303      	str	r3, [sp, #12]
 8002d74:	f8ad 4010 	strh.w	r4, [sp, #16]
 8002d78:	f8cd 9014 	str.w	r9, [sp, #20]
 8002d7c:	f8ad 4018 	strh.w	r4, [sp, #24]
 8002d80:	f88d 401a 	strb.w	r4, [sp, #26]
 8002d84:	f001 ff20 	bl	8004bc8 <timer_init>
 8002d88:	4649      	mov	r1, r9
 8002d8a:	4630      	mov	r0, r6
 8002d8c:	f001 ffb4 	bl	8004cf8 <timer_flag_clear>
 8002d90:	4649      	mov	r1, r9
 8002d92:	4630      	mov	r0, r6
 8002d94:	f001 ffad 	bl	8004cf2 <timer_interrupt_flag_clear>
 8002d98:	4621      	mov	r1, r4
 8002d9a:	4630      	mov	r0, r6
 8002d9c:	2210      	movs	r2, #16
 8002d9e:	f001 ff70 	bl	8004c82 <timer_channel_output_mode_config>
 8002da2:	4639      	mov	r1, r7
 8002da4:	4630      	mov	r0, r6
 8002da6:	2210      	movs	r2, #16
 8002da8:	f001 ff6b 	bl	8004c82 <timer_channel_output_mode_config>
 8002dac:	4630      	mov	r0, r6
 8002dae:	2210      	movs	r2, #16
 8002db0:	2102      	movs	r1, #2
 8002db2:	f001 ff66 	bl	8004c82 <timer_channel_output_mode_config>
 8002db6:	2210      	movs	r2, #16
 8002db8:	2103      	movs	r1, #3
 8002dba:	4630      	mov	r0, r6
 8002dbc:	f001 ff61 	bl	8004c82 <timer_channel_output_mode_config>
 8002dc0:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8002dc4:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8002e64 <Dmx::Dmx()+0x1b0>
 8002dc8:	4630      	mov	r0, r6
 8002dca:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 8002dce:	f8c8 3000 	str.w	r3, [r8]
 8002dd2:	f506 5680 	add.w	r6, r6, #4096	; 0x1000
 8002dd6:	f001 ff4f 	bl	8004c78 <timer_enable>
 8002dda:	f240 7005 	movw	r0, #1797	; 0x705
 8002dde:	f001 fdeb 	bl	80049b8 <rcu_periph_clock_enable>
 8002de2:	4630      	mov	r0, r6
 8002de4:	f001 fe8e 	bl	8004b04 <timer_deinit>
 8002de8:	f642 232f 	movw	r3, #10799	; 0x2a2f
 8002dec:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002df0:	f242 7310 	movw	r3, #10000	; 0x2710
 8002df4:	4630      	mov	r0, r6
 8002df6:	a903      	add	r1, sp, #12
 8002df8:	9305      	str	r3, [sp, #20]
 8002dfa:	f001 fee5 	bl	8004bc8 <timer_init>
 8002dfe:	4649      	mov	r1, r9
 8002e00:	4630      	mov	r0, r6
 8002e02:	f001 ff79 	bl	8004cf8 <timer_flag_clear>
 8002e06:	4649      	mov	r1, r9
 8002e08:	4630      	mov	r0, r6
 8002e0a:	f001 ff72 	bl	8004cf2 <timer_interrupt_flag_clear>
 8002e0e:	4639      	mov	r1, r7
 8002e10:	4630      	mov	r0, r6
 8002e12:	f001 ff6a 	bl	8004cea <timer_interrupt_enable>
 8002e16:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8002e1a:	4630      	mov	r0, r6
 8002e1c:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 8002e20:	f8c8 3004 	str.w	r3, [r8, #4]
 8002e24:	f001 ff28 	bl	8004c78 <timer_enable>
 8002e28:	2302      	movs	r3, #2
 8002e2a:	2208      	movs	r2, #8
 8002e2c:	9300      	str	r3, [sp, #0]
 8002e2e:	490e      	ldr	r1, [pc, #56]	; (8002e68 <Dmx::Dmx()+0x1b4>)
 8002e30:	4623      	mov	r3, r4
 8002e32:	480e      	ldr	r0, [pc, #56]	; (8002e6c <Dmx::Dmx()+0x1b8>)
 8002e34:	f002 f9d6 	bl	80051e4 <gd32_uart_begin>
 8002e38:	2380      	movs	r3, #128	; 0x80
 8002e3a:	4628      	mov	r0, r5
 8002e3c:	f8c8 3004 	str.w	r3, [r8, #4]
 8002e40:	b00b      	add	sp, #44	; 0x2c
 8002e42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002e46:	bf00      	nop
 8002e48:	20000728 	andcs	r0, r0, r8, lsr #14
 8002e4c:	20000724 	andcs	r0, r0, r4, lsr #14
 8002e50:	40010c00 	andmi	r0, r1, r0, lsl #24
 8002e54:	2000050c 	andcs	r0, r0, ip, lsl #10
 8002e58:	200000f8 	strdcs	r0, [r0], -r8
 8002e5c:	40020000 	andmi	r0, r2, r0
 8002e60:	40004804 	andmi	r4, r0, r4, lsl #16
 8002e64:	e000e100 	and	lr, r0, r0, lsl #2
 8002e68:	0003d090 	muleq	r3, r0, r0
 8002e6c:	40004800 	andmi	r4, r0, r0, lsl #16

08002e70 <Dmx::SetDmxPeriodTime(unsigned int)>:
 8002e70:	4b13      	ldr	r3, [pc, #76]	; (8002ec0 <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 8002e72:	b570      	push	{r4, r5, r6, lr}
 8002e74:	60c1      	str	r1, [r0, #12]
 8002e76:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 8002e7a:	232c      	movs	r3, #44	; 0x2c
 8002e7c:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 8002e80:	4d10      	ldr	r5, [pc, #64]	; (8002ec4 <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 8002e82:	4c11      	ldr	r4, [pc, #68]	; (8002ec8 <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 8002e84:	4358      	muls	r0, r3
 8002e86:	682a      	ldr	r2, [r5, #0]
 8002e88:	6823      	ldr	r3, [r4, #0]
 8002e8a:	4413      	add	r3, r2
 8002e8c:	4403      	add	r3, r0
 8002e8e:	42b3      	cmp	r3, r6
 8002e90:	d908      	bls.n	8002ea4 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 8002e92:	2ab0      	cmp	r2, #176	; 0xb0
 8002e94:	4613      	mov	r3, r2
 8002e96:	bf28      	it	cs
 8002e98:	23b0      	movcs	r3, #176	; 0xb0
 8002e9a:	220c      	movs	r2, #12
 8002e9c:	602b      	str	r3, [r5, #0]
 8002e9e:	4413      	add	r3, r2
 8002ea0:	6022      	str	r2, [r4, #0]
 8002ea2:	4403      	add	r3, r0
 8002ea4:	b109      	cbz	r1, 8002eaa <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 8002ea6:	428b      	cmp	r3, r1
 8002ea8:	d906      	bls.n	8002eb8 <Dmx::SetDmxPeriodTime(unsigned int)+0x48>
 8002eaa:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 8002eae:	f240 43b4 	movw	r3, #1204	; 0x4b4
 8002eb2:	4299      	cmp	r1, r3
 8002eb4:	bf38      	it	cc
 8002eb6:	4619      	movcc	r1, r3
 8002eb8:	4b04      	ldr	r3, [pc, #16]	; (8002ecc <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 8002eba:	6019      	str	r1, [r3, #0]
 8002ebc:	bd70      	pop	{r4, r5, r6, pc}
 8002ebe:	bf00      	nop
 8002ec0:	20000308 	andcs	r0, r0, r8, lsl #6
 8002ec4:	20000010 	andcs	r0, r0, r0, lsl r0
 8002ec8:	2000000c 	andcs	r0, r0, ip
 8002ecc:	20000008 	andcs	r0, r0, r8

08002ed0 <Dmx::SetDmxBreakTime(unsigned int)>:
 8002ed0:	295c      	cmp	r1, #92	; 0x5c
 8002ed2:	bf38      	it	cc
 8002ed4:	215c      	movcc	r1, #92	; 0x5c
 8002ed6:	4b02      	ldr	r3, [pc, #8]	; (8002ee0 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 8002ed8:	6019      	str	r1, [r3, #0]
 8002eda:	68c1      	ldr	r1, [r0, #12]
 8002edc:	f7ff bfc8 	b.w	8002e70 <Dmx::SetDmxPeriodTime(unsigned int)>
 8002ee0:	20000010 	andcs	r0, r0, r0, lsl r0

08002ee4 <Dmx::SetDmxMabTime(unsigned int)>:
 8002ee4:	290c      	cmp	r1, #12
 8002ee6:	bf38      	it	cc
 8002ee8:	210c      	movcc	r1, #12
 8002eea:	4b02      	ldr	r3, [pc, #8]	; (8002ef4 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 8002eec:	6019      	str	r1, [r3, #0]
 8002eee:	68c1      	ldr	r1, [r0, #12]
 8002ef0:	f7ff bfbe 	b.w	8002e70 <Dmx::SetDmxPeriodTime(unsigned int)>
 8002ef4:	2000000c 	andcs	r0, r0, ip

08002ef8 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)>:
 8002ef8:	b4f0      	push	{r4, r5, r6, r7}
 8002efa:	8a04      	ldrh	r4, [r0, #16]
 8002efc:	4d11      	ldr	r5, [pc, #68]	; (8002f44 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 8002efe:	42a3      	cmp	r3, r4
 8002f00:	bf28      	it	cs
 8002f02:	4623      	movcs	r3, r4
 8002f04:	f44f 7401 	mov.w	r4, #516	; 0x204
 8002f08:	434c      	muls	r4, r1
 8002f0a:	1c5f      	adds	r7, r3, #1
 8002f0c:	192e      	adds	r6, r5, r4
 8002f0e:	f892 f000 	pld	[r2]
 8002f12:	3c01      	subs	r4, #1
 8002f14:	442c      	add	r4, r5
 8002f16:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 8002f1a:	18d5      	adds	r5, r2, r3
 8002f1c:	4295      	cmp	r5, r2
 8002f1e:	d109      	bne.n	8002f34 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x3c>
 8002f20:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8002f24:	698a      	ldr	r2, [r1, #24]
 8002f26:	429a      	cmp	r2, r3
 8002f28:	d009      	beq.n	8002f3e <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x46>
 8002f2a:	bcf0      	pop	{r4, r5, r6, r7}
 8002f2c:	618b      	str	r3, [r1, #24]
 8002f2e:	68c1      	ldr	r1, [r0, #12]
 8002f30:	f7ff bf9e 	b.w	8002e70 <Dmx::SetDmxPeriodTime(unsigned int)>
 8002f34:	f812 6b01 	ldrb.w	r6, [r2], #1
 8002f38:	f804 6f01 	strb.w	r6, [r4, #1]!
 8002f3c:	e7ee      	b.n	8002f1c <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x24>
 8002f3e:	bcf0      	pop	{r4, r5, r6, r7}
 8002f40:	4770      	bx	lr
 8002f42:	bf00      	nop
 8002f44:	20000308 	andcs	r0, r0, r8, lsl #6

08002f48 <Dmx::GetDmxAvailable(unsigned int)>:
 8002f48:	f44f 7204 	mov.w	r2, #528	; 0x210
 8002f4c:	4b07      	ldr	r3, [pc, #28]	; (8002f6c <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 8002f4e:	fb02 3101 	mla	r1, r2, r1, r3
 8002f52:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 8002f56:	f413 4000 	ands.w	r0, r3, #32768	; 0x8000
 8002f5a:	bf1f      	itttt	ne
 8002f5c:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 8002f60:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 8002f64:	4608      	movne	r0, r1
 8002f66:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 8002f6a:	4770      	bx	lr
 8002f6c:	200000f8 	strdcs	r0, [r0], -r8

08002f70 <Dmx::GetDmxChanged(unsigned int)>:
 8002f70:	b570      	push	{r4, r5, r6, lr}
 8002f72:	460c      	mov	r4, r1
 8002f74:	f7ff ffe8 	bl	8002f48 <Dmx::GetDmxAvailable(unsigned int)>
 8002f78:	b1a0      	cbz	r0, 8002fa4 <Dmx::GetDmxChanged(unsigned int)+0x34>
 8002f7a:	f240 2202 	movw	r2, #514	; 0x202
 8002f7e:	490a      	ldr	r1, [pc, #40]	; (8002fa8 <Dmx::GetDmxChanged(unsigned int)+0x38>)
 8002f80:	fb02 1104 	mla	r1, r2, r4, r1
 8002f84:	2200      	movs	r2, #0
 8002f86:	1e8b      	subs	r3, r1, #2
 8002f88:	1e84      	subs	r4, r0, #2
 8002f8a:	f501 7100 	add.w	r1, r1, #512	; 0x200
 8002f8e:	f833 6f02 	ldrh.w	r6, [r3, #2]!
 8002f92:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8002f96:	42ae      	cmp	r6, r5
 8002f98:	bf1c      	itt	ne
 8002f9a:	2201      	movne	r2, #1
 8002f9c:	801d      	strhne	r5, [r3, #0]
 8002f9e:	428b      	cmp	r3, r1
 8002fa0:	d1f5      	bne.n	8002f8e <Dmx::GetDmxChanged(unsigned int)+0x1e>
 8002fa2:	b902      	cbnz	r2, 8002fa6 <Dmx::GetDmxChanged(unsigned int)+0x36>
 8002fa4:	2000      	movs	r0, #0
 8002fa6:	bd70      	pop	{r4, r5, r6, pc}
 8002fa8:	20000510 	andcs	r0, r0, r0, lsl r5

08002fac <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>:
 8002fac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002fae:	4614      	mov	r4, r2
 8002fb0:	461d      	mov	r5, r3
 8002fb2:	4e1f      	ldr	r6, [pc, #124]	; (8003030 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x84>)
 8002fb4:	2106      	movs	r1, #6
 8002fb6:	4630      	mov	r0, r6
 8002fb8:	f001 ff40 	bl	8004e3c <usart_flag_get>
 8002fbc:	2800      	cmp	r0, #0
 8002fbe:	d0f9      	beq.n	8002fb4 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x8>
 8002fc0:	f44f 6780 	mov.w	r7, #1024	; 0x400
 8002fc4:	4e1b      	ldr	r6, [pc, #108]	; (8003034 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x88>)
 8002fc6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002fca:	2203      	movs	r2, #3
 8002fcc:	4630      	mov	r0, r6
 8002fce:	2110      	movs	r1, #16
 8002fd0:	f001 fc60 	bl	8004894 <gpio_init>
 8002fd4:	6177      	str	r7, [r6, #20]
 8002fd6:	2100      	movs	r1, #0
 8002fd8:	20b0      	movs	r0, #176	; 0xb0
 8002fda:	f002 fa03 	bl	80053e4 <udelay(unsigned int, unsigned int)>
 8002fde:	463b      	mov	r3, r7
 8002fe0:	4630      	mov	r0, r6
 8002fe2:	2203      	movs	r2, #3
 8002fe4:	2118      	movs	r1, #24
 8002fe6:	f001 fc55 	bl	8004894 <gpio_init>
 8002fea:	2100      	movs	r1, #0
 8002fec:	200c      	movs	r0, #12
 8002fee:	f002 f9f9 	bl	80053e4 <udelay(unsigned int, unsigned int)>
 8002ff2:	f04f 2740 	mov.w	r7, #1073758208	; 0x40004000
 8002ff6:	4425      	add	r5, r4
 8002ff8:	f5a6 4648 	sub.w	r6, r6, #51200	; 0xc800
 8002ffc:	42ac      	cmp	r4, r5
 8002ffe:	d109      	bne.n	8003014 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x68>
 8003000:	f04f 2540 	mov.w	r5, #1073758208	; 0x40004000
 8003004:	4c0a      	ldr	r4, [pc, #40]	; (8003030 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x84>)
 8003006:	2106      	movs	r1, #6
 8003008:	4620      	mov	r0, r4
 800300a:	f001 ff17 	bl	8004e3c <usart_flag_get>
 800300e:	2801      	cmp	r0, #1
 8003010:	d10b      	bne.n	800302a <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x7e>
 8003012:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003014:	2107      	movs	r1, #7
 8003016:	4630      	mov	r0, r6
 8003018:	f001 ff10 	bl	8004e3c <usart_flag_get>
 800301c:	2800      	cmp	r0, #0
 800301e:	d0f9      	beq.n	8003014 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x68>
 8003020:	f814 3b01 	ldrb.w	r3, [r4], #1
 8003024:	f8c7 3804 	str.w	r3, [r7, #2052]	; 0x804
 8003028:	e7e8      	b.n	8002ffc <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x50>
 800302a:	f8d5 3804 	ldr.w	r3, [r5, #2052]	; 0x804
 800302e:	e7ea      	b.n	8003006 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x5a>
 8003030:	40004800 	andmi	r4, r0, r0, lsl #16
 8003034:	40011000 	andmi	r1, r1, r0

08003038 <Dmx::RdmReceive(unsigned int)>:
 8003038:	f44f 7204 	mov.w	r2, #528	; 0x210
 800303c:	4b06      	ldr	r3, [pc, #24]	; (8003058 <Dmx::RdmReceive(unsigned int)+0x20>)
 800303e:	fb02 3101 	mla	r1, r2, r1, r3
 8003042:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 8003046:	f413 4080 	ands.w	r0, r3, #16384	; 0x4000
 800304a:	bf1e      	ittt	ne
 800304c:	2300      	movne	r3, #0
 800304e:	4608      	movne	r0, r1
 8003050:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 8003054:	4770      	bx	lr
 8003056:	bf00      	nop
 8003058:	200000f8 	strdcs	r0, [r0], -r8

0800305c <usb_read_byte>:
 800305c:	b508      	push	{r3, lr}
 800305e:	f000 f8f1 	bl	8003244 <FT245RL_data_available>
 8003062:	2800      	cmp	r0, #0
 8003064:	d0fb      	beq.n	800305e <usb_read_byte+0x2>
 8003066:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800306a:	f000 b8b1 	b.w	80031d0 <FT245RL_read_data>

0800306e <usb_send_byte>:
 800306e:	b510      	push	{r4, lr}
 8003070:	4604      	mov	r4, r0
 8003072:	f000 f8f3 	bl	800325c <FT245RL_can_write>
 8003076:	2800      	cmp	r0, #0
 8003078:	d0fb      	beq.n	8003072 <usb_send_byte+0x4>
 800307a:	4620      	mov	r0, r4
 800307c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003080:	f000 b860 	b.w	8003144 <FT245RL_write_data>

08003084 <data_gpio_fsel_input>:
 8003084:	b510      	push	{r4, lr}
 8003086:	f24c 0340 	movw	r3, #49216	; 0xc040
 800308a:	2203      	movs	r2, #3
 800308c:	2104      	movs	r1, #4
 800308e:	4805      	ldr	r0, [pc, #20]	; (80030a4 <data_gpio_fsel_input+0x20>)
 8003090:	f001 fc00 	bl	8004894 <gpio_init>
 8003094:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003098:	23f8      	movs	r3, #248	; 0xf8
 800309a:	2203      	movs	r2, #3
 800309c:	2104      	movs	r1, #4
 800309e:	4802      	ldr	r0, [pc, #8]	; (80030a8 <data_gpio_fsel_input+0x24>)
 80030a0:	f001 bbf8 	b.w	8004894 <gpio_init>
 80030a4:	40010800 	andmi	r0, r1, r0, lsl #16
 80030a8:	40010c00 	andmi	r0, r1, r0, lsl #24

080030ac <FT245RL_init>:
 80030ac:	b538      	push	{r3, r4, r5, lr}
 80030ae:	f240 6002 	movw	r0, #1538	; 0x602
 80030b2:	f001 fc81 	bl	80049b8 <rcu_periph_clock_enable>
 80030b6:	4d20      	ldr	r5, [pc, #128]	; (8003138 <FT245RL_init+0x8c>)
 80030b8:	f240 6003 	movw	r0, #1539	; 0x603
 80030bc:	f001 fc7c 	bl	80049b8 <rcu_periph_clock_enable>
 80030c0:	4c1e      	ldr	r4, [pc, #120]	; (800313c <FT245RL_init+0x90>)
 80030c2:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80030c6:	f001 fc77 	bl	80049b8 <rcu_periph_clock_enable>
 80030ca:	2101      	movs	r1, #1
 80030cc:	4628      	mov	r0, r5
 80030ce:	f001 fc3b 	bl	8004948 <gpio_pin_remap_config>
 80030d2:	f7ff ffd7 	bl	8003084 <data_gpio_fsel_input>
 80030d6:	4620      	mov	r0, r4
 80030d8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80030dc:	2203      	movs	r2, #3
 80030de:	2110      	movs	r1, #16
 80030e0:	f001 fbd8 	bl	8004894 <gpio_init>
 80030e4:	4620      	mov	r0, r4
 80030e6:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80030ea:	2203      	movs	r2, #3
 80030ec:	2110      	movs	r1, #16
 80030ee:	f5a4 6480 	sub.w	r4, r4, #1024	; 0x400
 80030f2:	f001 fbcf 	bl	8004894 <gpio_init>
 80030f6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80030fa:	2203      	movs	r2, #3
 80030fc:	2148      	movs	r1, #72	; 0x48
 80030fe:	4620      	mov	r0, r4
 8003100:	f001 fbc8 	bl	8004894 <gpio_init>
 8003104:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8003108:	f001 fc56 	bl	80049b8 <rcu_periph_clock_enable>
 800310c:	2101      	movs	r1, #1
 800310e:	4628      	mov	r0, r5
 8003110:	f001 fc1a 	bl	8004948 <gpio_pin_remap_config>
 8003114:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8003118:	2203      	movs	r2, #3
 800311a:	2148      	movs	r1, #72	; 0x48
 800311c:	4620      	mov	r0, r4
 800311e:	f001 fbb9 	bl	8004894 <gpio_init>
 8003122:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8003126:	4b06      	ldr	r3, [pc, #24]	; (8003140 <FT245RL_init+0x94>)
 8003128:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800312c:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8003130:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8003134:	bd38      	pop	{r3, r4, r5, pc}
 8003136:	bf00      	nop
 8003138:	00300400 	eorseq	r0, r0, r0, lsl #8
 800313c:	40010c00 	andmi	r0, r1, r0, lsl #24
 8003140:	40010000 	andmi	r0, r1, r0

08003144 <FT245RL_write_data>:
 8003144:	b510      	push	{r4, lr}
 8003146:	f24c 0340 	movw	r3, #49216	; 0xc040
 800314a:	4604      	mov	r4, r0
 800314c:	2203      	movs	r2, #3
 800314e:	2110      	movs	r1, #16
 8003150:	481c      	ldr	r0, [pc, #112]	; (80031c4 <FT245RL_write_data+0x80>)
 8003152:	f001 fb9f 	bl	8004894 <gpio_init>
 8003156:	23f8      	movs	r3, #248	; 0xf8
 8003158:	2203      	movs	r2, #3
 800315a:	2110      	movs	r1, #16
 800315c:	481a      	ldr	r0, [pc, #104]	; (80031c8 <FT245RL_write_data+0x84>)
 800315e:	f001 fb99 	bl	8004894 <gpio_init>
 8003162:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8003166:	4a19      	ldr	r2, [pc, #100]	; (80031cc <FT245RL_write_data+0x88>)
 8003168:	f8c2 1c10 	str.w	r1, [r2, #3088]	; 0xc10
 800316c:	bf00      	nop
 800316e:	bf00      	nop
 8003170:	02e3      	lsls	r3, r4, #11
 8003172:	0120      	lsls	r0, r4, #4
 8003174:	f000 0040 	and.w	r0, r0, #64	; 0x40
 8003178:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800317c:	4303      	orrs	r3, r0
 800317e:	f8c2 3810 	str.w	r3, [r2, #2064]	; 0x810
 8003182:	f483 4340 	eor.w	r3, r3, #49152	; 0xc000
 8003186:	f083 0340 	eor.w	r3, r3, #64	; 0x40
 800318a:	f8c2 3814 	str.w	r3, [r2, #2068]	; 0x814
 800318e:	01e0      	lsls	r0, r4, #7
 8003190:	0163      	lsls	r3, r4, #5
 8003192:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003196:	b2c0      	uxtb	r0, r0
 8003198:	4318      	orrs	r0, r3
 800319a:	1063      	asrs	r3, r4, #1
 800319c:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80031a0:	f344 1403 	sbfx	r4, r4, #4, #4
 80031a4:	4303      	orrs	r3, r0
 80031a6:	f004 0408 	and.w	r4, r4, #8
 80031aa:	431c      	orrs	r4, r3
 80031ac:	f8c2 4c10 	str.w	r4, [r2, #3088]	; 0xc10
 80031b0:	f084 04f8 	eor.w	r4, r4, #248	; 0xf8
 80031b4:	f8c2 4c14 	str.w	r4, [r2, #3092]	; 0xc14
 80031b8:	bf00      	nop
 80031ba:	bf00      	nop
 80031bc:	f8c2 1c14 	str.w	r1, [r2, #3092]	; 0xc14
 80031c0:	bd10      	pop	{r4, pc}
 80031c2:	bf00      	nop
 80031c4:	40010800 	andmi	r0, r1, r0, lsl #16
 80031c8:	40010c00 	andmi	r0, r1, r0, lsl #24
 80031cc:	40010000 	andmi	r0, r1, r0

080031d0 <FT245RL_read_data>:
 80031d0:	b510      	push	{r4, lr}
 80031d2:	f7ff ff57 	bl	8003084 <data_gpio_fsel_input>
 80031d6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80031da:	4c18      	ldr	r4, [pc, #96]	; (800323c <FT245RL_read_data+0x6c>)
 80031dc:	f8c4 3c14 	str.w	r3, [r4, #3092]	; 0xc14
 80031e0:	2318      	movs	r3, #24
 80031e2:	bf00      	nop
 80031e4:	3b01      	subs	r3, #1
 80031e6:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 80031ea:	d1fa      	bne.n	80031e2 <FT245RL_read_data+0x12>
 80031ec:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80031f0:	f8d4 2808 	ldr.w	r2, [r4, #2056]	; 0x808
 80031f4:	f8d4 1c08 	ldr.w	r1, [r4, #3080]	; 0xc08
 80031f8:	f8c4 3c10 	str.w	r3, [r4, #3088]	; 0xc10
 80031fc:	f3c2 130b 	ubfx	r3, r2, #4, #12
 8003200:	f3c2 24c4 	ubfx	r4, r2, #11, #5
 8003204:	f004 0408 	and.w	r4, r4, #8
 8003208:	f003 0304 	and.w	r3, r3, #4
 800320c:	f342 22c4 	sbfx	r2, r2, #11, #5
 8003210:	4323      	orrs	r3, r4
 8003212:	f002 0210 	and.w	r2, r2, #16
 8003216:	4313      	orrs	r3, r2
 8003218:	f3c1 12c0 	ubfx	r2, r1, #7, #1
 800321c:	4313      	orrs	r3, r2
 800321e:	f3c1 124a 	ubfx	r2, r1, #5, #11
 8003222:	0048      	lsls	r0, r1, #1
 8003224:	f002 0202 	and.w	r2, r2, #2
 8003228:	4313      	orrs	r3, r2
 800322a:	f000 0060 	and.w	r0, r0, #96	; 0x60
 800322e:	4318      	orrs	r0, r3
 8003230:	4b03      	ldr	r3, [pc, #12]	; (8003240 <FT245RL_read_data+0x70>)
 8003232:	0109      	lsls	r1, r1, #4
 8003234:	400b      	ands	r3, r1
 8003236:	4318      	orrs	r0, r3
 8003238:	b2c0      	uxtb	r0, r0
 800323a:	bd10      	pop	{r4, pc}
 800323c:	40010000 	andmi	r0, r1, r0
 8003240:	000fff80 	andeq	pc, pc, r0, lsl #31

08003244 <FT245RL_data_available>:
 8003244:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8003248:	b508      	push	{r3, lr}
 800324a:	4803      	ldr	r0, [pc, #12]	; (8003258 <FT245RL_data_available+0x14>)
 800324c:	f001 fb76 	bl	800493c <gpio_input_bit_get>
 8003250:	fab0 f080 	clz	r0, r0
 8003254:	0940      	lsrs	r0, r0, #5
 8003256:	bd08      	pop	{r3, pc}
 8003258:	40010800 	andmi	r0, r1, r0, lsl #16

0800325c <FT245RL_can_write>:
 800325c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8003260:	b508      	push	{r3, lr}
 8003262:	4803      	ldr	r0, [pc, #12]	; (8003270 <FT245RL_can_write+0x14>)
 8003264:	f001 fb6a 	bl	800493c <gpio_input_bit_get>
 8003268:	fab0 f080 	clz	r0, r0
 800326c:	0940      	lsrs	r0, r0, #5
 800326e:	bd08      	pop	{r3, pc}
 8003270:	40010800 	andmi	r0, r1, r0, lsl #16

08003274 <RDMDevice::RDMDevice()>:
 8003274:	4a34      	ldr	r2, [pc, #208]	; (8003348 <RDMDevice::RDMDevice()+0xd4>)
 8003276:	2300      	movs	r3, #0
 8003278:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800327a:	4604      	mov	r4, r0
 800327c:	4611      	mov	r1, r2
 800327e:	7003      	strb	r3, [r0, #0]
 8003280:	f880 3072 	strb.w	r3, [r0, #114]	; 0x72
 8003284:	f8a0 3074 	strh.w	r3, [r0, #116]	; 0x74
 8003288:	6783      	str	r3, [r0, #120]	; 0x78
 800328a:	4613      	mov	r3, r2
 800328c:	7818      	ldrb	r0, [r3, #0]
 800328e:	3201      	adds	r2, #1
 8003290:	2800      	cmp	r0, #0
 8003292:	d1fa      	bne.n	800328a <RDMDevice::RDMDevice()+0x16>
 8003294:	1a5b      	subs	r3, r3, r1
 8003296:	2b20      	cmp	r3, #32
 8003298:	bf28      	it	cs
 800329a:	2320      	movcs	r3, #32
 800329c:	f104 052b 	add.w	r5, r4, #43	; 0x2b
 80032a0:	4629      	mov	r1, r5
 80032a2:	461a      	mov	r2, r3
 80032a4:	4828      	ldr	r0, [pc, #160]	; (8003348 <RDMDevice::RDMDevice()+0xd4>)
 80032a6:	3a01      	subs	r2, #1
 80032a8:	d23e      	bcs.n	8003328 <RDMDevice::RDMDevice()+0xb4>
 80032aa:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 80032ae:	4b27      	ldr	r3, [pc, #156]	; (800334c <RDMDevice::RDMDevice()+0xd8>)
 80032b0:	4669      	mov	r1, sp
 80032b2:	781a      	ldrb	r2, [r3, #0]
 80032b4:	7062      	strb	r2, [r4, #1]
 80032b6:	785b      	ldrb	r3, [r3, #1]
 80032b8:	70a3      	strb	r3, [r4, #2]
 80032ba:	4b25      	ldr	r3, [pc, #148]	; (8003350 <RDMDevice::RDMDevice()+0xdc>)
 80032bc:	6818      	ldr	r0, [r3, #0]
 80032be:	f000 f8b1 	bl	8003424 <Network::MacAddressCopyTo(unsigned char*)>
 80032c2:	f89d 3002 	ldrb.w	r3, [sp, #2]
 80032c6:	f89d 2003 	ldrb.w	r2, [sp, #3]
 80032ca:	70e3      	strb	r3, [r4, #3]
 80032cc:	72a3      	strb	r3, [r4, #10]
 80032ce:	4b21      	ldr	r3, [pc, #132]	; (8003354 <RDMDevice::RDMDevice()+0xe0>)
 80032d0:	7122      	strb	r2, [r4, #4]
 80032d2:	7262      	strb	r2, [r4, #9]
 80032d4:	461a      	mov	r2, r3
 80032d6:	f89d 1004 	ldrb.w	r1, [sp, #4]
 80032da:	f89d 0005 	ldrb.w	r0, [sp, #5]
 80032de:	7161      	strb	r1, [r4, #5]
 80032e0:	71a0      	strb	r0, [r4, #6]
 80032e2:	71e0      	strb	r0, [r4, #7]
 80032e4:	7221      	strb	r1, [r4, #8]
 80032e6:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80032ea:	2900      	cmp	r1, #0
 80032ec:	d1fb      	bne.n	80032e6 <RDMDevice::RDMDevice()+0x72>
 80032ee:	1a9b      	subs	r3, r3, r2
 80032f0:	2b20      	cmp	r3, #32
 80032f2:	bf28      	it	cs
 80032f4:	2320      	movcs	r3, #32
 80032f6:	461a      	mov	r2, r3
 80032f8:	4916      	ldr	r1, [pc, #88]	; (8003354 <RDMDevice::RDMDevice()+0xe0>)
 80032fa:	3a01      	subs	r2, #1
 80032fc:	d219      	bcs.n	8003332 <RDMDevice::RDMDevice()+0xbe>
 80032fe:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 8003302:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8003306:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800330a:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800330e:	2315      	movs	r3, #21
 8003310:	4a11      	ldr	r2, [pc, #68]	; (8003358 <RDMDevice::RDMDevice()+0xe4>)
 8003312:	f884 3072 	strb.w	r3, [r4, #114]	; 0x72
 8003316:	f104 0166 	add.w	r1, r4, #102	; 0x66
 800331a:	f104 0351 	add.w	r3, r4, #81	; 0x51
 800331e:	4299      	cmp	r1, r3
 8003320:	d10c      	bne.n	800333c <RDMDevice::RDMDevice()+0xc8>
 8003322:	4620      	mov	r0, r4
 8003324:	b002      	add	sp, #8
 8003326:	bd70      	pop	{r4, r5, r6, pc}
 8003328:	f810 6b01 	ldrb.w	r6, [r0], #1
 800332c:	f801 6f01 	strb.w	r6, [r1, #1]!
 8003330:	e7b9      	b.n	80032a6 <RDMDevice::RDMDevice()+0x32>
 8003332:	f811 0b01 	ldrb.w	r0, [r1], #1
 8003336:	f805 0f01 	strb.w	r0, [r5, #1]!
 800333a:	e7de      	b.n	80032fa <RDMDevice::RDMDevice()+0x86>
 800333c:	f812 0b01 	ldrb.w	r0, [r2], #1
 8003340:	f803 0f01 	strb.w	r0, [r3, #1]!
 8003344:	e7eb      	b.n	800331e <RDMDevice::RDMDevice()+0xaa>
 8003346:	bf00      	nop
 8003348:	08005ac0 	stmdaeq	r0, {r6, r7, r9, fp, ip, lr}
 800334c:	08005abe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9, fp, ip, lr}
 8003350:	20000730 	andcs	r0, r0, r0, lsr r7
 8003354:	08005adc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, fp, ip, lr}
 8003358:	08005af1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, fp, ip, lr}

0800335c <memcpy.isra.0>:
 800335c:	f000 bff8 	b.w	8004350 <memcpy>

08003360 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 8003360:	b510      	push	{r4, lr}
 8003362:	6001      	str	r1, [r0, #0]
 8003364:	2100      	movs	r1, #0
 8003366:	4604      	mov	r4, r0
 8003368:	6041      	str	r1, [r0, #4]
 800336a:	2220      	movs	r2, #32
 800336c:	3008      	adds	r0, #8
 800336e:	f000 fffa 	bl	8004366 <memset>
 8003372:	4b03      	ldr	r3, [pc, #12]	; (8003380 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 8003374:	4620      	mov	r0, r4
 8003376:	62a3      	str	r3, [r4, #40]	; 0x28
 8003378:	237f      	movs	r3, #127	; 0x7f
 800337a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800337e:	bd10      	pop	{r4, pc}
 8003380:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

08003384 <RDMDeviceParams::Load()>:
 8003384:	4601      	mov	r1, r0
 8003386:	6800      	ldr	r0, [r0, #0]
 8003388:	b130      	cbz	r0, 8003398 <RDMDeviceParams::Load()+0x14>
 800338a:	b508      	push	{r3, lr}
 800338c:	6803      	ldr	r3, [r0, #0]
 800338e:	3104      	adds	r1, #4
 8003390:	68db      	ldr	r3, [r3, #12]
 8003392:	4798      	blx	r3
 8003394:	2001      	movs	r0, #1
 8003396:	bd08      	pop	{r3, pc}
 8003398:	4770      	bx	lr

0800339a <RDMDeviceParams::Set(RDMDevice*)>:
 800339a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800339c:	6843      	ldr	r3, [r0, #4]
 800339e:	460c      	mov	r4, r1
 80033a0:	07d9      	lsls	r1, r3, #31
 80033a2:	4605      	mov	r5, r0
 80033a4:	d517      	bpl.n	80033d6 <RDMDeviceParams::Set(RDMDevice*)+0x3c>
 80033a6:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 80033aa:	7823      	ldrb	r3, [r4, #0]
 80033ac:	2e20      	cmp	r6, #32
 80033ae:	bf28      	it	cs
 80033b0:	2620      	movcs	r6, #32
 80033b2:	f100 0108 	add.w	r1, r0, #8
 80033b6:	b1e3      	cbz	r3, 80033f2 <RDMDeviceParams::Set(RDMDevice*)+0x58>
 80033b8:	f104 070b 	add.w	r7, r4, #11
 80033bc:	4638      	mov	r0, r7
 80033be:	4632      	mov	r2, r6
 80033c0:	f7ff ffcc 	bl	800335c <memcpy.isra.0>
 80033c4:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 80033c6:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
 80033ca:	b120      	cbz	r0, 80033d6 <RDMDeviceParams::Set(RDMDevice*)+0x3c>
 80033cc:	6803      	ldr	r3, [r0, #0]
 80033ce:	4632      	mov	r2, r6
 80033d0:	4639      	mov	r1, r7
 80033d2:	689b      	ldr	r3, [r3, #8]
 80033d4:	4798      	blx	r3
 80033d6:	686b      	ldr	r3, [r5, #4]
 80033d8:	079a      	lsls	r2, r3, #30
 80033da:	bf44      	itt	mi
 80033dc:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 80033e0:	f8a4 204e 	strhmi.w	r2, [r4, #78]	; 0x4e
 80033e4:	075b      	lsls	r3, r3, #29
 80033e6:	bf44      	itt	mi
 80033e8:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 80033ec:	f8a4 3050 	strhmi.w	r3, [r4, #80]	; 0x50
 80033f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80033f2:	4632      	mov	r2, r6
 80033f4:	f104 0052 	add.w	r0, r4, #82	; 0x52
 80033f8:	f7ff ffb0 	bl	800335c <memcpy.isra.0>
 80033fc:	f884 6072 	strb.w	r6, [r4, #114]	; 0x72
 8003400:	e7e9      	b.n	80033d6 <RDMDeviceParams::Set(RDMDevice*)+0x3c>

08003402 <RDMDeviceParams::Dump()>:
 8003402:	4770      	bx	lr

08003404 <Network::Network()>:
 8003404:	4b05      	ldr	r3, [pc, #20]	; (800341c <Network::Network()+0x18>)
 8003406:	4906      	ldr	r1, [pc, #24]	; (8003420 <Network::Network()+0x1c>)
 8003408:	6018      	str	r0, [r3, #0]
 800340a:	1e42      	subs	r2, r0, #1
 800340c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003410:	f802 3f01 	strb.w	r3, [r2, #1]!
 8003414:	2b00      	cmp	r3, #0
 8003416:	d1f9      	bne.n	800340c <Network::Network()+0x8>
 8003418:	4770      	bx	lr
 800341a:	bf00      	nop
 800341c:	20000730 	andcs	r0, r0, r0, lsr r7
 8003420:	08005b07 	stmdaeq	r0, {r0, r1, r2, r8, r9, fp, ip, lr}

08003424 <Network::MacAddressCopyTo(unsigned char*)>:
 8003424:	4608      	mov	r0, r1
 8003426:	f001 bfb5 	b.w	8005394 <mac_address_get(unsigned char*)>
	...

0800342c <ConfigStore::GetStoreOffset(configstore::Store)>:
 800342c:	2300      	movs	r3, #0
 800342e:	2020      	movs	r0, #32
 8003430:	b510      	push	{r4, lr}
 8003432:	4a04      	ldr	r2, [pc, #16]	; (8003444 <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 8003434:	428b      	cmp	r3, r1
 8003436:	d100      	bne.n	800343a <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 8003438:	bd10      	pop	{r4, pc}
 800343a:	f852 4b04 	ldr.w	r4, [r2], #4
 800343e:	3301      	adds	r3, #1
 8003440:	4420      	add	r0, r4
 8003442:	e7f7      	b.n	8003434 <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 8003444:	08005b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp, ip, lr}

08003448 <ConfigStore::Init()>:
 8003448:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800344c:	b085      	sub	sp, #20
 800344e:	4607      	mov	r7, r0
 8003450:	f000 f982 	bl	8003758 <StoreDevice::GetSectorSize() const>
 8003454:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 8003458:	4605      	mov	r5, r0
 800345a:	d004      	beq.n	8003466 <ConfigStore::Init()+0x1e>
 800345c:	2500      	movs	r5, #0
 800345e:	4628      	mov	r0, r5
 8003460:	b005      	add	sp, #20
 8003462:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003466:	4638      	mov	r0, r7
 8003468:	f000 f974 	bl	8003754 <StoreDevice::GetSize() const>
 800346c:	4b3a      	ldr	r3, [pc, #232]	; (8003558 <ConfigStore::Init()+0x110>)
 800346e:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 8003472:	f3c1 060b 	ubfx	r6, r1, #0, #12
 8003476:	6019      	str	r1, [r3, #0]
 8003478:	2e00      	cmp	r6, #0
 800347a:	d1ef      	bne.n	800345c <ConfigStore::Init()+0x14>
 800347c:	4c37      	ldr	r4, [pc, #220]	; (800355c <ConfigStore::Init()+0x114>)
 800347e:	ab03      	add	r3, sp, #12
 8003480:	462a      	mov	r2, r5
 8003482:	9300      	str	r3, [sp, #0]
 8003484:	4638      	mov	r0, r7
 8003486:	4623      	mov	r3, r4
 8003488:	f000 f968 	bl	800375c <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>
 800348c:	7823      	ldrb	r3, [r4, #0]
 800348e:	2b41      	cmp	r3, #65	; 0x41
 8003490:	bf1c      	itt	ne
 8003492:	2341      	movne	r3, #65	; 0x41
 8003494:	7023      	strbne	r3, [r4, #0]
 8003496:	7863      	ldrb	r3, [r4, #1]
 8003498:	bf14      	ite	ne
 800349a:	4635      	movne	r5, r6
 800349c:	2501      	moveq	r5, #1
 800349e:	2b76      	cmp	r3, #118	; 0x76
 80034a0:	bf1c      	itt	ne
 80034a2:	2376      	movne	r3, #118	; 0x76
 80034a4:	7063      	strbne	r3, [r4, #1]
 80034a6:	78a3      	ldrb	r3, [r4, #2]
 80034a8:	bf18      	it	ne
 80034aa:	2500      	movne	r5, #0
 80034ac:	2b56      	cmp	r3, #86	; 0x56
 80034ae:	bf1c      	itt	ne
 80034b0:	2356      	movne	r3, #86	; 0x56
 80034b2:	70a3      	strbne	r3, [r4, #2]
 80034b4:	78e3      	ldrb	r3, [r4, #3]
 80034b6:	bf18      	it	ne
 80034b8:	2500      	movne	r5, #0
 80034ba:	2b10      	cmp	r3, #16
 80034bc:	d01f      	beq.n	80034fe <ConfigStore::Init()+0xb6>
 80034be:	2310      	movs	r3, #16
 80034c0:	70e3      	strb	r3, [r4, #3]
 80034c2:	2201      	movs	r2, #1
 80034c4:	2500      	movs	r5, #0
 80034c6:	f04f 09ff 	mov.w	r9, #255	; 0xff
 80034ca:	4b25      	ldr	r3, [pc, #148]	; (8003560 <ConfigStore::Init()+0x118>)
 80034cc:	f8df 8094 	ldr.w	r8, [pc, #148]	; 8003564 <ConfigStore::Init()+0x11c>
 80034d0:	701a      	strb	r2, [r3, #0]
 80034d2:	4631      	mov	r1, r6
 80034d4:	4638      	mov	r0, r7
 80034d6:	f7ff ffa9 	bl	800342c <ConfigStore::GetStoreOffset(configstore::Store)>
 80034da:	1823      	adds	r3, r4, r0
 80034dc:	5425      	strb	r5, [r4, r0]
 80034de:	705d      	strb	r5, [r3, #1]
 80034e0:	709d      	strb	r5, [r3, #2]
 80034e2:	70dd      	strb	r5, [r3, #3]
 80034e4:	f858 3b04 	ldr.w	r3, [r8], #4
 80034e8:	1d02      	adds	r2, r0, #4
 80034ea:	4403      	add	r3, r0
 80034ec:	429a      	cmp	r2, r3
 80034ee:	d32f      	bcc.n	8003550 <ConfigStore::Init()+0x108>
 80034f0:	3601      	adds	r6, #1
 80034f2:	2e1c      	cmp	r6, #28
 80034f4:	d1ed      	bne.n	80034d2 <ConfigStore::Init()+0x8a>
 80034f6:	2501      	movs	r5, #1
 80034f8:	4b1b      	ldr	r3, [pc, #108]	; (8003568 <ConfigStore::Init()+0x120>)
 80034fa:	601d      	str	r5, [r3, #0]
 80034fc:	e7af      	b.n	800345e <ConfigStore::Init()+0x16>
 80034fe:	2d00      	cmp	r5, #0
 8003500:	d0df      	beq.n	80034c2 <ConfigStore::Init()+0x7a>
 8003502:	f04f 0900 	mov.w	r9, #0
 8003506:	46c8      	mov	r8, r9
 8003508:	4631      	mov	r1, r6
 800350a:	4638      	mov	r0, r7
 800350c:	f7ff ff8e 	bl	800342c <ConfigStore::GetStoreOffset(configstore::Store)>
 8003510:	5c23      	ldrb	r3, [r4, r0]
 8003512:	2bff      	cmp	r3, #255	; 0xff
 8003514:	d112      	bne.n	800353c <ConfigStore::Init()+0xf4>
 8003516:	1823      	adds	r3, r4, r0
 8003518:	785a      	ldrb	r2, [r3, #1]
 800351a:	2aff      	cmp	r2, #255	; 0xff
 800351c:	d10e      	bne.n	800353c <ConfigStore::Init()+0xf4>
 800351e:	789a      	ldrb	r2, [r3, #2]
 8003520:	2aff      	cmp	r2, #255	; 0xff
 8003522:	d10b      	bne.n	800353c <ConfigStore::Init()+0xf4>
 8003524:	78da      	ldrb	r2, [r3, #3]
 8003526:	2aff      	cmp	r2, #255	; 0xff
 8003528:	d108      	bne.n	800353c <ConfigStore::Init()+0xf4>
 800352a:	46a9      	mov	r9, r5
 800352c:	f804 8000 	strb.w	r8, [r4, r0]
 8003530:	f883 8001 	strb.w	r8, [r3, #1]
 8003534:	f883 8002 	strb.w	r8, [r3, #2]
 8003538:	f883 8003 	strb.w	r8, [r3, #3]
 800353c:	3601      	adds	r6, #1
 800353e:	2e1c      	cmp	r6, #28
 8003540:	d1e2      	bne.n	8003508 <ConfigStore::Init()+0xc0>
 8003542:	f1b9 0f00 	cmp.w	r9, #0
 8003546:	d08a      	beq.n	800345e <ConfigStore::Init()+0x16>
 8003548:	2201      	movs	r2, #1
 800354a:	4b07      	ldr	r3, [pc, #28]	; (8003568 <ConfigStore::Init()+0x120>)
 800354c:	601a      	str	r2, [r3, #0]
 800354e:	e786      	b.n	800345e <ConfigStore::Init()+0x16>
 8003550:	f804 9002 	strb.w	r9, [r4, r2]
 8003554:	3201      	adds	r2, #1
 8003556:	e7c9      	b.n	80034ec <ConfigStore::Init()+0xa4>
 8003558:	20001738 	andcs	r1, r0, r8, lsr r7
 800355c:	20000738 	andcs	r0, r0, r8, lsr r7
 8003560:	2000174c 	andcs	r1, r0, ip, asr #14
 8003564:	08005b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp, ip, lr}
 8003568:	20001744 	andcs	r1, r0, r4, asr #14

0800356c <ConfigStore::ConfigStore()>:
 800356c:	b538      	push	{r3, r4, r5, lr}
 800356e:	4604      	mov	r4, r0
 8003570:	f000 f8e8 	bl	8003744 <StoreDevice::StoreDevice()>
 8003574:	4b0b      	ldr	r3, [pc, #44]	; (80035a4 <ConfigStore::ConfigStore()+0x38>)
 8003576:	4d0c      	ldr	r5, [pc, #48]	; (80035a8 <ConfigStore::ConfigStore()+0x3c>)
 8003578:	601c      	str	r4, [r3, #0]
 800357a:	7863      	ldrb	r3, [r4, #1]
 800357c:	b11b      	cbz	r3, 8003586 <ConfigStore::ConfigStore()+0x1a>
 800357e:	4620      	mov	r0, r4
 8003580:	f7ff ff62 	bl	8003448 <ConfigStore::Init()>
 8003584:	7028      	strb	r0, [r5, #0]
 8003586:	782b      	ldrb	r3, [r5, #0]
 8003588:	b153      	cbz	r3, 80035a0 <ConfigStore::ConfigStore()+0x34>
 800358a:	2320      	movs	r3, #32
 800358c:	2200      	movs	r2, #0
 800358e:	4907      	ldr	r1, [pc, #28]	; (80035ac <ConfigStore::ConfigStore()+0x40>)
 8003590:	f851 0b04 	ldr.w	r0, [r1], #4
 8003594:	3201      	adds	r2, #1
 8003596:	2a1c      	cmp	r2, #28
 8003598:	4403      	add	r3, r0
 800359a:	d1f9      	bne.n	8003590 <ConfigStore::ConfigStore()+0x24>
 800359c:	4a04      	ldr	r2, [pc, #16]	; (80035b0 <ConfigStore::ConfigStore()+0x44>)
 800359e:	6013      	str	r3, [r2, #0]
 80035a0:	4620      	mov	r0, r4
 80035a2:	bd38      	pop	{r3, r4, r5, pc}
 80035a4:	20001748 	andcs	r1, r0, r8, asr #14
 80035a8:	2000173c 	andcs	r1, r0, ip, lsr r7
 80035ac:	08005b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp, ip, lr}
 80035b0:	20001740 	andcs	r1, r0, r0, asr #14

080035b4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 80035b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80035b8:	461c      	mov	r4, r3
 80035ba:	4b19      	ldr	r3, [pc, #100]	; (8003620 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 80035bc:	4616      	mov	r6, r2
 80035be:	781f      	ldrb	r7, [r3, #0]
 80035c0:	9d07      	ldr	r5, [sp, #28]
 80035c2:	b307      	cbz	r7, 8003606 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 80035c4:	f7ff ff32 	bl	800342c <ConfigStore::GetStoreOffset(configstore::Store)>
 80035c8:	f04f 0c00 	mov.w	ip, #0
 80035cc:	4a15      	ldr	r2, [pc, #84]	; (8003624 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 80035ce:	1831      	adds	r1, r6, r0
 80035d0:	1e63      	subs	r3, r4, #1
 80035d2:	9c06      	ldr	r4, [sp, #24]
 80035d4:	4411      	add	r1, r2
 80035d6:	440c      	add	r4, r1
 80035d8:	42a1      	cmp	r1, r4
 80035da:	d116      	bne.n	800360a <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 80035dc:	f1bc 0f00 	cmp.w	ip, #0
 80035e0:	d011      	beq.n	8003606 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 80035e2:	4b11      	ldr	r3, [pc, #68]	; (8003628 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 80035e4:	6819      	ldr	r1, [r3, #0]
 80035e6:	b109      	cbz	r1, 80035ec <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 80035e8:	2906      	cmp	r1, #6
 80035ea:	d101      	bne.n	80035f0 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 80035ec:	2101      	movs	r1, #1
 80035ee:	6019      	str	r1, [r3, #0]
 80035f0:	4b0e      	ldr	r3, [pc, #56]	; (800362c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 80035f2:	6819      	ldr	r1, [r3, #0]
 80035f4:	4b0e      	ldr	r3, [pc, #56]	; (8003630 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 80035f6:	6019      	str	r1, [r3, #0]
 80035f8:	b12e      	cbz	r6, 8003606 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 80035fa:	b125      	cbz	r5, 8003606 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 80035fc:	9b08      	ldr	r3, [sp, #32]
 80035fe:	4418      	add	r0, r3
 8003600:	5813      	ldr	r3, [r2, r0]
 8003602:	432b      	orrs	r3, r5
 8003604:	5013      	str	r3, [r2, r0]
 8003606:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800360a:	f891 8000 	ldrb.w	r8, [r1]
 800360e:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 8003612:	3101      	adds	r1, #1
 8003614:	45f0      	cmp	r8, lr
 8003616:	bf1c      	itt	ne
 8003618:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800361c:	46bc      	movne	ip, r7
 800361e:	e7db      	b.n	80035d8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 8003620:	2000173c 	andcs	r1, r0, ip, lsr r7
 8003624:	20000738 	andcs	r0, r0, r8, lsr r7
 8003628:	20001744 	andcs	r1, r0, r4, asr #14
 800362c:	2000181c 	andcs	r1, r0, ip, lsl r8
 8003630:	20000734 	andcs	r0, r0, r4, lsr r7

08003634 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>:
 8003634:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003638:	461d      	mov	r5, r3
 800363a:	4b15      	ldr	r3, [pc, #84]	; (8003690 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 800363c:	b085      	sub	sp, #20
 800363e:	781b      	ldrb	r3, [r3, #0]
 8003640:	4607      	mov	r7, r0
 8003642:	4614      	mov	r4, r2
 8003644:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8003648:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800364c:	b193      	cbz	r3, 8003674 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800364e:	f7ff feed 	bl	800342c <ConfigStore::GetStoreOffset(configstore::Store)>
 8003652:	4a10      	ldr	r2, [pc, #64]	; (8003694 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 8003654:	eb08 0600 	add.w	r6, r8, r0
 8003658:	18b3      	adds	r3, r6, r2
 800365a:	f1b9 0f00 	cmp.w	r9, #0
 800365e:	d013      	beq.n	8003688 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 8003660:	5990      	ldr	r0, [r2, r6]
 8003662:	b988      	cbnz	r0, 8003688 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 8003664:	e9cd 0001 	strd	r0, r0, [sp, #4]
 8003668:	4623      	mov	r3, r4
 800366a:	4642      	mov	r2, r8
 800366c:	4638      	mov	r0, r7
 800366e:	9500      	str	r5, [sp, #0]
 8003670:	f7ff ffa0 	bl	80035b4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8003674:	b005      	add	sp, #20
 8003676:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800367a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800367e:	f804 2f01 	strb.w	r2, [r4, #1]!
 8003682:	429d      	cmp	r5, r3
 8003684:	d1f9      	bne.n	800367a <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 8003686:	e7f5      	b.n	8003674 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 8003688:	3c01      	subs	r4, #1
 800368a:	441d      	add	r5, r3
 800368c:	e7f9      	b.n	8003682 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 800368e:	bf00      	nop
 8003690:	2000173c 	andcs	r1, r0, ip, lsr r7
 8003694:	20000738 	andcs	r0, r0, r8, lsr r7

08003698 <ConfigStore::Flash()>:
 8003698:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800369a:	4c24      	ldr	r4, [pc, #144]	; (800372c <ConfigStore::Flash()+0x94>)
 800369c:	6823      	ldr	r3, [r4, #0]
 800369e:	2b00      	cmp	r3, #0
 80036a0:	d041      	beq.n	8003726 <ConfigStore::Flash()+0x8e>
 80036a2:	3b01      	subs	r3, #1
 80036a4:	2b05      	cmp	r3, #5
 80036a6:	d82f      	bhi.n	8003708 <ConfigStore::Flash()+0x70>
 80036a8:	e8df f003 	tbb	[pc, r3]
 80036ac:	2c140b03 			; <UNDEFINED> instruction: 0x2c140b03
 80036b0:	4b1f2e23 	blmi	87cef44 <__exidx_end+0x7c8f28>
 80036b4:	681a      	ldr	r2, [r3, #0]
 80036b6:	4b1f      	ldr	r3, [pc, #124]	; (8003734 <ConfigStore::Flash()+0x9c>)
 80036b8:	601a      	str	r2, [r3, #0]
 80036ba:	2302      	movs	r3, #2
 80036bc:	6023      	str	r3, [r4, #0]
 80036be:	2001      	movs	r0, #1
 80036c0:	e02f      	b.n	8003722 <ConfigStore::Flash()+0x8a>
 80036c2:	4b1b      	ldr	r3, [pc, #108]	; (8003730 <ConfigStore::Flash()+0x98>)
 80036c4:	4a1b      	ldr	r2, [pc, #108]	; (8003734 <ConfigStore::Flash()+0x9c>)
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	6812      	ldr	r2, [r2, #0]
 80036ca:	1a9b      	subs	r3, r3, r2
 80036cc:	2b63      	cmp	r3, #99	; 0x63
 80036ce:	d9f6      	bls.n	80036be <ConfigStore::Flash()+0x26>
 80036d0:	2303      	movs	r3, #3
 80036d2:	e7f3      	b.n	80036bc <ConfigStore::Flash()+0x24>
 80036d4:	4918      	ldr	r1, [pc, #96]	; (8003738 <ConfigStore::Flash()+0xa0>)
 80036d6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80036da:	6809      	ldr	r1, [r1, #0]
 80036dc:	ab03      	add	r3, sp, #12
 80036de:	f000 f847 	bl	8003770 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>
 80036e2:	2800      	cmp	r0, #0
 80036e4:	d0eb      	beq.n	80036be <ConfigStore::Flash()+0x26>
 80036e6:	4b12      	ldr	r3, [pc, #72]	; (8003730 <ConfigStore::Flash()+0x98>)
 80036e8:	681a      	ldr	r2, [r3, #0]
 80036ea:	4b12      	ldr	r3, [pc, #72]	; (8003734 <ConfigStore::Flash()+0x9c>)
 80036ec:	601a      	str	r2, [r3, #0]
 80036ee:	2305      	movs	r3, #5
 80036f0:	e7e4      	b.n	80036bc <ConfigStore::Flash()+0x24>
 80036f2:	4b0f      	ldr	r3, [pc, #60]	; (8003730 <ConfigStore::Flash()+0x98>)
 80036f4:	4a0f      	ldr	r2, [pc, #60]	; (8003734 <ConfigStore::Flash()+0x9c>)
 80036f6:	681b      	ldr	r3, [r3, #0]
 80036f8:	6812      	ldr	r2, [r2, #0]
 80036fa:	1a9b      	subs	r3, r3, r2
 80036fc:	2b63      	cmp	r3, #99	; 0x63
 80036fe:	d9de      	bls.n	80036be <ConfigStore::Flash()+0x26>
 8003700:	2304      	movs	r3, #4
 8003702:	e7db      	b.n	80036bc <ConfigStore::Flash()+0x24>
 8003704:	2306      	movs	r3, #6
 8003706:	e7d9      	b.n	80036bc <ConfigStore::Flash()+0x24>
 8003708:	ab03      	add	r3, sp, #12
 800370a:	4a0c      	ldr	r2, [pc, #48]	; (800373c <ConfigStore::Flash()+0xa4>)
 800370c:	490a      	ldr	r1, [pc, #40]	; (8003738 <ConfigStore::Flash()+0xa0>)
 800370e:	9300      	str	r3, [sp, #0]
 8003710:	6812      	ldr	r2, [r2, #0]
 8003712:	4b0b      	ldr	r3, [pc, #44]	; (8003740 <ConfigStore::Flash()+0xa8>)
 8003714:	6809      	ldr	r1, [r1, #0]
 8003716:	f000 f834 	bl	8003782 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>
 800371a:	2800      	cmp	r0, #0
 800371c:	d0cf      	beq.n	80036be <ConfigStore::Flash()+0x26>
 800371e:	2000      	movs	r0, #0
 8003720:	6020      	str	r0, [r4, #0]
 8003722:	b004      	add	sp, #16
 8003724:	bd10      	pop	{r4, pc}
 8003726:	4618      	mov	r0, r3
 8003728:	e7fb      	b.n	8003722 <ConfigStore::Flash()+0x8a>
 800372a:	bf00      	nop
 800372c:	20001744 	andcs	r1, r0, r4, asr #14
 8003730:	2000181c 	andcs	r1, r0, ip, lsl r8
 8003734:	20000734 	andcs	r0, r0, r4, lsr r7
 8003738:	20001738 	andcs	r1, r0, r8, lsr r7
 800373c:	20001740 	andcs	r1, r0, r0, asr #14
 8003740:	20000738 	andcs	r0, r0, r8, lsr r7

08003744 <StoreDevice::StoreDevice()>:
 8003744:	b510      	push	{r4, lr}
 8003746:	4604      	mov	r4, r0
 8003748:	f000 f8c2 	bl	80038d0 <FlashCode::FlashCode()>
 800374c:	7823      	ldrb	r3, [r4, #0]
 800374e:	4620      	mov	r0, r4
 8003750:	7063      	strb	r3, [r4, #1]
 8003752:	bd10      	pop	{r4, pc}

08003754 <StoreDevice::GetSize() const>:
 8003754:	f000 b8d6 	b.w	8003904 <FlashCode::GetSize() const>

08003758 <StoreDevice::GetSectorSize() const>:
 8003758:	f000 b8dc 	b.w	8003914 <FlashCode::GetSectorSize() const>

0800375c <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>:
 800375c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800375e:	ac03      	add	r4, sp, #12
 8003760:	9400      	str	r4, [sp, #0]
 8003762:	f000 f8da 	bl	800391a <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)>
 8003766:	9b06      	ldr	r3, [sp, #24]
 8003768:	9a03      	ldr	r2, [sp, #12]
 800376a:	601a      	str	r2, [r3, #0]
 800376c:	b004      	add	sp, #16
 800376e:	bd10      	pop	{r4, pc}

08003770 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>:
 8003770:	b513      	push	{r0, r1, r4, lr}
 8003772:	461c      	mov	r4, r3
 8003774:	ab01      	add	r3, sp, #4
 8003776:	f000 f8df 	bl	8003938 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)>
 800377a:	9b01      	ldr	r3, [sp, #4]
 800377c:	6023      	str	r3, [r4, #0]
 800377e:	b002      	add	sp, #8
 8003780:	bd10      	pop	{r4, pc}

08003782 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>:
 8003782:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003784:	ac03      	add	r4, sp, #12
 8003786:	9400      	str	r4, [sp, #0]
 8003788:	f000 f976 	bl	8003a78 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)>
 800378c:	9b06      	ldr	r3, [sp, #24]
 800378e:	9a03      	ldr	r2, [sp, #12]
 8003790:	601a      	str	r2, [r3, #0]
 8003792:	b004      	add	sp, #16
 8003794:	bd10      	pop	{r4, pc}

08003796 <StoreRDMDevice::~StoreRDMDevice()>:
 8003796:	4770      	bx	lr

08003798 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8003798:	3804      	subs	r0, #4
 800379a:	4770      	bx	lr

0800379c <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 800379c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800379e:	2200      	movs	r2, #0
 80037a0:	460b      	mov	r3, r1
 80037a2:	2129      	movs	r1, #41	; 0x29
 80037a4:	e9cd 2201 	strd	r2, r2, [sp, #4]
 80037a8:	4804      	ldr	r0, [pc, #16]	; (80037bc <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 80037aa:	9100      	str	r1, [sp, #0]
 80037ac:	6800      	ldr	r0, [r0, #0]
 80037ae:	210b      	movs	r1, #11
 80037b0:	f7ff ff00 	bl	80035b4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80037b4:	b005      	add	sp, #20
 80037b6:	f85d fb04 	ldr.w	pc, [sp], #4
 80037ba:	bf00      	nop
 80037bc:	20001748 	andcs	r1, r0, r8, asr #14

080037c0 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 80037c0:	b570      	push	{r4, r5, r6, lr}
 80037c2:	2401      	movs	r4, #1
 80037c4:	2600      	movs	r6, #0
 80037c6:	4d0c      	ldr	r5, [pc, #48]	; (80037f8 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 80037c8:	b086      	sub	sp, #24
 80037ca:	460b      	mov	r3, r1
 80037cc:	6828      	ldr	r0, [r5, #0]
 80037ce:	f88d 2017 	strb.w	r2, [sp, #23]
 80037d2:	9200      	str	r2, [sp, #0]
 80037d4:	210b      	movs	r1, #11
 80037d6:	2204      	movs	r2, #4
 80037d8:	e9cd 4601 	strd	r4, r6, [sp, #4]
 80037dc:	f7ff feea 	bl	80035b4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80037e0:	2224      	movs	r2, #36	; 0x24
 80037e2:	210b      	movs	r1, #11
 80037e4:	e9cd 4601 	strd	r4, r6, [sp, #4]
 80037e8:	6828      	ldr	r0, [r5, #0]
 80037ea:	9400      	str	r4, [sp, #0]
 80037ec:	f10d 0317 	add.w	r3, sp, #23
 80037f0:	f7ff fee0 	bl	80035b4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80037f4:	b006      	add	sp, #24
 80037f6:	bd70      	pop	{r4, r5, r6, pc}
 80037f8:	20001748 	andcs	r1, r0, r8, asr #14

080037fc <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 80037fc:	f1a0 0004 	sub.w	r0, r0, #4
 8003800:	e7de      	b.n	80037c0 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 8003802:	bf00      	nop

08003804 <StoreRDMDevice::~StoreRDMDevice()>:
 8003804:	b510      	push	{r4, lr}
 8003806:	4604      	mov	r4, r0
 8003808:	f000 fd2e 	bl	8004268 <operator delete(void*)>
 800380c:	4620      	mov	r0, r4
 800380e:	bd10      	pop	{r4, pc}

08003810 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8003810:	f1a0 0004 	sub.w	r0, r0, #4
 8003814:	e7f6      	b.n	8003804 <StoreRDMDevice::~StoreRDMDevice()>
	...

08003818 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 8003818:	b507      	push	{r0, r1, r2, lr}
 800381a:	2300      	movs	r3, #0
 800381c:	460a      	mov	r2, r1
 800381e:	2101      	movs	r1, #1
 8003820:	e9cd 3100 	strd	r3, r1, [sp]
 8003824:	4804      	ldr	r0, [pc, #16]	; (8003838 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x20>)
 8003826:	2329      	movs	r3, #41	; 0x29
 8003828:	210b      	movs	r1, #11
 800382a:	6800      	ldr	r0, [r0, #0]
 800382c:	f7ff ff02 	bl	8003634 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8003830:	b003      	add	sp, #12
 8003832:	f85d fb04 	ldr.w	pc, [sp], #4
 8003836:	bf00      	nop
 8003838:	20001748 	andcs	r1, r0, r8, asr #14

0800383c <StoreRDMDevice::StoreRDMDevice()>:
 800383c:	4a03      	ldr	r2, [pc, #12]	; (800384c <StoreRDMDevice::StoreRDMDevice()+0x10>)
 800383e:	6002      	str	r2, [r0, #0]
 8003840:	321c      	adds	r2, #28
 8003842:	6042      	str	r2, [r0, #4]
 8003844:	4a02      	ldr	r2, [pc, #8]	; (8003850 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 8003846:	6010      	str	r0, [r2, #0]
 8003848:	4770      	bx	lr
 800384a:	bf00      	nop
 800384c:	08005b84 	stmdaeq	r0, {r2, r7, r8, r9, fp, ip, lr}
 8003850:	20001750 	andcs	r1, r0, r0, asr r7

08003854 <StoreWidget::~StoreWidget()>:
 8003854:	4770      	bx	lr

08003856 <non-virtual thunk to StoreWidget::~StoreWidget()>:
 8003856:	3804      	subs	r0, #4
 8003858:	4770      	bx	lr
	...

0800385c <StoreWidget::Update(TWidgetParams const*)>:
 800385c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800385e:	2200      	movs	r2, #0
 8003860:	460b      	mov	r3, r1
 8003862:	210c      	movs	r1, #12
 8003864:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8003868:	4804      	ldr	r0, [pc, #16]	; (800387c <StoreWidget::Update(TWidgetParams const*)+0x20>)
 800386a:	9100      	str	r1, [sp, #0]
 800386c:	6800      	ldr	r0, [r0, #0]
 800386e:	210a      	movs	r1, #10
 8003870:	f7ff fea0 	bl	80035b4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8003874:	b005      	add	sp, #20
 8003876:	f85d fb04 	ldr.w	pc, [sp], #4
 800387a:	bf00      	nop
 800387c:	20001748 	andcs	r1, r0, r8, asr #14

08003880 <StoreWidget::~StoreWidget()>:
 8003880:	b510      	push	{r4, lr}
 8003882:	4604      	mov	r4, r0
 8003884:	f000 fcf0 	bl	8004268 <operator delete(void*)>
 8003888:	4620      	mov	r0, r4
 800388a:	bd10      	pop	{r4, pc}

0800388c <non-virtual thunk to StoreWidget::~StoreWidget()>:
 800388c:	f1a0 0004 	sub.w	r0, r0, #4
 8003890:	e7f6      	b.n	8003880 <StoreWidget::~StoreWidget()>
	...

08003894 <StoreWidget::Copy(TWidgetParams*)>:
 8003894:	b507      	push	{r0, r1, r2, lr}
 8003896:	2300      	movs	r3, #0
 8003898:	460a      	mov	r2, r1
 800389a:	2101      	movs	r1, #1
 800389c:	e9cd 3100 	strd	r3, r1, [sp]
 80038a0:	4804      	ldr	r0, [pc, #16]	; (80038b4 <StoreWidget::Copy(TWidgetParams*)+0x20>)
 80038a2:	230c      	movs	r3, #12
 80038a4:	210a      	movs	r1, #10
 80038a6:	6800      	ldr	r0, [r0, #0]
 80038a8:	f7ff fec4 	bl	8003634 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 80038ac:	b003      	add	sp, #12
 80038ae:	f85d fb04 	ldr.w	pc, [sp], #4
 80038b2:	bf00      	nop
 80038b4:	20001748 	andcs	r1, r0, r8, asr #14

080038b8 <StoreWidget::StoreWidget()>:
 80038b8:	4a03      	ldr	r2, [pc, #12]	; (80038c8 <StoreWidget::StoreWidget()+0x10>)
 80038ba:	6002      	str	r2, [r0, #0]
 80038bc:	3224      	adds	r2, #36	; 0x24
 80038be:	6042      	str	r2, [r0, #4]
 80038c0:	4a02      	ldr	r2, [pc, #8]	; (80038cc <StoreWidget::StoreWidget()+0x14>)
 80038c2:	6010      	str	r0, [r2, #0]
 80038c4:	4770      	bx	lr
 80038c6:	bf00      	nop
 80038c8:	08005bb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, fp, ip, lr}
 80038cc:	20001754 	andcs	r1, r0, r4, asr r7

080038d0 <FlashCode::FlashCode()>:
 80038d0:	b538      	push	{r3, r4, r5, lr}
 80038d2:	4b09      	ldr	r3, [pc, #36]	; (80038f8 <FlashCode::FlashCode()+0x28>)
 80038d4:	4604      	mov	r4, r0
 80038d6:	6018      	str	r0, [r3, #0]
 80038d8:	2301      	movs	r3, #1
 80038da:	7003      	strb	r3, [r0, #0]
 80038dc:	f000 f812 	bl	8003904 <FlashCode::GetSize() const>
 80038e0:	4605      	mov	r5, r0
 80038e2:	4620      	mov	r0, r4
 80038e4:	f000 f80e 	bl	8003904 <FlashCode::GetSize() const>
 80038e8:	462a      	mov	r2, r5
 80038ea:	0a83      	lsrs	r3, r0, #10
 80038ec:	4903      	ldr	r1, [pc, #12]	; (80038fc <FlashCode::FlashCode()+0x2c>)
 80038ee:	4804      	ldr	r0, [pc, #16]	; (8003900 <FlashCode::FlashCode()+0x30>)
 80038f0:	f7fd ff3c 	bl	800176c <printf>
 80038f4:	4620      	mov	r0, r4
 80038f6:	bd38      	pop	{r3, r4, r5, pc}
 80038f8:	20001758 	andcs	r1, r0, r8, asr r7
 80038fc:	08005764 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, ip, lr}
 8003900:	08005bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, ip, lr}

08003904 <FlashCode::GetSize() const>:
 8003904:	4b02      	ldr	r3, [pc, #8]	; (8003910 <FlashCode::GetSize() const+0xc>)
 8003906:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800390a:	0280      	lsls	r0, r0, #10
 800390c:	4770      	bx	lr
 800390e:	bf00      	nop
 8003910:	1ffff700 	svcne	0x00fff700

08003914 <FlashCode::GetSectorSize() const>:
 8003914:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8003918:	4770      	bx	lr

0800391a <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)>:
 800391a:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800391e:	441a      	add	r2, r3
 8003920:	4293      	cmp	r3, r2
 8003922:	d104      	bne.n	800392e <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)+0x14>
 8003924:	2200      	movs	r2, #0
 8003926:	9b00      	ldr	r3, [sp, #0]
 8003928:	2001      	movs	r0, #1
 800392a:	601a      	str	r2, [r3, #0]
 800392c:	4770      	bx	lr
 800392e:	f851 0b04 	ldr.w	r0, [r1], #4
 8003932:	f843 0b04 	str.w	r0, [r3], #4
 8003936:	e7f3      	b.n	8003920 <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)+0x6>

08003938 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)>:
 8003938:	2000      	movs	r0, #0
 800393a:	b538      	push	{r3, r4, r5, lr}
 800393c:	4c47      	ldr	r4, [pc, #284]	; (8003a5c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x124>)
 800393e:	6018      	str	r0, [r3, #0]
 8003940:	6823      	ldr	r3, [r4, #0]
 8003942:	2b04      	cmp	r3, #4
 8003944:	f200 8082 	bhi.w	8003a4c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x114>
 8003948:	e8df f003 	tbb	[pc, r3]
 800394c:	78452003 	stmdavc	r5, {r0, r1, sp}^
 8003950:	4b430080 	blmi	90c3b58 <__exidx_end+0x10bdb3c>
 8003954:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8003958:	6019      	str	r1, [r3, #0]
 800395a:	4b42      	ldr	r3, [pc, #264]	; (8003a64 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 800395c:	601a      	str	r2, [r3, #0]
 800395e:	4b42      	ldr	r3, [pc, #264]	; (8003a68 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x130>)
 8003960:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8003964:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003968:	4b40      	ldr	r3, [pc, #256]	; (8003a6c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 800396a:	d807      	bhi.n	800397c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x44>
 800396c:	2201      	movs	r2, #1
 800396e:	701a      	strb	r2, [r3, #0]
 8003970:	f000 ff06 	bl	8004780 <fmc_bank0_unlock>
 8003974:	2301      	movs	r3, #1
 8003976:	6023      	str	r3, [r4, #0]
 8003978:	2000      	movs	r0, #0
 800397a:	e026      	b.n	80039ca <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x92>
 800397c:	4a3c      	ldr	r2, [pc, #240]	; (8003a70 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x138>)
 800397e:	4291      	cmp	r1, r2
 8003980:	d3f4      	bcc.n	800396c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x34>
 8003982:	2200      	movs	r2, #0
 8003984:	701a      	strb	r2, [r3, #0]
 8003986:	f000 ff09 	bl	800479c <fmc_bank1_unlock>
 800398a:	e7f3      	b.n	8003974 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 800398c:	4d37      	ldr	r5, [pc, #220]	; (8003a6c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 800398e:	782b      	ldrb	r3, [r5, #0]
 8003990:	b15b      	cbz	r3, 80039aa <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x72>
 8003992:	f000 ff21 	bl	80047d8 <fmc_bank0_state_get>
 8003996:	2801      	cmp	r0, #1
 8003998:	d0ee      	beq.n	8003978 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x40>
 800399a:	7829      	ldrb	r1, [r5, #0]
 800399c:	4b35      	ldr	r3, [pc, #212]	; (8003a74 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 800399e:	b939      	cbnz	r1, 80039b0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x78>
 80039a0:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80039a2:	f022 0202 	bic.w	r2, r2, #2
 80039a6:	651a      	str	r2, [r3, #80]	; 0x50
 80039a8:	e006      	b.n	80039b8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x80>
 80039aa:	f000 ff27 	bl	80047fc <fmc_bank1_state_get>
 80039ae:	e7f2      	b.n	8003996 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x5e>
 80039b0:	691a      	ldr	r2, [r3, #16]
 80039b2:	f022 0202 	bic.w	r2, r2, #2
 80039b6:	611a      	str	r2, [r3, #16]
 80039b8:	4b2a      	ldr	r3, [pc, #168]	; (8003a64 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 80039ba:	681b      	ldr	r3, [r3, #0]
 80039bc:	b94b      	cbnz	r3, 80039d2 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x9a>
 80039be:	b129      	cbz	r1, 80039cc <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x94>
 80039c0:	f000 fefa 	bl	80047b8 <fmc_bank0_lock>
 80039c4:	2300      	movs	r3, #0
 80039c6:	2001      	movs	r0, #1
 80039c8:	6023      	str	r3, [r4, #0]
 80039ca:	bd38      	pop	{r3, r4, r5, pc}
 80039cc:	f000 fefc 	bl	80047c8 <fmc_bank1_lock>
 80039d0:	e7f8      	b.n	80039c4 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x8c>
 80039d2:	2302      	movs	r3, #2
 80039d4:	e7cf      	b.n	8003976 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3e>
 80039d6:	4923      	ldr	r1, [pc, #140]	; (8003a64 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 80039d8:	680b      	ldr	r3, [r1, #0]
 80039da:	2b00      	cmp	r3, #0
 80039dc:	d0ca      	beq.n	8003974 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 80039de:	4b23      	ldr	r3, [pc, #140]	; (8003a6c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 80039e0:	4a1f      	ldr	r2, [pc, #124]	; (8003a60 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x128>)
 80039e2:	7818      	ldrb	r0, [r3, #0]
 80039e4:	4b23      	ldr	r3, [pc, #140]	; (8003a74 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 80039e6:	b190      	cbz	r0, 8003a0e <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0xd6>
 80039e8:	6918      	ldr	r0, [r3, #16]
 80039ea:	f040 0002 	orr.w	r0, r0, #2
 80039ee:	6118      	str	r0, [r3, #16]
 80039f0:	6810      	ldr	r0, [r2, #0]
 80039f2:	6158      	str	r0, [r3, #20]
 80039f4:	6918      	ldr	r0, [r3, #16]
 80039f6:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 80039fa:	6118      	str	r0, [r3, #16]
 80039fc:	680b      	ldr	r3, [r1, #0]
 80039fe:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8003a02:	600b      	str	r3, [r1, #0]
 8003a04:	6813      	ldr	r3, [r2, #0]
 8003a06:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8003a0a:	6013      	str	r3, [r2, #0]
 8003a0c:	e7b2      	b.n	8003974 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 8003a0e:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8003a10:	f040 0002 	orr.w	r0, r0, #2
 8003a14:	6518      	str	r0, [r3, #80]	; 0x50
 8003a16:	6810      	ldr	r0, [r2, #0]
 8003a18:	6558      	str	r0, [r3, #84]	; 0x54
 8003a1a:	69dd      	ldr	r5, [r3, #28]
 8003a1c:	07ad      	lsls	r5, r5, #30
 8003a1e:	bf48      	it	mi
 8003a20:	6158      	strmi	r0, [r3, #20]
 8003a22:	4814      	ldr	r0, [pc, #80]	; (8003a74 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 8003a24:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8003a26:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003a2a:	6503      	str	r3, [r0, #80]	; 0x50
 8003a2c:	680b      	ldr	r3, [r1, #0]
 8003a2e:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8003a32:	600b      	str	r3, [r1, #0]
 8003a34:	6813      	ldr	r3, [r2, #0]
 8003a36:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8003a3a:	e7e6      	b.n	8003a0a <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0xd2>
 8003a3c:	4b0b      	ldr	r3, [pc, #44]	; (8003a6c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 8003a3e:	781a      	ldrb	r2, [r3, #0]
 8003a40:	4b0c      	ldr	r3, [pc, #48]	; (8003a74 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 8003a42:	b132      	cbz	r2, 8003a52 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x11a>
 8003a44:	691a      	ldr	r2, [r3, #16]
 8003a46:	f022 0201 	bic.w	r2, r2, #1
 8003a4a:	611a      	str	r2, [r3, #16]
 8003a4c:	2000      	movs	r0, #0
 8003a4e:	6020      	str	r0, [r4, #0]
 8003a50:	e7bb      	b.n	80039ca <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x92>
 8003a52:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003a54:	f022 0201 	bic.w	r2, r2, #1
 8003a58:	651a      	str	r2, [r3, #80]	; 0x50
 8003a5a:	e7f7      	b.n	8003a4c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x114>
 8003a5c:	20001760 	andcs	r1, r0, r0, ror #14
 8003a60:	20001764 	andcs	r1, r0, r4, ror #14
 8003a64:	20001770 	andcs	r1, r0, r0, ror r7
 8003a68:	1ffff700 	svcne	0x00fff700
 8003a6c:	2000176c 	andcs	r1, r0, ip, ror #14
 8003a70:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8003a74:	40022000 	andmi	r2, r2, r0

08003a78 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)>:
 8003a78:	b570      	push	{r4, r5, r6, lr}
 8003a7a:	2400      	movs	r4, #0
 8003a7c:	9804      	ldr	r0, [sp, #16]
 8003a7e:	6004      	str	r4, [r0, #0]
 8003a80:	4c48      	ldr	r4, [pc, #288]	; (8003ba4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x12c>)
 8003a82:	6820      	ldr	r0, [r4, #0]
 8003a84:	2804      	cmp	r0, #4
 8003a86:	d848      	bhi.n	8003b1a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xa2>
 8003a88:	e8df f000 	tbb	[pc, r0]
 8003a8c:	22847c03 	addcs	r7, r4, #768	; 0x300
 8003a90:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 8003a94:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8003a98:	6001      	str	r1, [r0, #0]
 8003a9a:	4844      	ldr	r0, [pc, #272]	; (8003bac <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 8003a9c:	6003      	str	r3, [r0, #0]
 8003a9e:	4b44      	ldr	r3, [pc, #272]	; (8003bb0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 8003aa0:	601a      	str	r2, [r3, #0]
 8003aa2:	4b44      	ldr	r3, [pc, #272]	; (8003bb4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x13c>)
 8003aa4:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8003aa8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003aac:	4b42      	ldr	r3, [pc, #264]	; (8003bb8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8003aae:	d807      	bhi.n	8003ac0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x48>
 8003ab0:	2201      	movs	r2, #1
 8003ab2:	701a      	strb	r2, [r3, #0]
 8003ab4:	f000 fe64 	bl	8004780 <fmc_bank0_unlock>
 8003ab8:	2303      	movs	r3, #3
 8003aba:	6023      	str	r3, [r4, #0]
 8003abc:	2000      	movs	r0, #0
 8003abe:	e026      	b.n	8003b0e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x96>
 8003ac0:	4a3e      	ldr	r2, [pc, #248]	; (8003bbc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x144>)
 8003ac2:	4291      	cmp	r1, r2
 8003ac4:	d3f4      	bcc.n	8003ab0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x38>
 8003ac6:	2200      	movs	r2, #0
 8003ac8:	701a      	strb	r2, [r3, #0]
 8003aca:	f000 fe67 	bl	800479c <fmc_bank1_unlock>
 8003ace:	e7f3      	b.n	8003ab8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 8003ad0:	4d39      	ldr	r5, [pc, #228]	; (8003bb8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8003ad2:	782b      	ldrb	r3, [r5, #0]
 8003ad4:	b15b      	cbz	r3, 8003aee <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x76>
 8003ad6:	f000 fe7f 	bl	80047d8 <fmc_bank0_state_get>
 8003ada:	2801      	cmp	r0, #1
 8003adc:	d0ee      	beq.n	8003abc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x44>
 8003ade:	7829      	ldrb	r1, [r5, #0]
 8003ae0:	4b37      	ldr	r3, [pc, #220]	; (8003bc0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 8003ae2:	b939      	cbnz	r1, 8003af4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x7c>
 8003ae4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003ae6:	f022 0201 	bic.w	r2, r2, #1
 8003aea:	651a      	str	r2, [r3, #80]	; 0x50
 8003aec:	e006      	b.n	8003afc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x84>
 8003aee:	f000 fe85 	bl	80047fc <fmc_bank1_state_get>
 8003af2:	e7f2      	b.n	8003ada <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x62>
 8003af4:	691a      	ldr	r2, [r3, #16]
 8003af6:	f022 0201 	bic.w	r2, r2, #1
 8003afa:	611a      	str	r2, [r3, #16]
 8003afc:	4b2c      	ldr	r3, [pc, #176]	; (8003bb0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 8003afe:	681b      	ldr	r3, [r3, #0]
 8003b00:	b94b      	cbnz	r3, 8003b16 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x9e>
 8003b02:	b129      	cbz	r1, 8003b10 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x98>
 8003b04:	f000 fe58 	bl	80047b8 <fmc_bank0_lock>
 8003b08:	2300      	movs	r3, #0
 8003b0a:	2001      	movs	r0, #1
 8003b0c:	6023      	str	r3, [r4, #0]
 8003b0e:	bd70      	pop	{r4, r5, r6, pc}
 8003b10:	f000 fe5a 	bl	80047c8 <fmc_bank1_lock>
 8003b14:	e7f8      	b.n	8003b08 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x90>
 8003b16:	2304      	movs	r3, #4
 8003b18:	e7cf      	b.n	8003aba <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x42>
 8003b1a:	4a25      	ldr	r2, [pc, #148]	; (8003bb0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 8003b1c:	6813      	ldr	r3, [r2, #0]
 8003b1e:	2b03      	cmp	r3, #3
 8003b20:	d91a      	bls.n	8003b58 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xe0>
 8003b22:	4b25      	ldr	r3, [pc, #148]	; (8003bb8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8003b24:	7819      	ldrb	r1, [r3, #0]
 8003b26:	4b26      	ldr	r3, [pc, #152]	; (8003bc0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 8003b28:	b189      	cbz	r1, 8003b4e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xd6>
 8003b2a:	6919      	ldr	r1, [r3, #16]
 8003b2c:	f041 0101 	orr.w	r1, r1, #1
 8003b30:	6119      	str	r1, [r3, #16]
 8003b32:	4d1e      	ldr	r5, [pc, #120]	; (8003bac <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 8003b34:	481c      	ldr	r0, [pc, #112]	; (8003ba8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x130>)
 8003b36:	6829      	ldr	r1, [r5, #0]
 8003b38:	6803      	ldr	r3, [r0, #0]
 8003b3a:	f851 6b04 	ldr.w	r6, [r1], #4
 8003b3e:	f843 6b04 	str.w	r6, [r3], #4
 8003b42:	6003      	str	r3, [r0, #0]
 8003b44:	6813      	ldr	r3, [r2, #0]
 8003b46:	6029      	str	r1, [r5, #0]
 8003b48:	3b04      	subs	r3, #4
 8003b4a:	6013      	str	r3, [r2, #0]
 8003b4c:	e7b4      	b.n	8003ab8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 8003b4e:	6d19      	ldr	r1, [r3, #80]	; 0x50
 8003b50:	f041 0101 	orr.w	r1, r1, #1
 8003b54:	6519      	str	r1, [r3, #80]	; 0x50
 8003b56:	e7ec      	b.n	8003b32 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xba>
 8003b58:	2b00      	cmp	r3, #0
 8003b5a:	d0ad      	beq.n	8003ab8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 8003b5c:	4b16      	ldr	r3, [pc, #88]	; (8003bb8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8003b5e:	781a      	ldrb	r2, [r3, #0]
 8003b60:	4b17      	ldr	r3, [pc, #92]	; (8003bc0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 8003b62:	b152      	cbz	r2, 8003b7a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x102>
 8003b64:	691a      	ldr	r2, [r3, #16]
 8003b66:	f042 0201 	orr.w	r2, r2, #1
 8003b6a:	611a      	str	r2, [r3, #16]
 8003b6c:	4a0f      	ldr	r2, [pc, #60]	; (8003bac <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 8003b6e:	4b0e      	ldr	r3, [pc, #56]	; (8003ba8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x130>)
 8003b70:	6812      	ldr	r2, [r2, #0]
 8003b72:	681b      	ldr	r3, [r3, #0]
 8003b74:	6812      	ldr	r2, [r2, #0]
 8003b76:	601a      	str	r2, [r3, #0]
 8003b78:	e79e      	b.n	8003ab8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 8003b7a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003b7c:	f042 0201 	orr.w	r2, r2, #1
 8003b80:	651a      	str	r2, [r3, #80]	; 0x50
 8003b82:	e7f3      	b.n	8003b6c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xf4>
 8003b84:	4b0c      	ldr	r3, [pc, #48]	; (8003bb8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8003b86:	781a      	ldrb	r2, [r3, #0]
 8003b88:	4b0d      	ldr	r3, [pc, #52]	; (8003bc0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 8003b8a:	b132      	cbz	r2, 8003b9a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x122>
 8003b8c:	691a      	ldr	r2, [r3, #16]
 8003b8e:	f022 0202 	bic.w	r2, r2, #2
 8003b92:	611a      	str	r2, [r3, #16]
 8003b94:	2000      	movs	r0, #0
 8003b96:	6020      	str	r0, [r4, #0]
 8003b98:	e7b9      	b.n	8003b0e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x96>
 8003b9a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003b9c:	f022 0202 	bic.w	r2, r2, #2
 8003ba0:	651a      	str	r2, [r3, #80]	; 0x50
 8003ba2:	e7f7      	b.n	8003b94 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x11c>
 8003ba4:	20001760 	andcs	r1, r0, r0, ror #14
 8003ba8:	2000175c 	andcs	r1, r0, ip, asr r7
 8003bac:	20001768 	andcs	r1, r0, r8, ror #14
 8003bb0:	20001770 	andcs	r1, r0, r0, ror r7
 8003bb4:	1ffff700 	svcne	0x00fff700
 8003bb8:	2000176c 	andcs	r1, r0, ip, ror #14
 8003bbc:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8003bc0:	40022000 	andmi	r2, r2, r0

08003bc4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8003bc4:	e9c0 1200 	strd	r1, r2, [r0]
 8003bc8:	4770      	bx	lr

08003bca <ReadConfigFile::~ReadConfigFile()>:
 8003bca:	4770      	bx	lr

08003bcc <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8003bcc:	b538      	push	{r3, r4, r5, lr}
 8003bce:	4615      	mov	r5, r2
 8003bd0:	f000 f819 	bl	8003c06 <Sscan::checkName(char const*, char const*)>
 8003bd4:	b198      	cbz	r0, 8003bfe <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8003bd6:	4604      	mov	r4, r0
 8003bd8:	2100      	movs	r1, #0
 8003bda:	220a      	movs	r2, #10
 8003bdc:	7823      	ldrb	r3, [r4, #0]
 8003bde:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8003be2:	2809      	cmp	r0, #9
 8003be4:	d80d      	bhi.n	8003c02 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8003be6:	fb02 3101 	mla	r1, r2, r1, r3
 8003bea:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8003bee:	3930      	subs	r1, #48	; 0x30
 8003bf0:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8003bf4:	d1f2      	bne.n	8003bdc <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 8003bf6:	29ff      	cmp	r1, #255	; 0xff
 8003bf8:	d803      	bhi.n	8003c02 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8003bfa:	7029      	strb	r1, [r5, #0]
 8003bfc:	bd38      	pop	{r3, r4, r5, pc}
 8003bfe:	2001      	movs	r0, #1
 8003c00:	e7fc      	b.n	8003bfc <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8003c02:	2002      	movs	r0, #2
 8003c04:	e7fa      	b.n	8003bfc <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08003c06 <Sscan::checkName(char const*, char const*)>:
 8003c06:	4603      	mov	r3, r0
 8003c08:	b510      	push	{r4, lr}
 8003c0a:	3901      	subs	r1, #1
 8003c0c:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8003c10:	461c      	mov	r4, r3
 8003c12:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003c16:	b120      	cbz	r0, 8003c22 <Sscan::checkName(char const*, char const*)+0x1c>
 8003c18:	b10a      	cbz	r2, 8003c1e <Sscan::checkName(char const*, char const*)+0x18>
 8003c1a:	4290      	cmp	r0, r2
 8003c1c:	d0f6      	beq.n	8003c0c <Sscan::checkName(char const*, char const*)+0x6>
 8003c1e:	2000      	movs	r0, #0
 8003c20:	e006      	b.n	8003c30 <Sscan::checkName(char const*, char const*)+0x2a>
 8003c22:	2a3d      	cmp	r2, #61	; 0x3d
 8003c24:	d104      	bne.n	8003c30 <Sscan::checkName(char const*, char const*)+0x2a>
 8003c26:	7860      	ldrb	r0, [r4, #1]
 8003c28:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8003c2c:	d000      	beq.n	8003c30 <Sscan::checkName(char const*, char const*)+0x2a>
 8003c2e:	1c60      	adds	r0, r4, #1
 8003c30:	bd10      	pop	{r4, pc}
	...

08003c34 <Display::PrintInfo() [clone .isra.0]>:
 8003c34:	b910      	cbnz	r0, 8003c3c <Display::PrintInfo() [clone .isra.0]+0x8>
 8003c36:	4803      	ldr	r0, [pc, #12]	; (8003c44 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8003c38:	f000 bbb6 	b.w	80043a8 <puts>
 8003c3c:	6803      	ldr	r3, [r0, #0]
 8003c3e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003c40:	4718      	bx	r3
 8003c42:	bf00      	nop
 8003c44:	08005c1a 	stmdaeq	r0, {r1, r3, r4, sl, fp, ip, lr}

08003c48 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8003c48:	b513      	push	{r0, r1, r4, lr}
 8003c4a:	4604      	mov	r4, r0
 8003c4c:	0a13      	lsrs	r3, r2, #8
 8003c4e:	7800      	ldrb	r0, [r0, #0]
 8003c50:	f88d 1004 	strb.w	r1, [sp, #4]
 8003c54:	f88d 3005 	strb.w	r3, [sp, #5]
 8003c58:	f88d 2006 	strb.w	r2, [sp, #6]
 8003c5c:	f001 f9b2 	bl	8004fc4 <gd32_i2c_set_address>
 8003c60:	6860      	ldr	r0, [r4, #4]
 8003c62:	f001 f9a7 	bl	8004fb4 <gd32_i2c_set_baudrate>
 8003c66:	2103      	movs	r1, #3
 8003c68:	a801      	add	r0, sp, #4
 8003c6a:	f001 f9b1 	bl	8004fd0 <gd32_i2c_write>
 8003c6e:	b002      	add	sp, #8
 8003c70:	bd10      	pop	{r4, pc}

08003c72 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8003c72:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003c74:	460d      	mov	r5, r1
 8003c76:	4604      	mov	r4, r0
 8003c78:	f001 f9a4 	bl	8004fc4 <gd32_i2c_set_address>
 8003c7c:	4628      	mov	r0, r5
 8003c7e:	f001 f999 	bl	8004fb4 <gd32_i2c_set_baudrate>
 8003c82:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8003c86:	2b07      	cmp	r3, #7
 8003c88:	d902      	bls.n	8003c90 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8003c8a:	3c50      	subs	r4, #80	; 0x50
 8003c8c:	2c0f      	cmp	r4, #15
 8003c8e:	d809      	bhi.n	8003ca4 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8003c90:	2101      	movs	r1, #1
 8003c92:	f10d 0007 	add.w	r0, sp, #7
 8003c96:	f001 fa01 	bl	800509c <gd32_i2c_read>
 8003c9a:	fab0 f080 	clz	r0, r0
 8003c9e:	0940      	lsrs	r0, r0, #5
 8003ca0:	b003      	add	sp, #12
 8003ca2:	bd30      	pop	{r4, r5, pc}
 8003ca4:	2100      	movs	r1, #0
 8003ca6:	4608      	mov	r0, r1
 8003ca8:	f001 f992 	bl	8004fd0 <gd32_i2c_write>
 8003cac:	e7f5      	b.n	8003c9a <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

08003cae <Display::Detect7Segment()>:
 8003cae:	b538      	push	{r3, r4, r5, lr}
 8003cb0:	68c1      	ldr	r1, [r0, #12]
 8003cb2:	4604      	mov	r4, r0
 8003cb4:	7a00      	ldrb	r0, [r0, #8]
 8003cb6:	f7ff ffdc 	bl	8003c72 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8003cba:	7460      	strb	r0, [r4, #17]
 8003cbc:	b170      	cbz	r0, 8003cdc <Display::Detect7Segment()+0x2e>
 8003cbe:	2200      	movs	r2, #0
 8003cc0:	f104 0508 	add.w	r5, r4, #8
 8003cc4:	4611      	mov	r1, r2
 8003cc6:	4628      	mov	r0, r5
 8003cc8:	f7ff ffbe 	bl	8003c48 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8003ccc:	7c63      	ldrb	r3, [r4, #17]
 8003cce:	b12b      	cbz	r3, 8003cdc <Display::Detect7Segment()+0x2e>
 8003cd0:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8003cd4:	2112      	movs	r1, #18
 8003cd6:	4628      	mov	r0, r5
 8003cd8:	f7ff ffb6 	bl	8003c48 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8003cdc:	bd38      	pop	{r3, r4, r5, pc}

08003cde <Display::Detect(display::Type)>:
 8003cde:	2902      	cmp	r1, #2
 8003ce0:	b538      	push	{r3, r4, r5, lr}
 8003ce2:	4604      	mov	r4, r0
 8003ce4:	d014      	beq.n	8003d10 <Display::Detect(display::Type)+0x32>
 8003ce6:	2904      	cmp	r1, #4
 8003ce8:	d01b      	beq.n	8003d22 <Display::Detect(display::Type)+0x44>
 8003cea:	69a0      	ldr	r0, [r4, #24]
 8003cec:	b168      	cbz	r0, 8003d0a <Display::Detect(display::Type)+0x2c>
 8003cee:	6803      	ldr	r3, [r0, #0]
 8003cf0:	689b      	ldr	r3, [r3, #8]
 8003cf2:	4798      	blx	r3
 8003cf4:	4603      	mov	r3, r0
 8003cf6:	69a0      	ldr	r0, [r4, #24]
 8003cf8:	b9ab      	cbnz	r3, 8003d26 <Display::Detect(display::Type)+0x48>
 8003cfa:	b110      	cbz	r0, 8003d02 <Display::Detect(display::Type)+0x24>
 8003cfc:	6803      	ldr	r3, [r0, #0]
 8003cfe:	685b      	ldr	r3, [r3, #4]
 8003d00:	4798      	blx	r3
 8003d02:	2300      	movs	r3, #0
 8003d04:	61a3      	str	r3, [r4, #24]
 8003d06:	2304      	movs	r3, #4
 8003d08:	6023      	str	r3, [r4, #0]
 8003d0a:	2300      	movs	r3, #0
 8003d0c:	6163      	str	r3, [r4, #20]
 8003d0e:	e010      	b.n	8003d32 <Display::Detect(display::Type)+0x54>
 8003d10:	2018      	movs	r0, #24
 8003d12:	f000 faab 	bl	800426c <operator new(unsigned int)>
 8003d16:	4605      	mov	r5, r0
 8003d18:	2100      	movs	r1, #0
 8003d1a:	f000 f89d 	bl	8003e58 <Ssd1306::Ssd1306(TOledPanel)>
 8003d1e:	61a5      	str	r5, [r4, #24]
 8003d20:	e7e3      	b.n	8003cea <Display::Detect(display::Type)+0xc>
 8003d22:	6001      	str	r1, [r0, #0]
 8003d24:	e7e1      	b.n	8003cea <Display::Detect(display::Type)+0xc>
 8003d26:	6803      	ldr	r3, [r0, #0]
 8003d28:	68db      	ldr	r3, [r3, #12]
 8003d2a:	4798      	blx	r3
 8003d2c:	69a3      	ldr	r3, [r4, #24]
 8003d2e:	2b00      	cmp	r3, #0
 8003d30:	d0eb      	beq.n	8003d0a <Display::Detect(display::Type)+0x2c>
 8003d32:	bd38      	pop	{r3, r4, r5, pc}

08003d34 <Display::Display()>:
 8003d34:	2304      	movs	r3, #4
 8003d36:	b510      	push	{r4, lr}
 8003d38:	6003      	str	r3, [r0, #0]
 8003d3a:	4b0f      	ldr	r3, [pc, #60]	; (8003d78 <Display::Display()+0x44>)
 8003d3c:	4604      	mov	r4, r0
 8003d3e:	681b      	ldr	r3, [r3, #0]
 8003d40:	4a0e      	ldr	r2, [pc, #56]	; (8003d7c <Display::Display()+0x48>)
 8003d42:	6043      	str	r3, [r0, #4]
 8003d44:	2321      	movs	r3, #33	; 0x21
 8003d46:	7203      	strb	r3, [r0, #8]
 8003d48:	4b0d      	ldr	r3, [pc, #52]	; (8003d80 <Display::Display()+0x4c>)
 8003d4a:	2102      	movs	r1, #2
 8003d4c:	60c3      	str	r3, [r0, #12]
 8003d4e:	2300      	movs	r3, #0
 8003d50:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8003d54:	8203      	strh	r3, [r0, #16]
 8003d56:	4b0b      	ldr	r3, [pc, #44]	; (8003d84 <Display::Display()+0x50>)
 8003d58:	6018      	str	r0, [r3, #0]
 8003d5a:	f7ff ffc0 	bl	8003cde <Display::Detect(display::Type)>
 8003d5e:	4620      	mov	r0, r4
 8003d60:	f7ff ffa5 	bl	8003cae <Display::Detect7Segment()>
 8003d64:	69a3      	ldr	r3, [r4, #24]
 8003d66:	b10b      	cbz	r3, 8003d6c <Display::Display()+0x38>
 8003d68:	f000 fa06 	bl	8004178 <display::timeout::gpio_init()>
 8003d6c:	69a0      	ldr	r0, [r4, #24]
 8003d6e:	f7ff ff61 	bl	8003c34 <Display::PrintInfo() [clone .isra.0]>
 8003d72:	4620      	mov	r0, r4
 8003d74:	bd10      	pop	{r4, pc}
 8003d76:	bf00      	nop
 8003d78:	2000181c 	andcs	r1, r0, ip, lsl r8
 8003d7c:	000493e0 	andeq	r9, r4, r0, ror #7
 8003d80:	00061a80 	andeq	r1, r6, r0, lsl #21
 8003d84:	20001774 	andcs	r1, r0, r4, ror r7

08003d88 <Ssd1306::~Ssd1306()>:
 8003d88:	4770      	bx	lr

08003d8a <Ssd1306::SetCursor(unsigned int)>:
 8003d8a:	4770      	bx	lr

08003d8c <Ssd1306::PrintInfo()>:
 8003d8c:	b410      	push	{r4}
 8003d8e:	4906      	ldr	r1, [pc, #24]	; (8003da8 <Ssd1306::PrintInfo()+0x1c>)
 8003d90:	7c44      	ldrb	r4, [r0, #17]
 8003d92:	7903      	ldrb	r3, [r0, #4]
 8003d94:	7942      	ldrb	r2, [r0, #5]
 8003d96:	4805      	ldr	r0, [pc, #20]	; (8003dac <Ssd1306::PrintInfo()+0x20>)
 8003d98:	2c00      	cmp	r4, #0
 8003d9a:	bf08      	it	eq
 8003d9c:	4601      	moveq	r1, r0
 8003d9e:	4804      	ldr	r0, [pc, #16]	; (8003db0 <Ssd1306::PrintInfo()+0x24>)
 8003da0:	bc10      	pop	{r4}
 8003da2:	f7fd bce3 	b.w	800176c <printf>
 8003da6:	bf00      	nop
 8003da8:	08005c2b 	stmdaeq	r0, {r0, r1, r3, r5, sl, fp, ip, lr}
 8003dac:	08005c32 	stmdaeq	r0, {r1, r4, r5, sl, fp, ip, lr}
 8003db0:	08005c3a 	stmdaeq	r0, {r1, r3, r4, r5, sl, fp, ip, lr}

08003db4 <Ssd1306::~Ssd1306()>:
 8003db4:	b510      	push	{r4, lr}
 8003db6:	4604      	mov	r4, r0
 8003db8:	f000 fa56 	bl	8004268 <operator delete(void*)>
 8003dbc:	4620      	mov	r0, r4
 8003dbe:	bd10      	pop	{r4, pc}

08003dc0 <HAL_I2C::Setup()>:
 8003dc0:	b510      	push	{r4, lr}
 8003dc2:	4604      	mov	r4, r0
 8003dc4:	7800      	ldrb	r0, [r0, #0]
 8003dc6:	f001 f8fd 	bl	8004fc4 <gd32_i2c_set_address>
 8003dca:	6860      	ldr	r0, [r4, #4]
 8003dcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003dd0:	f001 b8f0 	b.w	8004fb4 <gd32_i2c_set_baudrate>

08003dd4 <Ssd1306::PutChar(int)>:
 8003dd4:	b510      	push	{r4, lr}
 8003dd6:	f1a1 0420 	sub.w	r4, r1, #32
 8003dda:	2c5f      	cmp	r4, #95	; 0x5f
 8003ddc:	bf88      	it	hi
 8003dde:	2400      	movhi	r4, #0
 8003de0:	3008      	adds	r0, #8
 8003de2:	f7ff ffed 	bl	8003dc0 <HAL_I2C::Setup()>
 8003de6:	4804      	ldr	r0, [pc, #16]	; (8003df8 <Ssd1306::PutChar(int)+0x24>)
 8003de8:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8003dec:	4420      	add	r0, r4
 8003dee:	2107      	movs	r1, #7
 8003df0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003df4:	f001 b8ec 	b.w	8004fd0 <gd32_i2c_write>
 8003df8:	08005c4c 	stmdaeq	r0, {r2, r3, r6, sl, fp, ip, lr}

08003dfc <Ssd1306::PutString(char const*)>:
 8003dfc:	b538      	push	{r3, r4, r5, lr}
 8003dfe:	4605      	mov	r5, r0
 8003e00:	1e4c      	subs	r4, r1, #1
 8003e02:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8003e06:	b901      	cbnz	r1, 8003e0a <Ssd1306::PutString(char const*)+0xe>
 8003e08:	bd38      	pop	{r3, r4, r5, pc}
 8003e0a:	4628      	mov	r0, r5
 8003e0c:	f7ff ffe2 	bl	8003dd4 <Ssd1306::PutChar(int)>
 8003e10:	e7f7      	b.n	8003e02 <Ssd1306::PutString(char const*)+0x6>

08003e12 <Ssd1306::Text(char const*, unsigned int)>:
 8003e12:	b570      	push	{r4, r5, r6, lr}
 8003e14:	7903      	ldrb	r3, [r0, #4]
 8003e16:	4605      	mov	r5, r0
 8003e18:	460c      	mov	r4, r1
 8003e1a:	4293      	cmp	r3, r2
 8003e1c:	bf94      	ite	ls
 8003e1e:	18ce      	addls	r6, r1, r3
 8003e20:	188e      	addhi	r6, r1, r2
 8003e22:	42b4      	cmp	r4, r6
 8003e24:	d100      	bne.n	8003e28 <Ssd1306::Text(char const*, unsigned int)+0x16>
 8003e26:	bd70      	pop	{r4, r5, r6, pc}
 8003e28:	4628      	mov	r0, r5
 8003e2a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e2e:	f7ff ffd1 	bl	8003dd4 <Ssd1306::PutChar(int)>
 8003e32:	e7f6      	b.n	8003e22 <Ssd1306::Text(char const*, unsigned int)+0x10>

08003e34 <Ssd1306::InitMembers()>:
 8003e34:	7c03      	ldrb	r3, [r0, #16]
 8003e36:	b14b      	cbz	r3, 8003e4c <Ssd1306::InitMembers()+0x18>
 8003e38:	3b01      	subs	r3, #1
 8003e3a:	2b01      	cmp	r3, #1
 8003e3c:	d909      	bls.n	8003e52 <Ssd1306::InitMembers()+0x1e>
 8003e3e:	2308      	movs	r3, #8
 8003e40:	2204      	movs	r2, #4
 8003e42:	2115      	movs	r1, #21
 8003e44:	7143      	strb	r3, [r0, #5]
 8003e46:	7101      	strb	r1, [r0, #4]
 8003e48:	6142      	str	r2, [r0, #20]
 8003e4a:	4770      	bx	lr
 8003e4c:	2308      	movs	r3, #8
 8003e4e:	461a      	mov	r2, r3
 8003e50:	e7f7      	b.n	8003e42 <Ssd1306::InitMembers()+0xe>
 8003e52:	2304      	movs	r3, #4
 8003e54:	e7fb      	b.n	8003e4e <Ssd1306::InitMembers()+0x1a>
	...

08003e58 <Ssd1306::Ssd1306(TOledPanel)>:
 8003e58:	4a08      	ldr	r2, [pc, #32]	; (8003e7c <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8003e5a:	b508      	push	{r3, lr}
 8003e5c:	6002      	str	r2, [r0, #0]
 8003e5e:	227f      	movs	r2, #127	; 0x7f
 8003e60:	80c2      	strh	r2, [r0, #6]
 8003e62:	223c      	movs	r2, #60	; 0x3c
 8003e64:	7202      	strb	r2, [r0, #8]
 8003e66:	4a06      	ldr	r2, [pc, #24]	; (8003e80 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8003e68:	7401      	strb	r1, [r0, #16]
 8003e6a:	60c2      	str	r2, [r0, #12]
 8003e6c:	2200      	movs	r2, #0
 8003e6e:	7442      	strb	r2, [r0, #17]
 8003e70:	4a04      	ldr	r2, [pc, #16]	; (8003e84 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8003e72:	6010      	str	r0, [r2, #0]
 8003e74:	f7ff ffde 	bl	8003e34 <Ssd1306::InitMembers()>
 8003e78:	bd08      	pop	{r3, pc}
 8003e7a:	bf00      	nop
 8003e7c:	08005f24 	stmdaeq	r0, {r2, r5, r8, r9, sl, fp, ip, lr}
 8003e80:	00061a80 	andeq	r1, r6, r0, lsl #21
 8003e84:	20001800 	andcs	r1, r0, r0, lsl #16

08003e88 <Ssd1306::SendCommand(unsigned char)>:
 8003e88:	2300      	movs	r3, #0
 8003e8a:	b507      	push	{r0, r1, r2, lr}
 8003e8c:	3008      	adds	r0, #8
 8003e8e:	f88d 3004 	strb.w	r3, [sp, #4]
 8003e92:	f88d 1005 	strb.w	r1, [sp, #5]
 8003e96:	f7ff ff93 	bl	8003dc0 <HAL_I2C::Setup()>
 8003e9a:	2102      	movs	r1, #2
 8003e9c:	a801      	add	r0, sp, #4
 8003e9e:	f001 f897 	bl	8004fd0 <gd32_i2c_write>
 8003ea2:	b003      	add	sp, #12
 8003ea4:	f85d fb04 	ldr.w	pc, [sp], #4

08003ea8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8003ea8:	2914      	cmp	r1, #20
 8003eaa:	b570      	push	{r4, r5, r6, lr}
 8003eac:	4605      	mov	r5, r0
 8003eae:	4616      	mov	r6, r2
 8003eb0:	d81c      	bhi.n	8003eec <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8003eb2:	7943      	ldrb	r3, [r0, #5]
 8003eb4:	4293      	cmp	r3, r2
 8003eb6:	d919      	bls.n	8003eec <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8003eb8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8003ebc:	7c43      	ldrb	r3, [r0, #17]
 8003ebe:	004c      	lsls	r4, r1, #1
 8003ec0:	b2e4      	uxtb	r4, r4
 8003ec2:	b10b      	cbz	r3, 8003ec8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8003ec4:	3404      	adds	r4, #4
 8003ec6:	b2e4      	uxtb	r4, r4
 8003ec8:	4628      	mov	r0, r5
 8003eca:	f004 010e 	and.w	r1, r4, #14
 8003ece:	f7ff ffdb 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8003ed2:	0921      	lsrs	r1, r4, #4
 8003ed4:	4628      	mov	r0, r5
 8003ed6:	f041 0110 	orr.w	r1, r1, #16
 8003eda:	f7ff ffd5 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8003ede:	4628      	mov	r0, r5
 8003ee0:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8003ee4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003ee8:	f7ff bfce 	b.w	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8003eec:	bd70      	pop	{r4, r5, r6, pc}

08003eee <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8003eee:	b570      	push	{r4, r5, r6, lr}
 8003ef0:	461e      	mov	r6, r3
 8003ef2:	7943      	ldrb	r3, [r0, #5]
 8003ef4:	4604      	mov	r4, r0
 8003ef6:	428b      	cmp	r3, r1
 8003ef8:	4615      	mov	r5, r2
 8003efa:	d30b      	bcc.n	8003f14 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 8003efc:	3901      	subs	r1, #1
 8003efe:	b2ca      	uxtb	r2, r1
 8003f00:	2100      	movs	r1, #0
 8003f02:	f7ff ffd1 	bl	8003ea8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003f06:	4632      	mov	r2, r6
 8003f08:	4629      	mov	r1, r5
 8003f0a:	4620      	mov	r0, r4
 8003f0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003f10:	f7ff bf7f 	b.w	8003e12 <Ssd1306::Text(char const*, unsigned int)>
 8003f14:	bd70      	pop	{r4, r5, r6, pc}
	...

08003f18 <Ssd1306::ClearLine(unsigned char)>:
 8003f18:	b538      	push	{r3, r4, r5, lr}
 8003f1a:	7943      	ldrb	r3, [r0, #5]
 8003f1c:	4605      	mov	r5, r0
 8003f1e:	428b      	cmp	r3, r1
 8003f20:	d314      	bcc.n	8003f4c <Ssd1306::ClearLine(unsigned char)+0x34>
 8003f22:	3901      	subs	r1, #1
 8003f24:	b2cc      	uxtb	r4, r1
 8003f26:	4622      	mov	r2, r4
 8003f28:	2100      	movs	r1, #0
 8003f2a:	f7ff ffbd 	bl	8003ea8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003f2e:	f105 0008 	add.w	r0, r5, #8
 8003f32:	f7ff ff45 	bl	8003dc0 <HAL_I2C::Setup()>
 8003f36:	2181      	movs	r1, #129	; 0x81
 8003f38:	4805      	ldr	r0, [pc, #20]	; (8003f50 <Ssd1306::ClearLine(unsigned char)+0x38>)
 8003f3a:	f001 f849 	bl	8004fd0 <gd32_i2c_write>
 8003f3e:	4622      	mov	r2, r4
 8003f40:	4628      	mov	r0, r5
 8003f42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003f46:	2100      	movs	r1, #0
 8003f48:	f7ff bfae 	b.w	8003ea8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003f4c:	bd38      	pop	{r3, r4, r5, pc}
 8003f4e:	bf00      	nop
 8003f50:	20001778 	andcs	r1, r0, r8, ror r7

08003f54 <Ssd1306::SetSleep(bool)>:
 8003f54:	b111      	cbz	r1, 8003f5c <Ssd1306::SetSleep(bool)+0x8>
 8003f56:	21ae      	movs	r1, #174	; 0xae
 8003f58:	f7ff bf96 	b.w	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8003f5c:	21af      	movs	r1, #175	; 0xaf
 8003f5e:	e7fb      	b.n	8003f58 <Ssd1306::SetSleep(bool)+0x4>

08003f60 <Ssd1306::SetContrast(unsigned char)>:
 8003f60:	b538      	push	{r3, r4, r5, lr}
 8003f62:	4604      	mov	r4, r0
 8003f64:	460d      	mov	r5, r1
 8003f66:	7181      	strb	r1, [r0, #6]
 8003f68:	2181      	movs	r1, #129	; 0x81
 8003f6a:	f7ff ff8d 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8003f6e:	4629      	mov	r1, r5
 8003f70:	4620      	mov	r0, r4
 8003f72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003f76:	f7ff bf87 	b.w	8003e88 <Ssd1306::SendCommand(unsigned char)>

08003f7a <Ssd1306::SetFlipVertically(bool)>:
 8003f7a:	b510      	push	{r4, lr}
 8003f7c:	4604      	mov	r4, r0
 8003f7e:	71c1      	strb	r1, [r0, #7]
 8003f80:	b141      	cbz	r1, 8003f94 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8003f82:	21c0      	movs	r1, #192	; 0xc0
 8003f84:	f7ff ff80 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8003f88:	21a0      	movs	r1, #160	; 0xa0
 8003f8a:	4620      	mov	r0, r4
 8003f8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003f90:	f7ff bf7a 	b.w	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8003f94:	21c8      	movs	r1, #200	; 0xc8
 8003f96:	f7ff ff77 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8003f9a:	21a1      	movs	r1, #161	; 0xa1
 8003f9c:	e7f5      	b.n	8003f8a <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08003fa0 <Ssd1306::CheckSH1106()>:
 8003fa0:	b530      	push	{r4, r5, lr}
 8003fa2:	4604      	mov	r4, r0
 8003fa4:	b087      	sub	sp, #28
 8003fa6:	2100      	movs	r1, #0
 8003fa8:	f7ff ff6e 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8003fac:	2190      	movs	r1, #144	; 0x90
 8003fae:	4620      	mov	r0, r4
 8003fb0:	f7ff ff6a 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8003fb4:	21b0      	movs	r1, #176	; 0xb0
 8003fb6:	4620      	mov	r0, r4
 8003fb8:	f7ff ff66 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8003fbc:	4b22      	ldr	r3, [pc, #136]	; (8004048 <Ssd1306::CheckSH1106()+0xa8>)
 8003fbe:	f104 0508 	add.w	r5, r4, #8
 8003fc2:	6818      	ldr	r0, [r3, #0]
 8003fc4:	791b      	ldrb	r3, [r3, #4]
 8003fc6:	9002      	str	r0, [sp, #8]
 8003fc8:	4628      	mov	r0, r5
 8003fca:	f88d 300c 	strb.w	r3, [sp, #12]
 8003fce:	f7ff fef7 	bl	8003dc0 <HAL_I2C::Setup()>
 8003fd2:	2105      	movs	r1, #5
 8003fd4:	a802      	add	r0, sp, #8
 8003fd6:	f000 fffb 	bl	8004fd0 <gd32_i2c_write>
 8003fda:	2100      	movs	r1, #0
 8003fdc:	4620      	mov	r0, r4
 8003fde:	f7ff ff53 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8003fe2:	2190      	movs	r1, #144	; 0x90
 8003fe4:	4620      	mov	r0, r4
 8003fe6:	f7ff ff4f 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8003fea:	21b0      	movs	r1, #176	; 0xb0
 8003fec:	4620      	mov	r0, r4
 8003fee:	f7ff ff4b 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8003ff2:	2300      	movs	r3, #0
 8003ff4:	9304      	str	r3, [sp, #16]
 8003ff6:	f88d 3014 	strb.w	r3, [sp, #20]
 8003ffa:	2340      	movs	r3, #64	; 0x40
 8003ffc:	4628      	mov	r0, r5
 8003ffe:	f88d 3007 	strb.w	r3, [sp, #7]
 8004002:	f7ff fedd 	bl	8003dc0 <HAL_I2C::Setup()>
 8004006:	2101      	movs	r1, #1
 8004008:	f10d 0007 	add.w	r0, sp, #7
 800400c:	f000 ffe0 	bl	8004fd0 <gd32_i2c_write>
 8004010:	4628      	mov	r0, r5
 8004012:	f7ff fed5 	bl	8003dc0 <HAL_I2C::Setup()>
 8004016:	2105      	movs	r1, #5
 8004018:	a804      	add	r0, sp, #16
 800401a:	f001 f83f 	bl	800509c <gd32_i2c_read>
 800401e:	2004      	movs	r0, #4
 8004020:	aa02      	add	r2, sp, #8
 8004022:	a904      	add	r1, sp, #16
 8004024:	3801      	subs	r0, #1
 8004026:	d201      	bcs.n	800402c <Ssd1306::CheckSH1106()+0x8c>
 8004028:	2300      	movs	r3, #0
 800402a:	e006      	b.n	800403a <Ssd1306::CheckSH1106()+0x9a>
 800402c:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8004030:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8004034:	42ab      	cmp	r3, r5
 8004036:	d0f5      	beq.n	8004024 <Ssd1306::CheckSH1106()+0x84>
 8004038:	1b5b      	subs	r3, r3, r5
 800403a:	fab3 f383 	clz	r3, r3
 800403e:	095b      	lsrs	r3, r3, #5
 8004040:	7463      	strb	r3, [r4, #17]
 8004042:	b007      	add	sp, #28
 8004044:	bd30      	pop	{r4, r5, pc}
 8004046:	bf00      	nop
 8004048:	08005c46 	stmdaeq	r0, {r1, r2, r6, sl, fp, ip, lr}

0800404c <Ssd1306::Cls()>:
 800404c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004050:	4604      	mov	r4, r0
 8004052:	2600      	movs	r6, #0
 8004054:	7c45      	ldrb	r5, [r0, #17]
 8004056:	00ad      	lsls	r5, r5, #2
 8004058:	b2ed      	uxtb	r5, r5
 800405a:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 800405e:	f045 0810 	orr.w	r8, r5, #16
 8004062:	b2ff      	uxtb	r7, r7
 8004064:	6963      	ldr	r3, [r4, #20]
 8004066:	4629      	mov	r1, r5
 8004068:	42b3      	cmp	r3, r6
 800406a:	4620      	mov	r0, r4
 800406c:	d80b      	bhi.n	8004086 <Ssd1306::Cls()+0x3a>
 800406e:	f7ff ff0b 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8004072:	4641      	mov	r1, r8
 8004074:	4620      	mov	r0, r4
 8004076:	f7ff ff07 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 800407a:	4620      	mov	r0, r4
 800407c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004080:	21b0      	movs	r1, #176	; 0xb0
 8004082:	f7ff bf01 	b.w	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8004086:	f7ff feff 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 800408a:	4641      	mov	r1, r8
 800408c:	4620      	mov	r0, r4
 800408e:	f7ff fefb 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8004092:	f066 014f 	orn	r1, r6, #79	; 0x4f
 8004096:	4620      	mov	r0, r4
 8004098:	b2c9      	uxtb	r1, r1
 800409a:	f7ff fef5 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 800409e:	7c23      	ldrb	r3, [r4, #16]
 80040a0:	b123      	cbz	r3, 80040ac <Ssd1306::Cls()+0x60>
 80040a2:	3b01      	subs	r3, #1
 80040a4:	2b01      	cmp	r3, #1
 80040a6:	d901      	bls.n	80040ac <Ssd1306::Cls()+0x60>
 80040a8:	3601      	adds	r6, #1
 80040aa:	e7db      	b.n	8004064 <Ssd1306::Cls()+0x18>
 80040ac:	f104 0008 	add.w	r0, r4, #8
 80040b0:	f7ff fe86 	bl	8003dc0 <HAL_I2C::Setup()>
 80040b4:	4639      	mov	r1, r7
 80040b6:	4802      	ldr	r0, [pc, #8]	; (80040c0 <Ssd1306::Cls()+0x74>)
 80040b8:	f000 ff8a 	bl	8004fd0 <gd32_i2c_write>
 80040bc:	e7f4      	b.n	80040a8 <Ssd1306::Cls()+0x5c>
 80040be:	bf00      	nop
 80040c0:	20001778 	andcs	r1, r0, r8, ror r7

080040c4 <Ssd1306::Start()>:
 80040c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80040c6:	7a04      	ldrb	r4, [r0, #8]
 80040c8:	68c6      	ldr	r6, [r0, #12]
 80040ca:	4605      	mov	r5, r0
 80040cc:	4620      	mov	r0, r4
 80040ce:	f000 ff79 	bl	8004fc4 <gd32_i2c_set_address>
 80040d2:	4630      	mov	r0, r6
 80040d4:	f000 ff6e 	bl	8004fb4 <gd32_i2c_set_baudrate>
 80040d8:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80040dc:	2b07      	cmp	r3, #7
 80040de:	d902      	bls.n	80040e6 <Ssd1306::Start()+0x22>
 80040e0:	3c50      	subs	r4, #80	; 0x50
 80040e2:	2c0f      	cmp	r4, #15
 80040e4:	d80f      	bhi.n	8004106 <Ssd1306::Start()+0x42>
 80040e6:	2101      	movs	r1, #1
 80040e8:	f10d 0007 	add.w	r0, sp, #7
 80040ec:	f000 ffd6 	bl	800509c <gd32_i2c_read>
 80040f0:	fab0 f480 	clz	r4, r0
 80040f4:	0964      	lsrs	r4, r4, #5
 80040f6:	b35c      	cbz	r4, 8004150 <Ssd1306::Start()+0x8c>
 80040f8:	7c2e      	ldrb	r6, [r5, #16]
 80040fa:	b14e      	cbz	r6, 8004110 <Ssd1306::Start()+0x4c>
 80040fc:	3e01      	subs	r6, #1
 80040fe:	2e01      	cmp	r6, #1
 8004100:	d929      	bls.n	8004156 <Ssd1306::Start()+0x92>
 8004102:	2400      	movs	r4, #0
 8004104:	e024      	b.n	8004150 <Ssd1306::Start()+0x8c>
 8004106:	2100      	movs	r1, #0
 8004108:	4608      	mov	r0, r1
 800410a:	f000 ff61 	bl	8004fd0 <gd32_i2c_write>
 800410e:	e7ef      	b.n	80040f0 <Ssd1306::Start()+0x2c>
 8004110:	4f16      	ldr	r7, [pc, #88]	; (800416c <Ssd1306::Start()+0xa8>)
 8004112:	4628      	mov	r0, r5
 8004114:	f817 1b01 	ldrb.w	r1, [r7], #1
 8004118:	3601      	adds	r6, #1
 800411a:	f7ff feb5 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 800411e:	2e18      	cmp	r6, #24
 8004120:	d1f7      	bne.n	8004112 <Ssd1306::Start()+0x4e>
 8004122:	2300      	movs	r3, #0
 8004124:	4a12      	ldr	r2, [pc, #72]	; (8004170 <Ssd1306::Start()+0xac>)
 8004126:	4618      	mov	r0, r3
 8004128:	4611      	mov	r1, r2
 800412a:	3301      	adds	r3, #1
 800412c:	2b86      	cmp	r3, #134	; 0x86
 800412e:	f802 0b01 	strb.w	r0, [r2], #1
 8004132:	d1fa      	bne.n	800412a <Ssd1306::Start()+0x66>
 8004134:	2340      	movs	r3, #64	; 0x40
 8004136:	4628      	mov	r0, r5
 8004138:	700b      	strb	r3, [r1, #0]
 800413a:	f7ff ff31 	bl	8003fa0 <Ssd1306::CheckSH1106()>
 800413e:	4628      	mov	r0, r5
 8004140:	f7ff ff84 	bl	800404c <Ssd1306::Cls()>
 8004144:	21af      	movs	r1, #175	; 0xaf
 8004146:	4628      	mov	r0, r5
 8004148:	f7ff fe9e 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 800414c:	2301      	movs	r3, #1
 800414e:	71eb      	strb	r3, [r5, #7]
 8004150:	4620      	mov	r0, r4
 8004152:	b003      	add	sp, #12
 8004154:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004156:	2600      	movs	r6, #0
 8004158:	4f06      	ldr	r7, [pc, #24]	; (8004174 <Ssd1306::Start()+0xb0>)
 800415a:	4628      	mov	r0, r5
 800415c:	f817 1b01 	ldrb.w	r1, [r7], #1
 8004160:	3601      	adds	r6, #1
 8004162:	f7ff fe91 	bl	8003e88 <Ssd1306::SendCommand(unsigned char)>
 8004166:	2e18      	cmp	r6, #24
 8004168:	d1f7      	bne.n	800415a <Ssd1306::Start()+0x96>
 800416a:	e7da      	b.n	8004122 <Ssd1306::Start()+0x5e>
 800416c:	08005f04 	stmdaeq	r0, {r2, r8, r9, sl, fp, ip, lr}
 8004170:	20001778 	andcs	r1, r0, r8, ror r7
 8004174:	08005eec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, fp, ip, lr}

08004178 <display::timeout::gpio_init()>:
 8004178:	4770      	bx	lr

0800417a <console_putc>:
 800417a:	f000 b9b7 	b.w	80044ec <uart0_putc>

0800417e <console_puts>:
 800417e:	f000 b9d5 	b.w	800452c <uart0_puts>
	...

08004184 <LedBlink::LedBlink()>:
 8004184:	b538      	push	{r3, r4, r5, lr}
 8004186:	2205      	movs	r2, #5
 8004188:	2300      	movs	r3, #0
 800418a:	e9c0 3200 	strd	r3, r2, [r0]
 800418e:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8004192:	6083      	str	r3, [r0, #8]
 8004194:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8004198:	6143      	str	r3, [r0, #20]
 800419a:	4b09      	ldr	r3, [pc, #36]	; (80041c0 <LedBlink::LedBlink()+0x3c>)
 800419c:	4d09      	ldr	r5, [pc, #36]	; (80041c4 <LedBlink::LedBlink()+0x40>)
 800419e:	4604      	mov	r4, r0
 80041a0:	6018      	str	r0, [r3, #0]
 80041a2:	f240 6004 	movw	r0, #1540	; 0x604
 80041a6:	f000 fc07 	bl	80049b8 <rcu_periph_clock_enable>
 80041aa:	4628      	mov	r0, r5
 80041ac:	2301      	movs	r3, #1
 80041ae:	2203      	movs	r2, #3
 80041b0:	2110      	movs	r1, #16
 80041b2:	f000 fb6f 	bl	8004894 <gpio_init>
 80041b6:	2301      	movs	r3, #1
 80041b8:	4620      	mov	r0, r4
 80041ba:	616b      	str	r3, [r5, #20]
 80041bc:	bd38      	pop	{r3, r4, r5, pc}
 80041be:	bf00      	nop
 80041c0:	20001804 	andcs	r1, r0, r4, lsl #16
 80041c4:	40011000 	andmi	r1, r1, r0

080041c8 <Hardware::Hardware()>:
 80041c8:	b570      	push	{r4, r5, r6, lr}
 80041ca:	2400      	movs	r4, #0
 80041cc:	4b24      	ldr	r3, [pc, #144]	; (8004260 <Hardware::Hardware()+0x98>)
 80041ce:	b090      	sub	sp, #64	; 0x40
 80041d0:	7004      	strb	r4, [r0, #0]
 80041d2:	6018      	str	r0, [r3, #0]
 80041d4:	4605      	mov	r5, r0
 80041d6:	f7fb ffab 	bl	8000130 <console_init>
 80041da:	f000 f9b7 	bl	800454c <systick_config>
 80041de:	f001 f8ed 	bl	80053bc <udelay_init()>
 80041e2:	f001 f8e9 	bl	80053b8 <micros_init()>
 80041e6:	f240 701b 	movw	r0, #1819	; 0x71b
 80041ea:	f000 fbe5 	bl	80049b8 <rcu_periph_clock_enable>
 80041ee:	f240 701c 	movw	r0, #1820	; 0x71c
 80041f2:	f000 fbe1 	bl	80049b8 <rcu_periph_clock_enable>
 80041f6:	4e1b      	ldr	r6, [pc, #108]	; (8004264 <Hardware::Hardware()+0x9c>)
 80041f8:	f000 fbd6 	bl	80049a8 <pmu_backup_write_enable>
 80041fc:	4621      	mov	r1, r4
 80041fe:	2002      	movs	r0, #2
 8004200:	f000 fa32 	bl	8004668 <bkp_data_write>
 8004204:	f240 7004 	movw	r0, #1796	; 0x704
 8004208:	f000 fbd6 	bl	80049b8 <rcu_periph_clock_enable>
 800420c:	4630      	mov	r0, r6
 800420e:	f000 fc79 	bl	8004b04 <timer_deinit>
 8004212:	236b      	movs	r3, #107	; 0x6b
 8004214:	f8ad 300c 	strh.w	r3, [sp, #12]
 8004218:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800421c:	a903      	add	r1, sp, #12
 800421e:	4630      	mov	r0, r6
 8004220:	9305      	str	r3, [sp, #20]
 8004222:	f000 fcd1 	bl	8004bc8 <timer_init>
 8004226:	4630      	mov	r0, r6
 8004228:	f000 fd26 	bl	8004c78 <timer_enable>
 800422c:	f000 fe34 	bl	8004e98 <gd32_adc_init()>
 8004230:	2211      	movs	r2, #17
 8004232:	230b      	movs	r3, #11
 8004234:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8004238:	237a      	movs	r3, #122	; 0x7a
 800423a:	a807      	add	r0, sp, #28
 800423c:	930c      	str	r3, [sp, #48]	; 0x30
 800423e:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8004242:	9407      	str	r4, [sp, #28]
 8004244:	940f      	str	r4, [sp, #60]	; 0x3c
 8004246:	f000 f8dd 	bl	8004404 <mktime>
 800424a:	4621      	mov	r1, r4
 800424c:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8004250:	a801      	add	r0, sp, #4
 8004252:	f000 f923 	bl	800449c <settimeofday>
 8004256:	f000 fe79 	bl	8004f4c <gd32_i2c_begin>
 800425a:	4628      	mov	r0, r5
 800425c:	b010      	add	sp, #64	; 0x40
 800425e:	bd70      	pop	{r4, r5, r6, pc}
 8004260:	20001808 	andcs	r1, r0, r8, lsl #16
 8004264:	40001000 	andmi	r1, r0, r0

08004268 <operator delete(void*)>:
 8004268:	f000 b84c 	b.w	8004304 <free>

0800426c <operator new(unsigned int)>:
 800426c:	f000 b800 	b.w	8004270 <malloc>

08004270 <malloc>:
 8004270:	b538      	push	{r3, r4, r5, lr}
 8004272:	4604      	mov	r4, r0
 8004274:	4601      	mov	r1, r0
 8004276:	481c      	ldr	r0, [pc, #112]	; (80042e8 <malloc+0x78>)
 8004278:	f7fd fa78 	bl	800176c <printf>
 800427c:	b17c      	cbz	r4, 800429e <malloc+0x2e>
 800427e:	4b1b      	ldr	r3, [pc, #108]	; (80042ec <malloc+0x7c>)
 8004280:	6818      	ldr	r0, [r3, #0]
 8004282:	b978      	cbnz	r0, 80042a4 <malloc+0x34>
 8004284:	4a1a      	ldr	r2, [pc, #104]	; (80042f0 <malloc+0x80>)
 8004286:	f104 031b 	add.w	r3, r4, #27
 800428a:	6811      	ldr	r1, [r2, #0]
 800428c:	4819      	ldr	r0, [pc, #100]	; (80042f4 <malloc+0x84>)
 800428e:	f023 030f 	bic.w	r3, r3, #15
 8004292:	440b      	add	r3, r1
 8004294:	4283      	cmp	r3, r0
 8004296:	d921      	bls.n	80042dc <malloc+0x6c>
 8004298:	4817      	ldr	r0, [pc, #92]	; (80042f8 <malloc+0x88>)
 800429a:	f7fd fa67 	bl	800176c <printf>
 800429e:	2500      	movs	r5, #0
 80042a0:	4628      	mov	r0, r5
 80042a2:	bd38      	pop	{r3, r4, r5, pc}
 80042a4:	4284      	cmp	r4, r0
 80042a6:	d80a      	bhi.n	80042be <malloc+0x4e>
 80042a8:	685a      	ldr	r2, [r3, #4]
 80042aa:	6899      	ldr	r1, [r3, #8]
 80042ac:	3201      	adds	r2, #1
 80042ae:	428a      	cmp	r2, r1
 80042b0:	605a      	str	r2, [r3, #4]
 80042b2:	d900      	bls.n	80042b6 <malloc+0x46>
 80042b4:	609a      	str	r2, [r3, #8]
 80042b6:	68d9      	ldr	r1, [r3, #12]
 80042b8:	b919      	cbnz	r1, 80042c2 <malloc+0x52>
 80042ba:	4604      	mov	r4, r0
 80042bc:	e7e2      	b.n	8004284 <malloc+0x14>
 80042be:	3310      	adds	r3, #16
 80042c0:	e7de      	b.n	8004280 <malloc+0x10>
 80042c2:	4604      	mov	r4, r0
 80042c4:	688a      	ldr	r2, [r1, #8]
 80042c6:	60da      	str	r2, [r3, #12]
 80042c8:	2300      	movs	r3, #0
 80042ca:	f101 050c 	add.w	r5, r1, #12
 80042ce:	608b      	str	r3, [r1, #8]
 80042d0:	4622      	mov	r2, r4
 80042d2:	462b      	mov	r3, r5
 80042d4:	4809      	ldr	r0, [pc, #36]	; (80042fc <malloc+0x8c>)
 80042d6:	f7fd fa49 	bl	800176c <printf>
 80042da:	e7e1      	b.n	80042a0 <malloc+0x30>
 80042dc:	6013      	str	r3, [r2, #0]
 80042de:	4b08      	ldr	r3, [pc, #32]	; (8004300 <malloc+0x90>)
 80042e0:	e9c1 3400 	strd	r3, r4, [r1]
 80042e4:	e7f0      	b.n	80042c8 <malloc+0x58>
 80042e6:	bf00      	nop
 80042e8:	08005f68 	stmdaeq	r0, {r3, r5, r6, r8, r9, sl, fp, ip, lr}
 80042ec:	20000018 	andcs	r0, r0, r8, lsl r0
 80042f0:	20000014 	andcs	r0, r0, r4, lsl r0
 80042f4:	2000b000 	andcs	fp, r0, r0
 80042f8:	08005f74 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}
 80042fc:	08005f90 	stmdaeq	r0, {r4, r7, r8, r9, sl, fp, ip, lr}
 8004300:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08004304 <free>:
 8004304:	b538      	push	{r3, r4, r5, lr}
 8004306:	4604      	mov	r4, r0
 8004308:	b1c8      	cbz	r0, 800433e <free+0x3a>
 800430a:	f1a0 050c 	sub.w	r5, r0, #12
 800430e:	4602      	mov	r2, r0
 8004310:	4629      	mov	r1, r5
 8004312:	480c      	ldr	r0, [pc, #48]	; (8004344 <free+0x40>)
 8004314:	f7fd fa2a 	bl	800176c <printf>
 8004318:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800431c:	4b0a      	ldr	r3, [pc, #40]	; (8004348 <free+0x44>)
 800431e:	429a      	cmp	r2, r3
 8004320:	d10d      	bne.n	800433e <free+0x3a>
 8004322:	4b0a      	ldr	r3, [pc, #40]	; (800434c <free+0x48>)
 8004324:	681a      	ldr	r2, [r3, #0]
 8004326:	b152      	cbz	r2, 800433e <free+0x3a>
 8004328:	f854 1c08 	ldr.w	r1, [r4, #-8]
 800432c:	4291      	cmp	r1, r2
 800432e:	d107      	bne.n	8004340 <free+0x3c>
 8004330:	68da      	ldr	r2, [r3, #12]
 8004332:	f844 2c04 	str.w	r2, [r4, #-4]
 8004336:	685a      	ldr	r2, [r3, #4]
 8004338:	60dd      	str	r5, [r3, #12]
 800433a:	3a01      	subs	r2, #1
 800433c:	605a      	str	r2, [r3, #4]
 800433e:	bd38      	pop	{r3, r4, r5, pc}
 8004340:	3310      	adds	r3, #16
 8004342:	e7ef      	b.n	8004324 <free+0x20>
 8004344:	08005fbb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r7, r8, r9, sl, fp, ip, lr}
 8004348:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 800434c:	20000018 	andcs	r0, r0, r8, lsl r0

08004350 <memcpy>:
 8004350:	b510      	push	{r4, lr}
 8004352:	1e43      	subs	r3, r0, #1
 8004354:	440a      	add	r2, r1
 8004356:	4291      	cmp	r1, r2
 8004358:	d100      	bne.n	800435c <memcpy+0xc>
 800435a:	bd10      	pop	{r4, pc}
 800435c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004360:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004364:	e7f7      	b.n	8004356 <memcpy+0x6>

08004366 <memset>:
 8004366:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004368:	b1c2      	cbz	r2, 800439c <memset+0x36>
 800436a:	4603      	mov	r3, r0
 800436c:	b2c9      	uxtb	r1, r1
 800436e:	075c      	lsls	r4, r3, #29
 8004370:	d110      	bne.n	8004394 <memset+0x2e>
 8004372:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8004376:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 800437a:	463d      	mov	r5, r7
 800437c:	461e      	mov	r6, r3
 800437e:	f022 0407 	bic.w	r4, r2, #7
 8004382:	441c      	add	r4, r3
 8004384:	42a6      	cmp	r6, r4
 8004386:	d10a      	bne.n	800439e <memset+0x38>
 8004388:	4413      	add	r3, r2
 800438a:	429c      	cmp	r4, r3
 800438c:	d006      	beq.n	800439c <memset+0x36>
 800438e:	f804 1b01 	strb.w	r1, [r4], #1
 8004392:	e7fa      	b.n	800438a <memset+0x24>
 8004394:	3a01      	subs	r2, #1
 8004396:	f803 1b01 	strb.w	r1, [r3], #1
 800439a:	d1e8      	bne.n	800436e <memset+0x8>
 800439c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800439e:	f846 7b08 	str.w	r7, [r6], #8
 80043a2:	f846 5c04 	str.w	r5, [r6, #-4]
 80043a6:	e7ed      	b.n	8004384 <memset+0x1e>

080043a8 <puts>:
 80043a8:	b508      	push	{r3, lr}
 80043aa:	f7ff fee8 	bl	800417e <console_puts>
 80043ae:	200a      	movs	r0, #10
 80043b0:	f7ff fee3 	bl	800417a <console_putc>
 80043b4:	2001      	movs	r0, #1
 80043b6:	bd08      	pop	{r3, pc}

080043b8 <isleapyear>:
 80043b8:	2264      	movs	r2, #100	; 0x64
 80043ba:	fb90 f3f2 	sdiv	r3, r0, r2
 80043be:	fb02 0313 	mls	r3, r2, r3, r0
 80043c2:	b94b      	cbnz	r3, 80043d8 <isleapyear+0x20>
 80043c4:	f44f 73c8 	mov.w	r3, #400	; 0x190
 80043c8:	fb90 f2f3 	sdiv	r2, r0, r3
 80043cc:	fb03 0012 	mls	r0, r3, r2, r0
 80043d0:	fab0 f080 	clz	r0, r0
 80043d4:	0940      	lsrs	r0, r0, #5
 80043d6:	4770      	bx	lr
 80043d8:	f010 0f03 	tst.w	r0, #3
 80043dc:	bf0c      	ite	eq
 80043de:	2001      	moveq	r0, #1
 80043e0:	2000      	movne	r0, #0
 80043e2:	4770      	bx	lr

080043e4 <getdaysofmonth>:
 80043e4:	b510      	push	{r4, lr}
 80043e6:	4604      	mov	r4, r0
 80043e8:	2c01      	cmp	r4, #1
 80043ea:	4608      	mov	r0, r1
 80043ec:	d102      	bne.n	80043f4 <getdaysofmonth+0x10>
 80043ee:	f7ff ffe3 	bl	80043b8 <isleapyear>
 80043f2:	b918      	cbnz	r0, 80043fc <getdaysofmonth+0x18>
 80043f4:	4b02      	ldr	r3, [pc, #8]	; (8004400 <getdaysofmonth+0x1c>)
 80043f6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80043fa:	bd10      	pop	{r4, pc}
 80043fc:	201d      	movs	r0, #29
 80043fe:	e7fc      	b.n	80043fa <getdaysofmonth+0x16>
 8004400:	08005fe4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl, fp, ip, lr}

08004404 <mktime>:
 8004404:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004408:	4604      	mov	r4, r0
 800440a:	2800      	cmp	r0, #0
 800440c:	d043      	beq.n	8004496 <mktime+0x92>
 800440e:	6941      	ldr	r1, [r0, #20]
 8004410:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8004414:	2b45      	cmp	r3, #69	; 0x45
 8004416:	d83e      	bhi.n	8004496 <mktime+0x92>
 8004418:	2600      	movs	r6, #0
 800441a:	f240 75b2 	movw	r5, #1970	; 0x7b2
 800441e:	f240 186d 	movw	r8, #365	; 0x16d
 8004422:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 8004426:	42af      	cmp	r7, r5
 8004428:	da24      	bge.n	8004474 <mktime+0x70>
 800442a:	6927      	ldr	r7, [r4, #16]
 800442c:	2f0b      	cmp	r7, #11
 800442e:	d832      	bhi.n	8004496 <mktime+0x92>
 8004430:	2500      	movs	r5, #0
 8004432:	42af      	cmp	r7, r5
 8004434:	d129      	bne.n	800448a <mktime+0x86>
 8004436:	68e5      	ldr	r5, [r4, #12]
 8004438:	2d00      	cmp	r5, #0
 800443a:	dd2c      	ble.n	8004496 <mktime+0x92>
 800443c:	4638      	mov	r0, r7
 800443e:	f7ff ffd1 	bl	80043e4 <getdaysofmonth>
 8004442:	4285      	cmp	r5, r0
 8004444:	dc27      	bgt.n	8004496 <mktime+0x92>
 8004446:	2318      	movs	r3, #24
 8004448:	3d01      	subs	r5, #1
 800444a:	4435      	add	r5, r6
 800444c:	435d      	muls	r5, r3
 800444e:	68a3      	ldr	r3, [r4, #8]
 8004450:	2b17      	cmp	r3, #23
 8004452:	d820      	bhi.n	8004496 <mktime+0x92>
 8004454:	213c      	movs	r1, #60	; 0x3c
 8004456:	442b      	add	r3, r5
 8004458:	fb01 f203 	mul.w	r2, r1, r3
 800445c:	6863      	ldr	r3, [r4, #4]
 800445e:	2b3b      	cmp	r3, #59	; 0x3b
 8004460:	d819      	bhi.n	8004496 <mktime+0x92>
 8004462:	6820      	ldr	r0, [r4, #0]
 8004464:	4413      	add	r3, r2
 8004466:	283b      	cmp	r0, #59	; 0x3b
 8004468:	fb01 f303 	mul.w	r3, r1, r3
 800446c:	d813      	bhi.n	8004496 <mktime+0x92>
 800446e:	4418      	add	r0, r3
 8004470:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004474:	4628      	mov	r0, r5
 8004476:	f7ff ff9f 	bl	80043b8 <isleapyear>
 800447a:	2800      	cmp	r0, #0
 800447c:	bf14      	ite	ne
 800447e:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8004482:	4643      	moveq	r3, r8
 8004484:	3501      	adds	r5, #1
 8004486:	441e      	add	r6, r3
 8004488:	e7cd      	b.n	8004426 <mktime+0x22>
 800448a:	4628      	mov	r0, r5
 800448c:	f7ff ffaa 	bl	80043e4 <getdaysofmonth>
 8004490:	3501      	adds	r5, #1
 8004492:	4406      	add	r6, r0
 8004494:	e7cd      	b.n	8004432 <mktime+0x2e>
 8004496:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800449a:	e7e9      	b.n	8004470 <mktime+0x6c>

0800449c <settimeofday>:
 800449c:	4b07      	ldr	r3, [pc, #28]	; (80044bc <settimeofday+0x20>)
 800449e:	b510      	push	{r4, lr}
 80044a0:	681a      	ldr	r2, [r3, #0]
 80044a2:	4b07      	ldr	r3, [pc, #28]	; (80044c0 <settimeofday+0x24>)
 80044a4:	6804      	ldr	r4, [r0, #0]
 80044a6:	601a      	str	r2, [r3, #0]
 80044a8:	6843      	ldr	r3, [r0, #4]
 80044aa:	4806      	ldr	r0, [pc, #24]	; (80044c4 <settimeofday+0x28>)
 80044ac:	17da      	asrs	r2, r3, #31
 80044ae:	fbc4 3200 	smlal	r3, r2, r4, r0
 80044b2:	4905      	ldr	r1, [pc, #20]	; (80044c8 <settimeofday+0x2c>)
 80044b4:	2000      	movs	r0, #0
 80044b6:	e9c1 3200 	strd	r3, r2, [r1]
 80044ba:	bd10      	pop	{r4, pc}
 80044bc:	2000181c 	andcs	r1, r0, ip, lsl r8
 80044c0:	20001818 	andcs	r1, r0, r8, lsl r8
 80044c4:	000f4240 	andeq	r4, pc, r0, asr #4
 80044c8:	20001810 	andcs	r1, r0, r0, lsl r8

080044cc <uart0_init>:
 80044cc:	2301      	movs	r3, #1
 80044ce:	b507      	push	{r0, r1, r2, lr}
 80044d0:	2208      	movs	r2, #8
 80044d2:	9300      	str	r3, [sp, #0]
 80044d4:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80044d8:	2300      	movs	r3, #0
 80044da:	4803      	ldr	r0, [pc, #12]	; (80044e8 <uart0_init+0x1c>)
 80044dc:	f000 fe82 	bl	80051e4 <gd32_uart_begin>
 80044e0:	b003      	add	sp, #12
 80044e2:	f85d fb04 	ldr.w	pc, [sp], #4
 80044e6:	bf00      	nop
 80044e8:	40013800 	andmi	r3, r1, r0, lsl #16

080044ec <uart0_putc>:
 80044ec:	280a      	cmp	r0, #10
 80044ee:	b538      	push	{r3, r4, r5, lr}
 80044f0:	4604      	mov	r4, r0
 80044f2:	d10a      	bne.n	800450a <uart0_putc+0x1e>
 80044f4:	4d0b      	ldr	r5, [pc, #44]	; (8004524 <uart0_putc+0x38>)
 80044f6:	2107      	movs	r1, #7
 80044f8:	4628      	mov	r0, r5
 80044fa:	f000 fc9f 	bl	8004e3c <usart_flag_get>
 80044fe:	2800      	cmp	r0, #0
 8004500:	d0f9      	beq.n	80044f6 <uart0_putc+0xa>
 8004502:	220d      	movs	r2, #13
 8004504:	4b08      	ldr	r3, [pc, #32]	; (8004528 <uart0_putc+0x3c>)
 8004506:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 800450a:	4d06      	ldr	r5, [pc, #24]	; (8004524 <uart0_putc+0x38>)
 800450c:	2107      	movs	r1, #7
 800450e:	4628      	mov	r0, r5
 8004510:	f000 fc94 	bl	8004e3c <usart_flag_get>
 8004514:	2800      	cmp	r0, #0
 8004516:	d0f9      	beq.n	800450c <uart0_putc+0x20>
 8004518:	4b03      	ldr	r3, [pc, #12]	; (8004528 <uart0_putc+0x3c>)
 800451a:	b2e4      	uxtb	r4, r4
 800451c:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8004520:	bd38      	pop	{r3, r4, r5, pc}
 8004522:	bf00      	nop
 8004524:	40013800 	andmi	r3, r1, r0, lsl #16
 8004528:	40013000 	andmi	r3, r1, r0

0800452c <uart0_puts>:
 800452c:	b510      	push	{r4, lr}
 800452e:	1e44      	subs	r4, r0, #1
 8004530:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8004534:	b903      	cbnz	r3, 8004538 <uart0_puts+0xc>
 8004536:	bd10      	pop	{r4, pc}
 8004538:	2b0a      	cmp	r3, #10
 800453a:	d102      	bne.n	8004542 <uart0_puts+0x16>
 800453c:	200d      	movs	r0, #13
 800453e:	f7ff ffd5 	bl	80044ec <uart0_putc>
 8004542:	7820      	ldrb	r0, [r4, #0]
 8004544:	f7ff ffd2 	bl	80044ec <uart0_putc>
 8004548:	e7f2      	b.n	8004530 <uart0_puts+0x4>
	...

0800454c <systick_config>:
 800454c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004550:	4b0b      	ldr	r3, [pc, #44]	; (8004580 <systick_config+0x34>)
 8004552:	681b      	ldr	r3, [r3, #0]
 8004554:	fbb3 f3f2 	udiv	r3, r3, r2
 8004558:	3b01      	subs	r3, #1
 800455a:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800455e:	d20d      	bcs.n	800457c <systick_config+0x30>
 8004560:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8004564:	21f0      	movs	r1, #240	; 0xf0
 8004566:	6153      	str	r3, [r2, #20]
 8004568:	4b06      	ldr	r3, [pc, #24]	; (8004584 <systick_config+0x38>)
 800456a:	2007      	movs	r0, #7
 800456c:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8004570:	2100      	movs	r1, #0
 8004572:	6191      	str	r1, [r2, #24]
 8004574:	6110      	str	r0, [r2, #16]
 8004576:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800457a:	4770      	bx	lr
 800457c:	e7fe      	b.n	800457c <systick_config+0x30>
 800457e:	bf00      	nop
 8004580:	200000e8 	andcs	r0, r0, r8, ror #1
 8004584:	e000ed00 	and	lr, r0, r0, lsl #26

08004588 <SysTick_Handler>:
 8004588:	4a02      	ldr	r2, [pc, #8]	; (8004594 <SysTick_Handler+0xc>)
 800458a:	6813      	ldr	r3, [r2, #0]
 800458c:	3301      	adds	r3, #1
 800458e:	6013      	str	r3, [r2, #0]
 8004590:	4770      	bx	lr
 8004592:	bf00      	nop
 8004594:	2000181c 	andcs	r1, r0, ip, lsl r8

08004598 <SystemInit>:
 8004598:	4b30      	ldr	r3, [pc, #192]	; (800465c <SystemInit+0xc4>)
 800459a:	4931      	ldr	r1, [pc, #196]	; (8004660 <SystemInit+0xc8>)
 800459c:	681a      	ldr	r2, [r3, #0]
 800459e:	f042 0201 	orr.w	r2, r2, #1
 80045a2:	601a      	str	r2, [r3, #0]
 80045a4:	685a      	ldr	r2, [r3, #4]
 80045a6:	f022 0203 	bic.w	r2, r2, #3
 80045aa:	605a      	str	r2, [r3, #4]
 80045ac:	681a      	ldr	r2, [r3, #0]
 80045ae:	400a      	ands	r2, r1
 80045b0:	601a      	str	r2, [r3, #0]
 80045b2:	6858      	ldr	r0, [r3, #4]
 80045b4:	4a2b      	ldr	r2, [pc, #172]	; (8004664 <SystemInit+0xcc>)
 80045b6:	4002      	ands	r2, r0
 80045b8:	605a      	str	r2, [r3, #4]
 80045ba:	681a      	ldr	r2, [r3, #0]
 80045bc:	400a      	ands	r2, r1
 80045be:	601a      	str	r2, [r3, #0]
 80045c0:	681a      	ldr	r2, [r3, #0]
 80045c2:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80045c6:	601a      	str	r2, [r3, #0]
 80045c8:	685a      	ldr	r2, [r3, #4]
 80045ca:	f022 620f 	bic.w	r2, r2, #149946368	; 0x8f00000
 80045ce:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 80045d2:	605a      	str	r2, [r3, #4]
 80045d4:	681a      	ldr	r2, [r3, #0]
 80045d6:	400a      	ands	r2, r1
 80045d8:	601a      	str	r2, [r3, #0]
 80045da:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 80045de:	609a      	str	r2, [r3, #8]
 80045e0:	681a      	ldr	r2, [r3, #0]
 80045e2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80045e6:	601a      	str	r2, [r3, #0]
 80045e8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80045ec:	6819      	ldr	r1, [r3, #0]
 80045ee:	0389      	lsls	r1, r1, #14
 80045f0:	d401      	bmi.n	80045f6 <SystemInit+0x5e>
 80045f2:	3a01      	subs	r2, #1
 80045f4:	d1fa      	bne.n	80045ec <SystemInit+0x54>
 80045f6:	681a      	ldr	r2, [r3, #0]
 80045f8:	0390      	lsls	r0, r2, #14
 80045fa:	d400      	bmi.n	80045fe <SystemInit+0x66>
 80045fc:	e7fe      	b.n	80045fc <SystemInit+0x64>
 80045fe:	685a      	ldr	r2, [r3, #4]
 8004600:	605a      	str	r2, [r3, #4]
 8004602:	685a      	ldr	r2, [r3, #4]
 8004604:	605a      	str	r2, [r3, #4]
 8004606:	685a      	ldr	r2, [r3, #4]
 8004608:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800460c:	605a      	str	r2, [r3, #4]
 800460e:	685a      	ldr	r2, [r3, #4]
 8004610:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8004614:	605a      	str	r2, [r3, #4]
 8004616:	685a      	ldr	r2, [r3, #4]
 8004618:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 800461c:	605a      	str	r2, [r3, #4]
 800461e:	685a      	ldr	r2, [r3, #4]
 8004620:	f022 6203 	bic.w	r2, r2, #137363456	; 0x8300000
 8004624:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8004628:	605a      	str	r2, [r3, #4]
 800462a:	685a      	ldr	r2, [r3, #4]
 800462c:	f042 6202 	orr.w	r2, r2, #136314880	; 0x8200000
 8004630:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8004634:	605a      	str	r2, [r3, #4]
 8004636:	681a      	ldr	r2, [r3, #0]
 8004638:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800463c:	601a      	str	r2, [r3, #0]
 800463e:	681a      	ldr	r2, [r3, #0]
 8004640:	0191      	lsls	r1, r2, #6
 8004642:	d5fc      	bpl.n	800463e <SystemInit+0xa6>
 8004644:	685a      	ldr	r2, [r3, #4]
 8004646:	f022 0203 	bic.w	r2, r2, #3
 800464a:	605a      	str	r2, [r3, #4]
 800464c:	685a      	ldr	r2, [r3, #4]
 800464e:	f042 0202 	orr.w	r2, r2, #2
 8004652:	605a      	str	r2, [r3, #4]
 8004654:	685a      	ldr	r2, [r3, #4]
 8004656:	0712      	lsls	r2, r2, #28
 8004658:	d5fc      	bpl.n	8004654 <SystemInit+0xbc>
 800465a:	4770      	bx	lr
 800465c:	40021000 	andmi	r1, r2, r0
 8004660:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 8004664:	e8ff000c 	ldm	pc!, {r2, r3}^	; <UNPREDICTABLE>

08004668 <bkp_data_write>:
 8004668:	f1a0 030b 	sub.w	r3, r0, #11
 800466c:	2b1f      	cmp	r3, #31
 800466e:	d804      	bhi.n	800467a <bkp_data_write+0x12>
 8004670:	4b07      	ldr	r3, [pc, #28]	; (8004690 <bkp_data_write+0x28>)
 8004672:	4403      	add	r3, r0
 8004674:	009b      	lsls	r3, r3, #2
 8004676:	8019      	strh	r1, [r3, #0]
 8004678:	4770      	bx	lr
 800467a:	1e43      	subs	r3, r0, #1
 800467c:	2b09      	cmp	r3, #9
 800467e:	bf9f      	itttt	ls
 8004680:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8004684:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8004688:	0080      	lslls	r0, r0, #2
 800468a:	8001      	strhls	r1, [r0, #0]
 800468c:	4770      	bx	lr
 800468e:	bf00      	nop
 8004690:	10001b05 	andne	r1, r0, r5, lsl #22

08004694 <dma_deinit>:
 8004694:	4b0c      	ldr	r3, [pc, #48]	; (80046c8 <dma_deinit+0x34>)
 8004696:	4298      	cmp	r0, r3
 8004698:	d102      	bne.n	80046a0 <dma_deinit+0xc>
 800469a:	2904      	cmp	r1, #4
 800469c:	d900      	bls.n	80046a0 <dma_deinit+0xc>
 800469e:	e7fe      	b.n	800469e <dma_deinit+0xa>
 80046a0:	2314      	movs	r3, #20
 80046a2:	fb03 0301 	mla	r3, r3, r1, r0
 80046a6:	689a      	ldr	r2, [r3, #8]
 80046a8:	0089      	lsls	r1, r1, #2
 80046aa:	f022 0201 	bic.w	r2, r2, #1
 80046ae:	609a      	str	r2, [r3, #8]
 80046b0:	2200      	movs	r2, #0
 80046b2:	609a      	str	r2, [r3, #8]
 80046b4:	60da      	str	r2, [r3, #12]
 80046b6:	611a      	str	r2, [r3, #16]
 80046b8:	615a      	str	r2, [r3, #20]
 80046ba:	230f      	movs	r3, #15
 80046bc:	6842      	ldr	r2, [r0, #4]
 80046be:	408b      	lsls	r3, r1
 80046c0:	4313      	orrs	r3, r2
 80046c2:	6043      	str	r3, [r0, #4]
 80046c4:	4770      	bx	lr
 80046c6:	bf00      	nop
 80046c8:	40020400 	andmi	r0, r2, r0, lsl #8

080046cc <dma_init>:
 80046cc:	4b1b      	ldr	r3, [pc, #108]	; (800473c <dma_init+0x70>)
 80046ce:	b510      	push	{r4, lr}
 80046d0:	4298      	cmp	r0, r3
 80046d2:	d102      	bne.n	80046da <dma_init+0xe>
 80046d4:	2904      	cmp	r1, #4
 80046d6:	d900      	bls.n	80046da <dma_init+0xe>
 80046d8:	e7fe      	b.n	80046d8 <dma_init+0xc>
 80046da:	2314      	movs	r3, #20
 80046dc:	fb03 0101 	mla	r1, r3, r1, r0
 80046e0:	6813      	ldr	r3, [r2, #0]
 80046e2:	610b      	str	r3, [r1, #16]
 80046e4:	6893      	ldr	r3, [r2, #8]
 80046e6:	614b      	str	r3, [r1, #20]
 80046e8:	8a13      	ldrh	r3, [r2, #16]
 80046ea:	60cb      	str	r3, [r1, #12]
 80046ec:	68d4      	ldr	r4, [r2, #12]
 80046ee:	6853      	ldr	r3, [r2, #4]
 80046f0:	6888      	ldr	r0, [r1, #8]
 80046f2:	4323      	orrs	r3, r4
 80046f4:	6954      	ldr	r4, [r2, #20]
 80046f6:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 80046fa:	4323      	orrs	r3, r4
 80046fc:	4303      	orrs	r3, r0
 80046fe:	608b      	str	r3, [r1, #8]
 8004700:	7e13      	ldrb	r3, [r2, #24]
 8004702:	2b01      	cmp	r3, #1
 8004704:	688b      	ldr	r3, [r1, #8]
 8004706:	bf0c      	ite	eq
 8004708:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 800470c:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8004710:	608b      	str	r3, [r1, #8]
 8004712:	7e53      	ldrb	r3, [r2, #25]
 8004714:	2b01      	cmp	r3, #1
 8004716:	688b      	ldr	r3, [r1, #8]
 8004718:	bf0c      	ite	eq
 800471a:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 800471e:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8004722:	608b      	str	r3, [r1, #8]
 8004724:	7e93      	ldrb	r3, [r2, #26]
 8004726:	b923      	cbnz	r3, 8004732 <dma_init+0x66>
 8004728:	688b      	ldr	r3, [r1, #8]
 800472a:	f023 0310 	bic.w	r3, r3, #16
 800472e:	608b      	str	r3, [r1, #8]
 8004730:	bd10      	pop	{r4, pc}
 8004732:	688b      	ldr	r3, [r1, #8]
 8004734:	f043 0310 	orr.w	r3, r3, #16
 8004738:	e7f9      	b.n	800472e <dma_init+0x62>
 800473a:	bf00      	nop
 800473c:	40020400 	andmi	r0, r2, r0, lsl #8

08004740 <dma_circulation_disable>:
 8004740:	4b06      	ldr	r3, [pc, #24]	; (800475c <dma_circulation_disable+0x1c>)
 8004742:	4298      	cmp	r0, r3
 8004744:	d102      	bne.n	800474c <dma_circulation_disable+0xc>
 8004746:	2904      	cmp	r1, #4
 8004748:	d900      	bls.n	800474c <dma_circulation_disable+0xc>
 800474a:	e7fe      	b.n	800474a <dma_circulation_disable+0xa>
 800474c:	2314      	movs	r3, #20
 800474e:	4359      	muls	r1, r3
 8004750:	3008      	adds	r0, #8
 8004752:	580b      	ldr	r3, [r1, r0]
 8004754:	f023 0320 	bic.w	r3, r3, #32
 8004758:	500b      	str	r3, [r1, r0]
 800475a:	4770      	bx	lr
 800475c:	40020400 	andmi	r0, r2, r0, lsl #8

08004760 <dma_memory_to_memory_disable>:
 8004760:	4b06      	ldr	r3, [pc, #24]	; (800477c <dma_memory_to_memory_disable+0x1c>)
 8004762:	4298      	cmp	r0, r3
 8004764:	d102      	bne.n	800476c <dma_memory_to_memory_disable+0xc>
 8004766:	2904      	cmp	r1, #4
 8004768:	d900      	bls.n	800476c <dma_memory_to_memory_disable+0xc>
 800476a:	e7fe      	b.n	800476a <dma_memory_to_memory_disable+0xa>
 800476c:	2314      	movs	r3, #20
 800476e:	4359      	muls	r1, r3
 8004770:	3008      	adds	r0, #8
 8004772:	580b      	ldr	r3, [r1, r0]
 8004774:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8004778:	500b      	str	r3, [r1, r0]
 800477a:	4770      	bx	lr
 800477c:	40020400 	andmi	r0, r2, r0, lsl #8

08004780 <fmc_bank0_unlock>:
 8004780:	4b04      	ldr	r3, [pc, #16]	; (8004794 <fmc_bank0_unlock+0x14>)
 8004782:	691a      	ldr	r2, [r3, #16]
 8004784:	0612      	lsls	r2, r2, #24
 8004786:	bf41      	itttt	mi
 8004788:	4a03      	ldrmi	r2, [pc, #12]	; (8004798 <fmc_bank0_unlock+0x18>)
 800478a:	605a      	strmi	r2, [r3, #4]
 800478c:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8004790:	605a      	strmi	r2, [r3, #4]
 8004792:	4770      	bx	lr
 8004794:	40022000 	andmi	r2, r2, r0
 8004798:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0800479c <fmc_bank1_unlock>:
 800479c:	4b04      	ldr	r3, [pc, #16]	; (80047b0 <fmc_bank1_unlock+0x14>)
 800479e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80047a0:	0612      	lsls	r2, r2, #24
 80047a2:	bf41      	itttt	mi
 80047a4:	4a03      	ldrmi	r2, [pc, #12]	; (80047b4 <fmc_bank1_unlock+0x18>)
 80047a6:	645a      	strmi	r2, [r3, #68]	; 0x44
 80047a8:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80047ac:	645a      	strmi	r2, [r3, #68]	; 0x44
 80047ae:	4770      	bx	lr
 80047b0:	40022000 	andmi	r2, r2, r0
 80047b4:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080047b8 <fmc_bank0_lock>:
 80047b8:	4a02      	ldr	r2, [pc, #8]	; (80047c4 <fmc_bank0_lock+0xc>)
 80047ba:	6913      	ldr	r3, [r2, #16]
 80047bc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80047c0:	6113      	str	r3, [r2, #16]
 80047c2:	4770      	bx	lr
 80047c4:	40022000 	andmi	r2, r2, r0

080047c8 <fmc_bank1_lock>:
 80047c8:	4a02      	ldr	r2, [pc, #8]	; (80047d4 <fmc_bank1_lock+0xc>)
 80047ca:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80047cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80047d0:	6513      	str	r3, [r2, #80]	; 0x50
 80047d2:	4770      	bx	lr
 80047d4:	40022000 	andmi	r2, r2, r0

080047d8 <fmc_bank0_state_get>:
 80047d8:	4b07      	ldr	r3, [pc, #28]	; (80047f8 <fmc_bank0_state_get+0x20>)
 80047da:	68da      	ldr	r2, [r3, #12]
 80047dc:	07d1      	lsls	r1, r2, #31
 80047de:	d407      	bmi.n	80047f0 <fmc_bank0_state_get+0x18>
 80047e0:	68da      	ldr	r2, [r3, #12]
 80047e2:	06d2      	lsls	r2, r2, #27
 80047e4:	d406      	bmi.n	80047f4 <fmc_bank0_state_get+0x1c>
 80047e6:	68d8      	ldr	r0, [r3, #12]
 80047e8:	f3c0 0080 	ubfx	r0, r0, #2, #1
 80047ec:	0040      	lsls	r0, r0, #1
 80047ee:	4770      	bx	lr
 80047f0:	2001      	movs	r0, #1
 80047f2:	4770      	bx	lr
 80047f4:	2003      	movs	r0, #3
 80047f6:	4770      	bx	lr
 80047f8:	40022000 	andmi	r2, r2, r0

080047fc <fmc_bank1_state_get>:
 80047fc:	4b07      	ldr	r3, [pc, #28]	; (800481c <fmc_bank1_state_get+0x20>)
 80047fe:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8004800:	07d1      	lsls	r1, r2, #31
 8004802:	d407      	bmi.n	8004814 <fmc_bank1_state_get+0x18>
 8004804:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8004806:	06d2      	lsls	r2, r2, #27
 8004808:	d406      	bmi.n	8004818 <fmc_bank1_state_get+0x1c>
 800480a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800480c:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8004810:	0040      	lsls	r0, r0, #1
 8004812:	4770      	bx	lr
 8004814:	2001      	movs	r0, #1
 8004816:	4770      	bx	lr
 8004818:	2003      	movs	r0, #3
 800481a:	4770      	bx	lr
 800481c:	40022000 	andmi	r2, r2, r0

08004820 <fwdgt_enable>:
 8004820:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8004824:	4b01      	ldr	r3, [pc, #4]	; (800482c <fwdgt_enable+0xc>)
 8004826:	601a      	str	r2, [r3, #0]
 8004828:	4770      	bx	lr
 800482a:	bf00      	nop
 800482c:	40003000 	andmi	r3, r0, r0

08004830 <fwdgt_counter_reload>:
 8004830:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8004834:	4b01      	ldr	r3, [pc, #4]	; (800483c <fwdgt_counter_reload+0xc>)
 8004836:	601a      	str	r2, [r3, #0]
 8004838:	4770      	bx	lr
 800483a:	bf00      	nop
 800483c:	40003000 	andmi	r3, r0, r0

08004840 <fwdgt_config>:
 8004840:	f245 5355 	movw	r3, #21845	; 0x5555
 8004844:	4a11      	ldr	r2, [pc, #68]	; (800488c <fwdgt_config+0x4c>)
 8004846:	b510      	push	{r4, lr}
 8004848:	4c11      	ldr	r4, [pc, #68]	; (8004890 <fwdgt_config+0x50>)
 800484a:	6013      	str	r3, [r2, #0]
 800484c:	68d3      	ldr	r3, [r2, #12]
 800484e:	3c01      	subs	r4, #1
 8004850:	f003 0301 	and.w	r3, r3, #1
 8004854:	d013      	beq.n	800487e <fwdgt_config+0x3e>
 8004856:	2b00      	cmp	r3, #0
 8004858:	d1f8      	bne.n	800484c <fwdgt_config+0xc>
 800485a:	6051      	str	r1, [r2, #4]
 800485c:	490c      	ldr	r1, [pc, #48]	; (8004890 <fwdgt_config+0x50>)
 800485e:	4a0b      	ldr	r2, [pc, #44]	; (800488c <fwdgt_config+0x4c>)
 8004860:	68d3      	ldr	r3, [r2, #12]
 8004862:	3901      	subs	r1, #1
 8004864:	f003 0302 	and.w	r3, r3, #2
 8004868:	d00d      	beq.n	8004886 <fwdgt_config+0x46>
 800486a:	2b00      	cmp	r3, #0
 800486c:	d1f8      	bne.n	8004860 <fwdgt_config+0x20>
 800486e:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8004872:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8004876:	6090      	str	r0, [r2, #8]
 8004878:	2001      	movs	r0, #1
 800487a:	6013      	str	r3, [r2, #0]
 800487c:	e002      	b.n	8004884 <fwdgt_config+0x44>
 800487e:	2b00      	cmp	r3, #0
 8004880:	d0eb      	beq.n	800485a <fwdgt_config+0x1a>
 8004882:	2000      	movs	r0, #0
 8004884:	bd10      	pop	{r4, pc}
 8004886:	2b00      	cmp	r3, #0
 8004888:	d1fb      	bne.n	8004882 <fwdgt_config+0x42>
 800488a:	e7f0      	b.n	800486e <fwdgt_config+0x2e>
 800488c:	40003000 	andmi	r3, r0, r0
 8004890:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08004894 <gpio_init>:
 8004894:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004898:	f04f 0c0f 	mov.w	ip, #15
 800489c:	06cf      	lsls	r7, r1, #27
 800489e:	f04f 0400 	mov.w	r4, #0
 80048a2:	f04f 0701 	mov.w	r7, #1
 80048a6:	f001 050f 	and.w	r5, r1, #15
 80048aa:	bf48      	it	mi
 80048ac:	4315      	orrmi	r5, r2
 80048ae:	fa23 f204 	lsr.w	r2, r3, r4
 80048b2:	07d6      	lsls	r6, r2, #31
 80048b4:	d510      	bpl.n	80048d8 <gpio_init+0x44>
 80048b6:	00a2      	lsls	r2, r4, #2
 80048b8:	6806      	ldr	r6, [r0, #0]
 80048ba:	fa0c fe02 	lsl.w	lr, ip, r2
 80048be:	ea26 060e 	bic.w	r6, r6, lr
 80048c2:	fa05 f202 	lsl.w	r2, r5, r2
 80048c6:	2928      	cmp	r1, #40	; 0x28
 80048c8:	ea42 0206 	orr.w	r2, r2, r6
 80048cc:	d128      	bne.n	8004920 <gpio_init+0x8c>
 80048ce:	fa07 f604 	lsl.w	r6, r7, r4
 80048d2:	401e      	ands	r6, r3
 80048d4:	6146      	str	r6, [r0, #20]
 80048d6:	6002      	str	r2, [r0, #0]
 80048d8:	3401      	adds	r4, #1
 80048da:	2c08      	cmp	r4, #8
 80048dc:	d1e7      	bne.n	80048ae <gpio_init+0x1a>
 80048de:	2600      	movs	r6, #0
 80048e0:	f04f 0c0f 	mov.w	ip, #15
 80048e4:	2701      	movs	r7, #1
 80048e6:	f106 0208 	add.w	r2, r6, #8
 80048ea:	fa23 f402 	lsr.w	r4, r3, r2
 80048ee:	07e4      	lsls	r4, r4, #31
 80048f0:	d511      	bpl.n	8004916 <gpio_init+0x82>
 80048f2:	00b4      	lsls	r4, r6, #2
 80048f4:	f8d0 e004 	ldr.w	lr, [r0, #4]
 80048f8:	fa0c f804 	lsl.w	r8, ip, r4
 80048fc:	ea2e 0e08 	bic.w	lr, lr, r8
 8004900:	fa05 f404 	lsl.w	r4, r5, r4
 8004904:	2928      	cmp	r1, #40	; 0x28
 8004906:	ea44 040e 	orr.w	r4, r4, lr
 800490a:	d110      	bne.n	800492e <gpio_init+0x9a>
 800490c:	fa07 f202 	lsl.w	r2, r7, r2
 8004910:	401a      	ands	r2, r3
 8004912:	6142      	str	r2, [r0, #20]
 8004914:	6044      	str	r4, [r0, #4]
 8004916:	3601      	adds	r6, #1
 8004918:	2e08      	cmp	r6, #8
 800491a:	d1e4      	bne.n	80048e6 <gpio_init+0x52>
 800491c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004920:	2948      	cmp	r1, #72	; 0x48
 8004922:	bf02      	ittt	eq
 8004924:	fa07 f604 	lsleq.w	r6, r7, r4
 8004928:	401e      	andeq	r6, r3
 800492a:	6106      	streq	r6, [r0, #16]
 800492c:	e7d3      	b.n	80048d6 <gpio_init+0x42>
 800492e:	2948      	cmp	r1, #72	; 0x48
 8004930:	bf02      	ittt	eq
 8004932:	fa07 f202 	lsleq.w	r2, r7, r2
 8004936:	401a      	andeq	r2, r3
 8004938:	6102      	streq	r2, [r0, #16]
 800493a:	e7eb      	b.n	8004914 <gpio_init+0x80>

0800493c <gpio_input_bit_get>:
 800493c:	6883      	ldr	r3, [r0, #8]
 800493e:	420b      	tst	r3, r1
 8004940:	bf14      	ite	ne
 8004942:	2001      	movne	r0, #1
 8004944:	2000      	moveq	r0, #0
 8004946:	4770      	bx	lr

08004948 <gpio_pin_remap_config>:
 8004948:	2800      	cmp	r0, #0
 800494a:	4a16      	ldr	r2, [pc, #88]	; (80049a4 <gpio_pin_remap_config+0x5c>)
 800494c:	b530      	push	{r4, r5, lr}
 800494e:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8004952:	bfb4      	ite	lt
 8004954:	69d3      	ldrlt	r3, [r2, #28]
 8004956:	6853      	ldrge	r3, [r2, #4]
 8004958:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 800495c:	b284      	uxth	r4, r0
 800495e:	d110      	bne.n	8004982 <gpio_pin_remap_config+0x3a>
 8004960:	6855      	ldr	r5, [r2, #4]
 8004962:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8004966:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 800496a:	6055      	str	r5, [r2, #4]
 800496c:	b119      	cbz	r1, 8004976 <gpio_pin_remap_config+0x2e>
 800496e:	0d42      	lsrs	r2, r0, #21
 8004970:	0112      	lsls	r2, r2, #4
 8004972:	4094      	lsls	r4, r2
 8004974:	4323      	orrs	r3, r4
 8004976:	4a0b      	ldr	r2, [pc, #44]	; (80049a4 <gpio_pin_remap_config+0x5c>)
 8004978:	2800      	cmp	r0, #0
 800497a:	bfb4      	ite	lt
 800497c:	61d3      	strlt	r3, [r2, #28]
 800497e:	6053      	strge	r3, [r2, #4]
 8004980:	bd30      	pop	{r4, r5, pc}
 8004982:	02c2      	lsls	r2, r0, #11
 8004984:	bf4d      	iteet	mi
 8004986:	2203      	movmi	r2, #3
 8004988:	0d42      	lsrpl	r2, r0, #21
 800498a:	0112      	lslpl	r2, r2, #4
 800498c:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8004990:	bf4c      	ite	mi
 8004992:	40aa      	lslmi	r2, r5
 8004994:	fa04 f202 	lslpl.w	r2, r4, r2
 8004998:	ea23 0302 	bic.w	r3, r3, r2
 800499c:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 80049a0:	e7e4      	b.n	800496c <gpio_pin_remap_config+0x24>
 80049a2:	bf00      	nop
 80049a4:	40010000 	andmi	r0, r1, r0

080049a8 <pmu_backup_write_enable>:
 80049a8:	4a02      	ldr	r2, [pc, #8]	; (80049b4 <pmu_backup_write_enable+0xc>)
 80049aa:	6813      	ldr	r3, [r2, #0]
 80049ac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80049b0:	6013      	str	r3, [r2, #0]
 80049b2:	4770      	bx	lr
 80049b4:	40007000 	andmi	r7, r0, r0

080049b8 <rcu_periph_clock_enable>:
 80049b8:	2201      	movs	r2, #1
 80049ba:	0983      	lsrs	r3, r0, #6
 80049bc:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80049c0:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80049c4:	6819      	ldr	r1, [r3, #0]
 80049c6:	f000 001f 	and.w	r0, r0, #31
 80049ca:	4082      	lsls	r2, r0
 80049cc:	430a      	orrs	r2, r1
 80049ce:	601a      	str	r2, [r3, #0]
 80049d0:	4770      	bx	lr

080049d2 <rcu_periph_clock_disable>:
 80049d2:	2101      	movs	r1, #1
 80049d4:	0983      	lsrs	r3, r0, #6
 80049d6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80049da:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80049de:	681a      	ldr	r2, [r3, #0]
 80049e0:	f000 001f 	and.w	r0, r0, #31
 80049e4:	4081      	lsls	r1, r0
 80049e6:	ea22 0201 	bic.w	r2, r2, r1
 80049ea:	601a      	str	r2, [r3, #0]
 80049ec:	4770      	bx	lr

080049ee <rcu_periph_reset_enable>:
 80049ee:	f7ff bfe3 	b.w	80049b8 <rcu_periph_clock_enable>

080049f2 <rcu_periph_reset_disable>:
 80049f2:	f7ff bfee 	b.w	80049d2 <rcu_periph_clock_disable>
	...

080049f8 <rcu_adc_clock_config>:
 80049f8:	490c      	ldr	r1, [pc, #48]	; (8004a2c <rcu_adc_clock_config+0x34>)
 80049fa:	2805      	cmp	r0, #5
 80049fc:	684b      	ldr	r3, [r1, #4]
 80049fe:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004a02:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8004a06:	d006      	beq.n	8004a16 <rcu_adc_clock_config+0x1e>
 8004a08:	d803      	bhi.n	8004a12 <rcu_adc_clock_config+0x1a>
 8004a0a:	2804      	cmp	r0, #4
 8004a0c:	d10a      	bne.n	8004a24 <rcu_adc_clock_config+0x2c>
 8004a0e:	604b      	str	r3, [r1, #4]
 8004a10:	4770      	bx	lr
 8004a12:	2807      	cmp	r0, #7
 8004a14:	d1fb      	bne.n	8004a0e <rcu_adc_clock_config+0x16>
 8004a16:	4a06      	ldr	r2, [pc, #24]	; (8004a30 <rcu_adc_clock_config+0x38>)
 8004a18:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 8004a1c:	4313      	orrs	r3, r2
 8004a1e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004a22:	e7f4      	b.n	8004a0e <rcu_adc_clock_config+0x16>
 8004a24:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8004a28:	e7f1      	b.n	8004a0e <rcu_adc_clock_config+0x16>
 8004a2a:	bf00      	nop
 8004a2c:	40021000 	andmi	r1, r2, r0
 8004a30:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08004a34 <rcu_clock_freq_get>:
 8004a34:	4b2f      	ldr	r3, [pc, #188]	; (8004af4 <rcu_clock_freq_get+0xc0>)
 8004a36:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a38:	4604      	mov	r4, r0
 8004a3a:	461f      	mov	r7, r3
 8004a3c:	b089      	sub	sp, #36	; 0x24
 8004a3e:	ad04      	add	r5, sp, #16
 8004a40:	f103 0610 	add.w	r6, r3, #16
 8004a44:	462a      	mov	r2, r5
 8004a46:	6818      	ldr	r0, [r3, #0]
 8004a48:	6859      	ldr	r1, [r3, #4]
 8004a4a:	3308      	adds	r3, #8
 8004a4c:	c203      	stmia	r2!, {r0, r1}
 8004a4e:	42b3      	cmp	r3, r6
 8004a50:	4615      	mov	r5, r2
 8004a52:	d1f7      	bne.n	8004a44 <rcu_clock_freq_get+0x10>
 8004a54:	466b      	mov	r3, sp
 8004a56:	6938      	ldr	r0, [r7, #16]
 8004a58:	6871      	ldr	r1, [r6, #4]
 8004a5a:	4a27      	ldr	r2, [pc, #156]	; (8004af8 <rcu_clock_freq_get+0xc4>)
 8004a5c:	c303      	stmia	r3!, {r0, r1}
 8004a5e:	c303      	stmia	r3!, {r0, r1}
 8004a60:	6853      	ldr	r3, [r2, #4]
 8004a62:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8004a66:	2b02      	cmp	r3, #2
 8004a68:	d137      	bne.n	8004ada <rcu_clock_freq_get+0xa6>
 8004a6a:	6853      	ldr	r3, [r2, #4]
 8004a6c:	03dd      	lsls	r5, r3, #15
 8004a6e:	d510      	bpl.n	8004a92 <rcu_clock_freq_get+0x5e>
 8004a70:	6853      	ldr	r3, [r2, #4]
 8004a72:	4922      	ldr	r1, [pc, #136]	; (8004afc <rcu_clock_freq_get+0xc8>)
 8004a74:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8004a78:	4b21      	ldr	r3, [pc, #132]	; (8004b00 <rcu_clock_freq_get+0xcc>)
 8004a7a:	bf08      	it	eq
 8004a7c:	4619      	moveq	r1, r3
 8004a7e:	6853      	ldr	r3, [r2, #4]
 8004a80:	6850      	ldr	r0, [r2, #4]
 8004a82:	f3c3 4383 	ubfx	r3, r3, #18, #4
 8004a86:	0100      	lsls	r0, r0, #4
 8004a88:	d505      	bpl.n	8004a96 <rcu_clock_freq_get+0x62>
 8004a8a:	f043 0310 	orr.w	r3, r3, #16
 8004a8e:	3301      	adds	r3, #1
 8004a90:	e004      	b.n	8004a9c <rcu_clock_freq_get+0x68>
 8004a92:	491a      	ldr	r1, [pc, #104]	; (8004afc <rcu_clock_freq_get+0xc8>)
 8004a94:	e7f3      	b.n	8004a7e <rcu_clock_freq_get+0x4a>
 8004a96:	2b0f      	cmp	r3, #15
 8004a98:	d0f9      	beq.n	8004a8e <rcu_clock_freq_get+0x5a>
 8004a9a:	3302      	adds	r3, #2
 8004a9c:	fb01 f003 	mul.w	r0, r1, r3
 8004aa0:	6853      	ldr	r3, [r2, #4]
 8004aa2:	6851      	ldr	r1, [r2, #4]
 8004aa4:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8004aa8:	6852      	ldr	r2, [r2, #4]
 8004aaa:	3320      	adds	r3, #32
 8004aac:	446b      	add	r3, sp
 8004aae:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8004ab2:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8004ab6:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8004aba:	3120      	adds	r1, #32
 8004abc:	3220      	adds	r2, #32
 8004abe:	4469      	add	r1, sp
 8004ac0:	446a      	add	r2, sp
 8004ac2:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8004ac6:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8004aca:	fa20 f303 	lsr.w	r3, r0, r3
 8004ace:	2c03      	cmp	r4, #3
 8004ad0:	d80e      	bhi.n	8004af0 <rcu_clock_freq_get+0xbc>
 8004ad2:	e8df f004 	tbb	[pc, r4]
 8004ad6:	0a070405 	beq	81c5af2 <__exidx_end+0x1bfad6>
 8004ada:	4809      	ldr	r0, [pc, #36]	; (8004b00 <rcu_clock_freq_get+0xcc>)
 8004adc:	e7e0      	b.n	8004aa0 <rcu_clock_freq_get+0x6c>
 8004ade:	4618      	mov	r0, r3
 8004ae0:	b009      	add	sp, #36	; 0x24
 8004ae2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004ae4:	fa23 f001 	lsr.w	r0, r3, r1
 8004ae8:	e7fa      	b.n	8004ae0 <rcu_clock_freq_get+0xac>
 8004aea:	fa23 f002 	lsr.w	r0, r3, r2
 8004aee:	e7f7      	b.n	8004ae0 <rcu_clock_freq_get+0xac>
 8004af0:	2000      	movs	r0, #0
 8004af2:	e7f5      	b.n	8004ae0 <rcu_clock_freq_get+0xac>
 8004af4:	08005740 	stmdaeq	r0, {r6, r8, r9, sl, ip, lr}
 8004af8:	40021000 	andmi	r1, r2, r0
 8004afc:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8004b00:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08004b04 <timer_deinit>:
 8004b04:	b508      	push	{r3, lr}
 8004b06:	4b2d      	ldr	r3, [pc, #180]	; (8004bbc <timer_deinit+0xb8>)
 8004b08:	4298      	cmp	r0, r3
 8004b0a:	d048      	beq.n	8004b9e <timer_deinit+0x9a>
 8004b0c:	d816      	bhi.n	8004b3c <timer_deinit+0x38>
 8004b0e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004b12:	4298      	cmp	r0, r3
 8004b14:	d03c      	beq.n	8004b90 <timer_deinit+0x8c>
 8004b16:	d807      	bhi.n	8004b28 <timer_deinit+0x24>
 8004b18:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004b1c:	d02a      	beq.n	8004b74 <timer_deinit+0x70>
 8004b1e:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8004b22:	4298      	cmp	r0, r3
 8004b24:	d02d      	beq.n	8004b82 <timer_deinit+0x7e>
 8004b26:	bd08      	pop	{r3, pc}
 8004b28:	4b25      	ldr	r3, [pc, #148]	; (8004bc0 <timer_deinit+0xbc>)
 8004b2a:	4298      	cmp	r0, r3
 8004b2c:	d1fb      	bne.n	8004b26 <timer_deinit+0x22>
 8004b2e:	f240 4003 	movw	r0, #1027	; 0x403
 8004b32:	f7ff ff5c 	bl	80049ee <rcu_periph_reset_enable>
 8004b36:	f240 4003 	movw	r0, #1027	; 0x403
 8004b3a:	e017      	b.n	8004b6c <timer_deinit+0x68>
 8004b3c:	4b21      	ldr	r3, [pc, #132]	; (8004bc4 <timer_deinit+0xc0>)
 8004b3e:	4298      	cmp	r0, r3
 8004b40:	d00e      	beq.n	8004b60 <timer_deinit+0x5c>
 8004b42:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8004b46:	4298      	cmp	r0, r3
 8004b48:	d030      	beq.n	8004bac <timer_deinit+0xa8>
 8004b4a:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 8004b4e:	4298      	cmp	r0, r3
 8004b50:	d1e9      	bne.n	8004b26 <timer_deinit+0x22>
 8004b52:	f240 4005 	movw	r0, #1029	; 0x405
 8004b56:	f7ff ff4a 	bl	80049ee <rcu_periph_reset_enable>
 8004b5a:	f240 4005 	movw	r0, #1029	; 0x405
 8004b5e:	e005      	b.n	8004b6c <timer_deinit+0x68>
 8004b60:	f240 300b 	movw	r0, #779	; 0x30b
 8004b64:	f7ff ff43 	bl	80049ee <rcu_periph_reset_enable>
 8004b68:	f240 300b 	movw	r0, #779	; 0x30b
 8004b6c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004b70:	f7ff bf3f 	b.w	80049f2 <rcu_periph_reset_disable>
 8004b74:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8004b78:	f7ff ff39 	bl	80049ee <rcu_periph_reset_enable>
 8004b7c:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8004b80:	e7f4      	b.n	8004b6c <timer_deinit+0x68>
 8004b82:	f240 4001 	movw	r0, #1025	; 0x401
 8004b86:	f7ff ff32 	bl	80049ee <rcu_periph_reset_enable>
 8004b8a:	f240 4001 	movw	r0, #1025	; 0x401
 8004b8e:	e7ed      	b.n	8004b6c <timer_deinit+0x68>
 8004b90:	f240 4002 	movw	r0, #1026	; 0x402
 8004b94:	f7ff ff2b 	bl	80049ee <rcu_periph_reset_enable>
 8004b98:	f240 4002 	movw	r0, #1026	; 0x402
 8004b9c:	e7e6      	b.n	8004b6c <timer_deinit+0x68>
 8004b9e:	f240 4004 	movw	r0, #1028	; 0x404
 8004ba2:	f7ff ff24 	bl	80049ee <rcu_periph_reset_enable>
 8004ba6:	f240 4004 	movw	r0, #1028	; 0x404
 8004baa:	e7df      	b.n	8004b6c <timer_deinit+0x68>
 8004bac:	f240 300d 	movw	r0, #781	; 0x30d
 8004bb0:	f7ff ff1d 	bl	80049ee <rcu_periph_reset_enable>
 8004bb4:	f240 300d 	movw	r0, #781	; 0x30d
 8004bb8:	e7d8      	b.n	8004b6c <timer_deinit+0x68>
 8004bba:	bf00      	nop
 8004bbc:	40001000 	andmi	r1, r0, r0
 8004bc0:	40000c00 	andmi	r0, r0, r0, lsl #24
 8004bc4:	40012c00 	andmi	r2, r1, r0, lsl #24

08004bc8 <timer_init>:
 8004bc8:	880b      	ldrh	r3, [r1, #0]
 8004bca:	6283      	str	r3, [r0, #40]	; 0x28
 8004bcc:	4b26      	ldr	r3, [pc, #152]	; (8004c68 <timer_init+0xa0>)
 8004bce:	4298      	cmp	r0, r3
 8004bd0:	d018      	beq.n	8004c04 <timer_init+0x3c>
 8004bd2:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8004bd6:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8004bda:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8004bde:	d011      	beq.n	8004c04 <timer_init+0x3c>
 8004be0:	4a22      	ldr	r2, [pc, #136]	; (8004c6c <timer_init+0xa4>)
 8004be2:	4290      	cmp	r0, r2
 8004be4:	d00e      	beq.n	8004c04 <timer_init+0x3c>
 8004be6:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8004bea:	4290      	cmp	r0, r2
 8004bec:	d00a      	beq.n	8004c04 <timer_init+0x3c>
 8004bee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004bf2:	4293      	cmp	r3, r2
 8004bf4:	d006      	beq.n	8004c04 <timer_init+0x3c>
 8004bf6:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 8004bfa:	4293      	cmp	r3, r2
 8004bfc:	d002      	beq.n	8004c04 <timer_init+0x3c>
 8004bfe:	4b1c      	ldr	r3, [pc, #112]	; (8004c70 <timer_init+0xa8>)
 8004c00:	4298      	cmp	r0, r3
 8004c02:	d10f      	bne.n	8004c24 <timer_init+0x5c>
 8004c04:	6803      	ldr	r3, [r0, #0]
 8004c06:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004c0a:	6003      	str	r3, [r0, #0]
 8004c0c:	884b      	ldrh	r3, [r1, #2]
 8004c0e:	6802      	ldr	r2, [r0, #0]
 8004c10:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8004c14:	4313      	orrs	r3, r2
 8004c16:	6003      	str	r3, [r0, #0]
 8004c18:	888b      	ldrh	r3, [r1, #4]
 8004c1a:	6802      	ldr	r2, [r0, #0]
 8004c1c:	f003 0310 	and.w	r3, r3, #16
 8004c20:	4313      	orrs	r3, r2
 8004c22:	6003      	str	r3, [r0, #0]
 8004c24:	688b      	ldr	r3, [r1, #8]
 8004c26:	62c3      	str	r3, [r0, #44]	; 0x2c
 8004c28:	4b12      	ldr	r3, [pc, #72]	; (8004c74 <timer_init+0xac>)
 8004c2a:	4298      	cmp	r0, r3
 8004c2c:	d003      	beq.n	8004c36 <timer_init+0x6e>
 8004c2e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004c32:	4298      	cmp	r0, r3
 8004c34:	d104      	bne.n	8004c40 <timer_init+0x78>
 8004c36:	6943      	ldr	r3, [r0, #20]
 8004c38:	f043 0301 	orr.w	r3, r3, #1
 8004c3c:	6143      	str	r3, [r0, #20]
 8004c3e:	4770      	bx	lr
 8004c40:	6803      	ldr	r3, [r0, #0]
 8004c42:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004c46:	6003      	str	r3, [r0, #0]
 8004c48:	898b      	ldrh	r3, [r1, #12]
 8004c4a:	6802      	ldr	r2, [r0, #0]
 8004c4c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004c50:	4313      	orrs	r3, r2
 8004c52:	6003      	str	r3, [r0, #0]
 8004c54:	4b04      	ldr	r3, [pc, #16]	; (8004c68 <timer_init+0xa0>)
 8004c56:	4298      	cmp	r0, r3
 8004c58:	d002      	beq.n	8004c60 <timer_init+0x98>
 8004c5a:	4b04      	ldr	r3, [pc, #16]	; (8004c6c <timer_init+0xa4>)
 8004c5c:	4298      	cmp	r0, r3
 8004c5e:	d1ea      	bne.n	8004c36 <timer_init+0x6e>
 8004c60:	7b8b      	ldrb	r3, [r1, #14]
 8004c62:	6303      	str	r3, [r0, #48]	; 0x30
 8004c64:	e7e7      	b.n	8004c36 <timer_init+0x6e>
 8004c66:	bf00      	nop
 8004c68:	40012c00 	andmi	r2, r1, r0, lsl #24
 8004c6c:	40013400 	andmi	r3, r1, r0, lsl #8
 8004c70:	40002000 	andmi	r2, r0, r0
 8004c74:	40001000 	andmi	r1, r0, r0

08004c78 <timer_enable>:
 8004c78:	6803      	ldr	r3, [r0, #0]
 8004c7a:	f043 0301 	orr.w	r3, r3, #1
 8004c7e:	6003      	str	r3, [r0, #0]
 8004c80:	4770      	bx	lr

08004c82 <timer_channel_output_mode_config>:
 8004c82:	2903      	cmp	r1, #3
 8004c84:	d81a      	bhi.n	8004cbc <timer_channel_output_mode_config+0x3a>
 8004c86:	e8df f001 	tbb	[pc, r1]
 8004c8a:	1a120a02 	bne	848749a <__exidx_end+0x48147e>
 8004c8e:	6983      	ldr	r3, [r0, #24]
 8004c90:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004c94:	6183      	str	r3, [r0, #24]
 8004c96:	6983      	ldr	r3, [r0, #24]
 8004c98:	4313      	orrs	r3, r2
 8004c9a:	6183      	str	r3, [r0, #24]
 8004c9c:	4770      	bx	lr
 8004c9e:	6983      	ldr	r3, [r0, #24]
 8004ca0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004ca4:	6183      	str	r3, [r0, #24]
 8004ca6:	6983      	ldr	r3, [r0, #24]
 8004ca8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8004cac:	e7f5      	b.n	8004c9a <timer_channel_output_mode_config+0x18>
 8004cae:	69c3      	ldr	r3, [r0, #28]
 8004cb0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004cb4:	61c3      	str	r3, [r0, #28]
 8004cb6:	69c3      	ldr	r3, [r0, #28]
 8004cb8:	4313      	orrs	r3, r2
 8004cba:	61c3      	str	r3, [r0, #28]
 8004cbc:	4770      	bx	lr
 8004cbe:	69c3      	ldr	r3, [r0, #28]
 8004cc0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004cc4:	61c3      	str	r3, [r0, #28]
 8004cc6:	69c3      	ldr	r3, [r0, #28]
 8004cc8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8004ccc:	e7f5      	b.n	8004cba <timer_channel_output_mode_config+0x38>

08004cce <timer_channel_output_pulse_value_config>:
 8004cce:	2903      	cmp	r1, #3
 8004cd0:	d80a      	bhi.n	8004ce8 <timer_channel_output_pulse_value_config+0x1a>
 8004cd2:	e8df f001 	tbb	[pc, r1]
 8004cd6:	08060402 	stmdaeq	r6, {r1, sl}
 8004cda:	6342      	str	r2, [r0, #52]	; 0x34
 8004cdc:	4770      	bx	lr
 8004cde:	6382      	str	r2, [r0, #56]	; 0x38
 8004ce0:	4770      	bx	lr
 8004ce2:	63c2      	str	r2, [r0, #60]	; 0x3c
 8004ce4:	4770      	bx	lr
 8004ce6:	6402      	str	r2, [r0, #64]	; 0x40
 8004ce8:	4770      	bx	lr

08004cea <timer_interrupt_enable>:
 8004cea:	68c3      	ldr	r3, [r0, #12]
 8004cec:	430b      	orrs	r3, r1
 8004cee:	60c3      	str	r3, [r0, #12]
 8004cf0:	4770      	bx	lr

08004cf2 <timer_interrupt_flag_clear>:
 8004cf2:	43c9      	mvns	r1, r1
 8004cf4:	6101      	str	r1, [r0, #16]
 8004cf6:	4770      	bx	lr

08004cf8 <timer_flag_clear>:
 8004cf8:	43c9      	mvns	r1, r1
 8004cfa:	6101      	str	r1, [r0, #16]
 8004cfc:	4770      	bx	lr
	...

08004d00 <usart_deinit>:
 8004d00:	b508      	push	{r3, lr}
 8004d02:	4b1d      	ldr	r3, [pc, #116]	; (8004d78 <usart_deinit+0x78>)
 8004d04:	4298      	cmp	r0, r3
 8004d06:	d028      	beq.n	8004d5a <usart_deinit+0x5a>
 8004d08:	d808      	bhi.n	8004d1c <usart_deinit+0x1c>
 8004d0a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004d0e:	4298      	cmp	r0, r3
 8004d10:	d015      	beq.n	8004d3e <usart_deinit+0x3e>
 8004d12:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004d16:	4298      	cmp	r0, r3
 8004d18:	d018      	beq.n	8004d4c <usart_deinit+0x4c>
 8004d1a:	bd08      	pop	{r3, pc}
 8004d1c:	4b17      	ldr	r3, [pc, #92]	; (8004d7c <usart_deinit+0x7c>)
 8004d1e:	4298      	cmp	r0, r3
 8004d20:	d022      	beq.n	8004d68 <usart_deinit+0x68>
 8004d22:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8004d26:	4298      	cmp	r0, r3
 8004d28:	d1f7      	bne.n	8004d1a <usart_deinit+0x1a>
 8004d2a:	f240 300e 	movw	r0, #782	; 0x30e
 8004d2e:	f7ff fe5e 	bl	80049ee <rcu_periph_reset_enable>
 8004d32:	f240 300e 	movw	r0, #782	; 0x30e
 8004d36:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004d3a:	f7ff be5a 	b.w	80049f2 <rcu_periph_reset_disable>
 8004d3e:	f240 4011 	movw	r0, #1041	; 0x411
 8004d42:	f7ff fe54 	bl	80049ee <rcu_periph_reset_enable>
 8004d46:	f240 4011 	movw	r0, #1041	; 0x411
 8004d4a:	e7f4      	b.n	8004d36 <usart_deinit+0x36>
 8004d4c:	f240 4012 	movw	r0, #1042	; 0x412
 8004d50:	f7ff fe4d 	bl	80049ee <rcu_periph_reset_enable>
 8004d54:	f240 4012 	movw	r0, #1042	; 0x412
 8004d58:	e7ed      	b.n	8004d36 <usart_deinit+0x36>
 8004d5a:	f240 4013 	movw	r0, #1043	; 0x413
 8004d5e:	f7ff fe46 	bl	80049ee <rcu_periph_reset_enable>
 8004d62:	f240 4013 	movw	r0, #1043	; 0x413
 8004d66:	e7e6      	b.n	8004d36 <usart_deinit+0x36>
 8004d68:	f240 4014 	movw	r0, #1044	; 0x414
 8004d6c:	f7ff fe3f 	bl	80049ee <rcu_periph_reset_enable>
 8004d70:	f240 4014 	movw	r0, #1044	; 0x414
 8004d74:	e7df      	b.n	8004d36 <usart_deinit+0x36>
 8004d76:	bf00      	nop
 8004d78:	40004c00 	andmi	r4, r0, r0, lsl #24
 8004d7c:	40005000 	andmi	r5, r0, r0

08004d80 <usart_baudrate_set>:
 8004d80:	b538      	push	{r3, r4, r5, lr}
 8004d82:	4b11      	ldr	r3, [pc, #68]	; (8004dc8 <usart_baudrate_set+0x48>)
 8004d84:	4604      	mov	r4, r0
 8004d86:	4298      	cmp	r0, r3
 8004d88:	460d      	mov	r5, r1
 8004d8a:	d01b      	beq.n	8004dc4 <usart_baudrate_set+0x44>
 8004d8c:	d809      	bhi.n	8004da2 <usart_baudrate_set+0x22>
 8004d8e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004d92:	4298      	cmp	r0, r3
 8004d94:	d016      	beq.n	8004dc4 <usart_baudrate_set+0x44>
 8004d96:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004d9a:	4298      	cmp	r0, r3
 8004d9c:	d012      	beq.n	8004dc4 <usart_baudrate_set+0x44>
 8004d9e:	2000      	movs	r0, #0
 8004da0:	e009      	b.n	8004db6 <usart_baudrate_set+0x36>
 8004da2:	4b0a      	ldr	r3, [pc, #40]	; (8004dcc <usart_baudrate_set+0x4c>)
 8004da4:	4298      	cmp	r0, r3
 8004da6:	d00d      	beq.n	8004dc4 <usart_baudrate_set+0x44>
 8004da8:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8004dac:	4298      	cmp	r0, r3
 8004dae:	d1f6      	bne.n	8004d9e <usart_baudrate_set+0x1e>
 8004db0:	2003      	movs	r0, #3
 8004db2:	f7ff fe3f 	bl	8004a34 <rcu_clock_freq_get>
 8004db6:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 8004dba:	fbb1 f1f5 	udiv	r1, r1, r5
 8004dbe:	b289      	uxth	r1, r1
 8004dc0:	60a1      	str	r1, [r4, #8]
 8004dc2:	bd38      	pop	{r3, r4, r5, pc}
 8004dc4:	2002      	movs	r0, #2
 8004dc6:	e7f4      	b.n	8004db2 <usart_baudrate_set+0x32>
 8004dc8:	40004c00 	andmi	r4, r0, r0, lsl #24
 8004dcc:	40005000 	andmi	r5, r0, r0

08004dd0 <usart_parity_config>:
 8004dd0:	68c3      	ldr	r3, [r0, #12]
 8004dd2:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8004dd6:	60c3      	str	r3, [r0, #12]
 8004dd8:	68c3      	ldr	r3, [r0, #12]
 8004dda:	430b      	orrs	r3, r1
 8004ddc:	60c3      	str	r3, [r0, #12]
 8004dde:	4770      	bx	lr

08004de0 <usart_word_length_set>:
 8004de0:	68c3      	ldr	r3, [r0, #12]
 8004de2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004de6:	60c3      	str	r3, [r0, #12]
 8004de8:	68c3      	ldr	r3, [r0, #12]
 8004dea:	430b      	orrs	r3, r1
 8004dec:	60c3      	str	r3, [r0, #12]
 8004dee:	4770      	bx	lr

08004df0 <usart_stop_bit_set>:
 8004df0:	6903      	ldr	r3, [r0, #16]
 8004df2:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8004df6:	6103      	str	r3, [r0, #16]
 8004df8:	6903      	ldr	r3, [r0, #16]
 8004dfa:	430b      	orrs	r3, r1
 8004dfc:	6103      	str	r3, [r0, #16]
 8004dfe:	4770      	bx	lr

08004e00 <usart_transmit_config>:
 8004e00:	68c3      	ldr	r3, [r0, #12]
 8004e02:	f023 0308 	bic.w	r3, r3, #8
 8004e06:	430b      	orrs	r3, r1
 8004e08:	60c3      	str	r3, [r0, #12]
 8004e0a:	4770      	bx	lr

08004e0c <usart_receive_config>:
 8004e0c:	68c3      	ldr	r3, [r0, #12]
 8004e0e:	f023 0304 	bic.w	r3, r3, #4
 8004e12:	430b      	orrs	r3, r1
 8004e14:	60c3      	str	r3, [r0, #12]
 8004e16:	4770      	bx	lr

08004e18 <usart_hardware_flow_rts_config>:
 8004e18:	6943      	ldr	r3, [r0, #20]
 8004e1a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004e1e:	430b      	orrs	r3, r1
 8004e20:	6143      	str	r3, [r0, #20]
 8004e22:	4770      	bx	lr

08004e24 <usart_hardware_flow_cts_config>:
 8004e24:	6943      	ldr	r3, [r0, #20]
 8004e26:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8004e2a:	430b      	orrs	r3, r1
 8004e2c:	6143      	str	r3, [r0, #20]
 8004e2e:	4770      	bx	lr

08004e30 <usart_dma_transmit_config>:
 8004e30:	6943      	ldr	r3, [r0, #20]
 8004e32:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004e36:	430b      	orrs	r3, r1
 8004e38:	6143      	str	r3, [r0, #20]
 8004e3a:	4770      	bx	lr

08004e3c <usart_flag_get>:
 8004e3c:	098b      	lsrs	r3, r1, #6
 8004e3e:	581a      	ldr	r2, [r3, r0]
 8004e40:	2301      	movs	r3, #1
 8004e42:	f001 011f 	and.w	r1, r1, #31
 8004e46:	408b      	lsls	r3, r1
 8004e48:	4213      	tst	r3, r2
 8004e4a:	bf14      	ite	ne
 8004e4c:	2001      	movne	r0, #1
 8004e4e:	2000      	moveq	r0, #0
 8004e50:	4770      	bx	lr

08004e52 <usart_interrupt_enable>:
 8004e52:	2301      	movs	r3, #1
 8004e54:	b510      	push	{r4, lr}
 8004e56:	f3c1 1289 	ubfx	r2, r1, #6, #10
 8004e5a:	5814      	ldr	r4, [r2, r0]
 8004e5c:	f001 011f 	and.w	r1, r1, #31
 8004e60:	408b      	lsls	r3, r1
 8004e62:	4323      	orrs	r3, r4
 8004e64:	5013      	str	r3, [r2, r0]
 8004e66:	bd10      	pop	{r4, pc}

08004e68 <usart_interrupt_disable>:
 8004e68:	2201      	movs	r2, #1
 8004e6a:	b510      	push	{r4, lr}
 8004e6c:	f3c1 1489 	ubfx	r4, r1, #6, #10
 8004e70:	5823      	ldr	r3, [r4, r0]
 8004e72:	f001 011f 	and.w	r1, r1, #31
 8004e76:	408a      	lsls	r2, r1
 8004e78:	ea23 0302 	bic.w	r3, r3, r2
 8004e7c:	5023      	str	r3, [r4, r0]
 8004e7e:	bd10      	pop	{r4, pc}

08004e80 <usart_interrupt_flag_clear>:
 8004e80:	2201      	movs	r2, #1
 8004e82:	b510      	push	{r4, lr}
 8004e84:	0d8c      	lsrs	r4, r1, #22
 8004e86:	5823      	ldr	r3, [r4, r0]
 8004e88:	f3c1 4104 	ubfx	r1, r1, #16, #5
 8004e8c:	408a      	lsls	r2, r1
 8004e8e:	ea23 0302 	bic.w	r3, r3, r2
 8004e92:	5023      	str	r3, [r4, r0]
 8004e94:	bd10      	pop	{r4, pc}
	...

08004e98 <gd32_adc_init()>:
 8004e98:	b510      	push	{r4, lr}
 8004e9a:	f240 6009 	movw	r0, #1545	; 0x609
 8004e9e:	4c21      	ldr	r4, [pc, #132]	; (8004f24 <gd32_adc_init()+0x8c>)
 8004ea0:	f7ff fd8a 	bl	80049b8 <rcu_periph_clock_enable>
 8004ea4:	2005      	movs	r0, #5
 8004ea6:	f7ff fda7 	bl	80049f8 <rcu_adc_clock_config>
 8004eaa:	4620      	mov	r0, r4
 8004eac:	2201      	movs	r2, #1
 8004eae:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004eb2:	f000 fabf 	bl	8005434 <adc_special_function_config>
 8004eb6:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8004eba:	4620      	mov	r0, r4
 8004ebc:	2102      	movs	r1, #2
 8004ebe:	f000 fb58 	bl	8005572 <adc_external_trigger_source_config>
 8004ec2:	2100      	movs	r1, #0
 8004ec4:	4620      	mov	r0, r4
 8004ec6:	f000 fadd 	bl	8005484 <adc_data_alignment_config>
 8004eca:	2000      	movs	r0, #0
 8004ecc:	f000 faa2 	bl	8005414 <adc_mode_config>
 8004ed0:	2202      	movs	r2, #2
 8004ed2:	4620      	mov	r0, r4
 8004ed4:	4611      	mov	r1, r2
 8004ed6:	f000 fb01 	bl	80054dc <adc_channel_length_config>
 8004eda:	4620      	mov	r0, r4
 8004edc:	2307      	movs	r3, #7
 8004ede:	2210      	movs	r2, #16
 8004ee0:	2100      	movs	r1, #0
 8004ee2:	f000 fb18 	bl	8005516 <adc_inserted_channel_config>
 8004ee6:	2307      	movs	r3, #7
 8004ee8:	4620      	mov	r0, r4
 8004eea:	2211      	movs	r2, #17
 8004eec:	2101      	movs	r1, #1
 8004eee:	f000 fb12 	bl	8005516 <adc_inserted_channel_config>
 8004ef2:	2201      	movs	r2, #1
 8004ef4:	2102      	movs	r1, #2
 8004ef6:	4620      	mov	r0, r4
 8004ef8:	f000 fb4c 	bl	8005594 <adc_external_trigger_config>
 8004efc:	f000 fae4 	bl	80054c8 <adc_tempsensor_vrefint_enable>
 8004f00:	4620      	mov	r0, r4
 8004f02:	f000 fac8 	bl	8005496 <adc_enable>
 8004f06:	2100      	movs	r1, #0
 8004f08:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004f0c:	f000 fa6a 	bl	80053e4 <udelay(unsigned int, unsigned int)>
 8004f10:	4620      	mov	r0, r4
 8004f12:	f000 fac8 	bl	80054a6 <adc_calibration_enable>
 8004f16:	4620      	mov	r0, r4
 8004f18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004f1c:	2102      	movs	r1, #2
 8004f1e:	f000 bb54 	b.w	80055ca <adc_software_trigger_enable>
 8004f22:	bf00      	nop
 8004f24:	40012400 	andmi	r2, r1, r0, lsl #8

08004f28 <_stop() [clone .isra.0]>:
 8004f28:	b508      	push	{r3, lr}
 8004f2a:	4806      	ldr	r0, [pc, #24]	; (8004f44 <_stop() [clone .isra.0]+0x1c>)
 8004f2c:	f000 fbe0 	bl	80056f0 <i2c_stop_on_bus>
 8004f30:	f640 73ff 	movw	r3, #4095	; 0xfff
 8004f34:	4904      	ldr	r1, [pc, #16]	; (8004f48 <_stop() [clone .isra.0]+0x20>)
 8004f36:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8004f3a:	0592      	lsls	r2, r2, #22
 8004f3c:	d501      	bpl.n	8004f42 <_stop() [clone .isra.0]+0x1a>
 8004f3e:	3b01      	subs	r3, #1
 8004f40:	d1f9      	bne.n	8004f36 <_stop() [clone .isra.0]+0xe>
 8004f42:	bd08      	pop	{r3, pc}
 8004f44:	40005400 	andmi	r5, r0, r0, lsl #8
 8004f48:	40005000 	andmi	r5, r0, r0

08004f4c <gd32_i2c_begin>:
 8004f4c:	b510      	push	{r4, lr}
 8004f4e:	f240 7015 	movw	r0, #1813	; 0x715
 8004f52:	f7ff fd31 	bl	80049b8 <rcu_periph_clock_enable>
 8004f56:	4c15      	ldr	r4, [pc, #84]	; (8004fac <gd32_i2c_begin+0x60>)
 8004f58:	f240 6003 	movw	r0, #1539	; 0x603
 8004f5c:	f7ff fd2c 	bl	80049b8 <rcu_periph_clock_enable>
 8004f60:	f240 6003 	movw	r0, #1539	; 0x603
 8004f64:	f7ff fd28 	bl	80049b8 <rcu_periph_clock_enable>
 8004f68:	4620      	mov	r0, r4
 8004f6a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004f6e:	2203      	movs	r2, #3
 8004f70:	211c      	movs	r1, #28
 8004f72:	f7ff fc8f 	bl	8004894 <gpio_init>
 8004f76:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004f7a:	2203      	movs	r2, #3
 8004f7c:	4620      	mov	r0, r4
 8004f7e:	211c      	movs	r1, #28
 8004f80:	f7ff fc88 	bl	8004894 <gpio_init>
 8004f84:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8004f88:	2101      	movs	r1, #1
 8004f8a:	2002      	movs	r0, #2
 8004f8c:	f7ff fcdc 	bl	8004948 <gpio_pin_remap_config>
 8004f90:	4620      	mov	r0, r4
 8004f92:	4907      	ldr	r1, [pc, #28]	; (8004fb0 <gd32_i2c_begin+0x64>)
 8004f94:	2200      	movs	r2, #0
 8004f96:	f000 fb25 	bl	80055e4 <i2c_clock_config>
 8004f9a:	4620      	mov	r0, r4
 8004f9c:	f000 fb9e 	bl	80056dc <i2c_enable>
 8004fa0:	4620      	mov	r0, r4
 8004fa2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004fa6:	2101      	movs	r1, #1
 8004fa8:	f000 bb7e 	b.w	80056a8 <i2c_ack_config>
 8004fac:	40010c00 	andmi	r0, r1, r0, lsl #24
 8004fb0:	00061a80 	andeq	r1, r6, r0, lsl #21

08004fb4 <gd32_i2c_set_baudrate>:
 8004fb4:	4601      	mov	r1, r0
 8004fb6:	2200      	movs	r2, #0
 8004fb8:	4801      	ldr	r0, [pc, #4]	; (8004fc0 <gd32_i2c_set_baudrate+0xc>)
 8004fba:	f000 bb13 	b.w	80055e4 <i2c_clock_config>
 8004fbe:	bf00      	nop
 8004fc0:	40005400 	andmi	r5, r0, r0, lsl #8

08004fc4 <gd32_i2c_set_address>:
 8004fc4:	4b01      	ldr	r3, [pc, #4]	; (8004fcc <gd32_i2c_set_address+0x8>)
 8004fc6:	0040      	lsls	r0, r0, #1
 8004fc8:	7018      	strb	r0, [r3, #0]
 8004fca:	4770      	bx	lr
 8004fcc:	20001820 	andcs	r1, r0, r0, lsr #16

08004fd0 <gd32_i2c_write>:
 8004fd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004fd2:	4604      	mov	r4, r0
 8004fd4:	460f      	mov	r7, r1
 8004fd6:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004fda:	4e2e      	ldr	r6, [pc, #184]	; (8005094 <gd32_i2c_write+0xc4>)
 8004fdc:	f240 6101 	movw	r1, #1537	; 0x601
 8004fe0:	4630      	mov	r0, r6
 8004fe2:	f000 fb8f 	bl	8005704 <i2c_flag_get>
 8004fe6:	b9b0      	cbnz	r0, 8005016 <gd32_i2c_write+0x46>
 8004fe8:	482a      	ldr	r0, [pc, #168]	; (8005094 <gd32_i2c_write+0xc4>)
 8004fea:	f000 fb7c 	bl	80056e6 <i2c_start_on_bus>
 8004fee:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004ff2:	4e28      	ldr	r6, [pc, #160]	; (8005094 <gd32_i2c_write+0xc4>)
 8004ff4:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8004ff8:	4630      	mov	r0, r6
 8004ffa:	f000 fb83 	bl	8005704 <i2c_flag_get>
 8004ffe:	b190      	cbz	r0, 8005026 <gd32_i2c_write+0x56>
 8005000:	4b25      	ldr	r3, [pc, #148]	; (8005098 <gd32_i2c_write+0xc8>)
 8005002:	f06f 0201 	mvn.w	r2, #1
 8005006:	7819      	ldrb	r1, [r3, #0]
 8005008:	4822      	ldr	r0, [pc, #136]	; (8005094 <gd32_i2c_write+0xc4>)
 800500a:	f000 fb5f 	bl	80056cc <i2c_master_addressing>
 800500e:	f640 75ff 	movw	r5, #4095	; 0xfff
 8005012:	4e20      	ldr	r6, [pc, #128]	; (8005094 <gd32_i2c_write+0xc4>)
 8005014:	e00c      	b.n	8005030 <gd32_i2c_write+0x60>
 8005016:	3d01      	subs	r5, #1
 8005018:	d1e0      	bne.n	8004fdc <gd32_i2c_write+0xc>
 800501a:	f7ff ff85 	bl	8004f28 <_stop() [clone .isra.0]>
 800501e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005022:	4240      	negs	r0, r0
 8005024:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005026:	3d01      	subs	r5, #1
 8005028:	d1e4      	bne.n	8004ff4 <gd32_i2c_write+0x24>
 800502a:	e7f6      	b.n	800501a <gd32_i2c_write+0x4a>
 800502c:	3d01      	subs	r5, #1
 800502e:	d0f4      	beq.n	800501a <gd32_i2c_write+0x4a>
 8005030:	f240 5101 	movw	r1, #1281	; 0x501
 8005034:	4630      	mov	r0, r6
 8005036:	f000 fb65 	bl	8005704 <i2c_flag_get>
 800503a:	2800      	cmp	r0, #0
 800503c:	d0f6      	beq.n	800502c <gd32_i2c_write+0x5c>
 800503e:	f240 5101 	movw	r1, #1281	; 0x501
 8005042:	4814      	ldr	r0, [pc, #80]	; (8005094 <gd32_i2c_write+0xc4>)
 8005044:	f000 fb69 	bl	800571a <i2c_flag_clear>
 8005048:	f640 75ff 	movw	r5, #4095	; 0xfff
 800504c:	4e11      	ldr	r6, [pc, #68]	; (8005094 <gd32_i2c_write+0xc4>)
 800504e:	f240 5107 	movw	r1, #1287	; 0x507
 8005052:	4630      	mov	r0, r6
 8005054:	f000 fb56 	bl	8005704 <i2c_flag_get>
 8005058:	2801      	cmp	r0, #1
 800505a:	d107      	bne.n	800506c <gd32_i2c_write+0x9c>
 800505c:	4e0d      	ldr	r6, [pc, #52]	; (8005094 <gd32_i2c_write+0xc4>)
 800505e:	4427      	add	r7, r4
 8005060:	42a7      	cmp	r7, r4
 8005062:	d106      	bne.n	8005072 <gd32_i2c_write+0xa2>
 8005064:	f7ff ff60 	bl	8004f28 <_stop() [clone .isra.0]>
 8005068:	2000      	movs	r0, #0
 800506a:	e7da      	b.n	8005022 <gd32_i2c_write+0x52>
 800506c:	3d01      	subs	r5, #1
 800506e:	d1ee      	bne.n	800504e <gd32_i2c_write+0x7e>
 8005070:	e7d3      	b.n	800501a <gd32_i2c_write+0x4a>
 8005072:	4630      	mov	r0, r6
 8005074:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005078:	f000 fb3f 	bl	80056fa <i2c_data_transmit>
 800507c:	f640 75ff 	movw	r5, #4095	; 0xfff
 8005080:	f240 5102 	movw	r1, #1282	; 0x502
 8005084:	4630      	mov	r0, r6
 8005086:	f000 fb3d 	bl	8005704 <i2c_flag_get>
 800508a:	2800      	cmp	r0, #0
 800508c:	d1e8      	bne.n	8005060 <gd32_i2c_write+0x90>
 800508e:	3d01      	subs	r5, #1
 8005090:	d1f6      	bne.n	8005080 <gd32_i2c_write+0xb0>
 8005092:	e7c2      	b.n	800501a <gd32_i2c_write+0x4a>
 8005094:	40005400 	andmi	r5, r0, r0, lsl #8
 8005098:	20001820 	andcs	r1, r0, r0, lsr #16

0800509c <gd32_i2c_read>:
 800509c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80050a0:	4680      	mov	r8, r0
 80050a2:	460c      	mov	r4, r1
 80050a4:	f640 76ff 	movw	r6, #4095	; 0xfff
 80050a8:	4f4b      	ldr	r7, [pc, #300]	; (80051d8 <gd32_i2c_read+0x13c>)
 80050aa:	f240 6101 	movw	r1, #1537	; 0x601
 80050ae:	4638      	mov	r0, r7
 80050b0:	f000 fb28 	bl	8005704 <i2c_flag_get>
 80050b4:	4605      	mov	r5, r0
 80050b6:	bb08      	cbnz	r0, 80050fc <gd32_i2c_read+0x60>
 80050b8:	2c02      	cmp	r4, #2
 80050ba:	d103      	bne.n	80050c4 <gd32_i2c_read+0x28>
 80050bc:	4601      	mov	r1, r0
 80050be:	4846      	ldr	r0, [pc, #280]	; (80051d8 <gd32_i2c_read+0x13c>)
 80050c0:	f000 fafb 	bl	80056ba <i2c_ackpos_config>
 80050c4:	4844      	ldr	r0, [pc, #272]	; (80051d8 <gd32_i2c_read+0x13c>)
 80050c6:	f000 fb0e 	bl	80056e6 <i2c_start_on_bus>
 80050ca:	f640 76ff 	movw	r6, #4095	; 0xfff
 80050ce:	4f42      	ldr	r7, [pc, #264]	; (80051d8 <gd32_i2c_read+0x13c>)
 80050d0:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80050d4:	4638      	mov	r0, r7
 80050d6:	f000 fb15 	bl	8005704 <i2c_flag_get>
 80050da:	b1a8      	cbz	r0, 8005108 <gd32_i2c_read+0x6c>
 80050dc:	4b3f      	ldr	r3, [pc, #252]	; (80051dc <gd32_i2c_read+0x140>)
 80050de:	2201      	movs	r2, #1
 80050e0:	7819      	ldrb	r1, [r3, #0]
 80050e2:	483d      	ldr	r0, [pc, #244]	; (80051d8 <gd32_i2c_read+0x13c>)
 80050e4:	f000 faf2 	bl	80056cc <i2c_master_addressing>
 80050e8:	2c02      	cmp	r4, #2
 80050ea:	d803      	bhi.n	80050f4 <gd32_i2c_read+0x58>
 80050ec:	2100      	movs	r1, #0
 80050ee:	483a      	ldr	r0, [pc, #232]	; (80051d8 <gd32_i2c_read+0x13c>)
 80050f0:	f000 fada 	bl	80056a8 <i2c_ack_config>
 80050f4:	f640 76ff 	movw	r6, #4095	; 0xfff
 80050f8:	4f37      	ldr	r7, [pc, #220]	; (80051d8 <gd32_i2c_read+0x13c>)
 80050fa:	e00a      	b.n	8005112 <gd32_i2c_read+0x76>
 80050fc:	3e01      	subs	r6, #1
 80050fe:	d1d4      	bne.n	80050aa <gd32_i2c_read+0xe>
 8005100:	f7ff ff12 	bl	8004f28 <_stop() [clone .isra.0]>
 8005104:	2504      	movs	r5, #4
 8005106:	e04d      	b.n	80051a4 <gd32_i2c_read+0x108>
 8005108:	3e01      	subs	r6, #1
 800510a:	d1e1      	bne.n	80050d0 <gd32_i2c_read+0x34>
 800510c:	e7f8      	b.n	8005100 <gd32_i2c_read+0x64>
 800510e:	3e01      	subs	r6, #1
 8005110:	d0f6      	beq.n	8005100 <gd32_i2c_read+0x64>
 8005112:	f240 5101 	movw	r1, #1281	; 0x501
 8005116:	4638      	mov	r0, r7
 8005118:	f000 faf4 	bl	8005704 <i2c_flag_get>
 800511c:	2800      	cmp	r0, #0
 800511e:	d0f6      	beq.n	800510e <gd32_i2c_read+0x72>
 8005120:	f240 5101 	movw	r1, #1281	; 0x501
 8005124:	482c      	ldr	r0, [pc, #176]	; (80051d8 <gd32_i2c_read+0x13c>)
 8005126:	f000 faf8 	bl	800571a <i2c_flag_clear>
 800512a:	2c01      	cmp	r4, #1
 800512c:	d102      	bne.n	8005134 <gd32_i2c_read+0x98>
 800512e:	482a      	ldr	r0, [pc, #168]	; (80051d8 <gd32_i2c_read+0x13c>)
 8005130:	f000 fade 	bl	80056f0 <i2c_stop_on_bus>
 8005134:	f640 77ff 	movw	r7, #4095	; 0xfff
 8005138:	4e27      	ldr	r6, [pc, #156]	; (80051d8 <gd32_i2c_read+0x13c>)
 800513a:	e022      	b.n	8005182 <gd32_i2c_read+0xe6>
 800513c:	2c03      	cmp	r4, #3
 800513e:	d134      	bne.n	80051aa <gd32_i2c_read+0x10e>
 8005140:	f640 79ff 	movw	r9, #4095	; 0xfff
 8005144:	e002      	b.n	800514c <gd32_i2c_read+0xb0>
 8005146:	f1b9 0901 	subs.w	r9, r9, #1
 800514a:	d0d9      	beq.n	8005100 <gd32_i2c_read+0x64>
 800514c:	f240 5102 	movw	r1, #1282	; 0x502
 8005150:	4630      	mov	r0, r6
 8005152:	f000 fad7 	bl	8005704 <i2c_flag_get>
 8005156:	2800      	cmp	r0, #0
 8005158:	d0f5      	beq.n	8005146 <gd32_i2c_read+0xaa>
 800515a:	2100      	movs	r1, #0
 800515c:	4630      	mov	r0, r6
 800515e:	f000 faa3 	bl	80056a8 <i2c_ack_config>
 8005162:	f240 5106 	movw	r1, #1286	; 0x506
 8005166:	4630      	mov	r0, r6
 8005168:	f000 facc 	bl	8005704 <i2c_flag_get>
 800516c:	b138      	cbz	r0, 800517e <gd32_i2c_read+0xe2>
 800516e:	4630      	mov	r0, r6
 8005170:	f000 fac5 	bl	80056fe <i2c_data_receive>
 8005174:	f640 77ff 	movw	r7, #4095	; 0xfff
 8005178:	f808 0b01 	strb.w	r0, [r8], #1
 800517c:	3c01      	subs	r4, #1
 800517e:	3f01      	subs	r7, #1
 8005180:	d0be      	beq.n	8005100 <gd32_i2c_read+0x64>
 8005182:	2c00      	cmp	r4, #0
 8005184:	d1da      	bne.n	800513c <gd32_i2c_read+0xa0>
 8005186:	f640 73ff 	movw	r3, #4095	; 0xfff
 800518a:	4915      	ldr	r1, [pc, #84]	; (80051e0 <gd32_i2c_read+0x144>)
 800518c:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8005190:	0592      	lsls	r2, r2, #22
 8005192:	d41d      	bmi.n	80051d0 <gd32_i2c_read+0x134>
 8005194:	2101      	movs	r1, #1
 8005196:	4810      	ldr	r0, [pc, #64]	; (80051d8 <gd32_i2c_read+0x13c>)
 8005198:	f000 fa86 	bl	80056a8 <i2c_ack_config>
 800519c:	2101      	movs	r1, #1
 800519e:	480e      	ldr	r0, [pc, #56]	; (80051d8 <gd32_i2c_read+0x13c>)
 80051a0:	f000 fa8b 	bl	80056ba <i2c_ackpos_config>
 80051a4:	4628      	mov	r0, r5
 80051a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80051aa:	2c02      	cmp	r4, #2
 80051ac:	d1d9      	bne.n	8005162 <gd32_i2c_read+0xc6>
 80051ae:	f640 79ff 	movw	r9, #4095	; 0xfff
 80051b2:	e002      	b.n	80051ba <gd32_i2c_read+0x11e>
 80051b4:	f1b9 0901 	subs.w	r9, r9, #1
 80051b8:	d0a2      	beq.n	8005100 <gd32_i2c_read+0x64>
 80051ba:	f240 5102 	movw	r1, #1282	; 0x502
 80051be:	4630      	mov	r0, r6
 80051c0:	f000 faa0 	bl	8005704 <i2c_flag_get>
 80051c4:	2800      	cmp	r0, #0
 80051c6:	d0f5      	beq.n	80051b4 <gd32_i2c_read+0x118>
 80051c8:	4630      	mov	r0, r6
 80051ca:	f000 fa91 	bl	80056f0 <i2c_stop_on_bus>
 80051ce:	e7c8      	b.n	8005162 <gd32_i2c_read+0xc6>
 80051d0:	3b01      	subs	r3, #1
 80051d2:	d1db      	bne.n	800518c <gd32_i2c_read+0xf0>
 80051d4:	e796      	b.n	8005104 <gd32_i2c_read+0x68>
 80051d6:	bf00      	nop
 80051d8:	40005400 	andmi	r5, r0, r0, lsl #8
 80051dc:	20001820 	andcs	r1, r0, r0, lsr #16
 80051e0:	40005000 	andmi	r5, r0, r0

080051e4 <gd32_uart_begin>:
 80051e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80051e6:	461e      	mov	r6, r3
 80051e8:	4b63      	ldr	r3, [pc, #396]	; (8005378 <gd32_uart_begin+0x194>)
 80051ea:	4604      	mov	r4, r0
 80051ec:	4298      	cmp	r0, r3
 80051ee:	460f      	mov	r7, r1
 80051f0:	4615      	mov	r5, r2
 80051f2:	d03b      	beq.n	800526c <gd32_uart_begin+0x88>
 80051f4:	d80a      	bhi.n	800520c <gd32_uart_begin+0x28>
 80051f6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80051fa:	4298      	cmp	r0, r3
 80051fc:	d02f      	beq.n	800525e <gd32_uart_begin+0x7a>
 80051fe:	f240 7012 	movw	r0, #1810	; 0x712
 8005202:	f7ff fbd9 	bl	80049b8 <rcu_periph_clock_enable>
 8005206:	f240 6004 	movw	r0, #1540	; 0x604
 800520a:	e008      	b.n	800521e <gd32_uart_begin+0x3a>
 800520c:	4b5b      	ldr	r3, [pc, #364]	; (800537c <gd32_uart_begin+0x198>)
 800520e:	4298      	cmp	r0, r3
 8005210:	d02f      	beq.n	8005272 <gd32_uart_begin+0x8e>
 8005212:	f240 600e 	movw	r0, #1550	; 0x60e
 8005216:	f7ff fbcf 	bl	80049b8 <rcu_periph_clock_enable>
 800521a:	f240 6003 	movw	r0, #1539	; 0x603
 800521e:	f7ff fbcb 	bl	80049b8 <rcu_periph_clock_enable>
 8005222:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8005226:	f7ff fbc7 	bl	80049b8 <rcu_periph_clock_enable>
 800522a:	4b53      	ldr	r3, [pc, #332]	; (8005378 <gd32_uart_begin+0x194>)
 800522c:	429c      	cmp	r4, r3
 800522e:	f000 8084 	beq.w	800533a <gd32_uart_begin+0x156>
 8005232:	d829      	bhi.n	8005288 <gd32_uart_begin+0xa4>
 8005234:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8005238:	429c      	cmp	r4, r3
 800523a:	d071      	beq.n	8005320 <gd32_uart_begin+0x13c>
 800523c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005240:	2203      	movs	r2, #3
 8005242:	2118      	movs	r1, #24
 8005244:	484e      	ldr	r0, [pc, #312]	; (8005380 <gd32_uart_begin+0x19c>)
 8005246:	f7ff fb25 	bl	8004894 <gpio_init>
 800524a:	2104      	movs	r1, #4
 800524c:	484c      	ldr	r0, [pc, #304]	; (8005380 <gd32_uart_begin+0x19c>)
 800524e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8005252:	2203      	movs	r2, #3
 8005254:	f7ff fb1e 	bl	8004894 <gpio_init>
 8005258:	2101      	movs	r1, #1
 800525a:	484a      	ldr	r0, [pc, #296]	; (8005384 <gd32_uart_begin+0x1a0>)
 800525c:	e025      	b.n	80052aa <gd32_uart_begin+0xc6>
 800525e:	f240 7011 	movw	r0, #1809	; 0x711
 8005262:	f7ff fba9 	bl	80049b8 <rcu_periph_clock_enable>
 8005266:	f240 6002 	movw	r0, #1538	; 0x602
 800526a:	e7d8      	b.n	800521e <gd32_uart_begin+0x3a>
 800526c:	f240 7013 	movw	r0, #1811	; 0x713
 8005270:	e7c7      	b.n	8005202 <gd32_uart_begin+0x1e>
 8005272:	f240 7014 	movw	r0, #1812	; 0x714
 8005276:	f7ff fb9f 	bl	80049b8 <rcu_periph_clock_enable>
 800527a:	f240 6004 	movw	r0, #1540	; 0x604
 800527e:	f7ff fb9b 	bl	80049b8 <rcu_periph_clock_enable>
 8005282:	f240 6005 	movw	r0, #1541	; 0x605
 8005286:	e7ca      	b.n	800521e <gd32_uart_begin+0x3a>
 8005288:	4b3c      	ldr	r3, [pc, #240]	; (800537c <gd32_uart_begin+0x198>)
 800528a:	429c      	cmp	r4, r3
 800528c:	d062      	beq.n	8005354 <gd32_uart_begin+0x170>
 800528e:	2340      	movs	r3, #64	; 0x40
 8005290:	2203      	movs	r2, #3
 8005292:	2118      	movs	r1, #24
 8005294:	483c      	ldr	r0, [pc, #240]	; (8005388 <gd32_uart_begin+0x1a4>)
 8005296:	f7ff fafd 	bl	8004894 <gpio_init>
 800529a:	2104      	movs	r1, #4
 800529c:	483a      	ldr	r0, [pc, #232]	; (8005388 <gd32_uart_begin+0x1a4>)
 800529e:	2380      	movs	r3, #128	; 0x80
 80052a0:	2203      	movs	r2, #3
 80052a2:	f7ff faf7 	bl	8004894 <gpio_init>
 80052a6:	2101      	movs	r1, #1
 80052a8:	2004      	movs	r0, #4
 80052aa:	f7ff fb4d 	bl	8004948 <gpio_pin_remap_config>
 80052ae:	4620      	mov	r0, r4
 80052b0:	f7ff fd26 	bl	8004d00 <usart_deinit>
 80052b4:	68e3      	ldr	r3, [r4, #12]
 80052b6:	4639      	mov	r1, r7
 80052b8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80052bc:	4620      	mov	r0, r4
 80052be:	60e3      	str	r3, [r4, #12]
 80052c0:	f7ff fd5e 	bl	8004d80 <usart_baudrate_set>
 80052c4:	f1a5 0309 	sub.w	r3, r5, #9
 80052c8:	4259      	negs	r1, r3
 80052ca:	4159      	adcs	r1, r3
 80052cc:	4620      	mov	r0, r4
 80052ce:	0309      	lsls	r1, r1, #12
 80052d0:	f7ff fd86 	bl	8004de0 <usart_word_length_set>
 80052d4:	9906      	ldr	r1, [sp, #24]
 80052d6:	4620      	mov	r0, r4
 80052d8:	1e8a      	subs	r2, r1, #2
 80052da:	4251      	negs	r1, r2
 80052dc:	4151      	adcs	r1, r2
 80052de:	0349      	lsls	r1, r1, #13
 80052e0:	f7ff fd86 	bl	8004df0 <usart_stop_bit_set>
 80052e4:	2e01      	cmp	r6, #1
 80052e6:	d041      	beq.n	800536c <gd32_uart_begin+0x188>
 80052e8:	2e02      	cmp	r6, #2
 80052ea:	d142      	bne.n	8005372 <gd32_uart_begin+0x18e>
 80052ec:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80052f0:	4620      	mov	r0, r4
 80052f2:	f7ff fd6d 	bl	8004dd0 <usart_parity_config>
 80052f6:	2100      	movs	r1, #0
 80052f8:	4620      	mov	r0, r4
 80052fa:	f7ff fd8d 	bl	8004e18 <usart_hardware_flow_rts_config>
 80052fe:	2100      	movs	r1, #0
 8005300:	4620      	mov	r0, r4
 8005302:	f7ff fd8f 	bl	8004e24 <usart_hardware_flow_cts_config>
 8005306:	2104      	movs	r1, #4
 8005308:	4620      	mov	r0, r4
 800530a:	f7ff fd7f 	bl	8004e0c <usart_receive_config>
 800530e:	2108      	movs	r1, #8
 8005310:	4620      	mov	r0, r4
 8005312:	f7ff fd75 	bl	8004e00 <usart_transmit_config>
 8005316:	68e3      	ldr	r3, [r4, #12]
 8005318:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800531c:	60e3      	str	r3, [r4, #12]
 800531e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005320:	2304      	movs	r3, #4
 8005322:	2203      	movs	r2, #3
 8005324:	2118      	movs	r1, #24
 8005326:	4819      	ldr	r0, [pc, #100]	; (800538c <gd32_uart_begin+0x1a8>)
 8005328:	f7ff fab4 	bl	8004894 <gpio_init>
 800532c:	2308      	movs	r3, #8
 800532e:	2203      	movs	r2, #3
 8005330:	2104      	movs	r1, #4
 8005332:	4816      	ldr	r0, [pc, #88]	; (800538c <gd32_uart_begin+0x1a8>)
 8005334:	f7ff faae 	bl	8004894 <gpio_init>
 8005338:	e7b9      	b.n	80052ae <gd32_uart_begin+0xca>
 800533a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800533e:	2203      	movs	r2, #3
 8005340:	2118      	movs	r1, #24
 8005342:	480f      	ldr	r0, [pc, #60]	; (8005380 <gd32_uart_begin+0x19c>)
 8005344:	f7ff faa6 	bl	8004894 <gpio_init>
 8005348:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800534c:	2203      	movs	r2, #3
 800534e:	2104      	movs	r1, #4
 8005350:	480b      	ldr	r0, [pc, #44]	; (8005380 <gd32_uart_begin+0x19c>)
 8005352:	e7ef      	b.n	8005334 <gd32_uart_begin+0x150>
 8005354:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005358:	2203      	movs	r2, #3
 800535a:	2118      	movs	r1, #24
 800535c:	4808      	ldr	r0, [pc, #32]	; (8005380 <gd32_uart_begin+0x19c>)
 800535e:	f7ff fa99 	bl	8004894 <gpio_init>
 8005362:	2304      	movs	r3, #4
 8005364:	2203      	movs	r2, #3
 8005366:	4619      	mov	r1, r3
 8005368:	4809      	ldr	r0, [pc, #36]	; (8005390 <gd32_uart_begin+0x1ac>)
 800536a:	e7e3      	b.n	8005334 <gd32_uart_begin+0x150>
 800536c:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8005370:	e7be      	b.n	80052f0 <gd32_uart_begin+0x10c>
 8005372:	2100      	movs	r1, #0
 8005374:	e7bc      	b.n	80052f0 <gd32_uart_begin+0x10c>
 8005376:	bf00      	nop
 8005378:	40004c00 	andmi	r4, r0, r0, lsl #24
 800537c:	40005000 	andmi	r5, r0, r0
 8005380:	40011000 	andmi	r1, r1, r0
 8005384:	00140010 	andseq	r0, r4, r0, lsl r0
 8005388:	40010c00 	andmi	r0, r1, r0, lsl #24
 800538c:	40010800 	andmi	r0, r1, r0, lsl #16
 8005390:	40011400 	andmi	r1, r1, r0, lsl #8

08005394 <mac_address_get(unsigned char*)>:
 8005394:	2102      	movs	r1, #2
 8005396:	4a07      	ldr	r2, [pc, #28]	; (80053b4 <mac_address_get(unsigned char*)+0x20>)
 8005398:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 800539c:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 80053a0:	7001      	strb	r1, [r0, #0]
 80053a2:	7042      	strb	r2, [r0, #1]
 80053a4:	0e1a      	lsrs	r2, r3, #24
 80053a6:	7082      	strb	r2, [r0, #2]
 80053a8:	0c1a      	lsrs	r2, r3, #16
 80053aa:	70c2      	strb	r2, [r0, #3]
 80053ac:	0a1a      	lsrs	r2, r3, #8
 80053ae:	7102      	strb	r2, [r0, #4]
 80053b0:	7143      	strb	r3, [r0, #5]
 80053b2:	4770      	bx	lr
 80053b4:	1ffff000 	svcne	0x00fff000

080053b8 <micros_init()>:
 80053b8:	4770      	bx	lr
	...

080053bc <udelay_init()>:
 80053bc:	4a07      	ldr	r2, [pc, #28]	; (80053dc <udelay_init()+0x20>)
 80053be:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 80053c2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80053c6:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 80053ca:	2200      	movs	r2, #0
 80053cc:	4b04      	ldr	r3, [pc, #16]	; (80053e0 <udelay_init()+0x24>)
 80053ce:	605a      	str	r2, [r3, #4]
 80053d0:	681a      	ldr	r2, [r3, #0]
 80053d2:	f042 0201 	orr.w	r2, r2, #1
 80053d6:	601a      	str	r2, [r3, #0]
 80053d8:	4770      	bx	lr
 80053da:	bf00      	nop
 80053dc:	e000ed00 	and	lr, r0, r0, lsl #26
 80053e0:	e0001000 	and	r1, r0, r0

080053e4 <udelay(unsigned int, unsigned int)>:
 80053e4:	236c      	movs	r3, #108	; 0x6c
 80053e6:	b530      	push	{r4, r5, lr}
 80053e8:	4358      	muls	r0, r3
 80053ea:	b909      	cbnz	r1, 80053f0 <udelay(unsigned int, unsigned int)+0xc>
 80053ec:	4b08      	ldr	r3, [pc, #32]	; (8005410 <udelay(unsigned int, unsigned int)+0x2c>)
 80053ee:	6859      	ldr	r1, [r3, #4]
 80053f0:	2300      	movs	r3, #0
 80053f2:	4c07      	ldr	r4, [pc, #28]	; (8005410 <udelay(unsigned int, unsigned int)+0x2c>)
 80053f4:	6862      	ldr	r2, [r4, #4]
 80053f6:	4291      	cmp	r1, r2
 80053f8:	d0fc      	beq.n	80053f4 <udelay(unsigned int, unsigned int)+0x10>
 80053fa:	bf2a      	itet	cs
 80053fc:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8005400:	189b      	addcc	r3, r3, r2
 8005402:	195b      	addcs	r3, r3, r5
 8005404:	1a5b      	subs	r3, r3, r1
 8005406:	4283      	cmp	r3, r0
 8005408:	d300      	bcc.n	800540c <udelay(unsigned int, unsigned int)+0x28>
 800540a:	bd30      	pop	{r4, r5, pc}
 800540c:	4611      	mov	r1, r2
 800540e:	e7f1      	b.n	80053f4 <udelay(unsigned int, unsigned int)+0x10>
 8005410:	e0001000 	and	r1, r0, r0

08005414 <adc_mode_config>:
 8005414:	4b06      	ldr	r3, [pc, #24]	; (8005430 <adc_mode_config+0x1c>)
 8005416:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 800541a:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 800541e:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8005422:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8005426:	4302      	orrs	r2, r0
 8005428:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 800542c:	4770      	bx	lr
 800542e:	bf00      	nop
 8005430:	40012000 	andmi	r2, r1, r0

08005434 <adc_special_function_config>:
 8005434:	b510      	push	{r4, lr}
 8005436:	f401 7380 	and.w	r3, r1, #256	; 0x100
 800543a:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 800543e:	f001 0102 	and.w	r1, r1, #2
 8005442:	b17a      	cbz	r2, 8005464 <adc_special_function_config+0x30>
 8005444:	b11b      	cbz	r3, 800544e <adc_special_function_config+0x1a>
 8005446:	6843      	ldr	r3, [r0, #4]
 8005448:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800544c:	6043      	str	r3, [r0, #4]
 800544e:	b11c      	cbz	r4, 8005458 <adc_special_function_config+0x24>
 8005450:	6843      	ldr	r3, [r0, #4]
 8005452:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8005456:	6043      	str	r3, [r0, #4]
 8005458:	b119      	cbz	r1, 8005462 <adc_special_function_config+0x2e>
 800545a:	6883      	ldr	r3, [r0, #8]
 800545c:	f043 0302 	orr.w	r3, r3, #2
 8005460:	6083      	str	r3, [r0, #8]
 8005462:	bd10      	pop	{r4, pc}
 8005464:	b11b      	cbz	r3, 800546e <adc_special_function_config+0x3a>
 8005466:	6843      	ldr	r3, [r0, #4]
 8005468:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800546c:	6043      	str	r3, [r0, #4]
 800546e:	b11c      	cbz	r4, 8005478 <adc_special_function_config+0x44>
 8005470:	6843      	ldr	r3, [r0, #4]
 8005472:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8005476:	6043      	str	r3, [r0, #4]
 8005478:	2900      	cmp	r1, #0
 800547a:	d0f2      	beq.n	8005462 <adc_special_function_config+0x2e>
 800547c:	6883      	ldr	r3, [r0, #8]
 800547e:	f023 0302 	bic.w	r3, r3, #2
 8005482:	e7ed      	b.n	8005460 <adc_special_function_config+0x2c>

08005484 <adc_data_alignment_config>:
 8005484:	6883      	ldr	r3, [r0, #8]
 8005486:	b119      	cbz	r1, 8005490 <adc_data_alignment_config+0xc>
 8005488:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800548c:	6083      	str	r3, [r0, #8]
 800548e:	4770      	bx	lr
 8005490:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005494:	e7fa      	b.n	800548c <adc_data_alignment_config+0x8>

08005496 <adc_enable>:
 8005496:	6883      	ldr	r3, [r0, #8]
 8005498:	07db      	lsls	r3, r3, #31
 800549a:	bf5e      	ittt	pl
 800549c:	6883      	ldrpl	r3, [r0, #8]
 800549e:	f043 0301 	orrpl.w	r3, r3, #1
 80054a2:	6083      	strpl	r3, [r0, #8]
 80054a4:	4770      	bx	lr

080054a6 <adc_calibration_enable>:
 80054a6:	6883      	ldr	r3, [r0, #8]
 80054a8:	f100 0208 	add.w	r2, r0, #8
 80054ac:	f043 0308 	orr.w	r3, r3, #8
 80054b0:	6083      	str	r3, [r0, #8]
 80054b2:	6813      	ldr	r3, [r2, #0]
 80054b4:	0719      	lsls	r1, r3, #28
 80054b6:	d4fc      	bmi.n	80054b2 <adc_calibration_enable+0xc>
 80054b8:	6883      	ldr	r3, [r0, #8]
 80054ba:	f043 0304 	orr.w	r3, r3, #4
 80054be:	6083      	str	r3, [r0, #8]
 80054c0:	6813      	ldr	r3, [r2, #0]
 80054c2:	075b      	lsls	r3, r3, #29
 80054c4:	d4fc      	bmi.n	80054c0 <adc_calibration_enable+0x1a>
 80054c6:	4770      	bx	lr

080054c8 <adc_tempsensor_vrefint_enable>:
 80054c8:	4a03      	ldr	r2, [pc, #12]	; (80054d8 <adc_tempsensor_vrefint_enable+0x10>)
 80054ca:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 80054ce:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80054d2:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 80054d6:	4770      	bx	lr
 80054d8:	40012000 	andmi	r2, r1, r0

080054dc <adc_channel_length_config>:
 80054dc:	2901      	cmp	r1, #1
 80054de:	d002      	beq.n	80054e6 <adc_channel_length_config+0xa>
 80054e0:	2902      	cmp	r1, #2
 80054e2:	d00c      	beq.n	80054fe <adc_channel_length_config+0x22>
 80054e4:	4770      	bx	lr
 80054e6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80054e8:	3a01      	subs	r2, #1
 80054ea:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80054ee:	62c3      	str	r3, [r0, #44]	; 0x2c
 80054f0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80054f2:	0512      	lsls	r2, r2, #20
 80054f4:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 80054f8:	431a      	orrs	r2, r3
 80054fa:	62c2      	str	r2, [r0, #44]	; 0x2c
 80054fc:	4770      	bx	lr
 80054fe:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8005500:	3a01      	subs	r2, #1
 8005502:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8005506:	6383      	str	r3, [r0, #56]	; 0x38
 8005508:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800550a:	0512      	lsls	r2, r2, #20
 800550c:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8005510:	431a      	orrs	r2, r3
 8005512:	6382      	str	r2, [r0, #56]	; 0x38
 8005514:	4770      	bx	lr

08005516 <adc_inserted_channel_config>:
 8005516:	b530      	push	{r4, r5, lr}
 8005518:	6b84      	ldr	r4, [r0, #56]	; 0x38
 800551a:	6b85      	ldr	r5, [r0, #56]	; 0x38
 800551c:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8005520:	1a61      	subs	r1, r4, r1
 8005522:	f06f 0404 	mvn.w	r4, #4
 8005526:	4361      	muls	r1, r4
 8005528:	241f      	movs	r4, #31
 800552a:	310f      	adds	r1, #15
 800552c:	408c      	lsls	r4, r1
 800552e:	ea25 0504 	bic.w	r5, r5, r4
 8005532:	fa02 f101 	lsl.w	r1, r2, r1
 8005536:	4329      	orrs	r1, r5
 8005538:	2a09      	cmp	r2, #9
 800553a:	6381      	str	r1, [r0, #56]	; 0x38
 800553c:	d80b      	bhi.n	8005556 <adc_inserted_channel_config+0x40>
 800553e:	2407      	movs	r4, #7
 8005540:	6901      	ldr	r1, [r0, #16]
 8005542:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8005546:	4094      	lsls	r4, r2
 8005548:	ea21 0104 	bic.w	r1, r1, r4
 800554c:	fa03 f202 	lsl.w	r2, r3, r2
 8005550:	430a      	orrs	r2, r1
 8005552:	6102      	str	r2, [r0, #16]
 8005554:	bd30      	pop	{r4, r5, pc}
 8005556:	2a11      	cmp	r2, #17
 8005558:	d8fc      	bhi.n	8005554 <adc_inserted_channel_config+0x3e>
 800555a:	2407      	movs	r4, #7
 800555c:	3a0a      	subs	r2, #10
 800555e:	68c1      	ldr	r1, [r0, #12]
 8005560:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8005564:	4094      	lsls	r4, r2
 8005566:	ea21 0104 	bic.w	r1, r1, r4
 800556a:	4093      	lsls	r3, r2
 800556c:	430b      	orrs	r3, r1
 800556e:	60c3      	str	r3, [r0, #12]
 8005570:	e7f0      	b.n	8005554 <adc_inserted_channel_config+0x3e>

08005572 <adc_external_trigger_source_config>:
 8005572:	2901      	cmp	r1, #1
 8005574:	d002      	beq.n	800557c <adc_external_trigger_source_config+0xa>
 8005576:	2902      	cmp	r1, #2
 8005578:	d008      	beq.n	800558c <adc_external_trigger_source_config+0x1a>
 800557a:	4770      	bx	lr
 800557c:	6883      	ldr	r3, [r0, #8]
 800557e:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8005582:	6083      	str	r3, [r0, #8]
 8005584:	6883      	ldr	r3, [r0, #8]
 8005586:	4313      	orrs	r3, r2
 8005588:	6083      	str	r3, [r0, #8]
 800558a:	4770      	bx	lr
 800558c:	6883      	ldr	r3, [r0, #8]
 800558e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005592:	e7f6      	b.n	8005582 <adc_external_trigger_source_config+0x10>

08005594 <adc_external_trigger_config>:
 8005594:	f001 0301 	and.w	r3, r1, #1
 8005598:	f001 0102 	and.w	r1, r1, #2
 800559c:	b152      	cbz	r2, 80055b4 <adc_external_trigger_config+0x20>
 800559e:	b11b      	cbz	r3, 80055a8 <adc_external_trigger_config+0x14>
 80055a0:	6883      	ldr	r3, [r0, #8]
 80055a2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80055a6:	6083      	str	r3, [r0, #8]
 80055a8:	b119      	cbz	r1, 80055b2 <adc_external_trigger_config+0x1e>
 80055aa:	6883      	ldr	r3, [r0, #8]
 80055ac:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80055b0:	6083      	str	r3, [r0, #8]
 80055b2:	4770      	bx	lr
 80055b4:	b11b      	cbz	r3, 80055be <adc_external_trigger_config+0x2a>
 80055b6:	6883      	ldr	r3, [r0, #8]
 80055b8:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80055bc:	6083      	str	r3, [r0, #8]
 80055be:	2900      	cmp	r1, #0
 80055c0:	d0f7      	beq.n	80055b2 <adc_external_trigger_config+0x1e>
 80055c2:	6883      	ldr	r3, [r0, #8]
 80055c4:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80055c8:	e7f2      	b.n	80055b0 <adc_external_trigger_config+0x1c>

080055ca <adc_software_trigger_enable>:
 80055ca:	07ca      	lsls	r2, r1, #31
 80055cc:	bf42      	ittt	mi
 80055ce:	6883      	ldrmi	r3, [r0, #8]
 80055d0:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 80055d4:	6083      	strmi	r3, [r0, #8]
 80055d6:	078b      	lsls	r3, r1, #30
 80055d8:	bf42      	ittt	mi
 80055da:	6883      	ldrmi	r3, [r0, #8]
 80055dc:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 80055e0:	6083      	strmi	r3, [r0, #8]
 80055e2:	4770      	bx	lr

080055e4 <i2c_clock_config>:
 80055e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80055e6:	4605      	mov	r5, r0
 80055e8:	2002      	movs	r0, #2
 80055ea:	460c      	mov	r4, r1
 80055ec:	4617      	mov	r7, r2
 80055ee:	f7ff fa21 	bl	8004a34 <rcu_clock_freq_get>
 80055f2:	4603      	mov	r3, r0
 80055f4:	4828      	ldr	r0, [pc, #160]	; (8005698 <i2c_clock_config+0xb4>)
 80055f6:	4a29      	ldr	r2, [pc, #164]	; (800569c <i2c_clock_config+0xb8>)
 80055f8:	fbb3 f0f0 	udiv	r0, r3, r0
 80055fc:	4293      	cmp	r3, r2
 80055fe:	bf34      	ite	cc
 8005600:	4601      	movcc	r1, r0
 8005602:	2136      	movcs	r1, #54	; 0x36
 8005604:	686e      	ldr	r6, [r5, #4]
 8005606:	4a26      	ldr	r2, [pc, #152]	; (80056a0 <i2c_clock_config+0xbc>)
 8005608:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 800560c:	430e      	orrs	r6, r1
 800560e:	4294      	cmp	r4, r2
 8005610:	606e      	str	r6, [r5, #4]
 8005612:	d816      	bhi.n	8005642 <i2c_clock_config+0x5e>
 8005614:	3001      	adds	r0, #1
 8005616:	2835      	cmp	r0, #53	; 0x35
 8005618:	d90d      	bls.n	8005636 <i2c_clock_config+0x52>
 800561a:	2236      	movs	r2, #54	; 0x36
 800561c:	622a      	str	r2, [r5, #32]
 800561e:	0064      	lsls	r4, r4, #1
 8005620:	fbb3 f4f4 	udiv	r4, r3, r4
 8005624:	2c04      	cmp	r4, #4
 8005626:	bf38      	it	cc
 8005628:	2404      	movcc	r4, #4
 800562a:	69ea      	ldr	r2, [r5, #28]
 800562c:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8005630:	4314      	orrs	r4, r2
 8005632:	61ec      	str	r4, [r5, #28]
 8005634:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005636:	2802      	cmp	r0, #2
 8005638:	d801      	bhi.n	800563e <i2c_clock_config+0x5a>
 800563a:	2202      	movs	r2, #2
 800563c:	e7ee      	b.n	800561c <i2c_clock_config+0x38>
 800563e:	6228      	str	r0, [r5, #32]
 8005640:	e7ed      	b.n	800561e <i2c_clock_config+0x3a>
 8005642:	4a18      	ldr	r2, [pc, #96]	; (80056a4 <i2c_clock_config+0xc0>)
 8005644:	4294      	cmp	r4, r2
 8005646:	d8f5      	bhi.n	8005634 <i2c_clock_config+0x50>
 8005648:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800564c:	4351      	muls	r1, r2
 800564e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005652:	fbb1 f1f2 	udiv	r1, r1, r2
 8005656:	3101      	adds	r1, #1
 8005658:	6229      	str	r1, [r5, #32]
 800565a:	b9a7      	cbnz	r7, 8005686 <i2c_clock_config+0xa2>
 800565c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8005660:	fbb3 f4f4 	udiv	r4, r3, r4
 8005664:	69eb      	ldr	r3, [r5, #28]
 8005666:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800566a:	61eb      	str	r3, [r5, #28]
 800566c:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8005670:	b90b      	cbnz	r3, 8005676 <i2c_clock_config+0x92>
 8005672:	f044 0401 	orr.w	r4, r4, #1
 8005676:	69eb      	ldr	r3, [r5, #28]
 8005678:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800567c:	61eb      	str	r3, [r5, #28]
 800567e:	69eb      	ldr	r3, [r5, #28]
 8005680:	4323      	orrs	r3, r4
 8005682:	61eb      	str	r3, [r5, #28]
 8005684:	e7d6      	b.n	8005634 <i2c_clock_config+0x50>
 8005686:	2219      	movs	r2, #25
 8005688:	4354      	muls	r4, r2
 800568a:	fbb3 f4f4 	udiv	r4, r3, r4
 800568e:	69eb      	ldr	r3, [r5, #28]
 8005690:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005694:	e7e9      	b.n	800566a <i2c_clock_config+0x86>
 8005696:	bf00      	nop
 8005698:	000f4240 	andeq	r4, pc, r0, asr #4
 800569c:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 80056a0:	000186a0 	andeq	r8, r1, r0, lsr #13
 80056a4:	00061a80 	andeq	r1, r6, r0, lsl #21

080056a8 <i2c_ack_config>:
 80056a8:	6803      	ldr	r3, [r0, #0]
 80056aa:	2901      	cmp	r1, #1
 80056ac:	bf0c      	ite	eq
 80056ae:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80056b2:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 80056b6:	6003      	str	r3, [r0, #0]
 80056b8:	4770      	bx	lr

080056ba <i2c_ackpos_config>:
 80056ba:	6803      	ldr	r3, [r0, #0]
 80056bc:	b919      	cbnz	r1, 80056c6 <i2c_ackpos_config+0xc>
 80056be:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80056c2:	6003      	str	r3, [r0, #0]
 80056c4:	4770      	bx	lr
 80056c6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80056ca:	e7fa      	b.n	80056c2 <i2c_ackpos_config+0x8>

080056cc <i2c_master_addressing>:
 80056cc:	3202      	adds	r2, #2
 80056ce:	bf0c      	ite	eq
 80056d0:	f021 0101 	biceq.w	r1, r1, #1
 80056d4:	f041 0101 	orrne.w	r1, r1, #1
 80056d8:	6101      	str	r1, [r0, #16]
 80056da:	4770      	bx	lr

080056dc <i2c_enable>:
 80056dc:	6803      	ldr	r3, [r0, #0]
 80056de:	f043 0301 	orr.w	r3, r3, #1
 80056e2:	6003      	str	r3, [r0, #0]
 80056e4:	4770      	bx	lr

080056e6 <i2c_start_on_bus>:
 80056e6:	6803      	ldr	r3, [r0, #0]
 80056e8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80056ec:	6003      	str	r3, [r0, #0]
 80056ee:	4770      	bx	lr

080056f0 <i2c_stop_on_bus>:
 80056f0:	6803      	ldr	r3, [r0, #0]
 80056f2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80056f6:	6003      	str	r3, [r0, #0]
 80056f8:	4770      	bx	lr

080056fa <i2c_data_transmit>:
 80056fa:	6101      	str	r1, [r0, #16]
 80056fc:	4770      	bx	lr

080056fe <i2c_data_receive>:
 80056fe:	6900      	ldr	r0, [r0, #16]
 8005700:	b2c0      	uxtb	r0, r0
 8005702:	4770      	bx	lr

08005704 <i2c_flag_get>:
 8005704:	098b      	lsrs	r3, r1, #6
 8005706:	581a      	ldr	r2, [r3, r0]
 8005708:	2301      	movs	r3, #1
 800570a:	f001 011f 	and.w	r1, r1, #31
 800570e:	408b      	lsls	r3, r1
 8005710:	4213      	tst	r3, r2
 8005712:	bf14      	ite	ne
 8005714:	2001      	movne	r0, #1
 8005716:	2000      	moveq	r0, #0
 8005718:	4770      	bx	lr

0800571a <i2c_flag_clear>:
 800571a:	f240 5301 	movw	r3, #1281	; 0x501
 800571e:	4299      	cmp	r1, r3
 8005720:	b510      	push	{r4, lr}
 8005722:	d102      	bne.n	800572a <i2c_flag_clear+0x10>
 8005724:	6943      	ldr	r3, [r0, #20]
 8005726:	6983      	ldr	r3, [r0, #24]
 8005728:	bd10      	pop	{r4, pc}
 800572a:	2201      	movs	r2, #1
 800572c:	098c      	lsrs	r4, r1, #6
 800572e:	5823      	ldr	r3, [r4, r0]
 8005730:	f001 011f 	and.w	r1, r1, #31
 8005734:	408a      	lsls	r2, r1
 8005736:	ea23 0302 	bic.w	r3, r3, r2
 800573a:	5023      	str	r3, [r4, r0]
 800573c:	e7f4      	b.n	8005728 <i2c_flag_clear+0xe>
	...

Disassembly of section .rodata:

08005740 <deviceLabel-0x100>:
	...
 8005748:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 800574c:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8005750:	00000000 	andeq	r0, r0, r0
 8005754:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8005758:	20636544 	rsbcs	r6, r3, r4, asr #10
 800575c:	32203731 	eorcc	r3, r0, #12845056	; 0xc40000
 8005760:	00323230 	eorseq	r3, r2, r0, lsr r2
 8005764:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8005768:	33303146 	teqcc	r0, #-2147483631	; 0x80000011
 800576c:	5b004352 	blpl	80164bc <__exidx_end+0x104a0>
 8005770:	5d732556 	cfldr64pl	mvdx2, [r3, #-344]!	; 0xfffffea8
 8005774:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8005778:	706d6f43 	rsbvc	r6, sp, r3, asr #30
 800577c:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 8005780:	206e6f20 	rsbcs	r6, lr, r0, lsr #30
 8005784:	61207325 			; <UNDEFINED> instruction: 0x61207325
 8005788:	73252074 			; <UNDEFINED> instruction: 0x73252074
 800578c:	3531000a 	ldrcc	r0, [r1, #-10]!
 8005790:	3a33343a 	bcc	8cd2880 <__exidx_end+0xccc864>
 8005794:	52003732 	andpl	r3, r0, #13107200	; 0xc80000
 8005798:	43204d44 			; <UNDEFINED> instruction: 0x43204d44
 800579c:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 80057a0:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 80057a4:	69772072 	ldmdbvs	r7!, {r1, r4, r5, r6, sp}^
 80057a8:	55206874 	strpl	r6, [r0, #-2164]!	; 0xfffff78c
 80057ac:	5b204253 	blpl	8816100 <__exidx_end+0x8100e4>
 80057b0:	706d6f43 	rsbvc	r6, sp, r3, asr #30
 80057b4:	62697461 	rsbvs	r7, r9, #1627389952	; 0x61000000
 80057b8:	7720656c 	strvc	r6, [r0, -ip, ror #10]!
 80057bc:	20687469 	rsbcs	r7, r8, r9, ror #8
 80057c0:	74746e45 	ldrbtvc	r6, [r4], #-3653	; 0xfffff1bb
 80057c4:	55206365 	strpl	r6, [r0, #-869]!	; 0xfffffc9b
 80057c8:	50204253 	eorpl	r4, r0, r3, asr r2
 80057cc:	70206f72 	eorvc	r6, r0, r2, ror pc
 80057d0:	6f746f72 	svcvs	0x00746f72
 80057d4:	5d6c6f63 	stclpl	15, cr6, [ip, #-396]!	; 0xfffffe74
 80057d8:	6957202c 	ldmdbvs	r7, {r2, r3, r5, sp}^
 80057dc:	74656764 	strbtvc	r6, [r5], #-1892	; 0xfffff89c
 80057e0:	646f6d20 	strbtvs	r6, [pc], #-3360	; 80057e8 <_etext+0xa8>
 80057e4:	203a2065 	eorscs	r2, sl, r5, rrx
 80057e8:	28206425 	stmdacs	r0!, {r0, r2, r5, sl, sp, lr}
 80057ec:	0a297325 	beq	8a62488 <__exidx_end+0xa5c46c>
 80057f0:	76654400 	strbtvc	r4, [r5], -r0, lsl #8
 80057f4:	20656369 	rsbcs	r6, r5, r9, ror #6
 80057f8:	44495555 	strbmi	r5, [r9], #-1365	; 0xfffffaab
 80057fc:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8005800:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 8005804:	3a78322e 	bcc	9e120c4 <__exidx_end+0x1e0c0a8>
 8005808:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 800580c:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8005810:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8005814:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8005818:	4c00202c 	stcmi	0, cr2, [r0], {44}	; 0x2c
 800581c:	6c656261 	sfmvs	f6, 2, [r5], #-388	; 0xfffffe7c
 8005820:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8005824:	0a732a2e 	beq	9cd00e4 <__exidx_end+0x1cca0c8>
 8005828:	33444700 	movtcc	r4, #18176	; 0x4700
 800582c:	30314632 	eorscc	r4, r1, r2, lsr r6
 8005830:	20435233 	subcs	r5, r3, r3, lsr r2
 8005834:	20584d44 	subscs	r4, r8, r4, asr #26
 8005838:	20425355 	subcs	r5, r2, r5, asr r3
 800583c:	006f7250 	rsbeq	r7, pc, r0, asr r2	; <UNPREDICTABLE>

08005840 <deviceLabel>:
 8005840:	08005829 	stmdaeq	r0, {r0, r3, r5, fp, ip, lr}
 8005844:	00000016 	andeq	r0, r0, r6, lsl r0

08005848 <SOFTWARE_VERSION>:
 8005848:	00352e31 	eorseq	r2, r5, r1, lsr lr

0800584c <widget_mode_names>:
 800584c:	5f584d44 	svcpl	0x00584d44
 8005850:	004d4452 	subeq	r4, sp, r2, asr r4
 8005854:	00000000 	andeq	r0, r0, r0
 8005858:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8005864:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8005870:	5f4d4452 	svcpl	0x004d4452
 8005874:	46494e53 			; <UNDEFINED> instruction: 0x46494e53
 8005878:	00524546 	subseq	r4, r2, r6, asr #10
 800587c:	5f544547 	svcpl	0x00544547
 8005880:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 8005884:	505f5445 	subspl	r5, pc, r5, asr #8
 8005888:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 800588c:	45525f53 	ldrbmi	r5, [r2, #-3923]	; 0xfffff0ad
 8005890:	00594c50 	subseq	r4, r9, r0, asr ip
 8005894:	5f544553 	svcpl	0x00544553
 8005898:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 800589c:	505f5445 	subspl	r5, pc, r5, asr #8
 80058a0:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 80058a4:	45520053 	ldrbmi	r0, [r2, #-83]	; 0xffffffad
 80058a8:	56494543 	strbpl	r4, [r9], -r3, asr #10
 80058ac:	445f4445 	ldrbmi	r4, [pc], #-1093	; 80058b4 <widget_mode_names+0x68>
 80058b0:	505f584d 	subspl	r5, pc, sp, asr #16
 80058b4:	454b4341 	strbmi	r4, [fp, #-833]	; 0xfffffcbf
 80058b8:	65530054 	ldrbvs	r0, [r3, #-84]	; 0xffffffac
 80058bc:	4420646e 	strtmi	r6, [r0], #-1134	; 0xfffffb92
 80058c0:	6420584d 	strtvs	r5, [r0], #-2125	; 0xfffff7b3
 80058c4:	20617461 	rsbcs	r7, r1, r1, ror #8
 80058c8:	48206f74 	stmdami	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}
 80058cc:	2c54534f 	mrrccs	3, 4, r5, r4, cr15
 80058d0:	00642520 	rsbeq	r2, r4, r0, lsr #10
 80058d4:	5054554f 	subspl	r5, r4, pc, asr #10
 80058d8:	4f5f5455 	svcmi	0x005f5455
 80058dc:	5f594c4e 	svcpl	0x00594c4e
 80058e0:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 80058e4:	584d445f 	stmdapl	sp, {r0, r1, r2, r3, r4, r6, sl, lr}^
 80058e8:	4341505f 	movtmi	r5, #4191	; 0x105f
 80058ec:	5f54454b 	svcpl	0x0054454b
 80058f0:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 80058f4:	00545345 	subseq	r5, r4, r5, asr #6
 80058f8:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 80058fc:	4d44525f 	sfmmi	f5, 2, [r4, #-380]	; 0xfffffe84
 8005900:	4341505f 	movtmi	r5, #4191	; 0x105f
 8005904:	5f54454b 	svcpl	0x0054454b
 8005908:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 800590c:	00545345 	subseq	r5, r4, r5, asr #6
 8005910:	45434552 	strbmi	r4, [r3, #-1362]	; 0xfffffaae
 8005914:	5f455649 	svcpl	0x00455649
 8005918:	5f584d44 	svcpl	0x00584d44
 800591c:	435f4e4f 	cmpmi	pc, #1264	; 0x4f0
 8005920:	474e4148 	strbmi	r4, [lr, -r8, asr #2]
 8005924:	45520045 	ldrbmi	r0, [r2, #-69]	; 0xffffffbb
 8005928:	56494543 	strbpl	r4, [r9], -r3, asr #10
 800592c:	445f4445 	ldrbmi	r4, [pc], #-1093	; 8005934 <widget_mode_names+0xe8>
 8005930:	435f584d 	cmpmi	pc, #5046272	; 0x4d0000
 8005934:	545f534f 	ldrbpl	r5, [pc], #-847	; 800593c <widget_mode_names+0xf0>
 8005938:	00455059 	subeq	r5, r5, r9, asr r0
 800593c:	746e6553 	strbtvc	r6, [lr], #-1363	; 0xfffffaad
 8005940:	61686320 	cmnvs	r8, r0, lsr #6
 8005944:	6465676e 	strbtvs	r6, [r5], #-1902	; 0xfffff892
 8005948:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 800594c:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 8005950:	6f742061 	svcvs	0x00742061
 8005954:	534f4820 	movtpl	r4, #63520	; 0xf820
 8005958:	45530054 	ldrbmi	r0, [r3, #-84]	; 0xffffffac
 800595c:	525f444e 	subspl	r4, pc, #1308622848	; 0x4e000000
 8005960:	445f4d44 	ldrbmi	r4, [pc], #-3396	; 8005968 <widget_mode_names+0x11c>
 8005964:	4f435349 	svcmi	0x00435349
 8005968:	59524556 	ldmdbpl	r2, {r1, r2, r4, r6, r8, sl, lr}^
 800596c:	5145525f 	cmppl	r5, pc, asr r2
 8005970:	54534555 	ldrbpl	r4, [r3], #-1365	; 0xfffffaab
 8005974:	6e655300 	cdpvs	3, 6, cr5, cr5, cr0, {0}
 8005978:	44522064 	ldrbmi	r2, [r2], #-100	; 0xffffff9c
 800597c:	6164204d 	cmnvs	r4, sp, asr #32
 8005980:	74206174 	strtvc	r6, [r0], #-372	; 0xfffffe8c
 8005984:	4f48206f 	svcmi	0x0048206f
 8005988:	202c5453 	eorcs	r5, ip, r3, asr r4
 800598c:	64253a6c 	strtvs	r3, [r5], #-2668	; 0xfffff594
 8005990:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 8005994:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
 8005998:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
 800599c:	43455200 	movtmi	r5, #20992	; 0x5200
 80059a0:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 80059a4:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 80059a8:	41505f4d 	cmpmi	r0, sp, asr #30
 80059ac:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 80059b0:	3a435320 	bcc	90da638 <__exidx_end+0x10d461c>
 80059b4:	43437830 	movtmi	r7, #14384	; 0x3830
 80059b8:	43455200 	movtmi	r5, #20992	; 0x5200
 80059bc:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 80059c0:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 80059c4:	41505f4d 	cmpmi	r0, sp, asr #30
 80059c8:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 80059cc:	3a435320 	bcc	90da654 <__exidx_end+0x10d4638>
 80059d0:	45467830 	strbmi	r7, [r6, #-2096]	; 0xfffff7d0
 80059d4:	4e414d00 	cdpmi	13, 4, cr4, cr1, cr0, {0}
 80059d8:	43414655 	movtmi	r4, #5717	; 0x1655
 80059dc:	45525554 	ldrbmi	r5, [r2, #-1364]	; 0xfffffaac
 80059e0:	414c5f52 	cmpmi	ip, r2, asr pc
 80059e4:	004c4542 	subeq	r4, ip, r2, asr #10
 80059e8:	5f544547 	svcpl	0x00544547
 80059ec:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 80059f0:	4e5f5445 	cdpmi	4, 5, cr5, cr15, cr5, {2}
 80059f4:	5f454d41 	svcpl	0x00454d41
 80059f8:	4542414c 	strbmi	r4, [r2, #-332]	; 0xfffffeb4
 80059fc:	3a4c004c 	bcc	9305b34 <__exidx_end+0x12ffb18>
 8005a00:	253a6425 	ldrcs	r6, [sl, #-1061]!	; 0xfffffbdb
 8005a04:	64252864 	strtvs	r2, [r5], #-2148	; 0xfffff79c
 8005a08:	 	ldmdbvs	r7!, {r0, r3, r5}^

08005a0a <WidgetParamsConst::WIDGET_MODE>:
 8005a0a:	67646977 			; <UNDEFINED> instruction: 0x67646977
 8005a0e:	6d5f7465 	cfldrdvs	mvd7, [pc, #-404]	; 8005880 <widget_mode_names+0x34>
 8005a12:	0065646f 	rsbeq	r6, r5, pc, ror #8

08005a16 <WidgetParamsConst::DMXUSBPRO_MAB_TIME>:
 8005a16:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 8005a1a:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8005a1e:	616d5f6f 	cmnvs	sp, pc, ror #30
 8005a22:	69745f62 	ldmdbvs	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 8005a26:	 	strvs	r6, [r0], #-1389	; 0xfffffa93

08005a29 <WidgetParamsConst::DMXUSBPRO_BREAK_TIME>:
 8005a29:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 8005a2d:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8005a31:	72625f6f 	rsbvc	r5, r2, #444	; 0x1bc
 8005a35:	5f6b6165 	svcpl	0x006b6165
 8005a39:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

08005a3e <WidgetParamsConst::DMXUSBPRO_REFRESH_RATE>:
 8005a3e:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 8005a42:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8005a46:	65725f6f 	ldrbvs	r5, [r2, #-3951]!	; 0xfffff091
 8005a4a:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 8005a4e:	61725f68 	cmnvs	r2, r8, ror #30
 8005a52:	 	strvs	r6, [r0], #-1396	; 0xfffffa8c

08005a55 <WidgetParamsConst::DMX_SEND_TO_HOST_THROTTLE>:
 8005a55:	5f786d64 	svcpl	0x00786d64
 8005a59:	646e6573 	strbtvs	r6, [lr], #-1395	; 0xfffffa8d
 8005a5d:	5f6f745f 	svcpl	0x006f745f
 8005a61:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8005a65:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
 8005a69:	6c74746f 	cfldrdvs	mvd7, [r4], #-444	; 0xfffffe44
 8005a6d:	46210065 	strtmi	r0, [r1], -r5, rrx
 8005a71:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8005a75:	43202164 			; <UNDEFINED> instruction: 0x43202164
 8005a79:	6f6e6e61 	svcvs	0x006e6e61
 8005a7d:	65732074 	ldrbvs	r2, [r3, #-116]!	; 0xffffff8c
 8005a81:	7420646e 	strtvc	r6, [r0], #-1134	; 0xfffffb92
 8005a85:	6f68206f 	svcvs	0x0068206f
 8005a89:	53007473 	movwpl	r7, #1139	; 0x473
 8005a8d:	20646e65 	rsbcs	r6, r4, r5, ror #28
 8005a91:	20584d44 	subscs	r4, r8, r4, asr #26
 8005a95:	61746164 	cmnvs	r4, r4, ror #2
 8005a99:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 8005a9d:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
 8005aa1:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8005aa5:	53006425 	movwpl	r6, #1061	; 0x425
 8005aa9:	20646e65 	rsbcs	r6, r4, r5, ror #28
 8005aad:	204d4452 	subcs	r4, sp, r2, asr r4
 8005ab1:	61746164 	cmnvs	r4, r4, ror #2
 8005ab5:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 8005ab9:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
	...

08005abe <RDMConst::MANUFACTURER_ID>:
 8005abe:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

08005ac0 <RDMConst::MANUFACTURER_NAME>:
 8005ac0:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8005ac4:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 8005ac8:	6f2e7777 	svcvs	0x002e7777
 8005acc:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 8005ad0:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 8005ad4:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8005ad8:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8005adc:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8005ae0:	2f2f3a73 	svccs	0x002f3a73
 8005ae4:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 8005ae8:	786d642d 	stmdavc	sp!, {r0, r2, r3, r5, sl, sp, lr}^
 8005aec:	67726f2e 	ldrbvs	r6, [r2, -lr, lsr #30]!
	...

08005af1 <DEVICE_LABEL>:
 8005af1:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8005af5:	33303146 	teqcc	r0, #-2147483631	; 0x80000011
 8005af9:	52204352 	eorpl	r4, r0, #1207959553	; 0x48000001
 8005afd:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 8005b01:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8005b05:	6f6c0065 	svcvs	0x006c0065
 8005b09:	 	andvs	r0, r0, r0

08005b0c <s_aStorSize>:
 8005b0c:	00000060 	andeq	r0, r0, r0, rrx
 8005b10:	00000090 	muleq	r0, r0, r0
 8005b14:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b18:	00000040 	andeq	r0, r0, r0, asr #32
 8005b1c:	00000060 	andeq	r0, r0, r0, rrx
 8005b20:	00000040 	andeq	r0, r0, r0, asr #32
 8005b24:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b28:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b2c:	000001e0 	andeq	r0, r0, r0, ror #3
 8005b30:	00000040 	andeq	r0, r0, r0, asr #32
 8005b34:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b38:	00000060 	andeq	r0, r0, r0, rrx
 8005b3c:	00000030 	andeq	r0, r0, r0, lsr r0
 8005b40:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b44:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8005b48:	00000030 	andeq	r0, r0, r0, lsr r0
 8005b4c:	00000040 	andeq	r0, r0, r0, asr #32
 8005b50:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b54:	00000060 	andeq	r0, r0, r0, rrx
 8005b58:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b5c:	00000400 	andeq	r0, r0, r0, lsl #8
 8005b60:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b64:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b68:	00000040 	andeq	r0, r0, r0, asr #32
 8005b6c:	00000060 	andeq	r0, r0, r0, rrx
 8005b70:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b74:	00000020 	andeq	r0, r0, r0, lsr #32
 8005b78:	000000c0 	andeq	r0, r0, r0, asr #1

08005b7c <vtable for StoreRDMDevice>:
	...
 8005b84:	08003797 	stmdaeq	r0, {r0, r1, r2, r4, r7, r8, r9, sl, ip, sp}
 8005b88:	08003805 	stmdaeq	r0, {r0, r2, fp, ip, sp}
 8005b8c:	0800379d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, sl, ip, sp}
 8005b90:	08003819 	stmdaeq	r0, {r0, r3, r4, fp, ip, sp}
 8005b94:	080037c1 	stmdaeq	r0, {r0, r6, r7, r8, r9, sl, ip, sp}
 8005b98:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8005b9c:	00000000 	andeq	r0, r0, r0
 8005ba0:	08003799 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, sl, ip, sp}
 8005ba4:	08003811 	stmdaeq	r0, {r0, r4, fp, ip, sp}
 8005ba8:	080037fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp}

08005bac <vtable for StoreWidget>:
	...
 8005bb4:	08003855 	stmdaeq	r0, {r0, r2, r4, r6, fp, ip, sp}
 8005bb8:	08003881 	stmdaeq	r0, {r0, r7, fp, ip, sp}
 8005bbc:	0800385d 	stmdaeq	r0, {r0, r2, r3, r4, r6, fp, ip, sp}
 8005bc0:	08003895 	stmdaeq	r0, {r0, r2, r4, r7, fp, ip, sp}
 8005bc4:	0800255d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, sl, sp}
 8005bc8:	08002591 	stmdaeq	r0, {r0, r4, r7, r8, sl, sp}
 8005bcc:	080025c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, sl, sp}
 8005bd0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8005bd4:	00000000 	andeq	r0, r0, r0
 8005bd8:	08003857 	stmdaeq	r0, {r0, r1, r2, r4, r6, fp, ip, sp}
 8005bdc:	0800388d 	stmdaeq	r0, {r0, r2, r3, r7, fp, ip, sp}
 8005be0:	08002589 	stmdaeq	r0, {r0, r3, r7, r8, sl, sp}
 8005be4:	080025bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, sl, sp}
 8005be8:	080025f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, sp}
 8005bec:	3a434d46 	bcc	90d910c <__exidx_end+0x10d30f0>
 8005bf0:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8005bf4:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8005bf8:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8005bfc:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8005c00:	6f742068 	svcvs	0x00742068
 8005c04:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8005c08:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8005c0c:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8005c10:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8005c14:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8005c18:	6f4e000a 	svcvs	0x004e000a
 8005c1c:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8005c20:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8005c24:	756f6620 	strbvc	r6, [pc, #-1568]!	; 800560c <i2c_clock_config+0x28>
 8005c28:	5300646e 	movwpl	r6, #1134	; 0x46e
 8005c2c:	30313148 	eorscc	r3, r1, r8, asr #2
 8005c30:	53530036 	cmppl	r3, #54	; 0x36
 8005c34:	30333144 	eorscc	r3, r3, r4, asr #2
 8005c38:	73250036 			; <UNDEFINED> instruction: 0x73250036
 8005c3c:	64252820 	strtvs	r2, [r5], #-2080	; 0xfffff7e0
 8005c40:	2964252c 	stmdbcs	r4!, {r2, r3, r5, r8, sl, sp}^
 8005c44:	aa40000a 	bge	9005c74 <__exidx_end+0xfffc58>
 8005c48:	00eeaaee 	rsceq	sl, lr, lr, ror #21

08005c4c <_OledFont8x6>:
 8005c4c:	00000040 	andeq	r0, r0, r0, asr #32
 8005c50:	40000000 	andmi	r0, r0, r0
 8005c54:	005f0000 	subseq	r0, pc, r0
 8005c58:	00400000 	subeq	r0, r0, r0
 8005c5c:	00070007 	andeq	r0, r7, r7
 8005c60:	7f144000 	svcvc	0x00144000
 8005c64:	00147f14 	andseq	r7, r4, r4, lsl pc
 8005c68:	7f2a2440 	svcvc	0x002a2440
 8005c6c:	4000122a 	andmi	r1, r0, sl, lsr #4
 8005c70:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8005c74:	36400062 	strbcc	r0, [r0], -r2, rrx
 8005c78:	50205649 	eorpl	r5, r0, r9, asr #12
 8005c7c:	08004000 	stmdaeq	r0, {lr}
 8005c80:	00000307 	andeq	r0, r0, r7, lsl #6
 8005c84:	221c0040 	andscs	r0, ip, #64	; 0x40
 8005c88:	40000041 	andmi	r0, r0, r1, asr #32
 8005c8c:	1c224100 	stfnes	f4, [r2], #-0
 8005c90:	2a400000 	bcs	9005c98 <__exidx_end+0xfffc7c>
 8005c94:	2a1c7f1c 	bcs	872590c <__exidx_end+0x71f8f0>
 8005c98:	08084000 	stmdaeq	r8, {lr}
 8005c9c:	0008083e 	andeq	r0, r8, lr, lsr r8
 8005ca0:	70800040 	addvc	r0, r0, r0, asr #32
 8005ca4:	40000030 	andmi	r0, r0, r0, lsr r0
 8005ca8:	08080808 	stmdaeq	r8, {r3, fp}
 8005cac:	00400008 	subeq	r0, r0, r8
 8005cb0:	00606000 	rsbeq	r6, r0, r0
 8005cb4:	10204000 	eorne	r4, r0, r0
 8005cb8:	00020408 	andeq	r0, r2, r8, lsl #8
 8005cbc:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8005cc0:	40003e45 	andmi	r3, r0, r5, asr #28
 8005cc4:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8005cc8:	72400000 	subvc	r0, r0, #0
 8005ccc:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8005cd0:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8005cd4:	00334d49 	eorseq	r4, r3, r9, asr #26
 8005cd8:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8005cdc:	4000107f 	andmi	r1, r0, pc, ror r0
 8005ce0:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8005ce4:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8005ce8:	3149494a 	cmpcc	r9, sl, asr #18
 8005cec:	21414000 	mrscs	r4, (UNDEF: 65)
 8005cf0:	00070911 	andeq	r0, r7, r1, lsl r9
 8005cf4:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8005cf8:	40003649 	andmi	r3, r0, r9, asr #12
 8005cfc:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8005d00:	0040001e 	subeq	r0, r0, lr, lsl r0
 8005d04:	00001400 	andeq	r1, r0, r0, lsl #8
 8005d08:	40004000 	andmi	r4, r0, r0
 8005d0c:	00000034 	andeq	r0, r0, r4, lsr r0
 8005d10:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8005d14:	40004122 	andmi	r4, r0, r2, lsr #2
 8005d18:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8005d1c:	00400014 	subeq	r0, r0, r4, lsl r0
 8005d20:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8005d24:	01024000 	mrseq	r4, (UNDEF: 2)
 8005d28:	00060959 	andeq	r0, r6, r9, asr r9
 8005d2c:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8005d30:	40004e59 	andmi	r4, r0, r9, asr lr
 8005d34:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8005d38:	7f40007c 	svcvc	0x0040007c
 8005d3c:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8005d40:	413e4000 	teqmi	lr, r0
 8005d44:	00224141 	eoreq	r4, r2, r1, asr #2
 8005d48:	41417f40 	cmpmi	r1, r0, asr #30
 8005d4c:	40003e41 	andmi	r3, r0, r1, asr #28
 8005d50:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8005d54:	7f400041 	svcvc	0x00400041
 8005d58:	01090909 	tsteq	r9, r9, lsl #18
 8005d5c:	413e4000 	teqmi	lr, r0
 8005d60:	00735141 	rsbseq	r5, r3, r1, asr #2
 8005d64:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8005d68:	40007f08 	andmi	r7, r0, r8, lsl #30
 8005d6c:	417f4100 	cmnmi	pc, r0, lsl #2
 8005d70:	20400000 	subcs	r0, r0, r0
 8005d74:	013f4140 	teqeq	pc, r0, asr #2
 8005d78:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8005d7c:	00412214 	subeq	r2, r1, r4, lsl r2
 8005d80:	40407f40 	submi	r7, r0, r0, asr #30
 8005d84:	40004040 	andmi	r4, r0, r0, asr #32
 8005d88:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8005d8c:	7f40007f 	svcvc	0x0040007f
 8005d90:	7f100804 	svcvc	0x00100804
 8005d94:	413e4000 	teqmi	lr, r0
 8005d98:	003e4141 	eorseq	r4, lr, r1, asr #2
 8005d9c:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8005da0:	40000609 	andmi	r0, r0, r9, lsl #12
 8005da4:	2151413e 	cmpcs	r1, lr, lsr r1
 8005da8:	7f40005e 	svcvc	0x0040005e
 8005dac:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8005db0:	49264000 	stmdbmi	r6!, {lr}
 8005db4:	00324949 	eorseq	r4, r2, r9, asr #18
 8005db8:	7f010340 	svcvc	0x00010340
 8005dbc:	40000301 	andmi	r0, r0, r1, lsl #6
 8005dc0:	4040403f 	submi	r4, r0, pc, lsr r0
 8005dc4:	1f40003f 	svcne	0x0040003f
 8005dc8:	1f204020 	svcne	0x00204020
 8005dcc:	403f4000 	eorsmi	r4, pc, r0
 8005dd0:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8005dd4:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8005dd8:	40006314 	andmi	r6, r0, r4, lsl r3
 8005ddc:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8005de0:	61400003 	cmpvs	r0, r3
 8005de4:	434d4959 	movtmi	r4, #55641	; 0xd959
 8005de8:	7f004000 	svcvc	0x00004000
 8005dec:	00414141 	subeq	r4, r1, r1, asr #2
 8005df0:	08040240 	stmdaeq	r4, {r6, r9}
 8005df4:	40002010 	andmi	r2, r0, r0, lsl r0
 8005df8:	41414100 	mrsmi	r4, (UNDEF: 81)
 8005dfc:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8005e00:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8005e04:	40404000 	submi	r4, r0, r0
 8005e08:	00404040 	subeq	r4, r0, r0, asr #32
 8005e0c:	07030040 	streq	r0, [r3, -r0, asr #32]
 8005e10:	40000008 	andmi	r0, r0, r8
 8005e14:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8005e18:	7f400040 	svcvc	0x00400040
 8005e1c:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8005e20:	44384000 	ldrtmi	r4, [r8], #-0
 8005e24:	00284444 	eoreq	r4, r8, r4, asr #8
 8005e28:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8005e2c:	40007f28 	andmi	r7, r0, r8, lsr #30
 8005e30:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8005e34:	00400018 	subeq	r0, r0, r8, lsl r0
 8005e38:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8005e3c:	a4184000 	ldrge	r4, [r8], #-0
 8005e40:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8005e44:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8005e48:	40007804 	andmi	r7, r0, r4, lsl #16
 8005e4c:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8005e50:	20400000 	subcs	r0, r0, r0
 8005e54:	003d4040 	eorseq	r4, sp, r0, asr #32
 8005e58:	107f4000 	rsbsne	r4, pc, r0
 8005e5c:	00004428 	andeq	r4, r0, r8, lsr #8
 8005e60:	7f410040 	svcvc	0x00410040
 8005e64:	40000040 	andmi	r0, r0, r0, asr #32
 8005e68:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8005e6c:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8005e70:	78040408 	stmdavc	r4, {r3, sl}
 8005e74:	44384000 	ldrtmi	r4, [r8], #-0
 8005e78:	00384444 	eorseq	r4, r8, r4, asr #8
 8005e7c:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8005e80:	40001824 	andmi	r1, r0, r4, lsr #16
 8005e84:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8005e88:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8005e8c:	08040408 	stmdaeq	r4, {r3, sl}
 8005e90:	54484000 	strbpl	r4, [r8], #-0
 8005e94:	00245454 	eoreq	r5, r4, r4, asr r4
 8005e98:	3f040440 	svccc	0x00040440
 8005e9c:	40002444 	andmi	r2, r0, r4, asr #8
 8005ea0:	2040403c 	subcs	r4, r0, ip, lsr r0
 8005ea4:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8005ea8:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8005eac:	403c4000 	eorsmi	r4, ip, r0
 8005eb0:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8005eb4:	10284440 	eorne	r4, r8, r0, asr #8
 8005eb8:	40004428 	andmi	r4, r0, r8, lsr #8
 8005ebc:	9090904c 	addsls	r9, r0, ip, asr #32
 8005ec0:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8005ec4:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8005ec8:	08004000 	stmdaeq	r0, {lr}
 8005ecc:	00004136 	andeq	r4, r0, r6, lsr r1
 8005ed0:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8005ed4:	40000000 	andmi	r0, r0, r0
 8005ed8:	08364100 	ldmdaeq	r6!, {r8, lr}
 8005edc:	02400000 	subeq	r0, r0, #0
 8005ee0:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8005ee4:	263c4000 	ldrtcs	r4, [ip], -r0
 8005ee8:	003c2623 	eorseq	r2, ip, r3, lsr #12

08005eec <oled_128x32_init>:
 8005eec:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8005ef0:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8005ef4:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8005ef8:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8005efc:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8005f00:	a6a440db 	ssatge	r4, #5, fp, asr #1

08005f04 <oled_128x64_init>:
 8005f04:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8005f08:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8005f0c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8005f10:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8005f14:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8005f18:	a6a440db 	ssatge	r4, #5, fp, asr #1

08005f1c <vtable for Ssd1306>:
	...
 8005f24:	08003d89 	stmdaeq	r0, {r0, r3, r7, r8, sl, fp, ip, sp}
 8005f28:	08003db5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, fp, ip, sp}
 8005f2c:	080040c5 	stmdaeq	r0, {r0, r2, r6, r7, lr}
 8005f30:	0800404d 	stmdaeq	r0, {r0, r2, r3, r6, lr}
 8005f34:	08003f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp}
 8005f38:	08003dd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, sl, fp, ip, sp}
 8005f3c:	08003dfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8005f40:	08003eef 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r7, r9, sl, fp, ip, sp}
 8005f44:	08003ea9 	stmdaeq	r0, {r0, r3, r5, r7, r9, sl, fp, ip, sp}
 8005f48:	08003d8b 	stmdaeq	r0, {r0, r1, r3, r7, r8, sl, fp, ip, sp}
 8005f4c:	08003f55 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, fp, ip, sp}
 8005f50:	08003f61 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, fp, ip, sp}
 8005f54:	08003f7b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp}
 8005f58:	08003d8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, sl, fp, ip, sp}
 8005f5c:	37335b1b 			; <UNDEFINED> instruction: 0x37335b1b
 8005f60:	5b1b006d 	blpl	86c611c <__exidx_end+0x6c0100>
 8005f64:	006d3034 	rsbeq	r3, sp, r4, lsr r0
 8005f68:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005f6c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005f70:	000a7525 	andeq	r7, sl, r5, lsr #10
 8005f74:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005f78:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005f7c:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8005f80:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8005f84:	6b636f6c 	blvs	98e1d3c <__exidx_end+0x18dbd20>
 8005f88:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8005f8c:	000a7469 	andeq	r7, sl, r9, ror #8
 8005f90:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005f94:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005f98:	6f6c4270 	svcvs	0x006c4270
 8005f9c:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8005fa0:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8005fa4:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8005fa8:	7a697320 	bvc	9a62c30 <__exidx_end+0x1a5cc14>
 8005fac:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8005fb0:	6164202c 	cmnvs	r4, ip, lsr #32
 8005fb4:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8005fb8:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8005fbc:	3a656572 	bcc	995f58c <__exidx_end+0x1959570>
 8005fc0:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8005fc4:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8005fc8:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8005fcc:	203d2072 	eorscs	r2, sp, r2, ror r0
 8005fd0:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8005fd4:	6f6c4270 	svcvs	0x006c4270
 8005fd8:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8005fdc:	0a702520 	beq	9c0f464 <__exidx_end+0x1c09448>
 8005fe0:	00000000 	andeq	r0, r0, r0

08005fe4 <days_of_month>:
 8005fe4:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005fe8:	0000001c 	andeq	r0, r0, ip, lsl r0
 8005fec:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005ff0:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005ff4:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005ff8:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005ffc:	0000001f 	andeq	r0, r0, pc, lsl r0
 8006000:	0000001f 	andeq	r0, r0, pc, lsl r0
 8006004:	0000001e 	andeq	r0, r0, lr, lsl r0
 8006008:	0000001f 	andeq	r0, r0, pc, lsl r0
 800600c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8006010:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08006014 <__exidx_start>:
 8006014:	7fffb778 	svcvc	0x00ffb778
 8006018:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

0800601c <.ARM.attributes>:
 800601c:	00002e41 	andeq	r2, r0, r1, asr #28
 8006020:	61656100 	cmnvs	r5, r0, lsl #2
 8006024:	01006962 	tsteq	r0, r2, ror #18
 8006028:	00000024 	andeq	r0, r0, r4, lsr #32
 800602c:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8006030:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8006034:	0600334d 	streq	r3, [r0], -sp, asr #6
 8006038:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 800603c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8006040:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8006044:	1a011803 	bne	804c058 <__exidx_end+0x4603c>
 8006048:	Address 0x0000000008006048 is out of bounds.


Disassembly of section .data:

20000000 <WidgetConfiguration::s_nMabTime>:
20000000:	 	andeq	r0, r4, #16384	; 0x4000

20000001 <WidgetConfiguration::s_nBreakTime>:
20000001:	 	stmdacs	r2, {r0, r3, sl}

20000002 <WidgetConfiguration::s_nFirmwareLsb>:
20000002:	 			; <UNDEFINED> instruction: 0x01280204

20000003 <WidgetConfiguration::s_nFirmwareMsb>:
20000003:	 	andeq	r2, r1, r2, lsl #16

20000004 <WidgetConfiguration::s_nRefreshRate>:
20000004:	 	andeq	r0, r0, r8, lsr #2

20000005 <WidgetConfiguration::s_aDeviceTypeId>:
20000005:	 	stmdage	r0, {r0}

20000008 <s_nDmxTransmitPeriod>:
20000008:	000061a8 	andeq	r6, r0, r8, lsr #3

2000000c <s_nDmxTransmitMabTime>:
2000000c:	0000000c 	andeq	r0, r0, ip

20000010 <s_nDmxTransmitBreakTime>:
20000010:	0000005c 	andeq	r0, r0, ip, asr r0

20000014 <next_block>:
20000014:	2000a000 	andcs	sl, r0, r0

20000018 <s_block_bucket>:
20000018:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000028:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000038:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000048:	00000060 	andeq	r0, r0, r0, rrx
	...
20000058:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000068:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000078:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000088:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000098:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a8:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b8:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c8:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e8 <SystemCoreClock>:
200000e8:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000f0 <outptr>:
200000f0:	00000000 	andeq	r0, r0, r0

200000f4 <Widget::s_pThis>:
200000f4:	00000000 	andeq	r0, r0, r0

200000f8 <s_RxBuffer>:
	...

20000308 <s_TxBuffer>:
	...

2000050c <sv_PortState>:
2000050c:	00000000 	andeq	r0, r0, r0

20000510 <s_RxDmxPrevious>:
	...

20000714 <sv_nRxDmxPackets>:
	...

20000724 <sv_nUartsSending>:
20000724:	00000000 	andeq	r0, r0, r0

20000728 <Dmx::s_pThis>:
20000728:	00000000 	andeq	r0, r0, r0

2000072c <gv_RdmDataReceiveEnd>:
2000072c:	00000000 	andeq	r0, r0, r0

20000730 <Network::s_pThis>:
20000730:	00000000 	andeq	r0, r0, r0

20000734 <ConfigStore::s_nWaitMillis>:
20000734:	00000000 	andeq	r0, r0, r0

20000738 <ConfigStore::s_SpiFlashData>:
	...

20001738 <ConfigStore::s_nStartAddress>:
20001738:	00000000 	andeq	r0, r0, r0

2000173c <ConfigStore::s_bHaveFlashChip>:
2000173c:	00000000 	andeq	r0, r0, r0

20001740 <ConfigStore::s_nSpiFlashStoreSize>:
20001740:	00000000 	andeq	r0, r0, r0

20001744 <ConfigStore::s_State>:
20001744:	00000000 	andeq	r0, r0, r0

20001748 <ConfigStore::s_pThis>:
20001748:	00000000 	andeq	r0, r0, r0

2000174c <ConfigStore::s_bIsNew>:
2000174c:	00000000 	andeq	r0, r0, r0

20001750 <StoreRDMDevice::s_pThis>:
20001750:	00000000 	andeq	r0, r0, r0

20001754 <StoreWidget::s_pThis>:
20001754:	00000000 	andeq	r0, r0, r0

20001758 <FlashCode::s_pThis>:
20001758:	00000000 	andeq	r0, r0, r0

2000175c <flashcode::s_nAddress>:
2000175c:	00000000 	andeq	r0, r0, r0

20001760 <flashcode::s_State>:
20001760:	00000000 	andeq	r0, r0, r0

20001764 <flashcode::s_nPage>:
20001764:	00000000 	andeq	r0, r0, r0

20001768 <flashcode::s_pData>:
20001768:	00000000 	andeq	r0, r0, r0

2000176c <flashcode::s_isBank0>:
2000176c:	00000000 	andeq	r0, r0, r0

20001770 <flashcode::s_nLength>:
20001770:	00000000 	andeq	r0, r0, r0

20001774 <Display::s_pThis>:
20001774:	00000000 	andeq	r0, r0, r0

20001778 <_ClearBuffer>:
	...

20001800 <Ssd1306::s_pThis>:
20001800:	00000000 	andeq	r0, r0, r0

20001804 <LedBlink::s_pThis>:
20001804:	00000000 	andeq	r0, r0, r0

20001808 <Hardware::s_pThis>:
	...

20001810 <s_micros>:
	...

20001818 <set_timer>:
20001818:	00000000 	andeq	r0, r0, r0

2000181c <s_nSysTickMillis>:
2000181c:	00000000 	andeq	r0, r0, r0

20001820 <s_nAddress>:
20001820:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

2000a000 <heap_low>:
	...

Disassembly of section .stack:

2000b000 <_sp-0x1000>:
	...
