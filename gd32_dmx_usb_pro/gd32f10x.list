
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08000000 <__gVectors>:
 8000000:	2000c000 	andcs	ip, r0, r0
 8000004:	08000ff9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8000008:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 800000c:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000010:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000014:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000018:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
	...
 800002c:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000030:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 800003c:	08004181 	stmdaeq	r0, {r0, r7, r8, lr}
 8000040:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000044:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000048:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 800004c:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000050:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000054:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000058:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 800005c:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000060:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000064:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000068:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 800006c:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000070:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000074:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000078:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 800007c:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000080:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000084:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000088:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 800008c:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000090:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000094:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000098:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 800009c:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000a0:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000a4:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000a8:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000ac:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000b0:	0800252d 	stmdaeq	r0, {r0, r2, r3, r5, r8, sl, sp}
 80000b4:	080025cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, sl, sp}
 80000b8:	08002611 	stmdaeq	r0, {r0, r4, r9, sl, sp}
 80000bc:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000c0:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000c4:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000c8:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000cc:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000d0:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000d4:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000d8:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000dc:	08002335 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, sp}
 80000e0:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000e4:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000e8:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000ec:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000f0:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000f4:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 80000f8:	00000000 	andeq	r0, r0, r0
 80000fc:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000100:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000104:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000108:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 800010c:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000110:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000114:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000118:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 800011c:	08002631 	stmdaeq	r0, {r0, r4, r5, r9, sl, sp}
 8000120:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000124:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 8000128:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}
 800012c:	08001045 	stmdaeq	r0, {r0, r2, r6, ip}

Disassembly of section .text:

08000130 <console_init>:
 8000130:	b508      	push	{r3, lr}
 8000132:	f003 ffb5 	bl	80040a0 <uart0_init>
 8000136:	4804      	ldr	r0, [pc, #16]	; (8000148 <console_init+0x18>)
 8000138:	f003 ffe2 	bl	8004100 <uart0_puts>
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <console_init+0x1c>)
 800013e:	f003 ffdf 	bl	8004100 <uart0_puts>
 8000142:	2000      	movs	r0, #0
 8000144:	bd08      	pop	{r3, pc}
 8000146:	bf00      	nop
 8000148:	08005b30 	stmdaeq	r0, {r4, r5, r8, r9, fp, ip, lr}
 800014c:	08005b36 	stmdaeq	r0, {r1, r2, r4, r5, r8, r9, fp, ip, lr}

08000150 <__aeabi_uldivmod>:
 8000150:	b953      	cbnz	r3, 8000168 <__aeabi_uldivmod+0x18>
 8000152:	b94a      	cbnz	r2, 8000168 <__aeabi_uldivmod+0x18>
 8000154:	2900      	cmp	r1, #0
 8000156:	bf08      	it	eq
 8000158:	2800      	cmpeq	r0, #0
 800015a:	bf1c      	itt	ne
 800015c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000160:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000164:	f000 b976 	b.w	8000454 <__aeabi_idiv0>
 8000168:	f1ad 0c08 	sub.w	ip, sp, #8
 800016c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000170:	f000 f806 	bl	8000180 <__udivmoddi4>
 8000174:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000178:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800017c:	b004      	add	sp, #16
 800017e:	4770      	bx	lr

08000180 <__udivmoddi4>:
 8000180:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000184:	9e08      	ldr	r6, [sp, #32]
 8000186:	460d      	mov	r5, r1
 8000188:	4604      	mov	r4, r0
 800018a:	4688      	mov	r8, r1
 800018c:	2b00      	cmp	r3, #0
 800018e:	d14d      	bne.n	800022c <__udivmoddi4+0xac>
 8000190:	428a      	cmp	r2, r1
 8000192:	4694      	mov	ip, r2
 8000194:	d968      	bls.n	8000268 <__udivmoddi4+0xe8>
 8000196:	fab2 f282 	clz	r2, r2
 800019a:	b152      	cbz	r2, 80001b2 <__udivmoddi4+0x32>
 800019c:	fa01 f302 	lsl.w	r3, r1, r2
 80001a0:	f1c2 0120 	rsb	r1, r2, #32
 80001a4:	fa20 f101 	lsr.w	r1, r0, r1
 80001a8:	fa0c fc02 	lsl.w	ip, ip, r2
 80001ac:	ea41 0803 	orr.w	r8, r1, r3
 80001b0:	4094      	lsls	r4, r2
 80001b2:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80001b6:	fbb8 f7f1 	udiv	r7, r8, r1
 80001ba:	fa1f fe8c 	uxth.w	lr, ip
 80001be:	fb01 8817 	mls	r8, r1, r7, r8
 80001c2:	fb07 f00e 	mul.w	r0, r7, lr
 80001c6:	0c23      	lsrs	r3, r4, #16
 80001c8:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80001cc:	4298      	cmp	r0, r3
 80001ce:	d90a      	bls.n	80001e6 <__udivmoddi4+0x66>
 80001d0:	eb1c 0303 	adds.w	r3, ip, r3
 80001d4:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
 80001d8:	f080 811e 	bcs.w	8000418 <__udivmoddi4+0x298>
 80001dc:	4298      	cmp	r0, r3
 80001de:	f240 811b 	bls.w	8000418 <__udivmoddi4+0x298>
 80001e2:	3f02      	subs	r7, #2
 80001e4:	4463      	add	r3, ip
 80001e6:	1a1b      	subs	r3, r3, r0
 80001e8:	fbb3 f0f1 	udiv	r0, r3, r1
 80001ec:	fb01 3310 	mls	r3, r1, r0, r3
 80001f0:	fb00 fe0e 	mul.w	lr, r0, lr
 80001f4:	b2a4      	uxth	r4, r4
 80001f6:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80001fa:	45a6      	cmp	lr, r4
 80001fc:	d90a      	bls.n	8000214 <__udivmoddi4+0x94>
 80001fe:	eb1c 0404 	adds.w	r4, ip, r4
 8000202:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000206:	f080 8109 	bcs.w	800041c <__udivmoddi4+0x29c>
 800020a:	45a6      	cmp	lr, r4
 800020c:	f240 8106 	bls.w	800041c <__udivmoddi4+0x29c>
 8000210:	4464      	add	r4, ip
 8000212:	3802      	subs	r0, #2
 8000214:	2100      	movs	r1, #0
 8000216:	eba4 040e 	sub.w	r4, r4, lr
 800021a:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 800021e:	b11e      	cbz	r6, 8000228 <__udivmoddi4+0xa8>
 8000220:	2300      	movs	r3, #0
 8000222:	40d4      	lsrs	r4, r2
 8000224:	e9c6 4300 	strd	r4, r3, [r6]
 8000228:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800022c:	428b      	cmp	r3, r1
 800022e:	d908      	bls.n	8000242 <__udivmoddi4+0xc2>
 8000230:	2e00      	cmp	r6, #0
 8000232:	f000 80ee 	beq.w	8000412 <__udivmoddi4+0x292>
 8000236:	2100      	movs	r1, #0
 8000238:	e9c6 0500 	strd	r0, r5, [r6]
 800023c:	4608      	mov	r0, r1
 800023e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000242:	fab3 f183 	clz	r1, r3
 8000246:	2900      	cmp	r1, #0
 8000248:	d14a      	bne.n	80002e0 <__udivmoddi4+0x160>
 800024a:	42ab      	cmp	r3, r5
 800024c:	d302      	bcc.n	8000254 <__udivmoddi4+0xd4>
 800024e:	4282      	cmp	r2, r0
 8000250:	f200 80fc 	bhi.w	800044c <__udivmoddi4+0x2cc>
 8000254:	1a84      	subs	r4, r0, r2
 8000256:	eb65 0303 	sbc.w	r3, r5, r3
 800025a:	2001      	movs	r0, #1
 800025c:	4698      	mov	r8, r3
 800025e:	2e00      	cmp	r6, #0
 8000260:	d0e2      	beq.n	8000228 <__udivmoddi4+0xa8>
 8000262:	e9c6 4800 	strd	r4, r8, [r6]
 8000266:	e7df      	b.n	8000228 <__udivmoddi4+0xa8>
 8000268:	b902      	cbnz	r2, 800026c <__udivmoddi4+0xec>
 800026a:	deff      	udf	#255	; 0xff
 800026c:	fab2 f282 	clz	r2, r2
 8000270:	2a00      	cmp	r2, #0
 8000272:	f040 8091 	bne.w	8000398 <__udivmoddi4+0x218>
 8000276:	eba1 000c 	sub.w	r0, r1, ip
 800027a:	2101      	movs	r1, #1
 800027c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000280:	fa1f fe8c 	uxth.w	lr, ip
 8000284:	fbb0 f3f7 	udiv	r3, r0, r7
 8000288:	fb07 0013 	mls	r0, r7, r3, r0
 800028c:	0c25      	lsrs	r5, r4, #16
 800028e:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8000292:	fb0e f003 	mul.w	r0, lr, r3
 8000296:	42a8      	cmp	r0, r5
 8000298:	d908      	bls.n	80002ac <__udivmoddi4+0x12c>
 800029a:	eb1c 0505 	adds.w	r5, ip, r5
 800029e:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 80002a2:	d202      	bcs.n	80002aa <__udivmoddi4+0x12a>
 80002a4:	42a8      	cmp	r0, r5
 80002a6:	f200 80ce 	bhi.w	8000446 <__udivmoddi4+0x2c6>
 80002aa:	4643      	mov	r3, r8
 80002ac:	1a2d      	subs	r5, r5, r0
 80002ae:	fbb5 f0f7 	udiv	r0, r5, r7
 80002b2:	fb07 5510 	mls	r5, r7, r0, r5
 80002b6:	fb0e fe00 	mul.w	lr, lr, r0
 80002ba:	b2a4      	uxth	r4, r4
 80002bc:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80002c0:	45a6      	cmp	lr, r4
 80002c2:	d908      	bls.n	80002d6 <__udivmoddi4+0x156>
 80002c4:	eb1c 0404 	adds.w	r4, ip, r4
 80002c8:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 80002cc:	d202      	bcs.n	80002d4 <__udivmoddi4+0x154>
 80002ce:	45a6      	cmp	lr, r4
 80002d0:	f200 80b6 	bhi.w	8000440 <__udivmoddi4+0x2c0>
 80002d4:	4628      	mov	r0, r5
 80002d6:	eba4 040e 	sub.w	r4, r4, lr
 80002da:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 80002de:	e79e      	b.n	800021e <__udivmoddi4+0x9e>
 80002e0:	f1c1 0720 	rsb	r7, r1, #32
 80002e4:	408b      	lsls	r3, r1
 80002e6:	fa22 fc07 	lsr.w	ip, r2, r7
 80002ea:	ea4c 0c03 	orr.w	ip, ip, r3
 80002ee:	fa25 fa07 	lsr.w	sl, r5, r7
 80002f2:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80002f6:	fbba f8f9 	udiv	r8, sl, r9
 80002fa:	fa20 f307 	lsr.w	r3, r0, r7
 80002fe:	fb09 aa18 	mls	sl, r9, r8, sl
 8000302:	408d      	lsls	r5, r1
 8000304:	fa1f fe8c 	uxth.w	lr, ip
 8000308:	431d      	orrs	r5, r3
 800030a:	fa00 f301 	lsl.w	r3, r0, r1
 800030e:	fb08 f00e 	mul.w	r0, r8, lr
 8000312:	0c2c      	lsrs	r4, r5, #16
 8000314:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8000318:	42a0      	cmp	r0, r4
 800031a:	fa02 f201 	lsl.w	r2, r2, r1
 800031e:	d90b      	bls.n	8000338 <__udivmoddi4+0x1b8>
 8000320:	eb1c 0404 	adds.w	r4, ip, r4
 8000324:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8000328:	f080 8088 	bcs.w	800043c <__udivmoddi4+0x2bc>
 800032c:	42a0      	cmp	r0, r4
 800032e:	f240 8085 	bls.w	800043c <__udivmoddi4+0x2bc>
 8000332:	f1a8 0802 	sub.w	r8, r8, #2
 8000336:	4464      	add	r4, ip
 8000338:	1a24      	subs	r4, r4, r0
 800033a:	fbb4 f0f9 	udiv	r0, r4, r9
 800033e:	fb09 4410 	mls	r4, r9, r0, r4
 8000342:	fb00 fe0e 	mul.w	lr, r0, lr
 8000346:	b2ad      	uxth	r5, r5
 8000348:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 800034c:	45a6      	cmp	lr, r4
 800034e:	d908      	bls.n	8000362 <__udivmoddi4+0x1e2>
 8000350:	eb1c 0404 	adds.w	r4, ip, r4
 8000354:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8000358:	d26c      	bcs.n	8000434 <__udivmoddi4+0x2b4>
 800035a:	45a6      	cmp	lr, r4
 800035c:	d96a      	bls.n	8000434 <__udivmoddi4+0x2b4>
 800035e:	3802      	subs	r0, #2
 8000360:	4464      	add	r4, ip
 8000362:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000366:	fba0 9502 	umull	r9, r5, r0, r2
 800036a:	eba4 040e 	sub.w	r4, r4, lr
 800036e:	42ac      	cmp	r4, r5
 8000370:	46c8      	mov	r8, r9
 8000372:	46ae      	mov	lr, r5
 8000374:	d356      	bcc.n	8000424 <__udivmoddi4+0x2a4>
 8000376:	d053      	beq.n	8000420 <__udivmoddi4+0x2a0>
 8000378:	2e00      	cmp	r6, #0
 800037a:	d069      	beq.n	8000450 <__udivmoddi4+0x2d0>
 800037c:	ebb3 0208 	subs.w	r2, r3, r8
 8000380:	eb64 040e 	sbc.w	r4, r4, lr
 8000384:	fa22 f301 	lsr.w	r3, r2, r1
 8000388:	fa04 f707 	lsl.w	r7, r4, r7
 800038c:	431f      	orrs	r7, r3
 800038e:	40cc      	lsrs	r4, r1
 8000390:	e9c6 7400 	strd	r7, r4, [r6]
 8000394:	2100      	movs	r1, #0
 8000396:	e747      	b.n	8000228 <__udivmoddi4+0xa8>
 8000398:	fa0c fc02 	lsl.w	ip, ip, r2
 800039c:	f1c2 0120 	rsb	r1, r2, #32
 80003a0:	fa25 f301 	lsr.w	r3, r5, r1
 80003a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003a8:	fa20 f101 	lsr.w	r1, r0, r1
 80003ac:	4095      	lsls	r5, r2
 80003ae:	430d      	orrs	r5, r1
 80003b0:	fbb3 f1f7 	udiv	r1, r3, r7
 80003b4:	fb07 3311 	mls	r3, r7, r1, r3
 80003b8:	fa1f fe8c 	uxth.w	lr, ip
 80003bc:	0c28      	lsrs	r0, r5, #16
 80003be:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 80003c2:	fb01 f30e 	mul.w	r3, r1, lr
 80003c6:	4283      	cmp	r3, r0
 80003c8:	fa04 f402 	lsl.w	r4, r4, r2
 80003cc:	d908      	bls.n	80003e0 <__udivmoddi4+0x260>
 80003ce:	eb1c 0000 	adds.w	r0, ip, r0
 80003d2:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 80003d6:	d22f      	bcs.n	8000438 <__udivmoddi4+0x2b8>
 80003d8:	4283      	cmp	r3, r0
 80003da:	d92d      	bls.n	8000438 <__udivmoddi4+0x2b8>
 80003dc:	3902      	subs	r1, #2
 80003de:	4460      	add	r0, ip
 80003e0:	1ac0      	subs	r0, r0, r3
 80003e2:	fbb0 f3f7 	udiv	r3, r0, r7
 80003e6:	fb07 0013 	mls	r0, r7, r3, r0
 80003ea:	b2ad      	uxth	r5, r5
 80003ec:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80003f0:	fb03 f00e 	mul.w	r0, r3, lr
 80003f4:	42a8      	cmp	r0, r5
 80003f6:	d908      	bls.n	800040a <__udivmoddi4+0x28a>
 80003f8:	eb1c 0505 	adds.w	r5, ip, r5
 80003fc:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8000400:	d216      	bcs.n	8000430 <__udivmoddi4+0x2b0>
 8000402:	42a8      	cmp	r0, r5
 8000404:	d914      	bls.n	8000430 <__udivmoddi4+0x2b0>
 8000406:	3b02      	subs	r3, #2
 8000408:	4465      	add	r5, ip
 800040a:	1a28      	subs	r0, r5, r0
 800040c:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000410:	e738      	b.n	8000284 <__udivmoddi4+0x104>
 8000412:	4631      	mov	r1, r6
 8000414:	4630      	mov	r0, r6
 8000416:	e707      	b.n	8000228 <__udivmoddi4+0xa8>
 8000418:	462f      	mov	r7, r5
 800041a:	e6e4      	b.n	80001e6 <__udivmoddi4+0x66>
 800041c:	4618      	mov	r0, r3
 800041e:	e6f9      	b.n	8000214 <__udivmoddi4+0x94>
 8000420:	454b      	cmp	r3, r9
 8000422:	d2a9      	bcs.n	8000378 <__udivmoddi4+0x1f8>
 8000424:	ebb9 0802 	subs.w	r8, r9, r2
 8000428:	eb65 0e0c 	sbc.w	lr, r5, ip
 800042c:	3801      	subs	r0, #1
 800042e:	e7a3      	b.n	8000378 <__udivmoddi4+0x1f8>
 8000430:	4643      	mov	r3, r8
 8000432:	e7ea      	b.n	800040a <__udivmoddi4+0x28a>
 8000434:	4628      	mov	r0, r5
 8000436:	e794      	b.n	8000362 <__udivmoddi4+0x1e2>
 8000438:	4641      	mov	r1, r8
 800043a:	e7d1      	b.n	80003e0 <__udivmoddi4+0x260>
 800043c:	46d0      	mov	r8, sl
 800043e:	e77b      	b.n	8000338 <__udivmoddi4+0x1b8>
 8000440:	4464      	add	r4, ip
 8000442:	3802      	subs	r0, #2
 8000444:	e747      	b.n	80002d6 <__udivmoddi4+0x156>
 8000446:	3b02      	subs	r3, #2
 8000448:	4465      	add	r5, ip
 800044a:	e72f      	b.n	80002ac <__udivmoddi4+0x12c>
 800044c:	4608      	mov	r0, r1
 800044e:	e706      	b.n	800025e <__udivmoddi4+0xde>
 8000450:	4631      	mov	r1, r6
 8000452:	e6e9      	b.n	8000228 <__udivmoddi4+0xa8>

08000454 <__aeabi_idiv0>:
 8000454:	4770      	bx	lr
 8000456:	bf00      	nop

08000458 <__aeabi_fmul>:
 8000458:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800045c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000460:	bf1e      	ittt	ne
 8000462:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000466:	ea92 0f0c 	teqne	r2, ip
 800046a:	ea93 0f0c 	teqne	r3, ip
 800046e:	d06f      	beq.n	8000550 <__aeabi_fmul+0xf8>
 8000470:	441a      	add	r2, r3
 8000472:	ea80 0c01 	eor.w	ip, r0, r1
 8000476:	0240      	lsls	r0, r0, #9
 8000478:	bf18      	it	ne
 800047a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 800047e:	d01e      	beq.n	80004be <__aeabi_fmul+0x66>
 8000480:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000484:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000488:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 800048c:	fba0 3101 	umull	r3, r1, r0, r1
 8000490:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000494:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000498:	bf3e      	ittt	cc
 800049a:	0049      	lslcc	r1, r1, #1
 800049c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80004a0:	005b      	lslcc	r3, r3, #1
 80004a2:	ea40 0001 	orr.w	r0, r0, r1
 80004a6:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80004aa:	2afd      	cmp	r2, #253	; 0xfd
 80004ac:	d81d      	bhi.n	80004ea <__aeabi_fmul+0x92>
 80004ae:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80004b2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80004b6:	bf08      	it	eq
 80004b8:	f020 0001 	biceq.w	r0, r0, #1
 80004bc:	4770      	bx	lr
 80004be:	f090 0f00 	teq	r0, #0
 80004c2:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80004c6:	bf08      	it	eq
 80004c8:	0249      	lsleq	r1, r1, #9
 80004ca:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80004ce:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80004d2:	3a7f      	subs	r2, #127	; 0x7f
 80004d4:	bfc2      	ittt	gt
 80004d6:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80004da:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80004de:	4770      	bxgt	lr
 80004e0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80004e4:	f04f 0300 	mov.w	r3, #0
 80004e8:	3a01      	subs	r2, #1
 80004ea:	dc5d      	bgt.n	80005a8 <__aeabi_fmul+0x150>
 80004ec:	f112 0f19 	cmn.w	r2, #25
 80004f0:	bfdc      	itt	le
 80004f2:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 80004f6:	4770      	bxle	lr
 80004f8:	f1c2 0200 	rsb	r2, r2, #0
 80004fc:	0041      	lsls	r1, r0, #1
 80004fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000502:	f1c2 0220 	rsb	r2, r2, #32
 8000506:	fa00 fc02 	lsl.w	ip, r0, r2
 800050a:	ea5f 0031 	movs.w	r0, r1, rrx
 800050e:	f140 0000 	adc.w	r0, r0, #0
 8000512:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000516:	bf08      	it	eq
 8000518:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 800051c:	4770      	bx	lr
 800051e:	f092 0f00 	teq	r2, #0
 8000522:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000526:	bf02      	ittt	eq
 8000528:	0040      	lsleq	r0, r0, #1
 800052a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800052e:	3a01      	subeq	r2, #1
 8000530:	d0f9      	beq.n	8000526 <__aeabi_fmul+0xce>
 8000532:	ea40 000c 	orr.w	r0, r0, ip
 8000536:	f093 0f00 	teq	r3, #0
 800053a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800053e:	bf02      	ittt	eq
 8000540:	0049      	lsleq	r1, r1, #1
 8000542:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000546:	3b01      	subeq	r3, #1
 8000548:	d0f9      	beq.n	800053e <__aeabi_fmul+0xe6>
 800054a:	ea41 010c 	orr.w	r1, r1, ip
 800054e:	e78f      	b.n	8000470 <__aeabi_fmul+0x18>
 8000550:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000554:	ea92 0f0c 	teq	r2, ip
 8000558:	bf18      	it	ne
 800055a:	ea93 0f0c 	teqne	r3, ip
 800055e:	d00a      	beq.n	8000576 <__aeabi_fmul+0x11e>
 8000560:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000564:	bf18      	it	ne
 8000566:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800056a:	d1d8      	bne.n	800051e <__aeabi_fmul+0xc6>
 800056c:	ea80 0001 	eor.w	r0, r0, r1
 8000570:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000574:	4770      	bx	lr
 8000576:	f090 0f00 	teq	r0, #0
 800057a:	bf17      	itett	ne
 800057c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000580:	4608      	moveq	r0, r1
 8000582:	f091 0f00 	teqne	r1, #0
 8000586:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 800058a:	d014      	beq.n	80005b6 <__aeabi_fmul+0x15e>
 800058c:	ea92 0f0c 	teq	r2, ip
 8000590:	d101      	bne.n	8000596 <__aeabi_fmul+0x13e>
 8000592:	0242      	lsls	r2, r0, #9
 8000594:	d10f      	bne.n	80005b6 <__aeabi_fmul+0x15e>
 8000596:	ea93 0f0c 	teq	r3, ip
 800059a:	d103      	bne.n	80005a4 <__aeabi_fmul+0x14c>
 800059c:	024b      	lsls	r3, r1, #9
 800059e:	bf18      	it	ne
 80005a0:	4608      	movne	r0, r1
 80005a2:	d108      	bne.n	80005b6 <__aeabi_fmul+0x15e>
 80005a4:	ea80 0001 	eor.w	r0, r0, r1
 80005a8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80005ac:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80005b0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80005b4:	4770      	bx	lr
 80005b6:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80005ba:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80005be:	4770      	bx	lr

080005c0 <__aeabi_drsub>:
 80005c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80005c4:	e002      	b.n	80005cc <__adddf3>
 80005c6:	bf00      	nop

080005c8 <__aeabi_dsub>:
 80005c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080005cc <__adddf3>:
 80005cc:	b530      	push	{r4, r5, lr}
 80005ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80005d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80005d6:	ea94 0f05 	teq	r4, r5
 80005da:	bf08      	it	eq
 80005dc:	ea90 0f02 	teqeq	r0, r2
 80005e0:	bf1f      	itttt	ne
 80005e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80005e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80005ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80005ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005f2:	f000 80e2 	beq.w	80007ba <__adddf3+0x1ee>
 80005f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80005fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80005fe:	bfb8      	it	lt
 8000600:	426d      	neglt	r5, r5
 8000602:	dd0c      	ble.n	800061e <__adddf3+0x52>
 8000604:	442c      	add	r4, r5
 8000606:	ea80 0202 	eor.w	r2, r0, r2
 800060a:	ea81 0303 	eor.w	r3, r1, r3
 800060e:	ea82 0000 	eor.w	r0, r2, r0
 8000612:	ea83 0101 	eor.w	r1, r3, r1
 8000616:	ea80 0202 	eor.w	r2, r0, r2
 800061a:	ea81 0303 	eor.w	r3, r1, r3
 800061e:	2d36      	cmp	r5, #54	; 0x36
 8000620:	bf88      	it	hi
 8000622:	bd30      	pophi	{r4, r5, pc}
 8000624:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000628:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800062c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000630:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000634:	d002      	beq.n	800063c <__adddf3+0x70>
 8000636:	4240      	negs	r0, r0
 8000638:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800063c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000640:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000644:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000648:	d002      	beq.n	8000650 <__adddf3+0x84>
 800064a:	4252      	negs	r2, r2
 800064c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000650:	ea94 0f05 	teq	r4, r5
 8000654:	f000 80a7 	beq.w	80007a6 <__adddf3+0x1da>
 8000658:	f1a4 0401 	sub.w	r4, r4, #1
 800065c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000660:	db0d      	blt.n	800067e <__adddf3+0xb2>
 8000662:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000666:	fa22 f205 	lsr.w	r2, r2, r5
 800066a:	1880      	adds	r0, r0, r2
 800066c:	f141 0100 	adc.w	r1, r1, #0
 8000670:	fa03 f20e 	lsl.w	r2, r3, lr
 8000674:	1880      	adds	r0, r0, r2
 8000676:	fa43 f305 	asr.w	r3, r3, r5
 800067a:	4159      	adcs	r1, r3
 800067c:	e00e      	b.n	800069c <__adddf3+0xd0>
 800067e:	f1a5 0520 	sub.w	r5, r5, #32
 8000682:	f10e 0e20 	add.w	lr, lr, #32
 8000686:	2a01      	cmp	r2, #1
 8000688:	fa03 fc0e 	lsl.w	ip, r3, lr
 800068c:	bf28      	it	cs
 800068e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000692:	fa43 f305 	asr.w	r3, r3, r5
 8000696:	18c0      	adds	r0, r0, r3
 8000698:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800069c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80006a0:	d507      	bpl.n	80006b2 <__adddf3+0xe6>
 80006a2:	f04f 0e00 	mov.w	lr, #0
 80006a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80006aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80006ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80006b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80006b6:	d31b      	bcc.n	80006f0 <__adddf3+0x124>
 80006b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80006bc:	d30c      	bcc.n	80006d8 <__adddf3+0x10c>
 80006be:	0849      	lsrs	r1, r1, #1
 80006c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80006c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80006c8:	f104 0401 	add.w	r4, r4, #1
 80006cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80006d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80006d4:	f080 809a 	bcs.w	800080c <__adddf3+0x240>
 80006d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	ea41 0105 	orr.w	r1, r1, r5
 80006ee:	bd30      	pop	{r4, r5, pc}
 80006f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80006f4:	4140      	adcs	r0, r0
 80006f6:	eb41 0101 	adc.w	r1, r1, r1
 80006fa:	3c01      	subs	r4, #1
 80006fc:	bf28      	it	cs
 80006fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000702:	d2e9      	bcs.n	80006d8 <__adddf3+0x10c>
 8000704:	f091 0f00 	teq	r1, #0
 8000708:	bf04      	itt	eq
 800070a:	4601      	moveq	r1, r0
 800070c:	2000      	moveq	r0, #0
 800070e:	fab1 f381 	clz	r3, r1
 8000712:	bf08      	it	eq
 8000714:	3320      	addeq	r3, #32
 8000716:	f1a3 030b 	sub.w	r3, r3, #11
 800071a:	f1b3 0220 	subs.w	r2, r3, #32
 800071e:	da0c      	bge.n	800073a <__adddf3+0x16e>
 8000720:	320c      	adds	r2, #12
 8000722:	dd08      	ble.n	8000736 <__adddf3+0x16a>
 8000724:	f102 0c14 	add.w	ip, r2, #20
 8000728:	f1c2 020c 	rsb	r2, r2, #12
 800072c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000730:	fa21 f102 	lsr.w	r1, r1, r2
 8000734:	e00c      	b.n	8000750 <__adddf3+0x184>
 8000736:	f102 0214 	add.w	r2, r2, #20
 800073a:	bfd8      	it	le
 800073c:	f1c2 0c20 	rsble	ip, r2, #32
 8000740:	fa01 f102 	lsl.w	r1, r1, r2
 8000744:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000748:	bfdc      	itt	le
 800074a:	ea41 010c 	orrle.w	r1, r1, ip
 800074e:	4090      	lslle	r0, r2
 8000750:	1ae4      	subs	r4, r4, r3
 8000752:	bfa2      	ittt	ge
 8000754:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000758:	4329      	orrge	r1, r5
 800075a:	bd30      	popge	{r4, r5, pc}
 800075c:	ea6f 0404 	mvn.w	r4, r4
 8000760:	3c1f      	subs	r4, #31
 8000762:	da1c      	bge.n	800079e <__adddf3+0x1d2>
 8000764:	340c      	adds	r4, #12
 8000766:	dc0e      	bgt.n	8000786 <__adddf3+0x1ba>
 8000768:	f104 0414 	add.w	r4, r4, #20
 800076c:	f1c4 0220 	rsb	r2, r4, #32
 8000770:	fa20 f004 	lsr.w	r0, r0, r4
 8000774:	fa01 f302 	lsl.w	r3, r1, r2
 8000778:	ea40 0003 	orr.w	r0, r0, r3
 800077c:	fa21 f304 	lsr.w	r3, r1, r4
 8000780:	ea45 0103 	orr.w	r1, r5, r3
 8000784:	bd30      	pop	{r4, r5, pc}
 8000786:	f1c4 040c 	rsb	r4, r4, #12
 800078a:	f1c4 0220 	rsb	r2, r4, #32
 800078e:	fa20 f002 	lsr.w	r0, r0, r2
 8000792:	fa01 f304 	lsl.w	r3, r1, r4
 8000796:	ea40 0003 	orr.w	r0, r0, r3
 800079a:	4629      	mov	r1, r5
 800079c:	bd30      	pop	{r4, r5, pc}
 800079e:	fa21 f004 	lsr.w	r0, r1, r4
 80007a2:	4629      	mov	r1, r5
 80007a4:	bd30      	pop	{r4, r5, pc}
 80007a6:	f094 0f00 	teq	r4, #0
 80007aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80007ae:	bf06      	itte	eq
 80007b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80007b4:	3401      	addeq	r4, #1
 80007b6:	3d01      	subne	r5, #1
 80007b8:	e74e      	b.n	8000658 <__adddf3+0x8c>
 80007ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80007be:	bf18      	it	ne
 80007c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80007c4:	d029      	beq.n	800081a <__adddf3+0x24e>
 80007c6:	ea94 0f05 	teq	r4, r5
 80007ca:	bf08      	it	eq
 80007cc:	ea90 0f02 	teqeq	r0, r2
 80007d0:	d005      	beq.n	80007de <__adddf3+0x212>
 80007d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80007d6:	bf04      	itt	eq
 80007d8:	4619      	moveq	r1, r3
 80007da:	4610      	moveq	r0, r2
 80007dc:	bd30      	pop	{r4, r5, pc}
 80007de:	ea91 0f03 	teq	r1, r3
 80007e2:	bf1e      	ittt	ne
 80007e4:	2100      	movne	r1, #0
 80007e6:	2000      	movne	r0, #0
 80007e8:	bd30      	popne	{r4, r5, pc}
 80007ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80007ee:	d105      	bne.n	80007fc <__adddf3+0x230>
 80007f0:	0040      	lsls	r0, r0, #1
 80007f2:	4149      	adcs	r1, r1
 80007f4:	bf28      	it	cs
 80007f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80007fa:	bd30      	pop	{r4, r5, pc}
 80007fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000800:	bf3c      	itt	cc
 8000802:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000806:	bd30      	popcc	{r4, r5, pc}
 8000808:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800080c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000810:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000814:	f04f 0000 	mov.w	r0, #0
 8000818:	bd30      	pop	{r4, r5, pc}
 800081a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800081e:	bf1a      	itte	ne
 8000820:	4619      	movne	r1, r3
 8000822:	4610      	movne	r0, r2
 8000824:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000828:	bf1c      	itt	ne
 800082a:	460b      	movne	r3, r1
 800082c:	4602      	movne	r2, r0
 800082e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000832:	bf06      	itte	eq
 8000834:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000838:	ea91 0f03 	teqeq	r1, r3
 800083c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000840:	bd30      	pop	{r4, r5, pc}
 8000842:	bf00      	nop

08000844 <__aeabi_ui2d>:
 8000844:	f090 0f00 	teq	r0, #0
 8000848:	bf04      	itt	eq
 800084a:	2100      	moveq	r1, #0
 800084c:	4770      	bxeq	lr
 800084e:	b530      	push	{r4, r5, lr}
 8000850:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000854:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000858:	f04f 0500 	mov.w	r5, #0
 800085c:	f04f 0100 	mov.w	r1, #0
 8000860:	e750      	b.n	8000704 <__adddf3+0x138>
 8000862:	bf00      	nop

08000864 <__aeabi_i2d>:
 8000864:	f090 0f00 	teq	r0, #0
 8000868:	bf04      	itt	eq
 800086a:	2100      	moveq	r1, #0
 800086c:	4770      	bxeq	lr
 800086e:	b530      	push	{r4, r5, lr}
 8000870:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000874:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000878:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800087c:	bf48      	it	mi
 800087e:	4240      	negmi	r0, r0
 8000880:	f04f 0100 	mov.w	r1, #0
 8000884:	e73e      	b.n	8000704 <__adddf3+0x138>
 8000886:	bf00      	nop

08000888 <__aeabi_f2d>:
 8000888:	0042      	lsls	r2, r0, #1
 800088a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800088e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000892:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000896:	bf1f      	itttt	ne
 8000898:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800089c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80008a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80008a4:	4770      	bxne	lr
 80008a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80008aa:	bf08      	it	eq
 80008ac:	4770      	bxeq	lr
 80008ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80008b2:	bf04      	itt	eq
 80008b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80008b8:	4770      	bxeq	lr
 80008ba:	b530      	push	{r4, r5, lr}
 80008bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80008c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80008c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80008c8:	e71c      	b.n	8000704 <__adddf3+0x138>
 80008ca:	bf00      	nop

080008cc <__aeabi_ul2d>:
 80008cc:	ea50 0201 	orrs.w	r2, r0, r1
 80008d0:	bf08      	it	eq
 80008d2:	4770      	bxeq	lr
 80008d4:	b530      	push	{r4, r5, lr}
 80008d6:	f04f 0500 	mov.w	r5, #0
 80008da:	e00a      	b.n	80008f2 <__aeabi_l2d+0x16>

080008dc <__aeabi_l2d>:
 80008dc:	ea50 0201 	orrs.w	r2, r0, r1
 80008e0:	bf08      	it	eq
 80008e2:	4770      	bxeq	lr
 80008e4:	b530      	push	{r4, r5, lr}
 80008e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80008ea:	d502      	bpl.n	80008f2 <__aeabi_l2d+0x16>
 80008ec:	4240      	negs	r0, r0
 80008ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80008f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80008f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80008fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80008fe:	f43f aed8 	beq.w	80006b2 <__adddf3+0xe6>
 8000902:	f04f 0203 	mov.w	r2, #3
 8000906:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800090a:	bf18      	it	ne
 800090c:	3203      	addne	r2, #3
 800090e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000912:	bf18      	it	ne
 8000914:	3203      	addne	r2, #3
 8000916:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800091a:	f1c2 0320 	rsb	r3, r2, #32
 800091e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000922:	fa20 f002 	lsr.w	r0, r0, r2
 8000926:	fa01 fe03 	lsl.w	lr, r1, r3
 800092a:	ea40 000e 	orr.w	r0, r0, lr
 800092e:	fa21 f102 	lsr.w	r1, r1, r2
 8000932:	4414      	add	r4, r2
 8000934:	e6bd      	b.n	80006b2 <__adddf3+0xe6>
 8000936:	bf00      	nop

08000938 <__aeabi_dmul>:
 8000938:	b570      	push	{r4, r5, r6, lr}
 800093a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800093e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000942:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000946:	bf1d      	ittte	ne
 8000948:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800094c:	ea94 0f0c 	teqne	r4, ip
 8000950:	ea95 0f0c 	teqne	r5, ip
 8000954:	f000 f8de 	bleq	8000b14 <__aeabi_dmul+0x1dc>
 8000958:	442c      	add	r4, r5
 800095a:	ea81 0603 	eor.w	r6, r1, r3
 800095e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000962:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000966:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800096a:	bf18      	it	ne
 800096c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000970:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000974:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000978:	d038      	beq.n	80009ec <__aeabi_dmul+0xb4>
 800097a:	fba0 ce02 	umull	ip, lr, r0, r2
 800097e:	f04f 0500 	mov.w	r5, #0
 8000982:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000986:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800098a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800098e:	f04f 0600 	mov.w	r6, #0
 8000992:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000996:	f09c 0f00 	teq	ip, #0
 800099a:	bf18      	it	ne
 800099c:	f04e 0e01 	orrne.w	lr, lr, #1
 80009a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80009a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80009a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80009ac:	d204      	bcs.n	80009b8 <__aeabi_dmul+0x80>
 80009ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80009b2:	416d      	adcs	r5, r5
 80009b4:	eb46 0606 	adc.w	r6, r6, r6
 80009b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80009bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80009c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80009c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80009c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80009cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009d0:	bf88      	it	hi
 80009d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009d6:	d81e      	bhi.n	8000a16 <__aeabi_dmul+0xde>
 80009d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80009dc:	bf08      	it	eq
 80009de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80009e2:	f150 0000 	adcs.w	r0, r0, #0
 80009e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ea:	bd70      	pop	{r4, r5, r6, pc}
 80009ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80009f0:	ea46 0101 	orr.w	r1, r6, r1
 80009f4:	ea40 0002 	orr.w	r0, r0, r2
 80009f8:	ea81 0103 	eor.w	r1, r1, r3
 80009fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000a00:	bfc2      	ittt	gt
 8000a02:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000a06:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000a0a:	bd70      	popgt	{r4, r5, r6, pc}
 8000a0c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a10:	f04f 0e00 	mov.w	lr, #0
 8000a14:	3c01      	subs	r4, #1
 8000a16:	f300 80ab 	bgt.w	8000b70 <__aeabi_dmul+0x238>
 8000a1a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000a1e:	bfde      	ittt	le
 8000a20:	2000      	movle	r0, #0
 8000a22:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000a26:	bd70      	pople	{r4, r5, r6, pc}
 8000a28:	f1c4 0400 	rsb	r4, r4, #0
 8000a2c:	3c20      	subs	r4, #32
 8000a2e:	da35      	bge.n	8000a9c <__aeabi_dmul+0x164>
 8000a30:	340c      	adds	r4, #12
 8000a32:	dc1b      	bgt.n	8000a6c <__aeabi_dmul+0x134>
 8000a34:	f104 0414 	add.w	r4, r4, #20
 8000a38:	f1c4 0520 	rsb	r5, r4, #32
 8000a3c:	fa00 f305 	lsl.w	r3, r0, r5
 8000a40:	fa20 f004 	lsr.w	r0, r0, r4
 8000a44:	fa01 f205 	lsl.w	r2, r1, r5
 8000a48:	ea40 0002 	orr.w	r0, r0, r2
 8000a4c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000a50:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000a54:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000a58:	fa21 f604 	lsr.w	r6, r1, r4
 8000a5c:	eb42 0106 	adc.w	r1, r2, r6
 8000a60:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000a64:	bf08      	it	eq
 8000a66:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000a6a:	bd70      	pop	{r4, r5, r6, pc}
 8000a6c:	f1c4 040c 	rsb	r4, r4, #12
 8000a70:	f1c4 0520 	rsb	r5, r4, #32
 8000a74:	fa00 f304 	lsl.w	r3, r0, r4
 8000a78:	fa20 f005 	lsr.w	r0, r0, r5
 8000a7c:	fa01 f204 	lsl.w	r2, r1, r4
 8000a80:	ea40 0002 	orr.w	r0, r0, r2
 8000a84:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000a88:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000a8c:	f141 0100 	adc.w	r1, r1, #0
 8000a90:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000a94:	bf08      	it	eq
 8000a96:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000a9a:	bd70      	pop	{r4, r5, r6, pc}
 8000a9c:	f1c4 0520 	rsb	r5, r4, #32
 8000aa0:	fa00 f205 	lsl.w	r2, r0, r5
 8000aa4:	ea4e 0e02 	orr.w	lr, lr, r2
 8000aa8:	fa20 f304 	lsr.w	r3, r0, r4
 8000aac:	fa01 f205 	lsl.w	r2, r1, r5
 8000ab0:	ea43 0302 	orr.w	r3, r3, r2
 8000ab4:	fa21 f004 	lsr.w	r0, r1, r4
 8000ab8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000abc:	fa21 f204 	lsr.w	r2, r1, r4
 8000ac0:	ea20 0002 	bic.w	r0, r0, r2
 8000ac4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000ac8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000acc:	bf08      	it	eq
 8000ace:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000ad2:	bd70      	pop	{r4, r5, r6, pc}
 8000ad4:	f094 0f00 	teq	r4, #0
 8000ad8:	d10f      	bne.n	8000afa <__aeabi_dmul+0x1c2>
 8000ada:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000ade:	0040      	lsls	r0, r0, #1
 8000ae0:	eb41 0101 	adc.w	r1, r1, r1
 8000ae4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000ae8:	bf08      	it	eq
 8000aea:	3c01      	subeq	r4, #1
 8000aec:	d0f7      	beq.n	8000ade <__aeabi_dmul+0x1a6>
 8000aee:	ea41 0106 	orr.w	r1, r1, r6
 8000af2:	f095 0f00 	teq	r5, #0
 8000af6:	bf18      	it	ne
 8000af8:	4770      	bxne	lr
 8000afa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000afe:	0052      	lsls	r2, r2, #1
 8000b00:	eb43 0303 	adc.w	r3, r3, r3
 8000b04:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000b08:	bf08      	it	eq
 8000b0a:	3d01      	subeq	r5, #1
 8000b0c:	d0f7      	beq.n	8000afe <__aeabi_dmul+0x1c6>
 8000b0e:	ea43 0306 	orr.w	r3, r3, r6
 8000b12:	4770      	bx	lr
 8000b14:	ea94 0f0c 	teq	r4, ip
 8000b18:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000b1c:	bf18      	it	ne
 8000b1e:	ea95 0f0c 	teqne	r5, ip
 8000b22:	d00c      	beq.n	8000b3e <__aeabi_dmul+0x206>
 8000b24:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000b28:	bf18      	it	ne
 8000b2a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000b2e:	d1d1      	bne.n	8000ad4 <__aeabi_dmul+0x19c>
 8000b30:	ea81 0103 	eor.w	r1, r1, r3
 8000b34:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000b38:	f04f 0000 	mov.w	r0, #0
 8000b3c:	bd70      	pop	{r4, r5, r6, pc}
 8000b3e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000b42:	bf06      	itte	eq
 8000b44:	4610      	moveq	r0, r2
 8000b46:	4619      	moveq	r1, r3
 8000b48:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000b4c:	d019      	beq.n	8000b82 <__aeabi_dmul+0x24a>
 8000b4e:	ea94 0f0c 	teq	r4, ip
 8000b52:	d102      	bne.n	8000b5a <__aeabi_dmul+0x222>
 8000b54:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000b58:	d113      	bne.n	8000b82 <__aeabi_dmul+0x24a>
 8000b5a:	ea95 0f0c 	teq	r5, ip
 8000b5e:	d105      	bne.n	8000b6c <__aeabi_dmul+0x234>
 8000b60:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000b64:	bf1c      	itt	ne
 8000b66:	4610      	movne	r0, r2
 8000b68:	4619      	movne	r1, r3
 8000b6a:	d10a      	bne.n	8000b82 <__aeabi_dmul+0x24a>
 8000b6c:	ea81 0103 	eor.w	r1, r1, r3
 8000b70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000b74:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000b78:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000b7c:	f04f 0000 	mov.w	r0, #0
 8000b80:	bd70      	pop	{r4, r5, r6, pc}
 8000b82:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000b86:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000b8a:	bd70      	pop	{r4, r5, r6, pc}

08000b8c <__aeabi_ddiv>:
 8000b8c:	b570      	push	{r4, r5, r6, lr}
 8000b8e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000b92:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000b96:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000b9a:	bf1d      	ittte	ne
 8000b9c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000ba0:	ea94 0f0c 	teqne	r4, ip
 8000ba4:	ea95 0f0c 	teqne	r5, ip
 8000ba8:	f000 f8a7 	bleq	8000cfa <__aeabi_ddiv+0x16e>
 8000bac:	eba4 0405 	sub.w	r4, r4, r5
 8000bb0:	ea81 0e03 	eor.w	lr, r1, r3
 8000bb4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000bb8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000bbc:	f000 8088 	beq.w	8000cd0 <__aeabi_ddiv+0x144>
 8000bc0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000bc4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000bc8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000bcc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000bd0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000bd4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000bd8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000bdc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000be0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000be4:	429d      	cmp	r5, r3
 8000be6:	bf08      	it	eq
 8000be8:	4296      	cmpeq	r6, r2
 8000bea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000bee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000bf2:	d202      	bcs.n	8000bfa <__aeabi_ddiv+0x6e>
 8000bf4:	085b      	lsrs	r3, r3, #1
 8000bf6:	ea4f 0232 	mov.w	r2, r2, rrx
 8000bfa:	1ab6      	subs	r6, r6, r2
 8000bfc:	eb65 0503 	sbc.w	r5, r5, r3
 8000c00:	085b      	lsrs	r3, r3, #1
 8000c02:	ea4f 0232 	mov.w	r2, r2, rrx
 8000c06:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000c0a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000c0e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000c12:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000c16:	bf22      	ittt	cs
 8000c18:	1ab6      	subcs	r6, r6, r2
 8000c1a:	4675      	movcs	r5, lr
 8000c1c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000c20:	085b      	lsrs	r3, r3, #1
 8000c22:	ea4f 0232 	mov.w	r2, r2, rrx
 8000c26:	ebb6 0e02 	subs.w	lr, r6, r2
 8000c2a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000c2e:	bf22      	ittt	cs
 8000c30:	1ab6      	subcs	r6, r6, r2
 8000c32:	4675      	movcs	r5, lr
 8000c34:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000c38:	085b      	lsrs	r3, r3, #1
 8000c3a:	ea4f 0232 	mov.w	r2, r2, rrx
 8000c3e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000c42:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000c46:	bf22      	ittt	cs
 8000c48:	1ab6      	subcs	r6, r6, r2
 8000c4a:	4675      	movcs	r5, lr
 8000c4c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000c50:	085b      	lsrs	r3, r3, #1
 8000c52:	ea4f 0232 	mov.w	r2, r2, rrx
 8000c56:	ebb6 0e02 	subs.w	lr, r6, r2
 8000c5a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000c5e:	bf22      	ittt	cs
 8000c60:	1ab6      	subcs	r6, r6, r2
 8000c62:	4675      	movcs	r5, lr
 8000c64:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000c68:	ea55 0e06 	orrs.w	lr, r5, r6
 8000c6c:	d018      	beq.n	8000ca0 <__aeabi_ddiv+0x114>
 8000c6e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000c72:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000c76:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000c7a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000c7e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000c82:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000c86:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000c8a:	d1c0      	bne.n	8000c0e <__aeabi_ddiv+0x82>
 8000c8c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000c90:	d10b      	bne.n	8000caa <__aeabi_ddiv+0x11e>
 8000c92:	ea41 0100 	orr.w	r1, r1, r0
 8000c96:	f04f 0000 	mov.w	r0, #0
 8000c9a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000c9e:	e7b6      	b.n	8000c0e <__aeabi_ddiv+0x82>
 8000ca0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000ca4:	bf04      	itt	eq
 8000ca6:	4301      	orreq	r1, r0
 8000ca8:	2000      	moveq	r0, #0
 8000caa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000cae:	bf88      	it	hi
 8000cb0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000cb4:	f63f aeaf 	bhi.w	8000a16 <__aeabi_dmul+0xde>
 8000cb8:	ebb5 0c03 	subs.w	ip, r5, r3
 8000cbc:	bf04      	itt	eq
 8000cbe:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000cc2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000cc6:	f150 0000 	adcs.w	r0, r0, #0
 8000cca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000cce:	bd70      	pop	{r4, r5, r6, pc}
 8000cd0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000cd4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000cd8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000cdc:	bfc2      	ittt	gt
 8000cde:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000ce2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000ce6:	bd70      	popgt	{r4, r5, r6, pc}
 8000ce8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000cec:	f04f 0e00 	mov.w	lr, #0
 8000cf0:	3c01      	subs	r4, #1
 8000cf2:	e690      	b.n	8000a16 <__aeabi_dmul+0xde>
 8000cf4:	ea45 0e06 	orr.w	lr, r5, r6
 8000cf8:	e68d      	b.n	8000a16 <__aeabi_dmul+0xde>
 8000cfa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000cfe:	ea94 0f0c 	teq	r4, ip
 8000d02:	bf08      	it	eq
 8000d04:	ea95 0f0c 	teqeq	r5, ip
 8000d08:	f43f af3b 	beq.w	8000b82 <__aeabi_dmul+0x24a>
 8000d0c:	ea94 0f0c 	teq	r4, ip
 8000d10:	d10a      	bne.n	8000d28 <__aeabi_ddiv+0x19c>
 8000d12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000d16:	f47f af34 	bne.w	8000b82 <__aeabi_dmul+0x24a>
 8000d1a:	ea95 0f0c 	teq	r5, ip
 8000d1e:	f47f af25 	bne.w	8000b6c <__aeabi_dmul+0x234>
 8000d22:	4610      	mov	r0, r2
 8000d24:	4619      	mov	r1, r3
 8000d26:	e72c      	b.n	8000b82 <__aeabi_dmul+0x24a>
 8000d28:	ea95 0f0c 	teq	r5, ip
 8000d2c:	d106      	bne.n	8000d3c <__aeabi_ddiv+0x1b0>
 8000d2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000d32:	f43f aefd 	beq.w	8000b30 <__aeabi_dmul+0x1f8>
 8000d36:	4610      	mov	r0, r2
 8000d38:	4619      	mov	r1, r3
 8000d3a:	e722      	b.n	8000b82 <__aeabi_dmul+0x24a>
 8000d3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000d40:	bf18      	it	ne
 8000d42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000d46:	f47f aec5 	bne.w	8000ad4 <__aeabi_dmul+0x19c>
 8000d4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000d4e:	f47f af0d 	bne.w	8000b6c <__aeabi_dmul+0x234>
 8000d52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000d56:	f47f aeeb 	bne.w	8000b30 <__aeabi_dmul+0x1f8>
 8000d5a:	e712      	b.n	8000b82 <__aeabi_dmul+0x24a>

08000d5c <__aeabi_d2uiz>:
 8000d5c:	004a      	lsls	r2, r1, #1
 8000d5e:	d211      	bcs.n	8000d84 <__aeabi_d2uiz+0x28>
 8000d60:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000d64:	d211      	bcs.n	8000d8a <__aeabi_d2uiz+0x2e>
 8000d66:	d50d      	bpl.n	8000d84 <__aeabi_d2uiz+0x28>
 8000d68:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000d6c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000d70:	d40e      	bmi.n	8000d90 <__aeabi_d2uiz+0x34>
 8000d72:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000d76:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000d7a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000d7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000d82:	4770      	bx	lr
 8000d84:	f04f 0000 	mov.w	r0, #0
 8000d88:	4770      	bx	lr
 8000d8a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000d8e:	d102      	bne.n	8000d96 <__aeabi_d2uiz+0x3a>
 8000d90:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000d94:	4770      	bx	lr
 8000d96:	f04f 0000 	mov.w	r0, #0
 8000d9a:	4770      	bx	lr

08000d9c <__aeabi_frsub>:
 8000d9c:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000da0:	e002      	b.n	8000da8 <__addsf3>
 8000da2:	bf00      	nop

08000da4 <__aeabi_fsub>:
 8000da4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000da8 <__addsf3>:
 8000da8:	0042      	lsls	r2, r0, #1
 8000daa:	bf1f      	itttt	ne
 8000dac:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000db0:	ea92 0f03 	teqne	r2, r3
 8000db4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000db8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000dbc:	d06a      	beq.n	8000e94 <__addsf3+0xec>
 8000dbe:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000dc2:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000dc6:	bfc1      	itttt	gt
 8000dc8:	18d2      	addgt	r2, r2, r3
 8000dca:	4041      	eorgt	r1, r0
 8000dcc:	4048      	eorgt	r0, r1
 8000dce:	4041      	eorgt	r1, r0
 8000dd0:	bfb8      	it	lt
 8000dd2:	425b      	neglt	r3, r3
 8000dd4:	2b19      	cmp	r3, #25
 8000dd6:	bf88      	it	hi
 8000dd8:	4770      	bxhi	lr
 8000dda:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000dde:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000de2:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000de6:	bf18      	it	ne
 8000de8:	4240      	negne	r0, r0
 8000dea:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000dee:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000df2:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000df6:	bf18      	it	ne
 8000df8:	4249      	negne	r1, r1
 8000dfa:	ea92 0f03 	teq	r2, r3
 8000dfe:	d03f      	beq.n	8000e80 <__addsf3+0xd8>
 8000e00:	f1a2 0201 	sub.w	r2, r2, #1
 8000e04:	fa41 fc03 	asr.w	ip, r1, r3
 8000e08:	eb10 000c 	adds.w	r0, r0, ip
 8000e0c:	f1c3 0320 	rsb	r3, r3, #32
 8000e10:	fa01 f103 	lsl.w	r1, r1, r3
 8000e14:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000e18:	d502      	bpl.n	8000e20 <__addsf3+0x78>
 8000e1a:	4249      	negs	r1, r1
 8000e1c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000e20:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000e24:	d313      	bcc.n	8000e4e <__addsf3+0xa6>
 8000e26:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000e2a:	d306      	bcc.n	8000e3a <__addsf3+0x92>
 8000e2c:	0840      	lsrs	r0, r0, #1
 8000e2e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000e32:	f102 0201 	add.w	r2, r2, #1
 8000e36:	2afe      	cmp	r2, #254	; 0xfe
 8000e38:	d251      	bcs.n	8000ede <__addsf3+0x136>
 8000e3a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000e3e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e42:	bf08      	it	eq
 8000e44:	f020 0001 	biceq.w	r0, r0, #1
 8000e48:	ea40 0003 	orr.w	r0, r0, r3
 8000e4c:	4770      	bx	lr
 8000e4e:	0049      	lsls	r1, r1, #1
 8000e50:	eb40 0000 	adc.w	r0, r0, r0
 8000e54:	3a01      	subs	r2, #1
 8000e56:	bf28      	it	cs
 8000e58:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000e5c:	d2ed      	bcs.n	8000e3a <__addsf3+0x92>
 8000e5e:	fab0 fc80 	clz	ip, r0
 8000e62:	f1ac 0c08 	sub.w	ip, ip, #8
 8000e66:	ebb2 020c 	subs.w	r2, r2, ip
 8000e6a:	fa00 f00c 	lsl.w	r0, r0, ip
 8000e6e:	bfaa      	itet	ge
 8000e70:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000e74:	4252      	neglt	r2, r2
 8000e76:	4318      	orrge	r0, r3
 8000e78:	bfbc      	itt	lt
 8000e7a:	40d0      	lsrlt	r0, r2
 8000e7c:	4318      	orrlt	r0, r3
 8000e7e:	4770      	bx	lr
 8000e80:	f092 0f00 	teq	r2, #0
 8000e84:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000e88:	bf06      	itte	eq
 8000e8a:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000e8e:	3201      	addeq	r2, #1
 8000e90:	3b01      	subne	r3, #1
 8000e92:	e7b5      	b.n	8000e00 <__addsf3+0x58>
 8000e94:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000e98:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000e9c:	bf18      	it	ne
 8000e9e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000ea2:	d021      	beq.n	8000ee8 <__addsf3+0x140>
 8000ea4:	ea92 0f03 	teq	r2, r3
 8000ea8:	d004      	beq.n	8000eb4 <__addsf3+0x10c>
 8000eaa:	f092 0f00 	teq	r2, #0
 8000eae:	bf08      	it	eq
 8000eb0:	4608      	moveq	r0, r1
 8000eb2:	4770      	bx	lr
 8000eb4:	ea90 0f01 	teq	r0, r1
 8000eb8:	bf1c      	itt	ne
 8000eba:	2000      	movne	r0, #0
 8000ebc:	4770      	bxne	lr
 8000ebe:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000ec2:	d104      	bne.n	8000ece <__addsf3+0x126>
 8000ec4:	0040      	lsls	r0, r0, #1
 8000ec6:	bf28      	it	cs
 8000ec8:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000ecc:	4770      	bx	lr
 8000ece:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000ed2:	bf3c      	itt	cc
 8000ed4:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000ed8:	4770      	bxcc	lr
 8000eda:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000ede:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000ee2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ee6:	4770      	bx	lr
 8000ee8:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000eec:	bf16      	itet	ne
 8000eee:	4608      	movne	r0, r1
 8000ef0:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000ef4:	4601      	movne	r1, r0
 8000ef6:	0242      	lsls	r2, r0, #9
 8000ef8:	bf06      	itte	eq
 8000efa:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000efe:	ea90 0f01 	teqeq	r0, r1
 8000f02:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000f06:	4770      	bx	lr

08000f08 <__aeabi_ui2f>:
 8000f08:	f04f 0300 	mov.w	r3, #0
 8000f0c:	e004      	b.n	8000f18 <__aeabi_i2f+0x8>
 8000f0e:	bf00      	nop

08000f10 <__aeabi_i2f>:
 8000f10:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000f14:	bf48      	it	mi
 8000f16:	4240      	negmi	r0, r0
 8000f18:	ea5f 0c00 	movs.w	ip, r0
 8000f1c:	bf08      	it	eq
 8000f1e:	4770      	bxeq	lr
 8000f20:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000f24:	4601      	mov	r1, r0
 8000f26:	f04f 0000 	mov.w	r0, #0
 8000f2a:	e01c      	b.n	8000f66 <__aeabi_l2f+0x2a>

08000f2c <__aeabi_ul2f>:
 8000f2c:	ea50 0201 	orrs.w	r2, r0, r1
 8000f30:	bf08      	it	eq
 8000f32:	4770      	bxeq	lr
 8000f34:	f04f 0300 	mov.w	r3, #0
 8000f38:	e00a      	b.n	8000f50 <__aeabi_l2f+0x14>
 8000f3a:	bf00      	nop

08000f3c <__aeabi_l2f>:
 8000f3c:	ea50 0201 	orrs.w	r2, r0, r1
 8000f40:	bf08      	it	eq
 8000f42:	4770      	bxeq	lr
 8000f44:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000f48:	d502      	bpl.n	8000f50 <__aeabi_l2f+0x14>
 8000f4a:	4240      	negs	r0, r0
 8000f4c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000f50:	ea5f 0c01 	movs.w	ip, r1
 8000f54:	bf02      	ittt	eq
 8000f56:	4684      	moveq	ip, r0
 8000f58:	4601      	moveq	r1, r0
 8000f5a:	2000      	moveq	r0, #0
 8000f5c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000f60:	bf08      	it	eq
 8000f62:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000f66:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000f6a:	fabc f28c 	clz	r2, ip
 8000f6e:	3a08      	subs	r2, #8
 8000f70:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000f74:	db10      	blt.n	8000f98 <__aeabi_l2f+0x5c>
 8000f76:	fa01 fc02 	lsl.w	ip, r1, r2
 8000f7a:	4463      	add	r3, ip
 8000f7c:	fa00 fc02 	lsl.w	ip, r0, r2
 8000f80:	f1c2 0220 	rsb	r2, r2, #32
 8000f84:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000f88:	fa20 f202 	lsr.w	r2, r0, r2
 8000f8c:	eb43 0002 	adc.w	r0, r3, r2
 8000f90:	bf08      	it	eq
 8000f92:	f020 0001 	biceq.w	r0, r0, #1
 8000f96:	4770      	bx	lr
 8000f98:	f102 0220 	add.w	r2, r2, #32
 8000f9c:	fa01 fc02 	lsl.w	ip, r1, r2
 8000fa0:	f1c2 0220 	rsb	r2, r2, #32
 8000fa4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000fa8:	fa21 f202 	lsr.w	r2, r1, r2
 8000fac:	eb43 0002 	adc.w	r0, r3, r2
 8000fb0:	bf08      	it	eq
 8000fb2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000fb6:	4770      	bx	lr

08000fb8 <__aeabi_f2uiz>:
 8000fb8:	0042      	lsls	r2, r0, #1
 8000fba:	d20e      	bcs.n	8000fda <__aeabi_f2uiz+0x22>
 8000fbc:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8000fc0:	d30b      	bcc.n	8000fda <__aeabi_f2uiz+0x22>
 8000fc2:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8000fc6:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000fca:	d409      	bmi.n	8000fe0 <__aeabi_f2uiz+0x28>
 8000fcc:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000fd0:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000fd4:	fa23 f002 	lsr.w	r0, r3, r2
 8000fd8:	4770      	bx	lr
 8000fda:	f04f 0000 	mov.w	r0, #0
 8000fde:	4770      	bx	lr
 8000fe0:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8000fe4:	d101      	bne.n	8000fea <__aeabi_f2uiz+0x32>
 8000fe6:	0242      	lsls	r2, r0, #9
 8000fe8:	d102      	bne.n	8000ff0 <__aeabi_f2uiz+0x38>
 8000fea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000fee:	4770      	bx	lr
 8000ff0:	f04f 0000 	mov.w	r0, #0
 8000ff4:	4770      	bx	lr
 8000ff6:	bf00      	nop

08000ff8 <Reset_Handler>:
 8000ff8:	480c      	ldr	r0, [pc, #48]	; (800102c <Zerobss+0x10>)
 8000ffa:	4685      	mov	sp, r0
 8000ffc:	2100      	movs	r1, #0
 8000ffe:	e003      	b.n	8001008 <DataInit>

08001000 <CopyData>:
 8001000:	4b0b      	ldr	r3, [pc, #44]	; (8001030 <Zerobss+0x14>)
 8001002:	585b      	ldr	r3, [r3, r1]
 8001004:	5043      	str	r3, [r0, r1]
 8001006:	3104      	adds	r1, #4

08001008 <DataInit>:
 8001008:	480a      	ldr	r0, [pc, #40]	; (8001034 <Zerobss+0x18>)
 800100a:	4b0b      	ldr	r3, [pc, #44]	; (8001038 <Zerobss+0x1c>)
 800100c:	1842      	adds	r2, r0, r1
 800100e:	429a      	cmp	r2, r3
 8001010:	d3f6      	bcc.n	8001000 <CopyData>
 8001012:	4a0a      	ldr	r2, [pc, #40]	; (800103c <Zerobss+0x20>)
 8001014:	e002      	b.n	800101c <Zerobss>

08001016 <FillZerobss>:
 8001016:	2300      	movs	r3, #0
 8001018:	f842 3b04 	str.w	r3, [r2], #4

0800101c <Zerobss>:
 800101c:	4b08      	ldr	r3, [pc, #32]	; (8001040 <Zerobss+0x24>)
 800101e:	429a      	cmp	r2, r3
 8001020:	d3f9      	bcc.n	8001016 <FillZerobss>
 8001022:	f003 f8b5 	bl	8004190 <SystemInit>
 8001026:	f000 f837 	bl	8001098 <main>
 800102a:	4770      	bx	lr
 800102c:	2000c000 	andcs	ip, r0, r0
 8001030:	08005bf0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, fp, ip, lr}
 8001034:	20000000 	andcs	r0, r0, r0
 8001038:	200000ec 	andcs	r0, r0, ip, ror #1
 800103c:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8001040:	2000181c 	andcs	r1, r0, ip, lsl r8

08001044 <ADC0_1_IRQHandler>:
 8001044:	e7fe      	b.n	8001044 <ADC0_1_IRQHandler>

08001046 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 8001046:	b470      	push	{r4, r5, r6}
 8001048:	790a      	ldrb	r2, [r1, #4]
 800104a:	680b      	ldr	r3, [r1, #0]
 800104c:	2a20      	cmp	r2, #32
 800104e:	bf28      	it	cs
 8001050:	2220      	movcs	r2, #32
 8001052:	f890 1052 	ldrb.w	r1, [r0, #82]	; 0x52
 8001056:	189c      	adds	r4, r3, r2
 8001058:	b189      	cbz	r1, 800107e <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x38>
 800105a:	f100 010a 	add.w	r1, r0, #10
 800105e:	460d      	mov	r5, r1
 8001060:	42a3      	cmp	r3, r4
 8001062:	d004      	beq.n	800106e <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x28>
 8001064:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001068:	f805 6b01 	strb.w	r6, [r5], #1
 800106c:	e7f8      	b.n	8001060 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x1a>
 800106e:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 8001072:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8001074:	b170      	cbz	r0, 8001094 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x4e>
 8001076:	bc70      	pop	{r4, r5, r6}
 8001078:	6803      	ldr	r3, [r0, #0]
 800107a:	689b      	ldr	r3, [r3, #8]
 800107c:	4718      	bx	r3
 800107e:	f100 0153 	add.w	r1, r0, #83	; 0x53
 8001082:	42a3      	cmp	r3, r4
 8001084:	d004      	beq.n	8001090 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x4a>
 8001086:	f813 5b01 	ldrb.w	r5, [r3], #1
 800108a:	f801 5b01 	strb.w	r5, [r1], #1
 800108e:	e7f8      	b.n	8001082 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3c>
 8001090:	f880 2073 	strb.w	r2, [r0, #115]	; 0x73
 8001094:	bc70      	pop	{r4, r5, r6}
 8001096:	4770      	bx	lr

08001098 <main>:
 8001098:	b570      	push	{r4, r5, r6, lr}
 800109a:	f5ad 7d76 	sub.w	sp, sp, #984	; 0x3d8
 800109e:	a806      	add	r0, sp, #24
 80010a0:	f002 fe74 	bl	8003d8c <Hardware::Hardware()>
 80010a4:	a80e      	add	r0, sp, #56	; 0x38
 80010a6:	f002 fb59 	bl	800375c <Network::Network()>
 80010aa:	a816      	add	r0, sp, #88	; 0x58
 80010ac:	f002 fe4c 	bl	8003d48 <LedBlink::LedBlink()>
 80010b0:	a81c      	add	r0, sp, #112	; 0x70
 80010b2:	f002 fc1d 	bl	80038f0 <Display::Display()>
 80010b6:	a804      	add	r0, sp, #16
 80010b8:	f002 f9d8 	bl	800346c <FlashRom::FlashRom()>
 80010bc:	a805      	add	r0, sp, #20
 80010be:	f002 f847 	bl	8003150 <SpiFlashStore::SpiFlashStore()>
 80010c2:	a82f      	add	r0, sp, #188	; 0xbc
 80010c4:	f000 fae2 	bl	800168c <Widget::Widget()>
 80010c8:	2300      	movs	r3, #0
 80010ca:	2201      	movs	r2, #1
 80010cc:	4619      	mov	r1, r3
 80010ce:	a82f      	add	r0, sp, #188	; 0xbc
 80010d0:	f001 fbb8 	bl	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80010d4:	a808      	add	r0, sp, #32
 80010d6:	f002 f9bd 	bl	8003454 <StoreWidget::StoreWidget()>
 80010da:	a908      	add	r1, sp, #32
 80010dc:	a812      	add	r0, sp, #72	; 0x48
 80010de:	f000 fe8b 	bl	8001df8 <WidgetParams::WidgetParams(WidgetParamsStore*)>
 80010e2:	a812      	add	r0, sp, #72	; 0x48
 80010e4:	f000 fe90 	bl	8001e08 <WidgetParams::Load()>
 80010e8:	b128      	cbz	r0, 80010f6 <main+0x5e>
 80010ea:	a812      	add	r0, sp, #72	; 0x48
 80010ec:	f000 ff08 	bl	8001f00 <WidgetParams::Set()>
 80010f0:	a812      	add	r0, sp, #72	; 0x48
 80010f2:	f000 ff28 	bl	8001f46 <WidgetParams::Dump()>
 80010f6:	a80a      	add	r0, sp, #40	; 0x28
 80010f8:	f002 f970 	bl	80033dc <StoreRDMDevice::StoreRDMDevice()>
 80010fc:	a90a      	add	r1, sp, #40	; 0x28
 80010fe:	a823      	add	r0, sp, #140	; 0x8c
 8001100:	f001 ff24 	bl	8002f4c <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 8001104:	a836      	add	r0, sp, #216	; 0xd8
 8001106:	494f      	ldr	r1, [pc, #316]	; (8001244 <main+0x1ac>)
 8001108:	f7ff ff9d 	bl	8001046 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800110c:	a823      	add	r0, sp, #140	; 0x8c
 800110e:	f001 ff2f 	bl	8002f70 <RDMDeviceParams::Load()>
 8001112:	b130      	cbz	r0, 8001122 <main+0x8a>
 8001114:	a823      	add	r0, sp, #140	; 0x8c
 8001116:	a936      	add	r1, sp, #216	; 0xd8
 8001118:	f001 ff35 	bl	8002f86 <RDMDeviceParams::Set(RDMDevice*)>
 800111c:	a823      	add	r0, sp, #140	; 0x8c
 800111e:	f001 ff67 	bl	8002ff0 <RDMDeviceParams::Dump()>
 8001122:	2301      	movs	r3, #1
 8001124:	f88d 312a 	strb.w	r3, [sp, #298]	; 0x12a
 8001128:	f20d 132b 	addw	r3, sp, #299	; 0x12b
 800112c:	930c      	str	r3, [sp, #48]	; 0x30
 800112e:	f89d 314b 	ldrb.w	r3, [sp, #331]	; 0x14b
 8001132:	a90c      	add	r1, sp, #48	; 0x30
 8001134:	a836      	add	r0, sp, #216	; 0xd8
 8001136:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
 800113a:	f7ff ff84 	bl	8001046 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800113e:	f10d 01e2 	add.w	r1, sp, #226	; 0xe2
 8001142:	2200      	movs	r2, #0
 8001144:	460e      	mov	r6, r1
 8001146:	f89d 314b 	ldrb.w	r3, [sp, #331]	; 0x14b
 800114a:	f89d 5102 	ldrb.w	r5, [sp, #258]	; 0x102
 800114e:	4295      	cmp	r5, r2
 8001150:	d905      	bls.n	800115e <main+0xc6>
 8001152:	f811 0b01 	ldrb.w	r0, [r1], #1
 8001156:	3201      	adds	r2, #1
 8001158:	4403      	add	r3, r0
 800115a:	b29b      	uxth	r3, r3
 800115c:	e7f7      	b.n	800114e <main+0xb6>
 800115e:	f8ad 314c 	strh.w	r3, [sp, #332]	; 0x14c
 8001162:	4b39      	ldr	r3, [pc, #228]	; (8001248 <main+0x1b0>)
 8001164:	4a39      	ldr	r2, [pc, #228]	; (800124c <main+0x1b4>)
 8001166:	493a      	ldr	r1, [pc, #232]	; (8001250 <main+0x1b8>)
 8001168:	9300      	str	r3, [sp, #0]
 800116a:	483a      	ldr	r0, [pc, #232]	; (8001254 <main+0x1bc>)
 800116c:	4b3a      	ldr	r3, [pc, #232]	; (8001258 <main+0x1c0>)
 800116e:	f89d 4053 	ldrb.w	r4, [sp, #83]	; 0x53
 8001172:	f000 fa7b 	bl	800166c <printf>
 8001176:	220c      	movs	r2, #12
 8001178:	4b38      	ldr	r3, [pc, #224]	; (800125c <main+0x1c4>)
 800117a:	4621      	mov	r1, r4
 800117c:	fb02 3204 	mla	r2, r2, r4, r3
 8001180:	4837      	ldr	r0, [pc, #220]	; (8001260 <main+0x1c8>)
 8001182:	f000 fa73 	bl	800166c <printf>
 8001186:	f89d 30dd 	ldrb.w	r3, [sp, #221]	; 0xdd
 800118a:	f89d 20d9 	ldrb.w	r2, [sp, #217]	; 0xd9
 800118e:	9302      	str	r3, [sp, #8]
 8001190:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8001194:	f89d 10d8 	ldrb.w	r1, [sp, #216]	; 0xd8
 8001198:	9301      	str	r3, [sp, #4]
 800119a:	f89d 30db 	ldrb.w	r3, [sp, #219]	; 0xdb
 800119e:	4831      	ldr	r0, [pc, #196]	; (8001264 <main+0x1cc>)
 80011a0:	9300      	str	r3, [sp, #0]
 80011a2:	f89d 30da 	ldrb.w	r3, [sp, #218]	; 0xda
 80011a6:	f000 fa61 	bl	800166c <printf>
 80011aa:	4632      	mov	r2, r6
 80011ac:	4629      	mov	r1, r5
 80011ae:	482e      	ldr	r0, [pc, #184]	; (8001268 <main+0x1d0>)
 80011b0:	f000 fa5c 	bl	800166c <printf>
 80011b4:	2102      	movs	r1, #2
 80011b6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80011ba:	f003 f949 	bl	8004450 <fwdgt_config>
 80011be:	2801      	cmp	r0, #1
 80011c0:	bf0c      	ite	eq
 80011c2:	2301      	moveq	r3, #1
 80011c4:	2300      	movne	r3, #0
 80011c6:	f88d 301c 	strb.w	r3, [sp, #28]
 80011ca:	d101      	bne.n	80011d0 <main+0x138>
 80011cc:	f003 f930 	bl	8004430 <fwdgt_enable>
 80011d0:	2c03      	cmp	r4, #3
 80011d2:	d108      	bne.n	80011e6 <main+0x14e>
 80011d4:	2301      	movs	r3, #1
 80011d6:	a82f      	add	r0, sp, #188	; 0xbc
 80011d8:	461a      	mov	r2, r3
 80011da:	2100      	movs	r1, #0
 80011dc:	f001 fb32 	bl	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80011e0:	a82f      	add	r0, sp, #188	; 0xbc
 80011e2:	f000 ff93 	bl	800210c <Widget::SnifferFillTransmitBuffer()>
 80011e6:	2601      	movs	r6, #1
 80011e8:	4c20      	ldr	r4, [pc, #128]	; (800126c <main+0x1d4>)
 80011ea:	4d21      	ldr	r5, [pc, #132]	; (8001270 <main+0x1d8>)
 80011ec:	f003 f928 	bl	8004440 <fwdgt_counter_reload>
 80011f0:	a82f      	add	r0, sp, #188	; 0xbc
 80011f2:	f000 fd19 	bl	8001c28 <Widget::ReceiveDataFromHost()>
 80011f6:	a82f      	add	r0, sp, #188	; 0xbc
 80011f8:	f000 fac6 	bl	8001788 <Widget::ReceivedDmxPacket()>
 80011fc:	a82f      	add	r0, sp, #188	; 0xbc
 80011fe:	f000 fb8b 	bl	8001918 <Widget::ReceivedDmxChangeOfStatePacket()>
 8001202:	a82f      	add	r0, sp, #188	; 0xbc
 8001204:	f000 fc16 	bl	8001a34 <Widget::ReceivedRdmPacket()>
 8001208:	a82f      	add	r0, sp, #188	; 0xbc
 800120a:	f000 fc89 	bl	8001b20 <Widget::RdmTimeout()>
 800120e:	a82f      	add	r0, sp, #188	; 0xbc
 8001210:	f000 ff26 	bl	8002060 <Widget::SnifferRdm()>
 8001214:	a82f      	add	r0, sp, #188	; 0xbc
 8001216:	f000 fefd 	bl	8002014 <Widget::SnifferDmx()>
 800121a:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800121c:	b172      	cbz	r2, 800123c <main+0x1a4>
 800121e:	6823      	ldr	r3, [r4, #0]
 8001220:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8001222:	1a5b      	subs	r3, r3, r1
 8001224:	429a      	cmp	r2, r3
 8001226:	d809      	bhi.n	800123c <main+0x1a4>
 8001228:	6823      	ldr	r3, [r4, #0]
 800122a:	931b      	str	r3, [sp, #108]	; 0x6c
 800122c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800122e:	2b01      	cmp	r3, #1
 8001230:	f083 0201 	eor.w	r2, r3, #1
 8001234:	921a      	str	r2, [sp, #104]	; 0x68
 8001236:	bf14      	ite	ne
 8001238:	612e      	strne	r6, [r5, #16]
 800123a:	616b      	streq	r3, [r5, #20]
 800123c:	a805      	add	r0, sp, #20
 800123e:	f002 f821 	bl	8003284 <SpiFlashStore::Flash()>
 8001242:	e7d3      	b.n	80011ec <main+0x154>
 8001244:	08005418 	stmdaeq	r0, {r3, r4, sl, ip, lr}
 8001248:	08005365 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, ip, lr}
 800124c:	0800533c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, ip, lr}
 8001250:	08005420 	stmdaeq	r0, {r5, sl, ip, lr}
 8001254:	08005346 	stmdaeq	r0, {r1, r2, r6, r8, r9, ip, lr}
 8001258:	08005330 	stmdaeq	r0, {r4, r5, r8, r9, ip, lr}
 800125c:	08005424 	stmdaeq	r0, {r2, r5, sl, ip, lr}
 8001260:	0800536e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9, ip, lr}
 8001264:	080053c8 	stmdaeq	r0, {r3, r6, r7, r8, r9, ip, lr}
 8001268:	080053f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, r9, ip, lr}
 800126c:	20001814 	andcs	r1, r0, r4, lsl r8
 8001270:	40011000 	andmi	r1, r1, r0

08001274 <_xputch>:
 8001274:	4603      	mov	r3, r0
 8001276:	b410      	push	{r4}
 8001278:	4c08      	ldr	r4, [pc, #32]	; (800129c <_xputch+0x28>)
 800127a:	68da      	ldr	r2, [r3, #12]
 800127c:	4608      	mov	r0, r1
 800127e:	6821      	ldr	r1, [r4, #0]
 8001280:	3201      	adds	r2, #1
 8001282:	60da      	str	r2, [r3, #12]
 8001284:	b139      	cbz	r1, 8001296 <_xputch+0x22>
 8001286:	691b      	ldr	r3, [r3, #16]
 8001288:	429a      	cmp	r2, r3
 800128a:	da02      	bge.n	8001292 <_xputch+0x1e>
 800128c:	1c4b      	adds	r3, r1, #1
 800128e:	6023      	str	r3, [r4, #0]
 8001290:	7008      	strb	r0, [r1, #0]
 8001292:	bc10      	pop	{r4}
 8001294:	4770      	bx	lr
 8001296:	bc10      	pop	{r4}
 8001298:	f002 bd52 	b.w	8003d40 <console_putc>
 800129c:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

080012a0 <_format_int>:
 80012a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80012a4:	461f      	mov	r7, r3
 80012a6:	b091      	sub	sp, #68	; 0x44
 80012a8:	ea52 0307 	orrs.w	r3, r2, r7
 80012ac:	4680      	mov	r8, r0
 80012ae:	4616      	mov	r6, r2
 80012b0:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 80012b4:	d138      	bne.n	8001328 <_format_int+0x88>
 80012b6:	2330      	movs	r3, #48	; 0x30
 80012b8:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 80012bc:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80012c0:	f8d8 3000 	ldr.w	r3, [r8]
 80012c4:	07d8      	lsls	r0, r3, #31
 80012c6:	d508      	bpl.n	80012da <_format_int+0x3a>
 80012c8:	466a      	mov	r2, sp
 80012ca:	2030      	movs	r0, #48	; 0x30
 80012cc:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80012d0:	1b2e      	subs	r6, r5, r4
 80012d2:	428e      	cmp	r6, r1
 80012d4:	da01      	bge.n	80012da <_format_int+0x3a>
 80012d6:	4294      	cmp	r4, r2
 80012d8:	d843      	bhi.n	8001362 <_format_int+0xc2>
 80012da:	0699      	lsls	r1, r3, #26
 80012dc:	d508      	bpl.n	80012f0 <_format_int+0x50>
 80012de:	466a      	mov	r2, sp
 80012e0:	2030      	movs	r0, #48	; 0x30
 80012e2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80012e6:	1b2e      	subs	r6, r5, r4
 80012e8:	428e      	cmp	r6, r1
 80012ea:	da01      	bge.n	80012f0 <_format_int+0x50>
 80012ec:	4294      	cmp	r4, r2
 80012ee:	d83b      	bhi.n	8001368 <_format_int+0xc8>
 80012f0:	071a      	lsls	r2, r3, #28
 80012f2:	bf44      	itt	mi
 80012f4:	222d      	movmi	r2, #45	; 0x2d
 80012f6:	f804 2901 	strbmi.w	r2, [r4], #-1
 80012fa:	065b      	lsls	r3, r3, #25
 80012fc:	d408      	bmi.n	8001310 <_format_int+0x70>
 80012fe:	466b      	mov	r3, sp
 8001300:	2120      	movs	r1, #32
 8001302:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8001306:	1b28      	subs	r0, r5, r4
 8001308:	4290      	cmp	r0, r2
 800130a:	da01      	bge.n	8001310 <_format_int+0x70>
 800130c:	429c      	cmp	r4, r3
 800130e:	d82e      	bhi.n	800136e <_format_int+0xce>
 8001310:	1b2d      	subs	r5, r5, r4
 8001312:	3401      	adds	r4, #1
 8001314:	ab10      	add	r3, sp, #64	; 0x40
 8001316:	429c      	cmp	r4, r3
 8001318:	d32c      	bcc.n	8001374 <_format_int+0xd4>
 800131a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800131e:	42ab      	cmp	r3, r5
 8001320:	dc2e      	bgt.n	8001380 <_format_int+0xe0>
 8001322:	b011      	add	sp, #68	; 0x44
 8001324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001328:	462c      	mov	r4, r5
 800132a:	46eb      	mov	fp, sp
 800132c:	4630      	mov	r0, r6
 800132e:	4639      	mov	r1, r7
 8001330:	220a      	movs	r2, #10
 8001332:	2300      	movs	r3, #0
 8001334:	f7fe ff0c 	bl	8000150 <__aeabi_uldivmod>
 8001338:	46b2      	mov	sl, r6
 800133a:	3230      	adds	r2, #48	; 0x30
 800133c:	46b9      	mov	r9, r7
 800133e:	2300      	movs	r3, #0
 8001340:	4630      	mov	r0, r6
 8001342:	4639      	mov	r1, r7
 8001344:	f804 2901 	strb.w	r2, [r4], #-1
 8001348:	220a      	movs	r2, #10
 800134a:	f7fe ff01 	bl	8000150 <__aeabi_uldivmod>
 800134e:	f1ba 0f0a 	cmp.w	sl, #10
 8001352:	f179 0300 	sbcs.w	r3, r9, #0
 8001356:	4606      	mov	r6, r0
 8001358:	460f      	mov	r7, r1
 800135a:	d3b1      	bcc.n	80012c0 <_format_int+0x20>
 800135c:	455c      	cmp	r4, fp
 800135e:	d1e5      	bne.n	800132c <_format_int+0x8c>
 8001360:	e7ae      	b.n	80012c0 <_format_int+0x20>
 8001362:	f804 0901 	strb.w	r0, [r4], #-1
 8001366:	e7b3      	b.n	80012d0 <_format_int+0x30>
 8001368:	f804 0901 	strb.w	r0, [r4], #-1
 800136c:	e7bb      	b.n	80012e6 <_format_int+0x46>
 800136e:	f804 1901 	strb.w	r1, [r4], #-1
 8001372:	e7c8      	b.n	8001306 <_format_int+0x66>
 8001374:	4640      	mov	r0, r8
 8001376:	f814 1b01 	ldrb.w	r1, [r4], #1
 800137a:	f7ff ff7b 	bl	8001274 <_xputch>
 800137e:	e7c9      	b.n	8001314 <_format_int+0x74>
 8001380:	2120      	movs	r1, #32
 8001382:	4640      	mov	r0, r8
 8001384:	f7ff ff76 	bl	8001274 <_xputch>
 8001388:	3501      	adds	r5, #1
 800138a:	e7c6      	b.n	800131a <_format_int+0x7a>

0800138c <_format_hex>:
 800138c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800138e:	b091      	sub	sp, #68	; 0x44
 8001390:	4606      	mov	r6, r0
 8001392:	6804      	ldr	r4, [r0, #0]
 8001394:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8001398:	bb61      	cbnz	r1, 80013f4 <_format_hex+0x68>
 800139a:	2330      	movs	r3, #48	; 0x30
 800139c:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80013a0:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 80013a4:	07e5      	lsls	r5, r4, #31
 80013a6:	d507      	bpl.n	80013b8 <_format_hex+0x2c>
 80013a8:	4669      	mov	r1, sp
 80013aa:	2530      	movs	r5, #48	; 0x30
 80013ac:	6870      	ldr	r0, [r6, #4]
 80013ae:	1ad7      	subs	r7, r2, r3
 80013b0:	4287      	cmp	r7, r0
 80013b2:	da01      	bge.n	80013b8 <_format_hex+0x2c>
 80013b4:	428b      	cmp	r3, r1
 80013b6:	d831      	bhi.n	800141c <_format_hex+0x90>
 80013b8:	06a0      	lsls	r0, r4, #26
 80013ba:	d507      	bpl.n	80013cc <_format_hex+0x40>
 80013bc:	4669      	mov	r1, sp
 80013be:	2530      	movs	r5, #48	; 0x30
 80013c0:	68b0      	ldr	r0, [r6, #8]
 80013c2:	1ad7      	subs	r7, r2, r3
 80013c4:	4287      	cmp	r7, r0
 80013c6:	da01      	bge.n	80013cc <_format_hex+0x40>
 80013c8:	428b      	cmp	r3, r1
 80013ca:	d82a      	bhi.n	8001422 <_format_hex+0x96>
 80013cc:	0661      	lsls	r1, r4, #25
 80013ce:	d407      	bmi.n	80013e0 <_format_hex+0x54>
 80013d0:	4669      	mov	r1, sp
 80013d2:	2420      	movs	r4, #32
 80013d4:	68b0      	ldr	r0, [r6, #8]
 80013d6:	1ad5      	subs	r5, r2, r3
 80013d8:	4285      	cmp	r5, r0
 80013da:	da01      	bge.n	80013e0 <_format_hex+0x54>
 80013dc:	428b      	cmp	r3, r1
 80013de:	d823      	bhi.n	8001428 <_format_hex+0x9c>
 80013e0:	1ad5      	subs	r5, r2, r3
 80013e2:	1c5c      	adds	r4, r3, #1
 80013e4:	ab10      	add	r3, sp, #64	; 0x40
 80013e6:	429c      	cmp	r4, r3
 80013e8:	d321      	bcc.n	800142e <_format_hex+0xa2>
 80013ea:	68b3      	ldr	r3, [r6, #8]
 80013ec:	429d      	cmp	r5, r3
 80013ee:	db24      	blt.n	800143a <_format_hex+0xae>
 80013f0:	b011      	add	sp, #68	; 0x44
 80013f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013f4:	f014 0f02 	tst.w	r4, #2
 80013f8:	bf0c      	ite	eq
 80013fa:	2757      	moveq	r7, #87	; 0x57
 80013fc:	2737      	movne	r7, #55	; 0x37
 80013fe:	4613      	mov	r3, r2
 8001400:	466d      	mov	r5, sp
 8001402:	f001 000f 	and.w	r0, r1, #15
 8001406:	2809      	cmp	r0, #9
 8001408:	bf94      	ite	ls
 800140a:	3030      	addls	r0, #48	; 0x30
 800140c:	19c0      	addhi	r0, r0, r7
 800140e:	0909      	lsrs	r1, r1, #4
 8001410:	f803 0901 	strb.w	r0, [r3], #-1
 8001414:	d0c6      	beq.n	80013a4 <_format_hex+0x18>
 8001416:	42ab      	cmp	r3, r5
 8001418:	d1f3      	bne.n	8001402 <_format_hex+0x76>
 800141a:	e7c3      	b.n	80013a4 <_format_hex+0x18>
 800141c:	f803 5901 	strb.w	r5, [r3], #-1
 8001420:	e7c5      	b.n	80013ae <_format_hex+0x22>
 8001422:	f803 5901 	strb.w	r5, [r3], #-1
 8001426:	e7cc      	b.n	80013c2 <_format_hex+0x36>
 8001428:	f803 4901 	strb.w	r4, [r3], #-1
 800142c:	e7d3      	b.n	80013d6 <_format_hex+0x4a>
 800142e:	4630      	mov	r0, r6
 8001430:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001434:	f7ff ff1e 	bl	8001274 <_xputch>
 8001438:	e7d4      	b.n	80013e4 <_format_hex+0x58>
 800143a:	2120      	movs	r1, #32
 800143c:	4630      	mov	r0, r6
 800143e:	f7ff ff19 	bl	8001274 <_xputch>
 8001442:	3501      	adds	r5, #1
 8001444:	e7d1      	b.n	80013ea <_format_hex+0x5e>
	...

08001448 <_vprintf>:
 8001448:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800144c:	2700      	movs	r7, #0
 800144e:	460b      	mov	r3, r1
 8001450:	4614      	mov	r4, r2
 8001452:	f04f 080a 	mov.w	r8, #10
 8001456:	b086      	sub	sp, #24
 8001458:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800145c:	7819      	ldrb	r1, [r3, #0]
 800145e:	b919      	cbnz	r1, 8001468 <_vprintf+0x20>
 8001460:	9804      	ldr	r0, [sp, #16]
 8001462:	b006      	add	sp, #24
 8001464:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001468:	2925      	cmp	r1, #37	; 0x25
 800146a:	f103 0501 	add.w	r5, r3, #1
 800146e:	d004      	beq.n	800147a <_vprintf+0x32>
 8001470:	a801      	add	r0, sp, #4
 8001472:	f7ff feff 	bl	8001274 <_xputch>
 8001476:	462b      	mov	r3, r5
 8001478:	e7f0      	b.n	800145c <_vprintf+0x14>
 800147a:	785a      	ldrb	r2, [r3, #1]
 800147c:	e9cd 7701 	strd	r7, r7, [sp, #4]
 8001480:	2a30      	cmp	r2, #48	; 0x30
 8001482:	9703      	str	r7, [sp, #12]
 8001484:	d126      	bne.n	80014d4 <_vprintf+0x8c>
 8001486:	2220      	movs	r2, #32
 8001488:	9201      	str	r2, [sp, #4]
 800148a:	1c9d      	adds	r5, r3, #2
 800148c:	2200      	movs	r2, #0
 800148e:	462e      	mov	r6, r5
 8001490:	4613      	mov	r3, r2
 8001492:	7831      	ldrb	r1, [r6, #0]
 8001494:	4635      	mov	r5, r6
 8001496:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 800149a:	2809      	cmp	r0, #9
 800149c:	f106 0601 	add.w	r6, r6, #1
 80014a0:	d91c      	bls.n	80014dc <_vprintf+0x94>
 80014a2:	b12a      	cbz	r2, 80014b0 <_vprintf+0x68>
 80014a4:	9303      	str	r3, [sp, #12]
 80014a6:	b11b      	cbz	r3, 80014b0 <_vprintf+0x68>
 80014a8:	9b01      	ldr	r3, [sp, #4]
 80014aa:	f043 0310 	orr.w	r3, r3, #16
 80014ae:	9301      	str	r3, [sp, #4]
 80014b0:	292e      	cmp	r1, #46	; 0x2e
 80014b2:	d122      	bne.n	80014fa <_vprintf+0xb2>
 80014b4:	786b      	ldrb	r3, [r5, #1]
 80014b6:	2b2a      	cmp	r3, #42	; 0x2a
 80014b8:	d014      	beq.n	80014e4 <_vprintf+0x9c>
 80014ba:	2100      	movs	r1, #0
 80014bc:	460a      	mov	r2, r1
 80014be:	1c68      	adds	r0, r5, #1
 80014c0:	7803      	ldrb	r3, [r0, #0]
 80014c2:	4605      	mov	r5, r0
 80014c4:	3b30      	subs	r3, #48	; 0x30
 80014c6:	2b09      	cmp	r3, #9
 80014c8:	f100 0001 	add.w	r0, r0, #1
 80014cc:	d92f      	bls.n	800152e <_vprintf+0xe6>
 80014ce:	b181      	cbz	r1, 80014f2 <_vprintf+0xaa>
 80014d0:	9202      	str	r2, [sp, #8]
 80014d2:	e00e      	b.n	80014f2 <_vprintf+0xaa>
 80014d4:	2a2d      	cmp	r2, #45	; 0x2d
 80014d6:	d1d9      	bne.n	800148c <_vprintf+0x44>
 80014d8:	2240      	movs	r2, #64	; 0x40
 80014da:	e7d5      	b.n	8001488 <_vprintf+0x40>
 80014dc:	2201      	movs	r2, #1
 80014de:	fb08 0303 	mla	r3, r8, r3, r0
 80014e2:	e7d6      	b.n	8001492 <_vprintf+0x4a>
 80014e4:	f854 3b04 	ldr.w	r3, [r4], #4
 80014e8:	3502      	adds	r5, #2
 80014ea:	2b00      	cmp	r3, #0
 80014ec:	bfb8      	it	lt
 80014ee:	425b      	neglt	r3, r3
 80014f0:	9302      	str	r3, [sp, #8]
 80014f2:	9b01      	ldr	r3, [sp, #4]
 80014f4:	f043 0301 	orr.w	r3, r3, #1
 80014f8:	9301      	str	r3, [sp, #4]
 80014fa:	782b      	ldrb	r3, [r5, #0]
 80014fc:	2b6c      	cmp	r3, #108	; 0x6c
 80014fe:	bf04      	itt	eq
 8001500:	9b01      	ldreq	r3, [sp, #4]
 8001502:	3501      	addeq	r5, #1
 8001504:	7829      	ldrb	r1, [r5, #0]
 8001506:	bf04      	itt	eq
 8001508:	f043 0304 	orreq.w	r3, r3, #4
 800150c:	9301      	streq	r3, [sp, #4]
 800150e:	2978      	cmp	r1, #120	; 0x78
 8001510:	d8ae      	bhi.n	8001470 <_vprintf+0x28>
 8001512:	296f      	cmp	r1, #111	; 0x6f
 8001514:	d80f      	bhi.n	8001536 <_vprintf+0xee>
 8001516:	2963      	cmp	r1, #99	; 0x63
 8001518:	d045      	beq.n	80015a6 <_vprintf+0x15e>
 800151a:	d825      	bhi.n	8001568 <_vprintf+0x120>
 800151c:	2958      	cmp	r1, #88	; 0x58
 800151e:	d1a7      	bne.n	8001470 <_vprintf+0x28>
 8001520:	9b01      	ldr	r3, [sp, #4]
 8001522:	f043 0302 	orr.w	r3, r3, #2
 8001526:	9301      	str	r3, [sp, #4]
 8001528:	f854 1b04 	ldr.w	r1, [r4], #4
 800152c:	e051      	b.n	80015d2 <_vprintf+0x18a>
 800152e:	2101      	movs	r1, #1
 8001530:	fb08 3202 	mla	r2, r8, r2, r3
 8001534:	e7c4      	b.n	80014c0 <_vprintf+0x78>
 8001536:	f1a1 0370 	sub.w	r3, r1, #112	; 0x70
 800153a:	2b08      	cmp	r3, #8
 800153c:	d898      	bhi.n	8001470 <_vprintf+0x28>
 800153e:	a201      	add	r2, pc, #4	; (adr r2, 8001544 <_vprintf+0xfc>)
 8001540:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001544:	080015b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, ip}
 8001548:	08001471 	stmdaeq	r0, {r0, r4, r5, r6, sl, ip}
 800154c:	08001471 	stmdaeq	r0, {r0, r4, r5, r6, sl, ip}
 8001550:	080015db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, sl, ip}
 8001554:	08001471 	stmdaeq	r0, {r0, r4, r5, r6, sl, ip}
 8001558:	0800164d 	stmdaeq	r0, {r0, r2, r3, r6, r9, sl, ip}
 800155c:	08001471 	stmdaeq	r0, {r0, r4, r5, r6, sl, ip}
 8001560:	08001471 	stmdaeq	r0, {r0, r4, r5, r6, sl, ip}
 8001564:	08001529 	stmdaeq	r0, {r0, r3, r5, r8, sl, ip}
 8001568:	2964      	cmp	r1, #100	; 0x64
 800156a:	d002      	beq.n	8001572 <_vprintf+0x12a>
 800156c:	2969      	cmp	r1, #105	; 0x69
 800156e:	f47f af7f 	bne.w	8001470 <_vprintf+0x28>
 8001572:	9901      	ldr	r1, [sp, #4]
 8001574:	074e      	lsls	r6, r1, #29
 8001576:	bf43      	ittte	mi
 8001578:	3407      	addmi	r4, #7
 800157a:	f024 0307 	bicmi.w	r3, r4, #7
 800157e:	461c      	movmi	r4, r3
 8001580:	f854 2b04 	ldrpl.w	r2, [r4], #4
 8001584:	bf4a      	itet	mi
 8001586:	685b      	ldrmi	r3, [r3, #4]
 8001588:	17d3      	asrpl	r3, r2, #31
 800158a:	f854 2b08 	ldrmi.w	r2, [r4], #8
 800158e:	2b00      	cmp	r3, #0
 8001590:	da05      	bge.n	800159e <_vprintf+0x156>
 8001592:	f041 0108 	orr.w	r1, r1, #8
 8001596:	4252      	negs	r2, r2
 8001598:	9101      	str	r1, [sp, #4]
 800159a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800159e:	a801      	add	r0, sp, #4
 80015a0:	f7ff fe7e 	bl	80012a0 <_format_int>
 80015a4:	e004      	b.n	80015b0 <_vprintf+0x168>
 80015a6:	f854 1b04 	ldr.w	r1, [r4], #4
 80015aa:	a801      	add	r0, sp, #4
 80015ac:	f7ff fe62 	bl	8001274 <_xputch>
 80015b0:	3501      	adds	r5, #1
 80015b2:	e760      	b.n	8001476 <_vprintf+0x2e>
 80015b4:	2308      	movs	r3, #8
 80015b6:	9303      	str	r3, [sp, #12]
 80015b8:	2320      	movs	r3, #32
 80015ba:	2130      	movs	r1, #48	; 0x30
 80015bc:	f854 6b04 	ldr.w	r6, [r4], #4
 80015c0:	a801      	add	r0, sp, #4
 80015c2:	9301      	str	r3, [sp, #4]
 80015c4:	f7ff fe56 	bl	8001274 <_xputch>
 80015c8:	2178      	movs	r1, #120	; 0x78
 80015ca:	a801      	add	r0, sp, #4
 80015cc:	f7ff fe52 	bl	8001274 <_xputch>
 80015d0:	4631      	mov	r1, r6
 80015d2:	a801      	add	r0, sp, #4
 80015d4:	f7ff feda 	bl	800138c <_format_hex>
 80015d8:	e7ea      	b.n	80015b0 <_vprintf+0x168>
 80015da:	2600      	movs	r6, #0
 80015dc:	f854 9b04 	ldr.w	r9, [r4], #4
 80015e0:	f819 3006 	ldrb.w	r3, [r9, r6]
 80015e4:	b993      	cbnz	r3, 800160c <_vprintf+0x1c4>
 80015e6:	9b01      	ldr	r3, [sp, #4]
 80015e8:	07d9      	lsls	r1, r3, #31
 80015ea:	d503      	bpl.n	80015f4 <_vprintf+0x1ac>
 80015ec:	9b02      	ldr	r3, [sp, #8]
 80015ee:	429e      	cmp	r6, r3
 80015f0:	bfa8      	it	ge
 80015f2:	461e      	movge	r6, r3
 80015f4:	9b01      	ldr	r3, [sp, #4]
 80015f6:	f106 0a01 	add.w	sl, r6, #1
 80015fa:	065a      	lsls	r2, r3, #25
 80015fc:	d403      	bmi.n	8001606 <_vprintf+0x1be>
 80015fe:	9b03      	ldr	r3, [sp, #12]
 8001600:	429e      	cmp	r6, r3
 8001602:	db05      	blt.n	8001610 <_vprintf+0x1c8>
 8001604:	4656      	mov	r6, sl
 8001606:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800160a:	e00d      	b.n	8001628 <_vprintf+0x1e0>
 800160c:	3601      	adds	r6, #1
 800160e:	e7e7      	b.n	80015e0 <_vprintf+0x198>
 8001610:	2120      	movs	r1, #32
 8001612:	a801      	add	r0, sp, #4
 8001614:	f7ff fe2e 	bl	8001274 <_xputch>
 8001618:	4656      	mov	r6, sl
 800161a:	e7eb      	b.n	80015f4 <_vprintf+0x1ac>
 800161c:	a801      	add	r0, sp, #4
 800161e:	f7ff fe29 	bl	8001274 <_xputch>
 8001622:	9b02      	ldr	r3, [sp, #8]
 8001624:	3b01      	subs	r3, #1
 8001626:	9302      	str	r3, [sp, #8]
 8001628:	9b01      	ldr	r3, [sp, #4]
 800162a:	07db      	lsls	r3, r3, #31
 800162c:	d501      	bpl.n	8001632 <_vprintf+0x1ea>
 800162e:	9b02      	ldr	r3, [sp, #8]
 8001630:	b11b      	cbz	r3, 800163a <_vprintf+0x1f2>
 8001632:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8001636:	2900      	cmp	r1, #0
 8001638:	d1f0      	bne.n	800161c <_vprintf+0x1d4>
 800163a:	9b03      	ldr	r3, [sp, #12]
 800163c:	42b3      	cmp	r3, r6
 800163e:	ddb7      	ble.n	80015b0 <_vprintf+0x168>
 8001640:	2120      	movs	r1, #32
 8001642:	a801      	add	r0, sp, #4
 8001644:	f7ff fe16 	bl	8001274 <_xputch>
 8001648:	3601      	adds	r6, #1
 800164a:	e7f6      	b.n	800163a <_vprintf+0x1f2>
 800164c:	9b01      	ldr	r3, [sp, #4]
 800164e:	f013 0304 	ands.w	r3, r3, #4
 8001652:	bf1d      	ittte	ne
 8001654:	3407      	addne	r4, #7
 8001656:	f024 0307 	bicne.w	r3, r4, #7
 800165a:	461c      	movne	r4, r3
 800165c:	f854 2b04 	ldreq.w	r2, [r4], #4
 8001660:	bf1c      	itt	ne
 8001662:	f854 2b08 	ldrne.w	r2, [r4], #8
 8001666:	685b      	ldrne	r3, [r3, #4]
 8001668:	e799      	b.n	800159e <_vprintf+0x156>
 800166a:	bf00      	nop

0800166c <printf>:
 800166c:	b40f      	push	{r0, r1, r2, r3}
 800166e:	b507      	push	{r0, r1, r2, lr}
 8001670:	aa04      	add	r2, sp, #16
 8001672:	f852 1b04 	ldr.w	r1, [r2], #4
 8001676:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800167a:	9201      	str	r2, [sp, #4]
 800167c:	f7ff fee4 	bl	8001448 <_vprintf>
 8001680:	b003      	add	sp, #12
 8001682:	f85d eb04 	ldr.w	lr, [sp], #4
 8001686:	b004      	add	sp, #16
 8001688:	4770      	bx	lr
	...

0800168c <Widget::Widget()>:
 800168c:	b510      	push	{r4, lr}
 800168e:	4604      	mov	r4, r0
 8001690:	f001 f906 	bl	80028a0 <Dmx::Dmx()>
 8001694:	f104 001c 	add.w	r0, r4, #28
 8001698:	f001 fbe0 	bl	8002e5c <RDMDevice::RDMDevice()>
 800169c:	2300      	movs	r3, #0
 800169e:	e9c4 33bc 	strd	r3, r3, [r4, #752]	; 0x2f0
 80016a2:	e9c4 33be 	strd	r3, r3, [r4, #760]	; 0x2f8
 80016a6:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 80016aa:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 80016ae:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
 80016b2:	4b03      	ldr	r3, [pc, #12]	; (80016c0 <Widget::Widget()+0x34>)
 80016b4:	601c      	str	r4, [r3, #0]
 80016b6:	f001 faef 	bl	8002c98 <FT245RL_init>
 80016ba:	4620      	mov	r0, r4
 80016bc:	bd10      	pop	{r4, pc}
 80016be:	bf00      	nop
 80016c0:	200000f4 	strdcs	r0, [r0], -r4

080016c4 <Widget::GetParamsReply()>:
 80016c4:	b513      	push	{r0, r1, r4, lr}
 80016c6:	4604      	mov	r4, r0
 80016c8:	4911      	ldr	r1, [pc, #68]	; (8001710 <Widget::GetParamsReply()+0x4c>)
 80016ca:	2007      	movs	r0, #7
 80016cc:	f000 fb90 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 80016d0:	2100      	movs	r1, #0
 80016d2:	201c      	movs	r0, #28
 80016d4:	f000 fb8c 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 80016d8:	4b0e      	ldr	r3, [pc, #56]	; (8001714 <Widget::GetParamsReply()+0x50>)
 80016da:	466a      	mov	r2, sp
 80016dc:	781b      	ldrb	r3, [r3, #0]
 80016de:	2103      	movs	r1, #3
 80016e0:	f88d 3002 	strb.w	r3, [sp, #2]
 80016e4:	4b0c      	ldr	r3, [pc, #48]	; (8001718 <Widget::GetParamsReply()+0x54>)
 80016e6:	4620      	mov	r0, r4
 80016e8:	781b      	ldrb	r3, [r3, #0]
 80016ea:	f88d 3000 	strb.w	r3, [sp]
 80016ee:	4b0b      	ldr	r3, [pc, #44]	; (800171c <Widget::GetParamsReply()+0x58>)
 80016f0:	781b      	ldrb	r3, [r3, #0]
 80016f2:	f88d 3001 	strb.w	r3, [sp, #1]
 80016f6:	4b0a      	ldr	r3, [pc, #40]	; (8001720 <Widget::GetParamsReply()+0x5c>)
 80016f8:	781b      	ldrb	r3, [r3, #0]
 80016fa:	f88d 3003 	strb.w	r3, [sp, #3]
 80016fe:	4b09      	ldr	r3, [pc, #36]	; (8001724 <Widget::GetParamsReply()+0x60>)
 8001700:	781b      	ldrb	r3, [r3, #0]
 8001702:	f88d 3004 	strb.w	r3, [sp, #4]
 8001706:	2305      	movs	r3, #5
 8001708:	f000 fd32 	bl	8002170 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>
 800170c:	b002      	add	sp, #8
 800170e:	bd10      	pop	{r4, pc}
 8001710:	08005454 	stmdaeq	r0, {r2, r4, r6, sl, ip, lr}
 8001714:	20000001 	andcs	r0, r0, r1
 8001718:	20000002 	andcs	r0, r0, r2
 800171c:	20000003 	andcs	r0, r0, r3
 8001720:	20000000 	andcs	r0, r0, r0
 8001724:	20000004 	andcs	r0, r0, r4

08001728 <Widget::SetParams()>:
 8001728:	b513      	push	{r0, r1, r4, lr}
 800172a:	4604      	mov	r4, r0
 800172c:	4914      	ldr	r1, [pc, #80]	; (8001780 <Widget::SetParams()+0x58>)
 800172e:	2007      	movs	r0, #7
 8001730:	f000 fb5e 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001734:	2100      	movs	r1, #0
 8001736:	201c      	movs	r0, #28
 8001738:	f000 fb5a 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 800173c:	2300      	movs	r3, #0
 800173e:	2201      	movs	r2, #1
 8001740:	4619      	mov	r1, r3
 8001742:	4620      	mov	r0, r4
 8001744:	f001 f87e 	bl	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001748:	f894 309a 	ldrb.w	r3, [r4, #154]	; 0x9a
 800174c:	4668      	mov	r0, sp
 800174e:	f88d 3002 	strb.w	r3, [sp, #2]
 8001752:	f894 309b 	ldrb.w	r3, [r4, #155]	; 0x9b
 8001756:	f88d 3003 	strb.w	r3, [sp, #3]
 800175a:	f894 309c 	ldrb.w	r3, [r4, #156]	; 0x9c
 800175e:	f88d 3004 	strb.w	r3, [sp, #4]
 8001762:	f000 fd65 	bl	8002230 <WidgetConfiguration::Store(TWidgetConfiguration const*)>
 8001766:	2301      	movs	r3, #1
 8001768:	2100      	movs	r1, #0
 800176a:	461a      	mov	r2, r3
 800176c:	4620      	mov	r0, r4
 800176e:	f001 f869 	bl	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001772:	4b04      	ldr	r3, [pc, #16]	; (8001784 <Widget::SetParams()+0x5c>)
 8001774:	681b      	ldr	r3, [r3, #0]
 8001776:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 800177a:	b002      	add	sp, #8
 800177c:	bd10      	pop	{r4, pc}
 800177e:	bf00      	nop
 8001780:	0800546c 	stmdaeq	r0, {r2, r3, r5, r6, sl, ip, lr}
 8001784:	20001814 	andcs	r1, r0, r4, lsl r8

08001788 <Widget::ReceivedDmxPacket()>:
 8001788:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800178a:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 800178e:	4604      	mov	r4, r0
 8001790:	2b03      	cmp	r3, #3
 8001792:	d042      	beq.n	800181a <Widget::ReceivedDmxPacket()+0x92>
 8001794:	f890 7304 	ldrb.w	r7, [r0, #772]	; 0x304
 8001798:	2f00      	cmp	r7, #0
 800179a:	d13e      	bne.n	800181a <Widget::ReceivedDmxPacket()+0x92>
 800179c:	6943      	ldr	r3, [r0, #20]
 800179e:	2b01      	cmp	r3, #1
 80017a0:	d13b      	bne.n	800181a <Widget::ReceivedDmxPacket()+0x92>
 80017a2:	f8d0 32f4 	ldr.w	r3, [r0, #756]	; 0x2f4
 80017a6:	2b01      	cmp	r3, #1
 80017a8:	d037      	beq.n	800181a <Widget::ReceivedDmxPacket()+0x92>
 80017aa:	4639      	mov	r1, r7
 80017ac:	f001 f9c2 	bl	8002b34 <Dmx::GetDmxAvailable(unsigned int)>
 80017b0:	4605      	mov	r5, r0
 80017b2:	b390      	cbz	r0, 800181a <Widget::ReceivedDmxPacket()+0x92>
 80017b4:	4b19      	ldr	r3, [pc, #100]	; (800181c <Widget::ReceivedDmxPacket()+0x94>)
 80017b6:	f8d4 12f8 	ldr.w	r1, [r4, #760]	; 0x2f8
 80017ba:	681a      	ldr	r2, [r3, #0]
 80017bc:	f8d4 32fc 	ldr.w	r3, [r4, #764]	; 0x2fc
 80017c0:	1ad3      	subs	r3, r2, r3
 80017c2:	428b      	cmp	r3, r1
 80017c4:	d329      	bcc.n	800181a <Widget::ReceivedDmxPacket()+0x92>
 80017c6:	f8d4 3308 	ldr.w	r3, [r4, #776]	; 0x308
 80017ca:	f8c4 22fc 	str.w	r2, [r4, #764]	; 0x2fc
 80017ce:	3301      	adds	r3, #1
 80017d0:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
 80017d4:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 80017d8:	4911      	ldr	r1, [pc, #68]	; (8001820 <Widget::ReceivedDmxPacket()+0x98>)
 80017da:	3601      	adds	r6, #1
 80017dc:	2006      	movs	r0, #6
 80017de:	f000 fb07 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 80017e2:	4632      	mov	r2, r6
 80017e4:	2007      	movs	r0, #7
 80017e6:	490f      	ldr	r1, [pc, #60]	; (8001824 <Widget::ReceivedDmxPacket()+0x9c>)
 80017e8:	f000 fb02 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 80017ec:	4639      	mov	r1, r7
 80017ee:	201c      	movs	r0, #28
 80017f0:	f000 fafe 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 80017f4:	1c72      	adds	r2, r6, #1
 80017f6:	2105      	movs	r1, #5
 80017f8:	4620      	mov	r0, r4
 80017fa:	b292      	uxth	r2, r2
 80017fc:	f000 fc98 	bl	8002130 <Widget::SendHeader(unsigned char, unsigned int)>
 8001800:	4638      	mov	r0, r7
 8001802:	f001 fa2a 	bl	8002c5a <usb_send_byte>
 8001806:	4620      	mov	r0, r4
 8001808:	4629      	mov	r1, r5
 800180a:	b2b2      	uxth	r2, r6
 800180c:	f000 fca2 	bl	8002154 <Widget::SendData(unsigned char const*, unsigned int)>
 8001810:	4620      	mov	r0, r4
 8001812:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8001816:	f000 bca8 	b.w	800216a <Widget::SendFooter()>
 800181a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800181c:	20001814 	andcs	r1, r0, r4, lsl r8
 8001820:	0800547e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, sl, ip, lr}
 8001824:	08005492 	stmdaeq	r0, {r1, r4, r7, sl, ip, lr}

08001828 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>:
 8001828:	b570      	push	{r4, r5, r6, lr}
 800182a:	f8d0 5300 	ldr.w	r5, [r0, #768]	; 0x300
 800182e:	4604      	mov	r4, r0
 8001830:	460e      	mov	r6, r1
 8001832:	b9e5      	cbnz	r5, 800186e <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x46>
 8001834:	2007      	movs	r0, #7
 8001836:	490e      	ldr	r1, [pc, #56]	; (8001870 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x48>)
 8001838:	f000 fada 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 800183c:	4629      	mov	r1, r5
 800183e:	201c      	movs	r0, #28
 8001840:	f000 fad6 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001844:	462b      	mov	r3, r5
 8001846:	462a      	mov	r2, r5
 8001848:	4629      	mov	r1, r5
 800184a:	4620      	mov	r0, r4
 800184c:	f000 fffa 	bl	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001850:	4633      	mov	r3, r6
 8001852:	4629      	mov	r1, r5
 8001854:	4620      	mov	r0, r4
 8001856:	f104 0298 	add.w	r2, r4, #152	; 0x98
 800185a:	f001 f943 	bl	8002ae4 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)>
 800185e:	462a      	mov	r2, r5
 8001860:	4629      	mov	r1, r5
 8001862:	4620      	mov	r0, r4
 8001864:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001868:	2301      	movs	r3, #1
 800186a:	f000 bfeb 	b.w	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800186e:	bd70      	pop	{r4, r5, r6, pc}
 8001870:	080054ac 	stmdaeq	r0, {r2, r3, r5, r7, sl, ip, lr}

08001874 <Widget::SendRdmPacketRequest(unsigned short)>:
 8001874:	b570      	push	{r4, r5, r6, lr}
 8001876:	4604      	mov	r4, r0
 8001878:	460d      	mov	r5, r1
 800187a:	2007      	movs	r0, #7
 800187c:	4910      	ldr	r1, [pc, #64]	; (80018c0 <Widget::SendRdmPacketRequest(unsigned short)+0x4c>)
 800187e:	f000 fab7 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001882:	2100      	movs	r1, #0
 8001884:	201c      	movs	r0, #28
 8001886:	f000 fab3 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 800188a:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800188e:	f104 0698 	add.w	r6, r4, #152	; 0x98
 8001892:	f1a3 0210 	sub.w	r2, r3, #16
 8001896:	4253      	negs	r3, r2
 8001898:	4153      	adcs	r3, r2
 800189a:	4631      	mov	r1, r6
 800189c:	462a      	mov	r2, r5
 800189e:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 80018a2:	2000      	movs	r0, #0
 80018a4:	f000 fd26 	bl	80022f4 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 80018a8:	4b06      	ldr	r3, [pc, #24]	; (80018c4 <Widget::SendRdmPacketRequest(unsigned short)+0x50>)
 80018aa:	4632      	mov	r2, r6
 80018ac:	681b      	ldr	r3, [r3, #0]
 80018ae:	4629      	mov	r1, r5
 80018b0:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 80018b4:	2011      	movs	r0, #17
 80018b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80018ba:	2301      	movs	r3, #1
 80018bc:	f000 bd10 	b.w	80022e0 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 80018c0:	080054d0 	stmdaeq	r0, {r4, r6, r7, sl, ip, lr}
 80018c4:	20001814 	andcs	r1, r0, r4, lsl r8

080018c8 <Widget::ReceiveDmxOnChange()>:
 80018c8:	b510      	push	{r4, lr}
 80018ca:	4604      	mov	r4, r0
 80018cc:	4910      	ldr	r1, [pc, #64]	; (8001910 <Widget::ReceiveDmxOnChange()+0x48>)
 80018ce:	2007      	movs	r0, #7
 80018d0:	f000 fa8e 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 80018d4:	2100      	movs	r1, #0
 80018d6:	201c      	movs	r0, #28
 80018d8:	f000 fa8a 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 80018dc:	f894 3098 	ldrb.w	r3, [r4, #152]	; 0x98
 80018e0:	2201      	movs	r2, #1
 80018e2:	f8c4 32f4 	str.w	r3, [r4, #756]	; 0x2f4
 80018e6:	2300      	movs	r3, #0
 80018e8:	4620      	mov	r0, r4
 80018ea:	4619      	mov	r1, r3
 80018ec:	f000 ffaa 	bl	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80018f0:	2100      	movs	r1, #0
 80018f2:	4620      	mov	r0, r4
 80018f4:	f000 feb2 	bl	800265c <Dmx::ClearData(unsigned int)>
 80018f8:	2301      	movs	r3, #1
 80018fa:	2100      	movs	r1, #0
 80018fc:	461a      	mov	r2, r3
 80018fe:	4620      	mov	r0, r4
 8001900:	f000 ffa0 	bl	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001904:	4b03      	ldr	r3, [pc, #12]	; (8001914 <Widget::ReceiveDmxOnChange()+0x4c>)
 8001906:	681b      	ldr	r3, [r3, #0]
 8001908:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 800190c:	bd10      	pop	{r4, pc}
 800190e:	bf00      	nop
 8001910:	080054e8 	stmdaeq	r0, {r3, r5, r6, r7, sl, ip, lr}
 8001914:	20001814 	andcs	r1, r0, r4, lsl r8

08001918 <Widget::ReceivedDmxChangeOfStatePacket()>:
 8001918:	f8d0 22f0 	ldr.w	r2, [r0, #752]	; 0x2f0
 800191c:	b510      	push	{r4, lr}
 800191e:	2a03      	cmp	r2, #3
 8001920:	d01a      	beq.n	8001958 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001922:	f890 4304 	ldrb.w	r4, [r0, #772]	; 0x304
 8001926:	b9bc      	cbnz	r4, 8001958 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001928:	6942      	ldr	r2, [r0, #20]
 800192a:	2a01      	cmp	r2, #1
 800192c:	d114      	bne.n	8001958 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 800192e:	f8d0 32f4 	ldr.w	r3, [r0, #756]	; 0x2f4
 8001932:	b18b      	cbz	r3, 8001958 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001934:	4621      	mov	r1, r4
 8001936:	f001 f911 	bl	8002b5c <Dmx::GetDmxChanged(unsigned int)>
 800193a:	b168      	cbz	r0, 8001958 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 800193c:	2007      	movs	r0, #7
 800193e:	4907      	ldr	r1, [pc, #28]	; (800195c <Widget::ReceivedDmxChangeOfStatePacket()+0x44>)
 8001940:	f000 fa56 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001944:	4621      	mov	r1, r4
 8001946:	201c      	movs	r0, #28
 8001948:	f000 fa52 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 800194c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001950:	2007      	movs	r0, #7
 8001952:	4903      	ldr	r1, [pc, #12]	; (8001960 <Widget::ReceivedDmxChangeOfStatePacket()+0x48>)
 8001954:	f000 ba4c 	b.w	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001958:	bd10      	pop	{r4, pc}
 800195a:	bf00      	nop
 800195c:	080054fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, sl, ip, lr}
 8001960:	08005514 	stmdaeq	r0, {r2, r4, r8, sl, ip, lr}

08001964 <Widget::GetSnReply()>:
 8001964:	b510      	push	{r4, lr}
 8001966:	4910      	ldr	r1, [pc, #64]	; (80019a8 <Widget::GetSnReply()+0x44>)
 8001968:	4604      	mov	r4, r0
 800196a:	2007      	movs	r0, #7
 800196c:	f000 fa40 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001970:	2100      	movs	r1, #0
 8001972:	201c      	movs	r0, #28
 8001974:	f000 fa3c 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001978:	2300      	movs	r3, #0
 800197a:	2201      	movs	r2, #1
 800197c:	4619      	mov	r1, r3
 800197e:	4620      	mov	r0, r4
 8001980:	f000 ff60 	bl	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001984:	2304      	movs	r3, #4
 8001986:	210a      	movs	r1, #10
 8001988:	4620      	mov	r0, r4
 800198a:	f104 0222 	add.w	r2, r4, #34	; 0x22
 800198e:	f000 fbef 	bl	8002170 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>
 8001992:	2301      	movs	r3, #1
 8001994:	2100      	movs	r1, #0
 8001996:	461a      	mov	r2, r3
 8001998:	4620      	mov	r0, r4
 800199a:	f000 ff53 	bl	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800199e:	4b03      	ldr	r3, [pc, #12]	; (80019ac <Widget::GetSnReply()+0x48>)
 80019a0:	681b      	ldr	r3, [r3, #0]
 80019a2:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 80019a6:	bd10      	pop	{r4, pc}
 80019a8:	08005454 	stmdaeq	r0, {r2, r4, r6, sl, ip, lr}
 80019ac:	20001814 	andcs	r1, r0, r4, lsl r8

080019b0 <Widget::SendRdmDiscoveryRequest(unsigned short)>:
 80019b0:	b570      	push	{r4, r5, r6, lr}
 80019b2:	4604      	mov	r4, r0
 80019b4:	460d      	mov	r5, r1
 80019b6:	2007      	movs	r0, #7
 80019b8:	490d      	ldr	r1, [pc, #52]	; (80019f0 <Widget::SendRdmDiscoveryRequest(unsigned short)+0x40>)
 80019ba:	f000 fa19 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 80019be:	f104 0698 	add.w	r6, r4, #152	; 0x98
 80019c2:	2100      	movs	r1, #0
 80019c4:	201c      	movs	r0, #28
 80019c6:	f000 fa13 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 80019ca:	462a      	mov	r2, r5
 80019cc:	4631      	mov	r1, r6
 80019ce:	2000      	movs	r0, #0
 80019d0:	f000 fc90 	bl	80022f4 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 80019d4:	2301      	movs	r3, #1
 80019d6:	4a07      	ldr	r2, [pc, #28]	; (80019f4 <Widget::SendRdmDiscoveryRequest(unsigned short)+0x44>)
 80019d8:	4629      	mov	r1, r5
 80019da:	6812      	ldr	r2, [r2, #0]
 80019dc:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 80019e0:	f8c4 2300 	str.w	r2, [r4, #768]	; 0x300
 80019e4:	2011      	movs	r0, #17
 80019e6:	4632      	mov	r2, r6
 80019e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80019ec:	f000 bc78 	b.w	80022e0 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 80019f0:	08005532 	stmdaeq	r0, {r1, r4, r5, r8, sl, ip, lr}
 80019f4:	20001814 	andcs	r1, r0, r4, lsl r8

080019f8 <Widget::RdmTimeOutMessage()>:
 80019f8:	b510      	push	{r4, lr}
 80019fa:	4604      	mov	r4, r0
 80019fc:	2200      	movs	r2, #0
 80019fe:	2007      	movs	r0, #7
 8001a00:	490a      	ldr	r1, [pc, #40]	; (8001a2c <Widget::RdmTimeOutMessage()+0x34>)
 8001a02:	f000 f9f5 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001a06:	201c      	movs	r0, #28
 8001a08:	4909      	ldr	r1, [pc, #36]	; (8001a30 <Widget::RdmTimeOutMessage()+0x38>)
 8001a0a:	f000 f9f1 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001a0e:	2200      	movs	r2, #0
 8001a10:	210c      	movs	r1, #12
 8001a12:	4620      	mov	r0, r4
 8001a14:	f000 fb8c 	bl	8002130 <Widget::SendHeader(unsigned char, unsigned int)>
 8001a18:	4620      	mov	r0, r4
 8001a1a:	f000 fba6 	bl	800216a <Widget::SendFooter()>
 8001a1e:	2300      	movs	r3, #0
 8001a20:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 8001a24:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8001a28:	bd10      	pop	{r4, pc}
 8001a2a:	bf00      	nop
 8001a2c:	0800554d 	stmdaeq	r0, {r0, r2, r3, r6, r8, sl, ip, lr}
 8001a30:	08005569 	stmdaeq	r0, {r0, r3, r5, r6, r8, sl, ip, lr}

08001a34 <Widget::ReceivedRdmPacket()>:
 8001a34:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001a38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001a3c:	f023 0302 	bic.w	r3, r3, #2
 8001a40:	2b01      	cmp	r3, #1
 8001a42:	4604      	mov	r4, r0
 8001a44:	d063      	beq.n	8001b0e <Widget::ReceivedRdmPacket()+0xda>
 8001a46:	f8d0 32f4 	ldr.w	r3, [r0, #756]	; 0x2f4
 8001a4a:	2b01      	cmp	r3, #1
 8001a4c:	d05f      	beq.n	8001b0e <Widget::ReceivedRdmPacket()+0xda>
 8001a4e:	2000      	movs	r0, #0
 8001a50:	f000 fc48 	bl	80022e4 <Rdm::Receive(unsigned int)>
 8001a54:	4605      	mov	r5, r0
 8001a56:	2800      	cmp	r0, #0
 8001a58:	d059      	beq.n	8001b0e <Widget::ReceivedRdmPacket()+0xda>
 8001a5a:	7803      	ldrb	r3, [r0, #0]
 8001a5c:	2bcc      	cmp	r3, #204	; 0xcc
 8001a5e:	d134      	bne.n	8001aca <Widget::ReceivedRdmPacket()+0x96>
 8001a60:	7886      	ldrb	r6, [r0, #2]
 8001a62:	7d07      	ldrb	r7, [r0, #20]
 8001a64:	3602      	adds	r6, #2
 8001a66:	b2f6      	uxtb	r6, r6
 8001a68:	4632      	mov	r2, r6
 8001a6a:	2007      	movs	r0, #7
 8001a6c:	4929      	ldr	r1, [pc, #164]	; (8001b14 <Widget::ReceivedRdmPacket()+0xe0>)
 8001a6e:	f000 f9bf 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001a72:	201c      	movs	r0, #28
 8001a74:	4928      	ldr	r1, [pc, #160]	; (8001b18 <Widget::ReceivedRdmPacket()+0xe4>)
 8001a76:	f000 f9bb 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001a7a:	2105      	movs	r1, #5
 8001a7c:	1c72      	adds	r2, r6, #1
 8001a7e:	4620      	mov	r0, r4
 8001a80:	f000 fb56 	bl	8002130 <Widget::SendHeader(unsigned char, unsigned int)>
 8001a84:	2000      	movs	r0, #0
 8001a86:	f001 f8e8 	bl	8002c5a <usb_send_byte>
 8001a8a:	4632      	mov	r2, r6
 8001a8c:	4629      	mov	r1, r5
 8001a8e:	4620      	mov	r0, r4
 8001a90:	f000 fb60 	bl	8002154 <Widget::SendData(unsigned char const*, unsigned int)>
 8001a94:	4620      	mov	r0, r4
 8001a96:	f000 fb68 	bl	800216a <Widget::SendFooter()>
 8001a9a:	2f11      	cmp	r7, #17
 8001a9c:	d111      	bne.n	8001ac2 <Widget::ReceivedRdmPacket()+0x8e>
 8001a9e:	7d6a      	ldrb	r2, [r5, #21]
 8001aa0:	7dab      	ldrb	r3, [r5, #22]
 8001aa2:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8001aa6:	b29b      	uxth	r3, r3
 8001aa8:	2b02      	cmp	r3, #2
 8001aaa:	d00a      	beq.n	8001ac2 <Widget::ReceivedRdmPacket()+0x8e>
 8001aac:	4620      	mov	r0, r4
 8001aae:	f7ff ffa3 	bl	80019f8 <Widget::RdmTimeOutMessage()>
 8001ab2:	462a      	mov	r2, r5
 8001ab4:	4631      	mov	r1, r6
 8001ab6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001aba:	2300      	movs	r3, #0
 8001abc:	2011      	movs	r0, #17
 8001abe:	f000 bc0f 	b.w	80022e0 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8001ac2:	2300      	movs	r3, #0
 8001ac4:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8001ac8:	e7f3      	b.n	8001ab2 <Widget::ReceivedRdmPacket()+0x7e>
 8001aca:	2bfe      	cmp	r3, #254	; 0xfe
 8001acc:	d11d      	bne.n	8001b0a <Widget::ReceivedRdmPacket()+0xd6>
 8001ace:	2218      	movs	r2, #24
 8001ad0:	2007      	movs	r0, #7
 8001ad2:	4910      	ldr	r1, [pc, #64]	; (8001b14 <Widget::ReceivedRdmPacket()+0xe0>)
 8001ad4:	f000 f98c 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001ad8:	201c      	movs	r0, #28
 8001ada:	4910      	ldr	r1, [pc, #64]	; (8001b1c <Widget::ReceivedRdmPacket()+0xe8>)
 8001adc:	f000 f988 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001ae0:	2219      	movs	r2, #25
 8001ae2:	2105      	movs	r1, #5
 8001ae4:	4620      	mov	r0, r4
 8001ae6:	f000 fb23 	bl	8002130 <Widget::SendHeader(unsigned char, unsigned int)>
 8001aea:	2000      	movs	r0, #0
 8001aec:	f001 f8b5 	bl	8002c5a <usb_send_byte>
 8001af0:	2218      	movs	r2, #24
 8001af2:	4629      	mov	r1, r5
 8001af4:	4620      	mov	r0, r4
 8001af6:	f000 fb2d 	bl	8002154 <Widget::SendData(unsigned char const*, unsigned int)>
 8001afa:	4620      	mov	r0, r4
 8001afc:	f000 fb35 	bl	800216a <Widget::SendFooter()>
 8001b00:	4620      	mov	r0, r4
 8001b02:	f7ff ff79 	bl	80019f8 <Widget::RdmTimeOutMessage()>
 8001b06:	2618      	movs	r6, #24
 8001b08:	e7d3      	b.n	8001ab2 <Widget::ReceivedRdmPacket()+0x7e>
 8001b0a:	2600      	movs	r6, #0
 8001b0c:	e7d1      	b.n	8001ab2 <Widget::ReceivedRdmPacket()+0x7e>
 8001b0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001b12:	bf00      	nop
 8001b14:	0800554d 	stmdaeq	r0, {r0, r2, r3, r6, r8, sl, ip, lr}
 8001b18:	08005575 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, sl, ip, lr}
 8001b1c:	08005591 	stmdaeq	r0, {r0, r4, r7, r8, sl, ip, lr}

08001b20 <Widget::RdmTimeout()>:
 8001b20:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001b24:	b510      	push	{r4, lr}
 8001b26:	2b03      	cmp	r3, #3
 8001b28:	4604      	mov	r4, r0
 8001b2a:	d00d      	beq.n	8001b48 <Widget::RdmTimeout()+0x28>
 8001b2c:	f8d0 2300 	ldr.w	r2, [r0, #768]	; 0x300
 8001b30:	b152      	cbz	r2, 8001b48 <Widget::RdmTimeout()+0x28>
 8001b32:	4b06      	ldr	r3, [pc, #24]	; (8001b4c <Widget::RdmTimeout()+0x2c>)
 8001b34:	681b      	ldr	r3, [r3, #0]
 8001b36:	1a9b      	subs	r3, r3, r2
 8001b38:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001b3c:	d304      	bcc.n	8001b48 <Widget::RdmTimeout()+0x28>
 8001b3e:	f7ff ff5b 	bl	80019f8 <Widget::RdmTimeOutMessage()>
 8001b42:	2300      	movs	r3, #0
 8001b44:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8001b48:	bd10      	pop	{r4, pc}
 8001b4a:	bf00      	nop
 8001b4c:	20001814 	andcs	r1, r0, r4, lsl r8

08001b50 <Widget::GetManufacturerReply()>:
 8001b50:	b538      	push	{r3, r4, r5, lr}
 8001b52:	4918      	ldr	r1, [pc, #96]	; (8001bb4 <Widget::GetManufacturerReply()+0x64>)
 8001b54:	4604      	mov	r4, r0
 8001b56:	2007      	movs	r0, #7
 8001b58:	f000 f94a 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001b5c:	2100      	movs	r1, #0
 8001b5e:	201c      	movs	r0, #28
 8001b60:	f000 f946 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001b64:	2300      	movs	r3, #0
 8001b66:	f894 5067 	ldrb.w	r5, [r4, #103]	; 0x67
 8001b6a:	4619      	mov	r1, r3
 8001b6c:	2201      	movs	r2, #1
 8001b6e:	4620      	mov	r0, r4
 8001b70:	f000 fe68 	bl	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001b74:	214d      	movs	r1, #77	; 0x4d
 8001b76:	4620      	mov	r0, r4
 8001b78:	1caa      	adds	r2, r5, #2
 8001b7a:	f000 fad9 	bl	8002130 <Widget::SendHeader(unsigned char, unsigned int)>
 8001b7e:	2202      	movs	r2, #2
 8001b80:	4620      	mov	r0, r4
 8001b82:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 8001b86:	f000 fae5 	bl	8002154 <Widget::SendData(unsigned char const*, unsigned int)>
 8001b8a:	462a      	mov	r2, r5
 8001b8c:	f104 0147 	add.w	r1, r4, #71	; 0x47
 8001b90:	4620      	mov	r0, r4
 8001b92:	f000 fadf 	bl	8002154 <Widget::SendData(unsigned char const*, unsigned int)>
 8001b96:	4620      	mov	r0, r4
 8001b98:	f000 fae7 	bl	800216a <Widget::SendFooter()>
 8001b9c:	2301      	movs	r3, #1
 8001b9e:	2100      	movs	r1, #0
 8001ba0:	461a      	mov	r2, r3
 8001ba2:	4620      	mov	r0, r4
 8001ba4:	f000 fe4e 	bl	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001ba8:	4b03      	ldr	r3, [pc, #12]	; (8001bb8 <Widget::GetManufacturerReply()+0x68>)
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001bb0:	bd38      	pop	{r3, r4, r5, pc}
 8001bb2:	bf00      	nop
 8001bb4:	080055ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, sl, ip, lr}
 8001bb8:	20001814 	andcs	r1, r0, r4, lsl r8

08001bbc <Widget::GetNameReply()>:
 8001bbc:	b538      	push	{r3, r4, r5, lr}
 8001bbe:	4917      	ldr	r1, [pc, #92]	; (8001c1c <Widget::GetNameReply()+0x60>)
 8001bc0:	4604      	mov	r4, r0
 8001bc2:	2007      	movs	r0, #7
 8001bc4:	f000 f914 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001bc8:	2100      	movs	r1, #0
 8001bca:	201c      	movs	r0, #28
 8001bcc:	f000 f910 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001bd0:	2300      	movs	r3, #0
 8001bd2:	f894 5046 	ldrb.w	r5, [r4, #70]	; 0x46
 8001bd6:	4619      	mov	r1, r3
 8001bd8:	2201      	movs	r2, #1
 8001bda:	4620      	mov	r0, r4
 8001bdc:	f000 fe32 	bl	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001be0:	214e      	movs	r1, #78	; 0x4e
 8001be2:	4620      	mov	r0, r4
 8001be4:	1caa      	adds	r2, r5, #2
 8001be6:	f000 faa3 	bl	8002130 <Widget::SendHeader(unsigned char, unsigned int)>
 8001bea:	2202      	movs	r2, #2
 8001bec:	4620      	mov	r0, r4
 8001bee:	490c      	ldr	r1, [pc, #48]	; (8001c20 <Widget::GetNameReply()+0x64>)
 8001bf0:	f000 fab0 	bl	8002154 <Widget::SendData(unsigned char const*, unsigned int)>
 8001bf4:	462a      	mov	r2, r5
 8001bf6:	f104 0126 	add.w	r1, r4, #38	; 0x26
 8001bfa:	4620      	mov	r0, r4
 8001bfc:	f000 faaa 	bl	8002154 <Widget::SendData(unsigned char const*, unsigned int)>
 8001c00:	4620      	mov	r0, r4
 8001c02:	f000 fab2 	bl	800216a <Widget::SendFooter()>
 8001c06:	2301      	movs	r3, #1
 8001c08:	2100      	movs	r1, #0
 8001c0a:	461a      	mov	r2, r3
 8001c0c:	4620      	mov	r0, r4
 8001c0e:	f000 fe19 	bl	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001c12:	4b04      	ldr	r3, [pc, #16]	; (8001c24 <Widget::GetNameReply()+0x68>)
 8001c14:	681b      	ldr	r3, [r3, #0]
 8001c16:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001c1a:	bd38      	pop	{r3, r4, r5, pc}
 8001c1c:	080055c0 	stmdaeq	r0, {r6, r7, r8, sl, ip, lr}
 8001c20:	20000005 	andcs	r0, r0, r5
 8001c24:	20001814 	andcs	r1, r0, r4, lsl r8

08001c28 <Widget::ReceiveDataFromHost()>:
 8001c28:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001c2c:	4604      	mov	r4, r0
 8001c2e:	f001 f8fd 	bl	8002e2c <FT245RL_data_available>
 8001c32:	2800      	cmp	r0, #0
 8001c34:	d040      	beq.n	8001cb8 <Widget::ReceiveDataFromHost()+0x90>
 8001c36:	f001 f807 	bl	8002c48 <usb_read_byte>
 8001c3a:	287e      	cmp	r0, #126	; 0x7e
 8001c3c:	d13c      	bne.n	8001cb8 <Widget::ReceiveDataFromHost()+0x90>
 8001c3e:	f001 f803 	bl	8002c48 <usb_read_byte>
 8001c42:	4607      	mov	r7, r0
 8001c44:	f001 f800 	bl	8002c48 <usb_read_byte>
 8001c48:	4605      	mov	r5, r0
 8001c4a:	f000 fffd 	bl	8002c48 <usb_read_byte>
 8001c4e:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8001c52:	f06f 0997 	mvn.w	r9, #151	; 0x97
 8001c56:	b2ad      	uxth	r5, r5
 8001c58:	462e      	mov	r6, r5
 8001c5a:	f104 0898 	add.w	r8, r4, #152	; 0x98
 8001c5e:	eba9 0904 	sub.w	r9, r9, r4
 8001c62:	eb09 0308 	add.w	r3, r9, r8
 8001c66:	429d      	cmp	r5, r3
 8001c68:	d904      	bls.n	8001c74 <Widget::ReceiveDataFromHost()+0x4c>
 8001c6a:	f000 ffed 	bl	8002c48 <usb_read_byte>
 8001c6e:	f808 0b01 	strb.w	r0, [r8], #1
 8001c72:	e7f6      	b.n	8001c62 <Widget::ReceiveDataFromHost()+0x3a>
 8001c74:	f000 ffe8 	bl	8002c48 <usb_read_byte>
 8001c78:	28e7      	cmp	r0, #231	; 0xe7
 8001c7a:	d004      	beq.n	8001c86 <Widget::ReceiveDataFromHost()+0x5e>
 8001c7c:	1c73      	adds	r3, r6, #1
 8001c7e:	f5b6 7f16 	cmp.w	r6, #600	; 0x258
 8001c82:	461e      	mov	r6, r3
 8001c84:	d3f6      	bcc.n	8001c74 <Widget::ReceiveDataFromHost()+0x4c>
 8001c86:	462b      	mov	r3, r5
 8001c88:	463a      	mov	r2, r7
 8001c8a:	2006      	movs	r0, #6
 8001c8c:	4928      	ldr	r1, [pc, #160]	; (8001d30 <Widget::ReceiveDataFromHost()+0x108>)
 8001c8e:	9600      	str	r6, [sp, #0]
 8001c90:	f000 f8ae 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8001c94:	2f0b      	cmp	r7, #11
 8001c96:	d80b      	bhi.n	8001cb0 <Widget::ReceiveDataFromHost()+0x88>
 8001c98:	2f02      	cmp	r7, #2
 8001c9a:	d90d      	bls.n	8001cb8 <Widget::ReceiveDataFromHost()+0x90>
 8001c9c:	3f03      	subs	r7, #3
 8001c9e:	2f08      	cmp	r7, #8
 8001ca0:	d80a      	bhi.n	8001cb8 <Widget::ReceiveDataFromHost()+0x90>
 8001ca2:	e8df f007 	tbb	[pc, r7]
 8001ca6:	2a09180c 	bcs	8247cde <__exidx_end+0x2420ee>
 8001caa:	12093137 	andne	r3, r9, #-1073741811	; 0xc000000d
 8001cae:	2f4d003e 	svccs	0x004d003e
 8001cb2:	d01c      	beq.n	8001cee <Widget::ReceiveDataFromHost()+0xc6>
 8001cb4:	2f4e      	cmp	r7, #78	; 0x4e
 8001cb6:	d014      	beq.n	8001ce2 <Widget::ReceiveDataFromHost()+0xba>
 8001cb8:	b003      	add	sp, #12
 8001cba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001cbe:	4620      	mov	r0, r4
 8001cc0:	b003      	add	sp, #12
 8001cc2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001cc6:	f7ff bcfd 	b.w	80016c4 <Widget::GetParamsReply()>
 8001cca:	4620      	mov	r0, r4
 8001ccc:	b003      	add	sp, #12
 8001cce:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001cd2:	f7ff be47 	b.w	8001964 <Widget::GetSnReply()>
 8001cd6:	4620      	mov	r0, r4
 8001cd8:	b003      	add	sp, #12
 8001cda:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001cde:	f7ff bd23 	b.w	8001728 <Widget::SetParams()>
 8001ce2:	4620      	mov	r0, r4
 8001ce4:	b003      	add	sp, #12
 8001ce6:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001cea:	f7ff bf67 	b.w	8001bbc <Widget::GetNameReply()>
 8001cee:	4620      	mov	r0, r4
 8001cf0:	b003      	add	sp, #12
 8001cf2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001cf6:	f7ff bf2b 	b.w	8001b50 <Widget::GetManufacturerReply()>
 8001cfa:	4629      	mov	r1, r5
 8001cfc:	4620      	mov	r0, r4
 8001cfe:	b003      	add	sp, #12
 8001d00:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001d04:	f7ff bd90 	b.w	8001828 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>
 8001d08:	4620      	mov	r0, r4
 8001d0a:	b003      	add	sp, #12
 8001d0c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001d10:	f7ff bdda 	b.w	80018c8 <Widget::ReceiveDmxOnChange()>
 8001d14:	4629      	mov	r1, r5
 8001d16:	4620      	mov	r0, r4
 8001d18:	b003      	add	sp, #12
 8001d1a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001d1e:	f7ff bda9 	b.w	8001874 <Widget::SendRdmPacketRequest(unsigned short)>
 8001d22:	4629      	mov	r1, r5
 8001d24:	4620      	mov	r0, r4
 8001d26:	b003      	add	sp, #12
 8001d28:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001d2c:	f7ff be40 	b.w	80019b0 <Widget::SendRdmDiscoveryRequest(unsigned short)>
 8001d30:	080055d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, sl, ip, lr}

08001d34 <WidgetConfiguration::SetRefreshRate(unsigned char)>:
 8001d34:	4b05      	ldr	r3, [pc, #20]	; (8001d4c <WidgetConfiguration::SetRefreshRate(unsigned char)+0x18>)
 8001d36:	7018      	strb	r0, [r3, #0]
 8001d38:	b130      	cbz	r0, 8001d48 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x14>
 8001d3a:	4905      	ldr	r1, [pc, #20]	; (8001d50 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x1c>)
 8001d3c:	fbb1 f1f0 	udiv	r1, r1, r0
 8001d40:	4b04      	ldr	r3, [pc, #16]	; (8001d54 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x20>)
 8001d42:	6818      	ldr	r0, [r3, #0]
 8001d44:	f000 be8a 	b.w	8002a5c <Dmx::SetDmxPeriodTime(unsigned int)>
 8001d48:	4601      	mov	r1, r0
 8001d4a:	e7f9      	b.n	8001d40 <WidgetConfiguration::SetRefreshRate(unsigned char)+0xc>
 8001d4c:	20000004 	andcs	r0, r0, r4
 8001d50:	000f4240 	andeq	r4, pc, r0, asr #4
 8001d54:	20000724 	andcs	r0, r0, r4, lsr #14

08001d58 <WidgetConfiguration::SetBreakTime(unsigned char)>:
 8001d58:	b508      	push	{r3, lr}
 8001d5a:	4b08      	ldr	r3, [pc, #32]	; (8001d7c <WidgetConfiguration::SetBreakTime(unsigned char)+0x24>)
 8001d5c:	7018      	strb	r0, [r3, #0]
 8001d5e:	f7ff f8d7 	bl	8000f10 <__aeabi_i2f>
 8001d62:	4907      	ldr	r1, [pc, #28]	; (8001d80 <WidgetConfiguration::SetBreakTime(unsigned char)+0x28>)
 8001d64:	f7fe fb78 	bl	8000458 <__aeabi_fmul>
 8001d68:	f7ff f926 	bl	8000fb8 <__aeabi_f2uiz>
 8001d6c:	4b05      	ldr	r3, [pc, #20]	; (8001d84 <WidgetConfiguration::SetBreakTime(unsigned char)+0x2c>)
 8001d6e:	4601      	mov	r1, r0
 8001d70:	6818      	ldr	r0, [r3, #0]
 8001d72:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001d76:	f000 bea1 	b.w	8002abc <Dmx::SetDmxBreakTime(unsigned int)>
 8001d7a:	bf00      	nop
 8001d7c:	20000001 	andcs	r0, r0, r1
 8001d80:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 8001d84:	20000724 	andcs	r0, r0, r4, lsr #14

08001d88 <WidgetConfiguration::SetMabTime(unsigned char)>:
 8001d88:	b508      	push	{r3, lr}
 8001d8a:	4b08      	ldr	r3, [pc, #32]	; (8001dac <WidgetConfiguration::SetMabTime(unsigned char)+0x24>)
 8001d8c:	7018      	strb	r0, [r3, #0]
 8001d8e:	f7ff f8bf 	bl	8000f10 <__aeabi_i2f>
 8001d92:	4907      	ldr	r1, [pc, #28]	; (8001db0 <WidgetConfiguration::SetMabTime(unsigned char)+0x28>)
 8001d94:	f7fe fb60 	bl	8000458 <__aeabi_fmul>
 8001d98:	f7ff f90e 	bl	8000fb8 <__aeabi_f2uiz>
 8001d9c:	4b05      	ldr	r3, [pc, #20]	; (8001db4 <WidgetConfiguration::SetMabTime(unsigned char)+0x2c>)
 8001d9e:	4601      	mov	r1, r0
 8001da0:	6818      	ldr	r0, [r3, #0]
 8001da2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001da6:	f000 be93 	b.w	8002ad0 <Dmx::SetDmxMabTime(unsigned int)>
 8001daa:	bf00      	nop
 8001dac:	20000000 	andcs	r0, r0, r0
 8001db0:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 8001db4:	20000724 	andcs	r0, r0, r4, lsr #14

08001db8 <WidgetConfiguration::SetMode(widget::Mode)>:
 8001db8:	2800      	cmp	r0, #0
 8001dba:	bf14      	ite	ne
 8001dbc:	4602      	movne	r2, r0
 8001dbe:	2202      	moveq	r2, #2
 8001dc0:	4b03      	ldr	r3, [pc, #12]	; (8001dd0 <WidgetConfiguration::SetMode(widget::Mode)+0x18>)
 8001dc2:	701a      	strb	r2, [r3, #0]
 8001dc4:	4b03      	ldr	r3, [pc, #12]	; (8001dd4 <WidgetConfiguration::SetMode(widget::Mode)+0x1c>)
 8001dc6:	681b      	ldr	r3, [r3, #0]
 8001dc8:	f8c3 02f0 	str.w	r0, [r3, #752]	; 0x2f0
 8001dcc:	4770      	bx	lr
 8001dce:	bf00      	nop
 8001dd0:	20000002 	andcs	r0, r0, r2
 8001dd4:	200000f4 	strdcs	r0, [r0], -r4

08001dd8 <WidgetConfiguration::SetThrottle(unsigned char)>:
 8001dd8:	b118      	cbz	r0, 8001de2 <WidgetConfiguration::SetThrottle(unsigned char)+0xa>
 8001dda:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001dde:	fbb3 f0f0 	udiv	r0, r3, r0
 8001de2:	4b02      	ldr	r3, [pc, #8]	; (8001dec <WidgetConfiguration::SetThrottle(unsigned char)+0x14>)
 8001de4:	681b      	ldr	r3, [r3, #0]
 8001de6:	f8c3 02f8 	str.w	r0, [r3, #760]	; 0x2f8
 8001dea:	4770      	bx	lr
 8001dec:	200000f4 	strdcs	r0, [r0], -r4

08001df0 <WidgetMonitor::Line(int, char const*, ...)>:
 8001df0:	b40e      	push	{r1, r2, r3}
 8001df2:	b003      	add	sp, #12
 8001df4:	4770      	bx	lr
	...

08001df8 <WidgetParams::WidgetParams(WidgetParamsStore*)>:
 8001df8:	4a02      	ldr	r2, [pc, #8]	; (8001e04 <WidgetParams::WidgetParams(WidgetParamsStore*)+0xc>)
 8001dfa:	6001      	str	r1, [r0, #0]
 8001dfc:	6082      	str	r2, [r0, #8]
 8001dfe:	2200      	movs	r2, #0
 8001e00:	7302      	strb	r2, [r0, #12]
 8001e02:	4770      	bx	lr
 8001e04:	00280109 	eoreq	r0, r8, r9, lsl #2

08001e08 <WidgetParams::Load()>:
 8001e08:	2300      	movs	r3, #0
 8001e0a:	b513      	push	{r0, r1, r4, lr}
 8001e0c:	4604      	mov	r4, r0
 8001e0e:	4602      	mov	r2, r0
 8001e10:	6043      	str	r3, [r0, #4]
 8001e12:	4909      	ldr	r1, [pc, #36]	; (8001e38 <WidgetParams::Load()+0x30>)
 8001e14:	4668      	mov	r0, sp
 8001e16:	f001 fcb4 	bl	8003782 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8001e1a:	6820      	ldr	r0, [r4, #0]
 8001e1c:	b150      	cbz	r0, 8001e34 <WidgetParams::Load()+0x2c>
 8001e1e:	6803      	ldr	r3, [r0, #0]
 8001e20:	1d21      	adds	r1, r4, #4
 8001e22:	68db      	ldr	r3, [r3, #12]
 8001e24:	4798      	blx	r3
 8001e26:	2401      	movs	r4, #1
 8001e28:	4668      	mov	r0, sp
 8001e2a:	f001 fcad 	bl	8003788 <ReadConfigFile::~ReadConfigFile()>
 8001e2e:	4620      	mov	r0, r4
 8001e30:	b002      	add	sp, #8
 8001e32:	bd10      	pop	{r4, pc}
 8001e34:	4604      	mov	r4, r0
 8001e36:	e7f7      	b.n	8001e28 <WidgetParams::Load()+0x20>
 8001e38:	08001efd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, sl, fp, ip}

08001e3c <WidgetParams::callbackFunction(char const*)>:
 8001e3c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001e3e:	460d      	mov	r5, r1
 8001e40:	4604      	mov	r4, r0
 8001e42:	4929      	ldr	r1, [pc, #164]	; (8001ee8 <WidgetParams::callbackFunction(char const*)+0xac>)
 8001e44:	4628      	mov	r0, r5
 8001e46:	f10d 0207 	add.w	r2, sp, #7
 8001e4a:	f001 fc9e 	bl	800378a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8001e4e:	b960      	cbnz	r0, 8001e6a <WidgetParams::callbackFunction(char const*)+0x2e>
 8001e50:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001e54:	f1a3 0209 	sub.w	r2, r3, #9
 8001e58:	2a76      	cmp	r2, #118	; 0x76
 8001e5a:	d806      	bhi.n	8001e6a <WidgetParams::callbackFunction(char const*)+0x2e>
 8001e5c:	7223      	strb	r3, [r4, #8]
 8001e5e:	6863      	ldr	r3, [r4, #4]
 8001e60:	f043 0301 	orr.w	r3, r3, #1
 8001e64:	6063      	str	r3, [r4, #4]
 8001e66:	b003      	add	sp, #12
 8001e68:	bd30      	pop	{r4, r5, pc}
 8001e6a:	4628      	mov	r0, r5
 8001e6c:	491f      	ldr	r1, [pc, #124]	; (8001eec <WidgetParams::callbackFunction(char const*)+0xb0>)
 8001e6e:	f10d 0207 	add.w	r2, sp, #7
 8001e72:	f001 fc8a 	bl	800378a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8001e76:	b950      	cbnz	r0, 8001e8e <WidgetParams::callbackFunction(char const*)+0x52>
 8001e78:	f99d 2007 	ldrsb.w	r2, [sp, #7]
 8001e7c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001e80:	2a00      	cmp	r2, #0
 8001e82:	dd04      	ble.n	8001e8e <WidgetParams::callbackFunction(char const*)+0x52>
 8001e84:	7263      	strb	r3, [r4, #9]
 8001e86:	6863      	ldr	r3, [r4, #4]
 8001e88:	f043 0302 	orr.w	r3, r3, #2
 8001e8c:	e7ea      	b.n	8001e64 <WidgetParams::callbackFunction(char const*)+0x28>
 8001e8e:	4628      	mov	r0, r5
 8001e90:	4917      	ldr	r1, [pc, #92]	; (8001ef0 <WidgetParams::callbackFunction(char const*)+0xb4>)
 8001e92:	f10d 0207 	add.w	r2, sp, #7
 8001e96:	f001 fc78 	bl	800378a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8001e9a:	b930      	cbnz	r0, 8001eaa <WidgetParams::callbackFunction(char const*)+0x6e>
 8001e9c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001ea0:	72a3      	strb	r3, [r4, #10]
 8001ea2:	6863      	ldr	r3, [r4, #4]
 8001ea4:	f043 0304 	orr.w	r3, r3, #4
 8001ea8:	e7dc      	b.n	8001e64 <WidgetParams::callbackFunction(char const*)+0x28>
 8001eaa:	4628      	mov	r0, r5
 8001eac:	4911      	ldr	r1, [pc, #68]	; (8001ef4 <WidgetParams::callbackFunction(char const*)+0xb8>)
 8001eae:	f10d 0207 	add.w	r2, sp, #7
 8001eb2:	f001 fc6a 	bl	800378a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8001eb6:	b940      	cbnz	r0, 8001eca <WidgetParams::callbackFunction(char const*)+0x8e>
 8001eb8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001ebc:	2b03      	cmp	r3, #3
 8001ebe:	d804      	bhi.n	8001eca <WidgetParams::callbackFunction(char const*)+0x8e>
 8001ec0:	72e3      	strb	r3, [r4, #11]
 8001ec2:	6863      	ldr	r3, [r4, #4]
 8001ec4:	f043 0308 	orr.w	r3, r3, #8
 8001ec8:	e7cc      	b.n	8001e64 <WidgetParams::callbackFunction(char const*)+0x28>
 8001eca:	4628      	mov	r0, r5
 8001ecc:	490a      	ldr	r1, [pc, #40]	; (8001ef8 <WidgetParams::callbackFunction(char const*)+0xbc>)
 8001ece:	f10d 0207 	add.w	r2, sp, #7
 8001ed2:	f001 fc5a 	bl	800378a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8001ed6:	2800      	cmp	r0, #0
 8001ed8:	d1c5      	bne.n	8001e66 <WidgetParams::callbackFunction(char const*)+0x2a>
 8001eda:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001ede:	7323      	strb	r3, [r4, #12]
 8001ee0:	6863      	ldr	r3, [r4, #4]
 8001ee2:	f043 0310 	orr.w	r3, r3, #16
 8001ee6:	e7bd      	b.n	8001e64 <WidgetParams::callbackFunction(char const*)+0x28>
 8001ee8:	08005601 	stmdaeq	r0, {r0, r9, sl, ip, lr}
 8001eec:	080055ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, sl, ip, lr}
 8001ef0:	08005616 	stmdaeq	r0, {r1, r2, r4, r9, sl, ip, lr}
 8001ef4:	080055e2 	stmdaeq	r0, {r1, r5, r6, r7, r8, sl, ip, lr}
 8001ef8:	0800562d 	stmdaeq	r0, {r0, r2, r3, r5, r9, sl, ip, lr}

08001efc <WidgetParams::staticCallbackFunction(void*, char const*)>:
 8001efc:	f7ff bf9e 	b.w	8001e3c <WidgetParams::callbackFunction(char const*)>

08001f00 <WidgetParams::Set()>:
 8001f00:	6843      	ldr	r3, [r0, #4]
 8001f02:	b510      	push	{r4, lr}
 8001f04:	075b      	lsls	r3, r3, #29
 8001f06:	4604      	mov	r4, r0
 8001f08:	d502      	bpl.n	8001f10 <WidgetParams::Set()+0x10>
 8001f0a:	7a80      	ldrb	r0, [r0, #10]
 8001f0c:	f7ff ff12 	bl	8001d34 <WidgetConfiguration::SetRefreshRate(unsigned char)>
 8001f10:	6863      	ldr	r3, [r4, #4]
 8001f12:	07d8      	lsls	r0, r3, #31
 8001f14:	d502      	bpl.n	8001f1c <WidgetParams::Set()+0x1c>
 8001f16:	7a20      	ldrb	r0, [r4, #8]
 8001f18:	f7ff ff1e 	bl	8001d58 <WidgetConfiguration::SetBreakTime(unsigned char)>
 8001f1c:	6863      	ldr	r3, [r4, #4]
 8001f1e:	0799      	lsls	r1, r3, #30
 8001f20:	d502      	bpl.n	8001f28 <WidgetParams::Set()+0x28>
 8001f22:	7a60      	ldrb	r0, [r4, #9]
 8001f24:	f7ff ff30 	bl	8001d88 <WidgetConfiguration::SetMabTime(unsigned char)>
 8001f28:	6863      	ldr	r3, [r4, #4]
 8001f2a:	06da      	lsls	r2, r3, #27
 8001f2c:	d502      	bpl.n	8001f34 <WidgetParams::Set()+0x34>
 8001f2e:	7b20      	ldrb	r0, [r4, #12]
 8001f30:	f7ff ff52 	bl	8001dd8 <WidgetConfiguration::SetThrottle(unsigned char)>
 8001f34:	6863      	ldr	r3, [r4, #4]
 8001f36:	071b      	lsls	r3, r3, #28
 8001f38:	d504      	bpl.n	8001f44 <WidgetParams::Set()+0x44>
 8001f3a:	7ae0      	ldrb	r0, [r4, #11]
 8001f3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001f40:	f7ff bf3a 	b.w	8001db8 <WidgetConfiguration::SetMode(widget::Mode)>
 8001f44:	bd10      	pop	{r4, pc}

08001f46 <WidgetParams::Dump()>:
 8001f46:	4770      	bx	lr

08001f48 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>:
 8001f48:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001f4c:	4606      	mov	r6, r0
 8001f4e:	460f      	mov	r7, r1
 8001f50:	461d      	mov	r5, r3
 8001f52:	eb03 0802 	add.w	r8, r3, r2
 8001f56:	eba8 0405 	sub.w	r4, r8, r5
 8001f5a:	b2a4      	uxth	r4, r4
 8001f5c:	2d63      	cmp	r5, #99	; 0x63
 8001f5e:	f04f 02c8 	mov.w	r2, #200	; 0xc8
 8001f62:	f04f 0181 	mov.w	r1, #129	; 0x81
 8001f66:	4630      	mov	r0, r6
 8001f68:	443c      	add	r4, r7
 8001f6a:	d81e      	bhi.n	8001faa <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x62>
 8001f6c:	f000 f8e0 	bl	8002130 <Widget::SendHeader(unsigned char, unsigned int)>
 8001f70:	f04f 0800 	mov.w	r8, #0
 8001f74:	4545      	cmp	r5, r8
 8001f76:	462f      	mov	r7, r5
 8001f78:	d909      	bls.n	8001f8e <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x46>
 8001f7a:	2080      	movs	r0, #128	; 0x80
 8001f7c:	f000 fe6d 	bl	8002c5a <usb_send_byte>
 8001f80:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001f84:	f000 fe69 	bl	8002c5a <usb_send_byte>
 8001f88:	f108 0801 	add.w	r8, r8, #1
 8001f8c:	e7f2      	b.n	8001f74 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x2c>
 8001f8e:	2000      	movs	r0, #0
 8001f90:	f000 fe63 	bl	8002c5a <usb_send_byte>
 8001f94:	3701      	adds	r7, #1
 8001f96:	2002      	movs	r0, #2
 8001f98:	f000 fe5f 	bl	8002c5a <usb_send_byte>
 8001f9c:	2f64      	cmp	r7, #100	; 0x64
 8001f9e:	d1f6      	bne.n	8001f8e <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x46>
 8001fa0:	4630      	mov	r0, r6
 8001fa2:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001fa6:	f000 b8e0 	b.w	800216a <Widget::SendFooter()>
 8001faa:	f000 f8c1 	bl	8002130 <Widget::SendHeader(unsigned char, unsigned int)>
 8001fae:	f04f 0900 	mov.w	r9, #0
 8001fb2:	2080      	movs	r0, #128	; 0x80
 8001fb4:	f000 fe51 	bl	8002c5a <usb_send_byte>
 8001fb8:	f109 0901 	add.w	r9, r9, #1
 8001fbc:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001fc0:	f000 fe4b 	bl	8002c5a <usb_send_byte>
 8001fc4:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8001fc8:	d1f3      	bne.n	8001fb2 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x6a>
 8001fca:	4630      	mov	r0, r6
 8001fcc:	3d64      	subs	r5, #100	; 0x64
 8001fce:	f000 f8cc 	bl	800216a <Widget::SendFooter()>
 8001fd2:	b2ad      	uxth	r5, r5
 8001fd4:	e7bf      	b.n	8001f56 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0xe>
	...

08001fd8 <Widget::UsbCanSend()>:
 8001fd8:	b570      	push	{r4, r5, r6, lr}
 8001fda:	256c      	movs	r5, #108	; 0x6c
 8001fdc:	4e0b      	ldr	r6, [pc, #44]	; (800200c <Widget::UsbCanSend()+0x34>)
 8001fde:	6874      	ldr	r4, [r6, #4]
 8001fe0:	fbb4 f4f5 	udiv	r4, r4, r5
 8001fe4:	f000 ff2e 	bl	8002e44 <FT245RL_can_write>
 8001fe8:	b930      	cbnz	r0, 8001ff8 <Widget::UsbCanSend()+0x20>
 8001fea:	6873      	ldr	r3, [r6, #4]
 8001fec:	fbb3 f3f5 	udiv	r3, r3, r5
 8001ff0:	1b1b      	subs	r3, r3, r4
 8001ff2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001ff6:	d3f5      	bcc.n	8001fe4 <Widget::UsbCanSend()+0xc>
 8001ff8:	f000 ff24 	bl	8002e44 <FT245RL_can_write>
 8001ffc:	4604      	mov	r4, r0
 8001ffe:	b918      	cbnz	r0, 8002008 <Widget::UsbCanSend()+0x30>
 8002000:	2007      	movs	r0, #7
 8002002:	4903      	ldr	r1, [pc, #12]	; (8002010 <Widget::UsbCanSend()+0x38>)
 8002004:	f7ff fef4 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 8002008:	4620      	mov	r0, r4
 800200a:	bd70      	pop	{r4, r5, r6, pc}
 800200c:	e0001000 	and	r1, r0, r0
 8002010:	08005647 	stmdaeq	r0, {r0, r1, r2, r6, r9, sl, ip, lr}

08002014 <Widget::SnifferDmx()>:
 8002014:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8002018:	b570      	push	{r4, r5, r6, lr}
 800201a:	2b03      	cmp	r3, #3
 800201c:	4604      	mov	r4, r0
 800201e:	d11c      	bne.n	800205a <Widget::SnifferDmx()+0x46>
 8002020:	f7ff ffda 	bl	8001fd8 <Widget::UsbCanSend()>
 8002024:	b1c8      	cbz	r0, 800205a <Widget::SnifferDmx()+0x46>
 8002026:	2100      	movs	r1, #0
 8002028:	4620      	mov	r0, r4
 800202a:	f000 fd97 	bl	8002b5c <Dmx::GetDmxChanged(unsigned int)>
 800202e:	4605      	mov	r5, r0
 8002030:	b198      	cbz	r0, 800205a <Widget::SnifferDmx()+0x46>
 8002032:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 8002036:	4620      	mov	r0, r4
 8002038:	f7ff ffce 	bl	8001fd8 <Widget::UsbCanSend()>
 800203c:	b168      	cbz	r0, 800205a <Widget::SnifferDmx()+0x46>
 800203e:	3601      	adds	r6, #1
 8002040:	4632      	mov	r2, r6
 8002042:	2007      	movs	r0, #7
 8002044:	4905      	ldr	r1, [pc, #20]	; (800205c <Widget::SnifferDmx()+0x48>)
 8002046:	f7ff fed3 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 800204a:	4629      	mov	r1, r5
 800204c:	4620      	mov	r0, r4
 800204e:	b2b3      	uxth	r3, r6
 8002050:	2200      	movs	r2, #0
 8002052:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002056:	f7ff bf77 	b.w	8001f48 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 800205a:	bd70      	pop	{r4, r5, r6, pc}
 800205c:	08005664 	stmdaeq	r0, {r2, r5, r6, r9, sl, ip, lr}

08002060 <Widget::SnifferRdm()>:
 8002060:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8002064:	b570      	push	{r4, r5, r6, lr}
 8002066:	2b03      	cmp	r3, #3
 8002068:	4604      	mov	r4, r0
 800206a:	d14c      	bne.n	8002106 <Widget::SnifferRdm()+0xa6>
 800206c:	f7ff ffb4 	bl	8001fd8 <Widget::UsbCanSend()>
 8002070:	2800      	cmp	r0, #0
 8002072:	d048      	beq.n	8002106 <Widget::SnifferRdm()+0xa6>
 8002074:	2000      	movs	r0, #0
 8002076:	f000 f935 	bl	80022e4 <Rdm::Receive(unsigned int)>
 800207a:	4605      	mov	r5, r0
 800207c:	2800      	cmp	r0, #0
 800207e:	d042      	beq.n	8002106 <Widget::SnifferRdm()+0xa6>
 8002080:	7803      	ldrb	r3, [r0, #0]
 8002082:	2bcc      	cmp	r3, #204	; 0xcc
 8002084:	d134      	bne.n	80020f0 <Widget::SnifferRdm()+0x90>
 8002086:	7886      	ldrb	r6, [r0, #2]
 8002088:	7d03      	ldrb	r3, [r0, #20]
 800208a:	3602      	adds	r6, #2
 800208c:	2b20      	cmp	r3, #32
 800208e:	b2f6      	uxtb	r6, r6
 8002090:	d028      	beq.n	80020e4 <Widget::SnifferRdm()+0x84>
 8002092:	d813      	bhi.n	80020bc <Widget::SnifferRdm()+0x5c>
 8002094:	2b10      	cmp	r3, #16
 8002096:	d019      	beq.n	80020cc <Widget::SnifferRdm()+0x6c>
 8002098:	2b11      	cmp	r3, #17
 800209a:	d01d      	beq.n	80020d8 <Widget::SnifferRdm()+0x78>
 800209c:	4620      	mov	r0, r4
 800209e:	f7ff ff9b 	bl	8001fd8 <Widget::UsbCanSend()>
 80020a2:	b380      	cbz	r0, 8002106 <Widget::SnifferRdm()+0xa6>
 80020a4:	2007      	movs	r0, #7
 80020a6:	4918      	ldr	r1, [pc, #96]	; (8002108 <Widget::SnifferRdm()+0xa8>)
 80020a8:	f7ff fea2 	bl	8001df0 <WidgetMonitor::Line(int, char const*, ...)>
 80020ac:	4633      	mov	r3, r6
 80020ae:	4629      	mov	r1, r5
 80020b0:	4620      	mov	r0, r4
 80020b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80020b6:	2200      	movs	r2, #0
 80020b8:	f7ff bf46 	b.w	8001f48 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 80020bc:	2b30      	cmp	r3, #48	; 0x30
 80020be:	d1ed      	bne.n	800209c <Widget::SnifferRdm()+0x3c>
 80020c0:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
 80020c4:	3301      	adds	r3, #1
 80020c6:	f8c4 3318 	str.w	r3, [r4, #792]	; 0x318
 80020ca:	e7e7      	b.n	800209c <Widget::SnifferRdm()+0x3c>
 80020cc:	f8d4 330c 	ldr.w	r3, [r4, #780]	; 0x30c
 80020d0:	3301      	adds	r3, #1
 80020d2:	f8c4 330c 	str.w	r3, [r4, #780]	; 0x30c
 80020d6:	e7e1      	b.n	800209c <Widget::SnifferRdm()+0x3c>
 80020d8:	f8d4 3310 	ldr.w	r3, [r4, #784]	; 0x310
 80020dc:	3301      	adds	r3, #1
 80020de:	f8c4 3310 	str.w	r3, [r4, #784]	; 0x310
 80020e2:	e7db      	b.n	800209c <Widget::SnifferRdm()+0x3c>
 80020e4:	f8d4 3314 	ldr.w	r3, [r4, #788]	; 0x314
 80020e8:	3301      	adds	r3, #1
 80020ea:	f8c4 3314 	str.w	r3, [r4, #788]	; 0x314
 80020ee:	e7d5      	b.n	800209c <Widget::SnifferRdm()+0x3c>
 80020f0:	2bfe      	cmp	r3, #254	; 0xfe
 80020f2:	bf03      	ittte	eq
 80020f4:	f8d4 3310 	ldreq.w	r3, [r4, #784]	; 0x310
 80020f8:	2618      	moveq	r6, #24
 80020fa:	3301      	addeq	r3, #1
 80020fc:	2600      	movne	r6, #0
 80020fe:	bf08      	it	eq
 8002100:	f8c4 3310 	streq.w	r3, [r4, #784]	; 0x310
 8002104:	e7ca      	b.n	800209c <Widget::SnifferRdm()+0x3c>
 8002106:	bd70      	pop	{r4, r5, r6, pc}
 8002108:	08005680 	stmdaeq	r0, {r7, r9, sl, ip, lr}

0800210c <Widget::SnifferFillTransmitBuffer()>:
 800210c:	b538      	push	{r3, r4, r5, lr}
 800210e:	4605      	mov	r5, r0
 8002110:	f7ff ff62 	bl	8001fd8 <Widget::UsbCanSend()>
 8002114:	b158      	cbz	r0, 800212e <Widget::SnifferFillTransmitBuffer()+0x22>
 8002116:	f240 1401 	movw	r4, #257	; 0x101
 800211a:	3c01      	subs	r4, #1
 800211c:	d007      	beq.n	800212e <Widget::SnifferFillTransmitBuffer()+0x22>
 800211e:	4628      	mov	r0, r5
 8002120:	f7ff ff5a 	bl	8001fd8 <Widget::UsbCanSend()>
 8002124:	b118      	cbz	r0, 800212e <Widget::SnifferFillTransmitBuffer()+0x22>
 8002126:	2000      	movs	r0, #0
 8002128:	f000 fd97 	bl	8002c5a <usb_send_byte>
 800212c:	e7f5      	b.n	800211a <Widget::SnifferFillTransmitBuffer()+0xe>
 800212e:	bd38      	pop	{r3, r4, r5, pc}

08002130 <Widget::SendHeader(unsigned char, unsigned int)>:
 8002130:	b538      	push	{r3, r4, r5, lr}
 8002132:	460d      	mov	r5, r1
 8002134:	4614      	mov	r4, r2
 8002136:	207e      	movs	r0, #126	; 0x7e
 8002138:	f000 fd8f 	bl	8002c5a <usb_send_byte>
 800213c:	4628      	mov	r0, r5
 800213e:	f000 fd8c 	bl	8002c5a <usb_send_byte>
 8002142:	b2e0      	uxtb	r0, r4
 8002144:	f000 fd89 	bl	8002c5a <usb_send_byte>
 8002148:	f3c4 2007 	ubfx	r0, r4, #8, #8
 800214c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002150:	f000 bd83 	b.w	8002c5a <usb_send_byte>

08002154 <Widget::SendData(unsigned char const*, unsigned int)>:
 8002154:	b538      	push	{r3, r4, r5, lr}
 8002156:	460c      	mov	r4, r1
 8002158:	188d      	adds	r5, r1, r2
 800215a:	42ac      	cmp	r4, r5
 800215c:	d004      	beq.n	8002168 <Widget::SendData(unsigned char const*, unsigned int)+0x14>
 800215e:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002162:	f000 fd7a 	bl	8002c5a <usb_send_byte>
 8002166:	e7f8      	b.n	800215a <Widget::SendData(unsigned char const*, unsigned int)+0x6>
 8002168:	bd38      	pop	{r3, r4, r5, pc}

0800216a <Widget::SendFooter()>:
 800216a:	20e7      	movs	r0, #231	; 0xe7
 800216c:	f000 bd75 	b.w	8002c5a <usb_send_byte>

08002170 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>:
 8002170:	b570      	push	{r4, r5, r6, lr}
 8002172:	461c      	mov	r4, r3
 8002174:	4605      	mov	r5, r0
 8002176:	4616      	mov	r6, r2
 8002178:	461a      	mov	r2, r3
 800217a:	f7ff ffd9 	bl	8002130 <Widget::SendHeader(unsigned char, unsigned int)>
 800217e:	4628      	mov	r0, r5
 8002180:	4622      	mov	r2, r4
 8002182:	4631      	mov	r1, r6
 8002184:	f7ff ffe6 	bl	8002154 <Widget::SendData(unsigned char const*, unsigned int)>
 8002188:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800218c:	20e7      	movs	r0, #231	; 0xe7
 800218e:	f000 bd64 	b.w	8002c5a <usb_send_byte>
	...

08002194 <StoreWidget::UpdateBreakTime(unsigned char)>:
 8002194:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002196:	2301      	movs	r3, #1
 8002198:	2200      	movs	r2, #0
 800219a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800219e:	4807      	ldr	r0, [pc, #28]	; (80021bc <StoreWidget::UpdateBreakTime(unsigned char)+0x28>)
 80021a0:	9300      	str	r3, [sp, #0]
 80021a2:	f88d 1017 	strb.w	r1, [sp, #23]
 80021a6:	2204      	movs	r2, #4
 80021a8:	210a      	movs	r1, #10
 80021aa:	6800      	ldr	r0, [r0, #0]
 80021ac:	f10d 0317 	add.w	r3, sp, #23
 80021b0:	f000 fff4 	bl	800319c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80021b4:	b007      	add	sp, #28
 80021b6:	f85d fb04 	ldr.w	pc, [sp], #4
 80021ba:	bf00      	nop
 80021bc:	20001740 	andcs	r1, r0, r0, asr #14

080021c0 <non-virtual thunk to StoreWidget::UpdateBreakTime(unsigned char)>:
 80021c0:	f1a0 0004 	sub.w	r0, r0, #4
 80021c4:	e7e6      	b.n	8002194 <StoreWidget::UpdateBreakTime(unsigned char)>
 80021c6:	bf00      	nop

080021c8 <StoreWidget::UpdateMabTime(unsigned char)>:
 80021c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80021ca:	2302      	movs	r3, #2
 80021cc:	2200      	movs	r2, #0
 80021ce:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80021d2:	2301      	movs	r3, #1
 80021d4:	4806      	ldr	r0, [pc, #24]	; (80021f0 <StoreWidget::UpdateMabTime(unsigned char)+0x28>)
 80021d6:	9300      	str	r3, [sp, #0]
 80021d8:	f88d 1017 	strb.w	r1, [sp, #23]
 80021dc:	2205      	movs	r2, #5
 80021de:	210a      	movs	r1, #10
 80021e0:	6800      	ldr	r0, [r0, #0]
 80021e2:	f10d 0317 	add.w	r3, sp, #23
 80021e6:	f000 ffd9 	bl	800319c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80021ea:	b007      	add	sp, #28
 80021ec:	f85d fb04 	ldr.w	pc, [sp], #4
 80021f0:	20001740 	andcs	r1, r0, r0, asr #14

080021f4 <non-virtual thunk to StoreWidget::UpdateMabTime(unsigned char)>:
 80021f4:	f1a0 0004 	sub.w	r0, r0, #4
 80021f8:	e7e6      	b.n	80021c8 <StoreWidget::UpdateMabTime(unsigned char)>
 80021fa:	bf00      	nop

080021fc <StoreWidget::UpdateRefreshRate(unsigned char)>:
 80021fc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80021fe:	2304      	movs	r3, #4
 8002200:	2200      	movs	r2, #0
 8002202:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002206:	2301      	movs	r3, #1
 8002208:	4806      	ldr	r0, [pc, #24]	; (8002224 <StoreWidget::UpdateRefreshRate(unsigned char)+0x28>)
 800220a:	9300      	str	r3, [sp, #0]
 800220c:	f88d 1017 	strb.w	r1, [sp, #23]
 8002210:	2206      	movs	r2, #6
 8002212:	210a      	movs	r1, #10
 8002214:	6800      	ldr	r0, [r0, #0]
 8002216:	f10d 0317 	add.w	r3, sp, #23
 800221a:	f000 ffbf 	bl	800319c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800221e:	b007      	add	sp, #28
 8002220:	f85d fb04 	ldr.w	pc, [sp], #4
 8002224:	20001740 	andcs	r1, r0, r0, asr #14

08002228 <non-virtual thunk to StoreWidget::UpdateRefreshRate(unsigned char)>:
 8002228:	f1a0 0004 	sub.w	r0, r0, #4
 800222c:	e7e6      	b.n	80021fc <StoreWidget::UpdateRefreshRate(unsigned char)>
 800222e:	bf00      	nop

08002230 <WidgetConfiguration::Store(TWidgetConfiguration const*)>:
 8002230:	b510      	push	{r4, lr}
 8002232:	4b25      	ldr	r3, [pc, #148]	; (80022c8 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x98>)
 8002234:	4604      	mov	r4, r0
 8002236:	781a      	ldrb	r2, [r3, #0]
 8002238:	7880      	ldrb	r0, [r0, #2]
 800223a:	4282      	cmp	r2, r0
 800223c:	d013      	beq.n	8002266 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x36>
 800223e:	7018      	strb	r0, [r3, #0]
 8002240:	f7fe fb10 	bl	8000864 <__aeabi_i2d>
 8002244:	a31e      	add	r3, pc, #120	; (adr r3, 80022c0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x90>)
 8002246:	e9d3 2300 	ldrd	r2, r3, [r3]
 800224a:	f7fe fb75 	bl	8000938 <__aeabi_dmul>
 800224e:	f7fe fd85 	bl	8000d5c <__aeabi_d2uiz>
 8002252:	4b1e      	ldr	r3, [pc, #120]	; (80022cc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>)
 8002254:	4601      	mov	r1, r0
 8002256:	6818      	ldr	r0, [r3, #0]
 8002258:	f000 fc30 	bl	8002abc <Dmx::SetDmxBreakTime(unsigned int)>
 800225c:	4b1c      	ldr	r3, [pc, #112]	; (80022d0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 800225e:	78a1      	ldrb	r1, [r4, #2]
 8002260:	6818      	ldr	r0, [r3, #0]
 8002262:	f7ff ff97 	bl	8002194 <StoreWidget::UpdateBreakTime(unsigned char)>
 8002266:	4b1b      	ldr	r3, [pc, #108]	; (80022d4 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa4>)
 8002268:	78e0      	ldrb	r0, [r4, #3]
 800226a:	781a      	ldrb	r2, [r3, #0]
 800226c:	4282      	cmp	r2, r0
 800226e:	d013      	beq.n	8002298 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x68>
 8002270:	7018      	strb	r0, [r3, #0]
 8002272:	f7fe faf7 	bl	8000864 <__aeabi_i2d>
 8002276:	a312      	add	r3, pc, #72	; (adr r3, 80022c0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x90>)
 8002278:	e9d3 2300 	ldrd	r2, r3, [r3]
 800227c:	f7fe fb5c 	bl	8000938 <__aeabi_dmul>
 8002280:	f7fe fd6c 	bl	8000d5c <__aeabi_d2uiz>
 8002284:	4b11      	ldr	r3, [pc, #68]	; (80022cc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>)
 8002286:	4601      	mov	r1, r0
 8002288:	6818      	ldr	r0, [r3, #0]
 800228a:	f000 fc21 	bl	8002ad0 <Dmx::SetDmxMabTime(unsigned int)>
 800228e:	4b10      	ldr	r3, [pc, #64]	; (80022d0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 8002290:	78e1      	ldrb	r1, [r4, #3]
 8002292:	6818      	ldr	r0, [r3, #0]
 8002294:	f7ff ff98 	bl	80021c8 <StoreWidget::UpdateMabTime(unsigned char)>
 8002298:	4b0f      	ldr	r3, [pc, #60]	; (80022d8 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa8>)
 800229a:	7921      	ldrb	r1, [r4, #4]
 800229c:	781a      	ldrb	r2, [r3, #0]
 800229e:	428a      	cmp	r2, r1
 80022a0:	d00d      	beq.n	80022be <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x8e>
 80022a2:	7019      	strb	r1, [r3, #0]
 80022a4:	4b09      	ldr	r3, [pc, #36]	; (80022cc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>)
 80022a6:	6818      	ldr	r0, [r3, #0]
 80022a8:	b111      	cbz	r1, 80022b0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x80>
 80022aa:	4b0c      	ldr	r3, [pc, #48]	; (80022dc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xac>)
 80022ac:	fbb3 f1f1 	udiv	r1, r3, r1
 80022b0:	f000 fbd4 	bl	8002a5c <Dmx::SetDmxPeriodTime(unsigned int)>
 80022b4:	4b06      	ldr	r3, [pc, #24]	; (80022d0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 80022b6:	7921      	ldrb	r1, [r4, #4]
 80022b8:	6818      	ldr	r0, [r3, #0]
 80022ba:	f7ff ff9f 	bl	80021fc <StoreWidget::UpdateRefreshRate(unsigned char)>
 80022be:	bd10      	pop	{r4, pc}
 80022c0:	3d70a3d7 	ldclcc	3, cr10, [r0, #-860]!	; 0xfffffca4
 80022c4:	4025570a 	eormi	r5, r5, sl, lsl #14
 80022c8:	20000001 	andcs	r0, r0, r1
 80022cc:	20000724 	andcs	r0, r0, r4, lsr #14
 80022d0:	2000174c 	andcs	r1, r0, ip, asr #14
 80022d4:	20000000 	andcs	r0, r0, r0
 80022d8:	20000004 	andcs	r0, r0, r4
 80022dc:	000f4240 	andeq	r4, pc, r0, asr #4

080022e0 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>:
 80022e0:	4770      	bx	lr
	...

080022e4 <Rdm::Receive(unsigned int)>:
 80022e4:	4b02      	ldr	r3, [pc, #8]	; (80022f0 <Rdm::Receive(unsigned int)+0xc>)
 80022e6:	4601      	mov	r1, r0
 80022e8:	6818      	ldr	r0, [r3, #0]
 80022ea:	f000 bc9b 	b.w	8002c24 <Dmx::RdmReceive(unsigned int)>
 80022ee:	bf00      	nop
 80022f0:	20000724 	andcs	r0, r0, r4, lsr #14

080022f4 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>:
 80022f4:	2300      	movs	r3, #0
 80022f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80022fa:	4604      	mov	r4, r0
 80022fc:	460e      	mov	r6, r1
 80022fe:	4617      	mov	r7, r2
 8002300:	4d0b      	ldr	r5, [pc, #44]	; (8002330 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)+0x3c>)
 8002302:	461a      	mov	r2, r3
 8002304:	4601      	mov	r1, r0
 8002306:	6828      	ldr	r0, [r5, #0]
 8002308:	f000 fa9c 	bl	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800230c:	463b      	mov	r3, r7
 800230e:	4632      	mov	r2, r6
 8002310:	4621      	mov	r1, r4
 8002312:	6828      	ldr	r0, [r5, #0]
 8002314:	f000 fc40 	bl	8002b98 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>
 8002318:	2100      	movs	r1, #0
 800231a:	2004      	movs	r0, #4
 800231c:	f002 fe52 	bl	8004fc4 <udelay(unsigned int, unsigned int)>
 8002320:	2301      	movs	r3, #1
 8002322:	4621      	mov	r1, r4
 8002324:	6828      	ldr	r0, [r5, #0]
 8002326:	461a      	mov	r2, r3
 8002328:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800232c:	f000 ba8a 	b.w	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8002330:	20000724 	andcs	r0, r0, r4, lsr #14

08002334 <USART2_IRQHandler>:
 8002334:	b510      	push	{r4, lr}
 8002336:	f3bf 8f5f 	dmb	sy
 800233a:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 800233e:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 8002342:	f013 0f02 	tst.w	r3, #2
 8002346:	4b74      	ldr	r3, [pc, #464]	; (8002518 <USART2_IRQHandler+0x1e4>)
 8002348:	d00e      	beq.n	8002368 <USART2_IRQHandler+0x34>
 800234a:	f8d2 1800 	ldr.w	r1, [r2, #2048]	; 0x800
 800234e:	f021 0102 	bic.w	r1, r1, #2
 8002352:	f8c2 1800 	str.w	r1, [r2, #2048]	; 0x800
 8002356:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 800235a:	2200      	movs	r2, #0
 800235c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8002360:	2202      	movs	r2, #2
 8002362:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002366:	bd10      	pop	{r4, pc}
 8002368:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 800236c:	f8d3 120c 	ldr.w	r1, [r3, #524]	; 0x20c
 8002370:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002374:	290a      	cmp	r1, #10
 8002376:	f200 80ca 	bhi.w	800250e <USART2_IRQHandler+0x1da>
 800237a:	e8df f001 	tbb	[pc, r1]
 800237e:	c810c806 	ldmdagt	r0, {r1, r2, fp, lr, pc}
 8002382:	6d5f482c 	ldclvs	8, cr4, [pc, #-176]	; 80022d8 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa8>
 8002386:	00ac9886 	adceq	r9, ip, r6, lsl #17
 800238a:	2108      	movs	r1, #8
 800238c:	701a      	strb	r2, [r3, #0]
 800238e:	2201      	movs	r2, #1
 8002390:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8002394:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8002398:	f3bf 8f5f 	dmb	sy
 800239c:	e7e3      	b.n	8002366 <USART2_IRQHandler+0x32>
 800239e:	b11a      	cbz	r2, 80023a8 <USART2_IRQHandler+0x74>
 80023a0:	2acc      	cmp	r2, #204	; 0xcc
 80023a2:	d012      	beq.n	80023ca <USART2_IRQHandler+0x96>
 80023a4:	2200      	movs	r2, #0
 80023a6:	e00d      	b.n	80023c4 <USART2_IRQHandler+0x90>
 80023a8:	701a      	strb	r2, [r3, #0]
 80023aa:	2201      	movs	r2, #1
 80023ac:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80023b0:	4a5a      	ldr	r2, [pc, #360]	; (800251c <USART2_IRQHandler+0x1e8>)
 80023b2:	6851      	ldr	r1, [r2, #4]
 80023b4:	3101      	adds	r1, #1
 80023b6:	6051      	str	r1, [r2, #4]
 80023b8:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80023bc:	f8d1 1424 	ldr.w	r1, [r1, #1060]	; 0x424
 80023c0:	60d1      	str	r1, [r2, #12]
 80023c2:	2204      	movs	r2, #4
 80023c4:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 80023c8:	e7e6      	b.n	8002398 <USART2_IRQHandler+0x64>
 80023ca:	701a      	strb	r2, [r3, #0]
 80023cc:	4a54      	ldr	r2, [pc, #336]	; (8002520 <USART2_IRQHandler+0x1ec>)
 80023ce:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80023d2:	2205      	movs	r2, #5
 80023d4:	e7f6      	b.n	80023c4 <USART2_IRQHandler+0x90>
 80023d6:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 80023da:	b288      	uxth	r0, r1
 80023dc:	541a      	strb	r2, [r3, r0]
 80023de:	1c4a      	adds	r2, r1, #1
 80023e0:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 80023e4:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80023e8:	d904      	bls.n	80023f4 <USART2_IRQHandler+0xc0>
 80023ea:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80023ee:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80023f2:	e7d7      	b.n	80023a4 <USART2_IRQHandler+0x70>
 80023f4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80023f8:	4848      	ldr	r0, [pc, #288]	; (800251c <USART2_IRQHandler+0x1e8>)
 80023fa:	f8d2 1424 	ldr.w	r1, [r2, #1060]	; 0x424
 80023fe:	68c3      	ldr	r3, [r0, #12]
 8002400:	60c1      	str	r1, [r0, #12]
 8002402:	ebc3 0341 	rsb	r3, r3, r1, lsl #1
 8002406:	3304      	adds	r3, #4
 8002408:	f8c2 3434 	str.w	r3, [r2, #1076]	; 0x434
 800240c:	e7c4      	b.n	8002398 <USART2_IRQHandler+0x64>
 800240e:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 8002412:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 8002416:	541a      	strb	r2, [r3, r0]
 8002418:	1c41      	adds	r1, r0, #1
 800241a:	3817      	subs	r0, #23
 800241c:	b289      	uxth	r1, r1
 800241e:	4422      	add	r2, r4
 8002420:	28e7      	cmp	r0, #231	; 0xe7
 8002422:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8002426:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 800242a:	d804      	bhi.n	8002436 <USART2_IRQHandler+0x102>
 800242c:	789a      	ldrb	r2, [r3, #2]
 800242e:	428a      	cmp	r2, r1
 8002430:	d101      	bne.n	8002436 <USART2_IRQHandler+0x102>
 8002432:	2206      	movs	r2, #6
 8002434:	e7c6      	b.n	80023c4 <USART2_IRQHandler+0x90>
 8002436:	29ff      	cmp	r1, #255	; 0xff
 8002438:	d9ae      	bls.n	8002398 <USART2_IRQHandler+0x64>
 800243a:	e7b3      	b.n	80023a4 <USART2_IRQHandler+0x70>
 800243c:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8002440:	545a      	strb	r2, [r3, r1]
 8002442:	3101      	adds	r1, #1
 8002444:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8002448:	f8b3 1206 	ldrh.w	r1, [r3, #518]	; 0x206
 800244c:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 8002450:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8002454:	2207      	movs	r2, #7
 8002456:	e7b5      	b.n	80023c4 <USART2_IRQHandler+0x90>
 8002458:	f8b3 0206 	ldrh.w	r0, [r3, #518]	; 0x206
 800245c:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8002460:	545a      	strb	r2, [r3, r1]
 8002462:	1a82      	subs	r2, r0, r2
 8002464:	b292      	uxth	r2, r2
 8002466:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 800246a:	b912      	cbnz	r2, 8002472 <USART2_IRQHandler+0x13e>
 800246c:	785a      	ldrb	r2, [r3, #1]
 800246e:	2a01      	cmp	r2, #1
 8002470:	d001      	beq.n	8002476 <USART2_IRQHandler+0x142>
 8002472:	2200      	movs	r2, #0
 8002474:	e7bb      	b.n	80023ee <USART2_IRQHandler+0xba>
 8002476:	3101      	adds	r1, #1
 8002478:	4a2a      	ldr	r2, [pc, #168]	; (8002524 <USART2_IRQHandler+0x1f0>)
 800247a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800247e:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8002482:	6851      	ldr	r1, [r2, #4]
 8002484:	4a28      	ldr	r2, [pc, #160]	; (8002528 <USART2_IRQHandler+0x1f4>)
 8002486:	6011      	str	r1, [r2, #0]
 8002488:	e78c      	b.n	80023a4 <USART2_IRQHandler+0x70>
 800248a:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 800248e:	2aaa      	cmp	r2, #170	; 0xaa
 8002490:	545a      	strb	r2, [r3, r1]
 8002492:	f101 0101 	add.w	r1, r1, #1
 8002496:	b289      	uxth	r1, r1
 8002498:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 800249c:	d002      	beq.n	80024a4 <USART2_IRQHandler+0x170>
 800249e:	2909      	cmp	r1, #9
 80024a0:	f47f af7a 	bne.w	8002398 <USART2_IRQHandler+0x64>
 80024a4:	2200      	movs	r2, #0
 80024a6:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 80024aa:	2209      	movs	r2, #9
 80024ac:	e78a      	b.n	80023c4 <USART2_IRQHandler+0x90>
 80024ae:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 80024b2:	545a      	strb	r2, [r3, r1]
 80024b4:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 80024b8:	3101      	adds	r1, #1
 80024ba:	3201      	adds	r2, #1
 80024bc:	b292      	uxth	r2, r2
 80024be:	2a0c      	cmp	r2, #12
 80024c0:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 80024c4:	d002      	beq.n	80024cc <USART2_IRQHandler+0x198>
 80024c6:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 80024ca:	e765      	b.n	8002398 <USART2_IRQHandler+0x64>
 80024cc:	2200      	movs	r2, #0
 80024ce:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 80024d2:	220a      	movs	r2, #10
 80024d4:	e776      	b.n	80023c4 <USART2_IRQHandler+0x90>
 80024d6:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 80024da:	545a      	strb	r2, [r3, r1]
 80024dc:	1c4a      	adds	r2, r1, #1
 80024de:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 80024e2:	b292      	uxth	r2, r2
 80024e4:	3101      	adds	r1, #1
 80024e6:	b289      	uxth	r1, r1
 80024e8:	2904      	cmp	r1, #4
 80024ea:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 80024ee:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 80024f2:	f47f af51 	bne.w	8002398 <USART2_IRQHandler+0x64>
 80024f6:	2100      	movs	r1, #0
 80024f8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80024fc:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8002500:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8002504:	4b07      	ldr	r3, [pc, #28]	; (8002524 <USART2_IRQHandler+0x1f0>)
 8002506:	685a      	ldr	r2, [r3, #4]
 8002508:	4b07      	ldr	r3, [pc, #28]	; (8002528 <USART2_IRQHandler+0x1f4>)
 800250a:	601a      	str	r2, [r3, #0]
 800250c:	e744      	b.n	8002398 <USART2_IRQHandler+0x64>
 800250e:	2200      	movs	r2, #0
 8002510:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8002514:	e756      	b.n	80023c4 <USART2_IRQHandler+0x90>
 8002516:	bf00      	nop
 8002518:	200000f8 	strdcs	r0, [r0], -r8
 800251c:	20000714 	andcs	r0, r0, r4, lsl r7
 8002520:	00cc0001 	sbceq	r0, ip, r1
 8002524:	e0001000 	and	r1, r0, r0
 8002528:	20000728 	andcs	r0, r0, r8, lsr #14

0800252c <TIMER1_IRQHandler>:
 800252c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800252e:	f3bf 8f5f 	dmb	sy
 8002532:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002536:	691c      	ldr	r4, [r3, #16]
 8002538:	4e1f      	ldr	r6, [pc, #124]	; (80025b8 <TIMER1_IRQHandler+0x8c>)
 800253a:	07a7      	lsls	r7, r4, #30
 800253c:	8835      	ldrh	r5, [r6, #0]
 800253e:	d518      	bpl.n	8002572 <TIMER1_IRQHandler+0x46>
 8002540:	4f1e      	ldr	r7, [pc, #120]	; (80025bc <TIMER1_IRQHandler+0x90>)
 8002542:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002546:	2203      	movs	r2, #3
 8002548:	2110      	movs	r1, #16
 800254a:	4638      	mov	r0, r7
 800254c:	f001 ffaa 	bl	80044a4 <gpio_init>
 8002550:	07ed      	lsls	r5, r5, #31
 8002552:	d506      	bpl.n	8002562 <TIMER1_IRQHandler+0x36>
 8002554:	8833      	ldrh	r3, [r6, #0]
 8002556:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800255a:	8033      	strh	r3, [r6, #0]
 800255c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002560:	617b      	str	r3, [r7, #20]
 8002562:	4621      	mov	r1, r4
 8002564:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002568:	f002 f9db 	bl	8004922 <timer_interrupt_flag_clear>
 800256c:	f3bf 8f5f 	dmb	sy
 8002570:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002572:	0760      	lsls	r0, r4, #29
 8002574:	d509      	bpl.n	800258a <TIMER1_IRQHandler+0x5e>
 8002576:	05e9      	lsls	r1, r5, #23
 8002578:	d5f3      	bpl.n	8002562 <TIMER1_IRQHandler+0x36>
 800257a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800257e:	2203      	movs	r2, #3
 8002580:	2118      	movs	r1, #24
 8002582:	480e      	ldr	r0, [pc, #56]	; (80025bc <TIMER1_IRQHandler+0x90>)
 8002584:	f001 ff8e 	bl	80044a4 <gpio_init>
 8002588:	e7eb      	b.n	8002562 <TIMER1_IRQHandler+0x36>
 800258a:	0722      	lsls	r2, r4, #28
 800258c:	d5e9      	bpl.n	8002562 <TIMER1_IRQHandler+0x36>
 800258e:	05eb      	lsls	r3, r5, #23
 8002590:	d5e7      	bpl.n	8002562 <TIMER1_IRQHandler+0x36>
 8002592:	4b0b      	ldr	r3, [pc, #44]	; (80025c0 <TIMER1_IRQHandler+0x94>)
 8002594:	2180      	movs	r1, #128	; 0x80
 8002596:	69da      	ldr	r2, [r3, #28]
 8002598:	480a      	ldr	r0, [pc, #40]	; (80025c4 <TIMER1_IRQHandler+0x98>)
 800259a:	f022 0201 	bic.w	r2, r2, #1
 800259e:	61da      	str	r2, [r3, #28]
 80025a0:	4a09      	ldr	r2, [pc, #36]	; (80025c8 <TIMER1_IRQHandler+0x9c>)
 80025a2:	629a      	str	r2, [r3, #40]	; 0x28
 80025a4:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 80025a8:	621a      	str	r2, [r3, #32]
 80025aa:	69da      	ldr	r2, [r3, #28]
 80025ac:	f042 0201 	orr.w	r2, r2, #1
 80025b0:	61da      	str	r2, [r3, #28]
 80025b2:	f002 fa55 	bl	8004a60 <usart_dma_transmit_config>
 80025b6:	e7d4      	b.n	8002562 <TIMER1_IRQHandler+0x36>
 80025b8:	20000712 	andcs	r0, r0, r2, lsl r7
 80025bc:	40011000 	andmi	r1, r1, r0
 80025c0:	40020000 	andmi	r0, r2, r0
 80025c4:	40004800 	andmi	r4, r0, r0, lsl #16
 80025c8:	20000308 	andcs	r0, r0, r8, lsl #6

080025cc <TIMER2_IRQHandler>:
 80025cc:	b508      	push	{r3, lr}
 80025ce:	f3bf 8f5f 	dmb	sy
 80025d2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80025d6:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 80025da:	078b      	lsls	r3, r1, #30
 80025dc:	d50d      	bpl.n	80025fa <TIMER2_IRQHandler+0x2e>
 80025de:	4b0a      	ldr	r3, [pc, #40]	; (8002608 <TIMER2_IRQHandler+0x3c>)
 80025e0:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 80025e4:	2a04      	cmp	r2, #4
 80025e6:	d108      	bne.n	80025fa <TIMER2_IRQHandler+0x2e>
 80025e8:	2200      	movs	r2, #0
 80025ea:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 80025ee:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 80025f2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80025f6:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80025fa:	4804      	ldr	r0, [pc, #16]	; (800260c <TIMER2_IRQHandler+0x40>)
 80025fc:	f002 f991 	bl	8004922 <timer_interrupt_flag_clear>
 8002600:	f3bf 8f5f 	dmb	sy
 8002604:	bd08      	pop	{r3, pc}
 8002606:	bf00      	nop
 8002608:	200000f8 	strdcs	r0, [r0], -r8
 800260c:	40000400 	andmi	r0, r0, r0, lsl #8

08002610 <TIMER3_IRQHandler>:
 8002610:	b508      	push	{r3, lr}
 8002612:	f3bf 8f5f 	dmb	sy
 8002616:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800261a:	4804      	ldr	r0, [pc, #16]	; (800262c <TIMER3_IRQHandler+0x1c>)
 800261c:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 8002620:	f002 f97f 	bl	8004922 <timer_interrupt_flag_clear>
 8002624:	f3bf 8f5f 	dmb	sy
 8002628:	bd08      	pop	{r3, pc}
 800262a:	bf00      	nop
 800262c:	40000800 	andmi	r0, r0, r0, lsl #16

08002630 <TIMER6_IRQHandler>:
 8002630:	b508      	push	{r3, lr}
 8002632:	f3bf 8f5f 	dmb	sy
 8002636:	4b07      	ldr	r3, [pc, #28]	; (8002654 <TIMER6_IRQHandler+0x24>)
 8002638:	4807      	ldr	r0, [pc, #28]	; (8002658 <TIMER6_IRQHandler+0x28>)
 800263a:	685a      	ldr	r2, [r3, #4]
 800263c:	6899      	ldr	r1, [r3, #8]
 800263e:	1a52      	subs	r2, r2, r1
 8002640:	601a      	str	r2, [r3, #0]
 8002642:	685a      	ldr	r2, [r3, #4]
 8002644:	2101      	movs	r1, #1
 8002646:	609a      	str	r2, [r3, #8]
 8002648:	f002 f96b 	bl	8004922 <timer_interrupt_flag_clear>
 800264c:	f3bf 8f5f 	dmb	sy
 8002650:	bd08      	pop	{r3, pc}
 8002652:	bf00      	nop
 8002654:	20000714 	andcs	r0, r0, r4, lsl r7
 8002658:	40001400 	andmi	r1, r0, r0, lsl #8

0800265c <Dmx::ClearData(unsigned int)>:
 800265c:	f44f 7301 	mov.w	r3, #516	; 0x204
 8002660:	b510      	push	{r4, lr}
 8002662:	2400      	movs	r4, #0
 8002664:	4a08      	ldr	r2, [pc, #32]	; (8002688 <Dmx::ClearData(unsigned int)+0x2c>)
 8002666:	fb03 2301 	mla	r3, r3, r1, r2
 800266a:	f203 2002 	addw	r0, r3, #514	; 0x202
 800266e:	f823 4b02 	strh.w	r4, [r3], #2
 8002672:	4283      	cmp	r3, r0
 8002674:	d1fb      	bne.n	800266e <Dmx::ClearData(unsigned int)+0x12>
 8002676:	f44f 7301 	mov.w	r3, #516	; 0x204
 800267a:	fb03 2201 	mla	r2, r3, r1, r2
 800267e:	f240 2301 	movw	r3, #513	; 0x201
 8002682:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 8002686:	bd10      	pop	{r4, pc}
 8002688:	20000308 	andcs	r0, r0, r8, lsl #6

0800268c <Dmx::StartData(unsigned int, unsigned int)>:
 800268c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800268e:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8002692:	6943      	ldr	r3, [r0, #20]
 8002694:	460c      	mov	r4, r1
 8002696:	4615      	mov	r5, r2
 8002698:	b085      	sub	sp, #20
 800269a:	2b00      	cmp	r3, #0
 800269c:	d16a      	bne.n	8002774 <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 800269e:	4e47      	ldr	r6, [pc, #284]	; (80027bc <Dmx::StartData(unsigned int, unsigned int)+0x130>)
 80026a0:	8834      	ldrh	r4, [r6, #0]
 80026a2:	2c00      	cmp	r4, #0
 80026a4:	d15b      	bne.n	800275e <Dmx::StartData(unsigned int, unsigned int)+0xd2>
 80026a6:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 80026aa:	f001 ff8d 	bl	80045c8 <rcu_periph_clock_enable>
 80026ae:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80026b2:	f002 f83f 	bl	8004734 <timer_deinit>
 80026b6:	236b      	movs	r3, #107	; 0x6b
 80026b8:	9300      	str	r3, [sp, #0]
 80026ba:	4b41      	ldr	r3, [pc, #260]	; (80027c0 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 80026bc:	4669      	mov	r1, sp
 80026be:	681b      	ldr	r3, [r3, #0]
 80026c0:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80026c4:	9302      	str	r3, [sp, #8]
 80026c6:	f8ad 4004 	strh.w	r4, [sp, #4]
 80026ca:	f8ad 400c 	strh.w	r4, [sp, #12]
 80026ce:	f88d 400e 	strb.w	r4, [sp, #14]
 80026d2:	f002 f891 	bl	80047f8 <timer_init>
 80026d6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80026da:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80026de:	f002 f923 	bl	8004928 <timer_flag_clear>
 80026e2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80026e6:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80026ea:	f002 f91a 	bl	8004922 <timer_interrupt_flag_clear>
 80026ee:	2210      	movs	r2, #16
 80026f0:	4621      	mov	r1, r4
 80026f2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80026f6:	f002 f8dc 	bl	80048b2 <timer_channel_output_mode_config>
 80026fa:	2210      	movs	r2, #16
 80026fc:	2101      	movs	r1, #1
 80026fe:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002702:	f002 f8d6 	bl	80048b2 <timer_channel_output_mode_config>
 8002706:	4f2f      	ldr	r7, [pc, #188]	; (80027c4 <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 8002708:	2210      	movs	r2, #16
 800270a:	2102      	movs	r1, #2
 800270c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002710:	f002 f8cf 	bl	80048b2 <timer_channel_output_mode_config>
 8002714:	4622      	mov	r2, r4
 8002716:	4621      	mov	r1, r4
 8002718:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800271c:	f002 f8ef 	bl	80048fe <timer_channel_output_pulse_value_config>
 8002720:	2101      	movs	r1, #1
 8002722:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002726:	883a      	ldrh	r2, [r7, #0]
 8002728:	f002 f8e9 	bl	80048fe <timer_channel_output_pulse_value_config>
 800272c:	4b26      	ldr	r3, [pc, #152]	; (80027c8 <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 800272e:	683a      	ldr	r2, [r7, #0]
 8002730:	681b      	ldr	r3, [r3, #0]
 8002732:	2102      	movs	r1, #2
 8002734:	441a      	add	r2, r3
 8002736:	b292      	uxth	r2, r2
 8002738:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800273c:	f002 f8df 	bl	80048fe <timer_channel_output_pulse_value_config>
 8002740:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002744:	210e      	movs	r1, #14
 8002746:	f002 f8e8 	bl	800491a <timer_interrupt_enable>
 800274a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800274e:	4b1f      	ldr	r3, [pc, #124]	; (80027cc <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 8002750:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002754:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 8002758:	601a      	str	r2, [r3, #0]
 800275a:	f002 f8a5 	bl	80048a8 <timer_enable>
 800275e:	2201      	movs	r2, #1
 8002760:	8831      	ldrh	r1, [r6, #0]
 8002762:	fa02 f305 	lsl.w	r3, r2, r5
 8002766:	430b      	orrs	r3, r1
 8002768:	8033      	strh	r3, [r6, #0]
 800276a:	4b19      	ldr	r3, [pc, #100]	; (80027d0 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 800276c:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8002770:	b005      	add	sp, #20
 8002772:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002774:	f44f 7204 	mov.w	r2, #528	; 0x210
 8002778:	4b16      	ldr	r3, [pc, #88]	; (80027d4 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 800277a:	fb02 3305 	mla	r3, r2, r5, r3
 800277e:	2200      	movs	r2, #0
 8002780:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002784:	2107      	movs	r1, #7
 8002786:	4620      	mov	r0, r4
 8002788:	f002 f970 	bl	8004a6c <usart_flag_get>
 800278c:	2800      	cmp	r0, #0
 800278e:	d0f9      	beq.n	8002784 <Dmx::StartData(unsigned int, unsigned int)+0xf8>
 8002790:	4620      	mov	r0, r4
 8002792:	4911      	ldr	r1, [pc, #68]	; (80027d8 <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 8002794:	f002 f98b 	bl	8004aae <usart_interrupt_flag_clear>
 8002798:	f240 3105 	movw	r1, #773	; 0x305
 800279c:	4620      	mov	r0, r4
 800279e:	f002 f96d 	bl	8004a7c <usart_interrupt_enable>
 80027a2:	2202      	movs	r2, #2
 80027a4:	4b0a      	ldr	r3, [pc, #40]	; (80027d0 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 80027a6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80027aa:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80027ae:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 80027b2:	f043 0302 	orr.w	r3, r3, #2
 80027b6:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 80027ba:	e7d9      	b.n	8002770 <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 80027bc:	20000712 	andcs	r0, r0, r2, lsl r7
 80027c0:	20000008 	andcs	r0, r0, r8
 80027c4:	20000010 	andcs	r0, r0, r0, lsl r0
 80027c8:	2000000c 	andcs	r0, r0, ip
 80027cc:	e000e100 	and	lr, r0, r0, lsl #2
 80027d0:	2000050c 	andcs	r0, r0, ip, lsl #10
 80027d4:	200000f8 	strdcs	r0, [r0], -r8
 80027d8:	00050305 	andeq	r0, r5, r5, lsl #6

080027dc <Dmx::StopData(unsigned int, unsigned int)>:
 80027dc:	b538      	push	{r3, r4, r5, lr}
 80027de:	4d16      	ldr	r5, [pc, #88]	; (8002838 <Dmx::StopData(unsigned int, unsigned int)+0x5c>)
 80027e0:	4614      	mov	r4, r2
 80027e2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80027e6:	4603      	mov	r3, r0
 80027e8:	4608      	mov	r0, r1
 80027ea:	b17a      	cbz	r2, 800280c <Dmx::StopData(unsigned int, unsigned int)+0x30>
 80027ec:	695b      	ldr	r3, [r3, #20]
 80027ee:	b973      	cbnz	r3, 800280e <Dmx::StopData(unsigned int, unsigned int)+0x32>
 80027f0:	2201      	movs	r2, #1
 80027f2:	4912      	ldr	r1, [pc, #72]	; (800283c <Dmx::StopData(unsigned int, unsigned int)+0x60>)
 80027f4:	f104 0308 	add.w	r3, r4, #8
 80027f8:	fa02 f303 	lsl.w	r3, r2, r3
 80027fc:	40a2      	lsls	r2, r4
 80027fe:	4313      	orrs	r3, r2
 8002800:	880a      	ldrh	r2, [r1, #0]
 8002802:	4013      	ands	r3, r2
 8002804:	800b      	strh	r3, [r1, #0]
 8002806:	2300      	movs	r3, #0
 8002808:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 800280c:	bd38      	pop	{r3, r4, r5, pc}
 800280e:	f240 3105 	movw	r1, #773	; 0x305
 8002812:	f002 f93f 	bl	8004a94 <usart_interrupt_disable>
 8002816:	f44f 7204 	mov.w	r2, #528	; 0x210
 800281a:	4b09      	ldr	r3, [pc, #36]	; (8002840 <Dmx::StopData(unsigned int, unsigned int)+0x64>)
 800281c:	fb02 3304 	mla	r3, r2, r4, r3
 8002820:	2200      	movs	r2, #0
 8002822:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002826:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800282a:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800282e:	f023 0302 	bic.w	r3, r3, #2
 8002832:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8002836:	e7e6      	b.n	8002806 <Dmx::StopData(unsigned int, unsigned int)+0x2a>
 8002838:	2000050c 	andcs	r0, r0, ip, lsl #10
 800283c:	20000712 	andcs	r0, r0, r2, lsl r7
 8002840:	200000f8 	strdcs	r0, [r0], -r8

08002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 8002844:	b570      	push	{r4, r5, r6, lr}
 8002846:	461d      	mov	r5, r3
 8002848:	6943      	ldr	r3, [r0, #20]
 800284a:	4606      	mov	r6, r0
 800284c:	4293      	cmp	r3, r2
 800284e:	4614      	mov	r4, r2
 8002850:	d014      	beq.n	800287c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 8002852:	6142      	str	r2, [r0, #20]
 8002854:	4910      	ldr	r1, [pc, #64]	; (8002898 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8002856:	2200      	movs	r2, #0
 8002858:	f7ff ffc0 	bl	80027dc <Dmx::StopData(unsigned int, unsigned int)>
 800285c:	b934      	cbnz	r4, 800286c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 800285e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002862:	4b0e      	ldr	r3, [pc, #56]	; (800289c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 8002864:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8002868:	b94d      	cbnz	r5, 800287e <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800286a:	bd70      	pop	{r4, r5, r6, pc}
 800286c:	2c01      	cmp	r4, #1
 800286e:	d1fb      	bne.n	8002868 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 8002870:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002874:	4b09      	ldr	r3, [pc, #36]	; (800289c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 8002876:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800287a:	e7f5      	b.n	8002868 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800287c:	b135      	cbz	r5, 800288c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 800287e:	4630      	mov	r0, r6
 8002880:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002884:	2200      	movs	r2, #0
 8002886:	4904      	ldr	r1, [pc, #16]	; (8002898 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8002888:	f7ff bf00 	b.w	800268c <Dmx::StartData(unsigned int, unsigned int)>
 800288c:	462a      	mov	r2, r5
 800288e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002892:	4901      	ldr	r1, [pc, #4]	; (8002898 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8002894:	f7ff bfa2 	b.w	80027dc <Dmx::StopData(unsigned int, unsigned int)>
 8002898:	40004800 	andmi	r4, r0, r0, lsl #16
 800289c:	40010000 	andmi	r0, r1, r0

080028a0 <Dmx::Dmx()>:
 80028a0:	225c      	movs	r2, #92	; 0x5c
 80028a2:	230c      	movs	r3, #12
 80028a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80028a8:	e9c0 2300 	strd	r2, r3, [r0]
 80028ac:	f246 13a8 	movw	r3, #25000	; 0x61a8
 80028b0:	e9c0 3302 	strd	r3, r3, [r0, #8]
 80028b4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80028b8:	2400      	movs	r4, #0
 80028ba:	4605      	mov	r5, r0
 80028bc:	8203      	strh	r3, [r0, #16]
 80028be:	4b5d      	ldr	r3, [pc, #372]	; (8002a34 <Dmx::Dmx()+0x194>)
 80028c0:	b08b      	sub	sp, #44	; 0x2c
 80028c2:	6018      	str	r0, [r3, #0]
 80028c4:	4b5c      	ldr	r3, [pc, #368]	; (8002a38 <Dmx::Dmx()+0x198>)
 80028c6:	2203      	movs	r2, #3
 80028c8:	801c      	strh	r4, [r3, #0]
 80028ca:	2110      	movs	r1, #16
 80028cc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80028d0:	485a      	ldr	r0, [pc, #360]	; (8002a3c <Dmx::Dmx()+0x19c>)
 80028d2:	f001 fde7 	bl	80044a4 <gpio_init>
 80028d6:	4621      	mov	r1, r4
 80028d8:	4628      	mov	r0, r5
 80028da:	f7ff febf 	bl	800265c <Dmx::ClearData(unsigned int)>
 80028de:	4b58      	ldr	r3, [pc, #352]	; (8002a40 <Dmx::Dmx()+0x1a0>)
 80028e0:	2201      	movs	r2, #1
 80028e2:	4628      	mov	r0, r5
 80028e4:	601c      	str	r4, [r3, #0]
 80028e6:	4623      	mov	r3, r4
 80028e8:	f7ff ffac 	bl	8002844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80028ec:	4b55      	ldr	r3, [pc, #340]	; (8002a44 <Dmx::Dmx()+0x1a4>)
 80028ee:	4e56      	ldr	r6, [pc, #344]	; (8002a48 <Dmx::Dmx()+0x1a8>)
 80028f0:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 80028f4:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 80028f8:	f001 fe66 	bl	80045c8 <rcu_periph_clock_enable>
 80028fc:	f240 5001 	movw	r0, #1281	; 0x501
 8002900:	f001 fe62 	bl	80045c8 <rcu_periph_clock_enable>
 8002904:	4630      	mov	r0, r6
 8002906:	2101      	movs	r1, #1
 8002908:	f001 fcc8 	bl	800429c <dma_deinit>
 800290c:	4b4f      	ldr	r3, [pc, #316]	; (8002a4c <Dmx::Dmx()+0x1ac>)
 800290e:	2701      	movs	r7, #1
 8002910:	e9cd 3403 	strd	r3, r4, [sp, #12]
 8002914:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002918:	9308      	str	r3, [sp, #32]
 800291a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800291e:	aa03      	add	r2, sp, #12
 8002920:	4639      	mov	r1, r7
 8002922:	4630      	mov	r0, r6
 8002924:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002928:	9406      	str	r4, [sp, #24]
 800292a:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800292e:	f001 fcd1 	bl	80042d4 <dma_init>
 8002932:	4639      	mov	r1, r7
 8002934:	4630      	mov	r0, r6
 8002936:	f001 fd07 	bl	8004348 <dma_circulation_disable>
 800293a:	4639      	mov	r1, r7
 800293c:	4630      	mov	r0, r6
 800293e:	f001 fd13 	bl	8004368 <dma_memory_to_memory_disable>
 8002942:	f5a6 36fe 	sub.w	r6, r6, #130048	; 0x1fc00
 8002946:	f240 7001 	movw	r0, #1793	; 0x701
 800294a:	f001 fe3d 	bl	80045c8 <rcu_periph_clock_enable>
 800294e:	4630      	mov	r0, r6
 8002950:	f001 fef0 	bl	8004734 <timer_deinit>
 8002954:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 8002958:	236b      	movs	r3, #107	; 0x6b
 800295a:	4630      	mov	r0, r6
 800295c:	a903      	add	r1, sp, #12
 800295e:	9303      	str	r3, [sp, #12]
 8002960:	f8ad 4010 	strh.w	r4, [sp, #16]
 8002964:	f8cd 9014 	str.w	r9, [sp, #20]
 8002968:	f8ad 4018 	strh.w	r4, [sp, #24]
 800296c:	f88d 401a 	strb.w	r4, [sp, #26]
 8002970:	f001 ff42 	bl	80047f8 <timer_init>
 8002974:	4649      	mov	r1, r9
 8002976:	4630      	mov	r0, r6
 8002978:	f001 ffd6 	bl	8004928 <timer_flag_clear>
 800297c:	4649      	mov	r1, r9
 800297e:	4630      	mov	r0, r6
 8002980:	f001 ffcf 	bl	8004922 <timer_interrupt_flag_clear>
 8002984:	4621      	mov	r1, r4
 8002986:	4630      	mov	r0, r6
 8002988:	2210      	movs	r2, #16
 800298a:	f001 ff92 	bl	80048b2 <timer_channel_output_mode_config>
 800298e:	4639      	mov	r1, r7
 8002990:	4630      	mov	r0, r6
 8002992:	2210      	movs	r2, #16
 8002994:	f001 ff8d 	bl	80048b2 <timer_channel_output_mode_config>
 8002998:	4630      	mov	r0, r6
 800299a:	2210      	movs	r2, #16
 800299c:	2102      	movs	r1, #2
 800299e:	f001 ff88 	bl	80048b2 <timer_channel_output_mode_config>
 80029a2:	2210      	movs	r2, #16
 80029a4:	2103      	movs	r1, #3
 80029a6:	4630      	mov	r0, r6
 80029a8:	f001 ff83 	bl	80048b2 <timer_channel_output_mode_config>
 80029ac:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 80029b0:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8002a50 <Dmx::Dmx()+0x1b0>
 80029b4:	4630      	mov	r0, r6
 80029b6:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 80029ba:	f8c8 3000 	str.w	r3, [r8]
 80029be:	f506 5680 	add.w	r6, r6, #4096	; 0x1000
 80029c2:	f001 ff71 	bl	80048a8 <timer_enable>
 80029c6:	f240 7005 	movw	r0, #1797	; 0x705
 80029ca:	f001 fdfd 	bl	80045c8 <rcu_periph_clock_enable>
 80029ce:	4630      	mov	r0, r6
 80029d0:	f001 feb0 	bl	8004734 <timer_deinit>
 80029d4:	f642 232f 	movw	r3, #10799	; 0x2a2f
 80029d8:	f8ad 300c 	strh.w	r3, [sp, #12]
 80029dc:	f242 7310 	movw	r3, #10000	; 0x2710
 80029e0:	4630      	mov	r0, r6
 80029e2:	a903      	add	r1, sp, #12
 80029e4:	9305      	str	r3, [sp, #20]
 80029e6:	f001 ff07 	bl	80047f8 <timer_init>
 80029ea:	4649      	mov	r1, r9
 80029ec:	4630      	mov	r0, r6
 80029ee:	f001 ff9b 	bl	8004928 <timer_flag_clear>
 80029f2:	4649      	mov	r1, r9
 80029f4:	4630      	mov	r0, r6
 80029f6:	f001 ff94 	bl	8004922 <timer_interrupt_flag_clear>
 80029fa:	4639      	mov	r1, r7
 80029fc:	4630      	mov	r0, r6
 80029fe:	f001 ff8c 	bl	800491a <timer_interrupt_enable>
 8002a02:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8002a06:	4630      	mov	r0, r6
 8002a08:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 8002a0c:	f8c8 3004 	str.w	r3, [r8, #4]
 8002a10:	f001 ff4a 	bl	80048a8 <timer_enable>
 8002a14:	2302      	movs	r3, #2
 8002a16:	2208      	movs	r2, #8
 8002a18:	9300      	str	r3, [sp, #0]
 8002a1a:	490e      	ldr	r1, [pc, #56]	; (8002a54 <Dmx::Dmx()+0x1b4>)
 8002a1c:	4623      	mov	r3, r4
 8002a1e:	480e      	ldr	r0, [pc, #56]	; (8002a58 <Dmx::Dmx()+0x1b8>)
 8002a20:	f002 f9ee 	bl	8004e00 <gd32_uart_begin>
 8002a24:	2380      	movs	r3, #128	; 0x80
 8002a26:	4628      	mov	r0, r5
 8002a28:	f8c8 3004 	str.w	r3, [r8, #4]
 8002a2c:	b00b      	add	sp, #44	; 0x2c
 8002a2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002a32:	bf00      	nop
 8002a34:	20000724 	andcs	r0, r0, r4, lsr #14
 8002a38:	20000712 	andcs	r0, r0, r2, lsl r7
 8002a3c:	40010c00 	andmi	r0, r1, r0, lsl #24
 8002a40:	2000050c 	andcs	r0, r0, ip, lsl #10
 8002a44:	200000f8 	strdcs	r0, [r0], -r8
 8002a48:	40020000 	andmi	r0, r2, r0
 8002a4c:	40004804 	andmi	r4, r0, r4, lsl #16
 8002a50:	e000e100 	and	lr, r0, r0, lsl #2
 8002a54:	0003d090 	muleq	r3, r0, r0
 8002a58:	40004800 	andmi	r4, r0, r0, lsl #16

08002a5c <Dmx::SetDmxPeriodTime(unsigned int)>:
 8002a5c:	4b13      	ldr	r3, [pc, #76]	; (8002aac <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 8002a5e:	b570      	push	{r4, r5, r6, lr}
 8002a60:	60c1      	str	r1, [r0, #12]
 8002a62:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 8002a66:	232c      	movs	r3, #44	; 0x2c
 8002a68:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 8002a6c:	4d10      	ldr	r5, [pc, #64]	; (8002ab0 <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 8002a6e:	4c11      	ldr	r4, [pc, #68]	; (8002ab4 <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 8002a70:	4358      	muls	r0, r3
 8002a72:	682a      	ldr	r2, [r5, #0]
 8002a74:	6823      	ldr	r3, [r4, #0]
 8002a76:	4413      	add	r3, r2
 8002a78:	4403      	add	r3, r0
 8002a7a:	42b3      	cmp	r3, r6
 8002a7c:	d908      	bls.n	8002a90 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 8002a7e:	2ab0      	cmp	r2, #176	; 0xb0
 8002a80:	4613      	mov	r3, r2
 8002a82:	bf28      	it	cs
 8002a84:	23b0      	movcs	r3, #176	; 0xb0
 8002a86:	220c      	movs	r2, #12
 8002a88:	602b      	str	r3, [r5, #0]
 8002a8a:	4413      	add	r3, r2
 8002a8c:	6022      	str	r2, [r4, #0]
 8002a8e:	4403      	add	r3, r0
 8002a90:	4a09      	ldr	r2, [pc, #36]	; (8002ab8 <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 8002a92:	b109      	cbz	r1, 8002a98 <Dmx::SetDmxPeriodTime(unsigned int)+0x3c>
 8002a94:	428b      	cmp	r3, r1
 8002a96:	d907      	bls.n	8002aa8 <Dmx::SetDmxPeriodTime(unsigned int)+0x4c>
 8002a98:	f240 41b4 	movw	r1, #1204	; 0x4b4
 8002a9c:	332c      	adds	r3, #44	; 0x2c
 8002a9e:	428b      	cmp	r3, r1
 8002aa0:	bf2c      	ite	cs
 8002aa2:	6013      	strcs	r3, [r2, #0]
 8002aa4:	6011      	strcc	r1, [r2, #0]
 8002aa6:	e000      	b.n	8002aaa <Dmx::SetDmxPeriodTime(unsigned int)+0x4e>
 8002aa8:	6011      	str	r1, [r2, #0]
 8002aaa:	bd70      	pop	{r4, r5, r6, pc}
 8002aac:	20000308 	andcs	r0, r0, r8, lsl #6
 8002ab0:	20000010 	andcs	r0, r0, r0, lsl r0
 8002ab4:	2000000c 	andcs	r0, r0, ip
 8002ab8:	20000008 	andcs	r0, r0, r8

08002abc <Dmx::SetDmxBreakTime(unsigned int)>:
 8002abc:	295c      	cmp	r1, #92	; 0x5c
 8002abe:	bf38      	it	cc
 8002ac0:	215c      	movcc	r1, #92	; 0x5c
 8002ac2:	4b02      	ldr	r3, [pc, #8]	; (8002acc <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 8002ac4:	6019      	str	r1, [r3, #0]
 8002ac6:	68c1      	ldr	r1, [r0, #12]
 8002ac8:	f7ff bfc8 	b.w	8002a5c <Dmx::SetDmxPeriodTime(unsigned int)>
 8002acc:	20000010 	andcs	r0, r0, r0, lsl r0

08002ad0 <Dmx::SetDmxMabTime(unsigned int)>:
 8002ad0:	290c      	cmp	r1, #12
 8002ad2:	bf38      	it	cc
 8002ad4:	210c      	movcc	r1, #12
 8002ad6:	4b02      	ldr	r3, [pc, #8]	; (8002ae0 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 8002ad8:	6019      	str	r1, [r3, #0]
 8002ada:	68c1      	ldr	r1, [r0, #12]
 8002adc:	f7ff bfbe 	b.w	8002a5c <Dmx::SetDmxPeriodTime(unsigned int)>
 8002ae0:	2000000c 	andcs	r0, r0, ip

08002ae4 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)>:
 8002ae4:	b4f0      	push	{r4, r5, r6, r7}
 8002ae6:	8a04      	ldrh	r4, [r0, #16]
 8002ae8:	4d11      	ldr	r5, [pc, #68]	; (8002b30 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 8002aea:	42a3      	cmp	r3, r4
 8002aec:	bf28      	it	cs
 8002aee:	4623      	movcs	r3, r4
 8002af0:	f44f 7401 	mov.w	r4, #516	; 0x204
 8002af4:	434c      	muls	r4, r1
 8002af6:	1c5f      	adds	r7, r3, #1
 8002af8:	192e      	adds	r6, r5, r4
 8002afa:	f892 f000 	pld	[r2]
 8002afe:	3c01      	subs	r4, #1
 8002b00:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 8002b04:	442c      	add	r4, r5
 8002b06:	18d6      	adds	r6, r2, r3
 8002b08:	4296      	cmp	r6, r2
 8002b0a:	d004      	beq.n	8002b16 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x32>
 8002b0c:	f812 5b01 	ldrb.w	r5, [r2], #1
 8002b10:	f804 5f01 	strb.w	r5, [r4, #1]!
 8002b14:	e7f8      	b.n	8002b08 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x24>
 8002b16:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8002b1a:	698a      	ldr	r2, [r1, #24]
 8002b1c:	429a      	cmp	r2, r3
 8002b1e:	d004      	beq.n	8002b2a <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x46>
 8002b20:	bcf0      	pop	{r4, r5, r6, r7}
 8002b22:	618b      	str	r3, [r1, #24]
 8002b24:	68c1      	ldr	r1, [r0, #12]
 8002b26:	f7ff bf99 	b.w	8002a5c <Dmx::SetDmxPeriodTime(unsigned int)>
 8002b2a:	bcf0      	pop	{r4, r5, r6, r7}
 8002b2c:	4770      	bx	lr
 8002b2e:	bf00      	nop
 8002b30:	20000308 	andcs	r0, r0, r8, lsl #6

08002b34 <Dmx::GetDmxAvailable(unsigned int)>:
 8002b34:	f44f 7304 	mov.w	r3, #528	; 0x210
 8002b38:	4807      	ldr	r0, [pc, #28]	; (8002b58 <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 8002b3a:	fb03 0001 	mla	r0, r3, r1, r0
 8002b3e:	f8d0 3204 	ldr.w	r3, [r0, #516]	; 0x204
 8002b42:	f413 4100 	ands.w	r1, r3, #32768	; 0x8000
 8002b46:	bf1b      	ittet	ne
 8002b48:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 8002b4c:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 8002b50:	4608      	moveq	r0, r1
 8002b52:	f8c0 3204 	strne.w	r3, [r0, #516]	; 0x204
 8002b56:	4770      	bx	lr
 8002b58:	200000f8 	strdcs	r0, [r0], -r8

08002b5c <Dmx::GetDmxChanged(unsigned int)>:
 8002b5c:	b570      	push	{r4, r5, r6, lr}
 8002b5e:	460a      	mov	r2, r1
 8002b60:	f7ff ffe8 	bl	8002b34 <Dmx::GetDmxAvailable(unsigned int)>
 8002b64:	b1a0      	cbz	r0, 8002b90 <Dmx::GetDmxChanged(unsigned int)+0x34>
 8002b66:	f240 2102 	movw	r1, #514	; 0x202
 8002b6a:	4b0a      	ldr	r3, [pc, #40]	; (8002b94 <Dmx::GetDmxChanged(unsigned int)+0x38>)
 8002b6c:	1e84      	subs	r4, r0, #2
 8002b6e:	fb01 3102 	mla	r1, r1, r2, r3
 8002b72:	2200      	movs	r2, #0
 8002b74:	1e8b      	subs	r3, r1, #2
 8002b76:	f501 7100 	add.w	r1, r1, #512	; 0x200
 8002b7a:	f833 6f02 	ldrh.w	r6, [r3, #2]!
 8002b7e:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8002b82:	42ae      	cmp	r6, r5
 8002b84:	bf1c      	itt	ne
 8002b86:	2201      	movne	r2, #1
 8002b88:	801d      	strhne	r5, [r3, #0]
 8002b8a:	428b      	cmp	r3, r1
 8002b8c:	d1f5      	bne.n	8002b7a <Dmx::GetDmxChanged(unsigned int)+0x1e>
 8002b8e:	b902      	cbnz	r2, 8002b92 <Dmx::GetDmxChanged(unsigned int)+0x36>
 8002b90:	2000      	movs	r0, #0
 8002b92:	bd70      	pop	{r4, r5, r6, pc}
 8002b94:	20000510 	andcs	r0, r0, r0, lsl r5

08002b98 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>:
 8002b98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b9a:	4614      	mov	r4, r2
 8002b9c:	461d      	mov	r5, r3
 8002b9e:	4e1f      	ldr	r6, [pc, #124]	; (8002c1c <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x84>)
 8002ba0:	2106      	movs	r1, #6
 8002ba2:	4630      	mov	r0, r6
 8002ba4:	f001 ff62 	bl	8004a6c <usart_flag_get>
 8002ba8:	2800      	cmp	r0, #0
 8002baa:	d0f9      	beq.n	8002ba0 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x8>
 8002bac:	f44f 6780 	mov.w	r7, #1024	; 0x400
 8002bb0:	4e1b      	ldr	r6, [pc, #108]	; (8002c20 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x88>)
 8002bb2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002bb6:	2203      	movs	r2, #3
 8002bb8:	4630      	mov	r0, r6
 8002bba:	2110      	movs	r1, #16
 8002bbc:	f001 fc72 	bl	80044a4 <gpio_init>
 8002bc0:	6177      	str	r7, [r6, #20]
 8002bc2:	2100      	movs	r1, #0
 8002bc4:	20b0      	movs	r0, #176	; 0xb0
 8002bc6:	f002 f9fd 	bl	8004fc4 <udelay(unsigned int, unsigned int)>
 8002bca:	463b      	mov	r3, r7
 8002bcc:	4630      	mov	r0, r6
 8002bce:	2203      	movs	r2, #3
 8002bd0:	2118      	movs	r1, #24
 8002bd2:	f001 fc67 	bl	80044a4 <gpio_init>
 8002bd6:	2100      	movs	r1, #0
 8002bd8:	200c      	movs	r0, #12
 8002bda:	f002 f9f3 	bl	8004fc4 <udelay(unsigned int, unsigned int)>
 8002bde:	f04f 2640 	mov.w	r6, #1073758208	; 0x40004000
 8002be2:	4f0e      	ldr	r7, [pc, #56]	; (8002c1c <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x84>)
 8002be4:	4425      	add	r5, r4
 8002be6:	42ac      	cmp	r4, r5
 8002be8:	d10b      	bne.n	8002c02 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x6a>
 8002bea:	f04f 2440 	mov.w	r4, #1073758208	; 0x40004000
 8002bee:	4d0b      	ldr	r5, [pc, #44]	; (8002c1c <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x84>)
 8002bf0:	2106      	movs	r1, #6
 8002bf2:	4628      	mov	r0, r5
 8002bf4:	f001 ff3a 	bl	8004a6c <usart_flag_get>
 8002bf8:	2801      	cmp	r0, #1
 8002bfa:	d00d      	beq.n	8002c18 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x80>
 8002bfc:	f8d4 3804 	ldr.w	r3, [r4, #2052]	; 0x804
 8002c00:	e7f6      	b.n	8002bf0 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x58>
 8002c02:	2107      	movs	r1, #7
 8002c04:	4638      	mov	r0, r7
 8002c06:	f001 ff31 	bl	8004a6c <usart_flag_get>
 8002c0a:	2800      	cmp	r0, #0
 8002c0c:	d0f9      	beq.n	8002c02 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x6a>
 8002c0e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8002c12:	f8c6 3804 	str.w	r3, [r6, #2052]	; 0x804
 8002c16:	e7e6      	b.n	8002be6 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x4e>
 8002c18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002c1a:	bf00      	nop
 8002c1c:	40004800 	andmi	r4, r0, r0, lsl #16
 8002c20:	40011000 	andmi	r1, r1, r0

08002c24 <Dmx::RdmReceive(unsigned int)>:
 8002c24:	f44f 7304 	mov.w	r3, #528	; 0x210
 8002c28:	4806      	ldr	r0, [pc, #24]	; (8002c44 <Dmx::RdmReceive(unsigned int)+0x20>)
 8002c2a:	fb03 0101 	mla	r1, r3, r1, r0
 8002c2e:	f8b1 3204 	ldrh.w	r3, [r1, #516]	; 0x204
 8002c32:	f413 4080 	ands.w	r0, r3, #16384	; 0x4000
 8002c36:	bf1e      	ittt	ne
 8002c38:	2300      	movne	r3, #0
 8002c3a:	4608      	movne	r0, r1
 8002c3c:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 8002c40:	4770      	bx	lr
 8002c42:	bf00      	nop
 8002c44:	200000f8 	strdcs	r0, [r0], -r8

08002c48 <usb_read_byte>:
 8002c48:	b508      	push	{r3, lr}
 8002c4a:	f000 f8ef 	bl	8002e2c <FT245RL_data_available>
 8002c4e:	2800      	cmp	r0, #0
 8002c50:	d0fb      	beq.n	8002c4a <usb_read_byte+0x2>
 8002c52:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002c56:	f000 b8a9 	b.w	8002dac <FT245RL_read_data>

08002c5a <usb_send_byte>:
 8002c5a:	b510      	push	{r4, lr}
 8002c5c:	4604      	mov	r4, r0
 8002c5e:	f000 f8f1 	bl	8002e44 <FT245RL_can_write>
 8002c62:	2800      	cmp	r0, #0
 8002c64:	d0fb      	beq.n	8002c5e <usb_send_byte+0x4>
 8002c66:	4620      	mov	r0, r4
 8002c68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c6c:	f000 b856 	b.w	8002d1c <FT245RL_write_data>

08002c70 <data_gpio_fsel_input>:
 8002c70:	b510      	push	{r4, lr}
 8002c72:	f24c 0340 	movw	r3, #49216	; 0xc040
 8002c76:	2203      	movs	r2, #3
 8002c78:	2104      	movs	r1, #4
 8002c7a:	4805      	ldr	r0, [pc, #20]	; (8002c90 <data_gpio_fsel_input+0x20>)
 8002c7c:	f001 fc12 	bl	80044a4 <gpio_init>
 8002c80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c84:	23f8      	movs	r3, #248	; 0xf8
 8002c86:	2203      	movs	r2, #3
 8002c88:	2104      	movs	r1, #4
 8002c8a:	4802      	ldr	r0, [pc, #8]	; (8002c94 <data_gpio_fsel_input+0x24>)
 8002c8c:	f001 bc0a 	b.w	80044a4 <gpio_init>
 8002c90:	40010800 	andmi	r0, r1, r0, lsl #16
 8002c94:	40010c00 	andmi	r0, r1, r0, lsl #24

08002c98 <FT245RL_init>:
 8002c98:	b510      	push	{r4, lr}
 8002c9a:	f240 6002 	movw	r0, #1538	; 0x602
 8002c9e:	f001 fc93 	bl	80045c8 <rcu_periph_clock_enable>
 8002ca2:	f240 6003 	movw	r0, #1539	; 0x603
 8002ca6:	f001 fc8f 	bl	80045c8 <rcu_periph_clock_enable>
 8002caa:	4c19      	ldr	r4, [pc, #100]	; (8002d10 <FT245RL_init+0x78>)
 8002cac:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8002cb0:	f001 fc8a 	bl	80045c8 <rcu_periph_clock_enable>
 8002cb4:	2101      	movs	r1, #1
 8002cb6:	4817      	ldr	r0, [pc, #92]	; (8002d14 <FT245RL_init+0x7c>)
 8002cb8:	f001 fc4e 	bl	8004558 <gpio_pin_remap_config>
 8002cbc:	f7ff ffd8 	bl	8002c70 <data_gpio_fsel_input>
 8002cc0:	4620      	mov	r0, r4
 8002cc2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002cc6:	2203      	movs	r2, #3
 8002cc8:	2110      	movs	r1, #16
 8002cca:	f001 fbeb 	bl	80044a4 <gpio_init>
 8002cce:	4620      	mov	r0, r4
 8002cd0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8002cd4:	2203      	movs	r2, #3
 8002cd6:	2110      	movs	r1, #16
 8002cd8:	f5a4 6480 	sub.w	r4, r4, #1024	; 0x400
 8002cdc:	f001 fbe2 	bl	80044a4 <gpio_init>
 8002ce0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002ce4:	2203      	movs	r2, #3
 8002ce6:	2148      	movs	r1, #72	; 0x48
 8002ce8:	4620      	mov	r0, r4
 8002cea:	f001 fbdb 	bl	80044a4 <gpio_init>
 8002cee:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002cf2:	2203      	movs	r2, #3
 8002cf4:	2148      	movs	r1, #72	; 0x48
 8002cf6:	4620      	mov	r0, r4
 8002cf8:	f001 fbd4 	bl	80044a4 <gpio_init>
 8002cfc:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8002d00:	4b05      	ldr	r3, [pc, #20]	; (8002d18 <FT245RL_init+0x80>)
 8002d02:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8002d06:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8002d0a:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8002d0e:	bd10      	pop	{r4, pc}
 8002d10:	40010c00 	andmi	r0, r1, r0, lsl #24
 8002d14:	00300400 	eorseq	r0, r0, r0, lsl #8
 8002d18:	40010000 	andmi	r0, r1, r0

08002d1c <FT245RL_write_data>:
 8002d1c:	b538      	push	{r3, r4, r5, lr}
 8002d1e:	2203      	movs	r2, #3
 8002d20:	4604      	mov	r4, r0
 8002d22:	f24c 0340 	movw	r3, #49216	; 0xc040
 8002d26:	2110      	movs	r1, #16
 8002d28:	481d      	ldr	r0, [pc, #116]	; (8002da0 <FT245RL_write_data+0x84>)
 8002d2a:	f001 fbbb 	bl	80044a4 <gpio_init>
 8002d2e:	23f8      	movs	r3, #248	; 0xf8
 8002d30:	2203      	movs	r2, #3
 8002d32:	2110      	movs	r1, #16
 8002d34:	481b      	ldr	r0, [pc, #108]	; (8002da4 <FT245RL_write_data+0x88>)
 8002d36:	f001 fbb5 	bl	80044a4 <gpio_init>
 8002d3a:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8002d3e:	491a      	ldr	r1, [pc, #104]	; (8002da8 <FT245RL_write_data+0x8c>)
 8002d40:	f8c1 0c10 	str.w	r0, [r1, #3088]	; 0xc10
 8002d44:	bf00      	nop
 8002d46:	bf00      	nop
 8002d48:	02e2      	lsls	r2, r4, #11
 8002d4a:	0123      	lsls	r3, r4, #4
 8002d4c:	ea02 0500 	and.w	r5, r2, r0
 8002d50:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002d54:	431d      	orrs	r5, r3
 8002d56:	f402 4300 	and.w	r3, r2, #32768	; 0x8000
 8002d5a:	432b      	orrs	r3, r5
 8002d5c:	f8c1 3810 	str.w	r3, [r1, #2064]	; 0x810
 8002d60:	f483 4340 	eor.w	r3, r3, #49152	; 0xc000
 8002d64:	f083 0340 	eor.w	r3, r3, #64	; 0x40
 8002d68:	f8c1 3814 	str.w	r3, [r1, #2068]	; 0x814
 8002d6c:	0162      	lsls	r2, r4, #5
 8002d6e:	01e3      	lsls	r3, r4, #7
 8002d70:	b2db      	uxtb	r3, r3
 8002d72:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8002d76:	431a      	orrs	r2, r3
 8002d78:	1063      	asrs	r3, r4, #1
 8002d7a:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8002d7e:	f344 1403 	sbfx	r4, r4, #4, #4
 8002d82:	4313      	orrs	r3, r2
 8002d84:	f004 0408 	and.w	r4, r4, #8
 8002d88:	431c      	orrs	r4, r3
 8002d8a:	f8c1 4c10 	str.w	r4, [r1, #3088]	; 0xc10
 8002d8e:	f084 04f8 	eor.w	r4, r4, #248	; 0xf8
 8002d92:	f8c1 4c14 	str.w	r4, [r1, #3092]	; 0xc14
 8002d96:	bf00      	nop
 8002d98:	bf00      	nop
 8002d9a:	f8c1 0c14 	str.w	r0, [r1, #3092]	; 0xc14
 8002d9e:	bd38      	pop	{r3, r4, r5, pc}
 8002da0:	40010800 	andmi	r0, r1, r0, lsl #16
 8002da4:	40010c00 	andmi	r0, r1, r0, lsl #24
 8002da8:	40010000 	andmi	r0, r1, r0

08002dac <FT245RL_read_data>:
 8002dac:	b510      	push	{r4, lr}
 8002dae:	f7ff ff5f 	bl	8002c70 <data_gpio_fsel_input>
 8002db2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002db6:	4c1b      	ldr	r4, [pc, #108]	; (8002e24 <FT245RL_read_data+0x78>)
 8002db8:	f8c4 3c14 	str.w	r3, [r4, #3092]	; 0xc14
 8002dbc:	2318      	movs	r3, #24
 8002dbe:	bf00      	nop
 8002dc0:	3b01      	subs	r3, #1
 8002dc2:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 8002dc6:	d1fa      	bne.n	8002dbe <FT245RL_read_data+0x12>
 8002dc8:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8002dcc:	f8d4 3808 	ldr.w	r3, [r4, #2056]	; 0x808
 8002dd0:	f8d4 2c08 	ldr.w	r2, [r4, #3080]	; 0xc08
 8002dd4:	f8c4 0c10 	str.w	r0, [r4, #3088]	; 0xc10
 8002dd8:	f3c3 100b 	ubfx	r0, r3, #4, #12
 8002ddc:	f3c3 24c4 	ubfx	r4, r3, #11, #5
 8002de0:	f004 0408 	and.w	r4, r4, #8
 8002de4:	f000 0004 	and.w	r0, r0, #4
 8002de8:	f343 23c4 	sbfx	r3, r3, #11, #5
 8002dec:	4320      	orrs	r0, r4
 8002dee:	f003 0310 	and.w	r3, r3, #16
 8002df2:	4318      	orrs	r0, r3
 8002df4:	f3c2 13c0 	ubfx	r3, r2, #7, #1
 8002df8:	f342 0106 	sbfx	r1, r2, #0, #7
 8002dfc:	4318      	orrs	r0, r3
 8002dfe:	f3c2 134a 	ubfx	r3, r2, #5, #11
 8002e02:	0049      	lsls	r1, r1, #1
 8002e04:	f003 0302 	and.w	r3, r3, #2
 8002e08:	4318      	orrs	r0, r3
 8002e0a:	f001 0320 	and.w	r3, r1, #32
 8002e0e:	4318      	orrs	r0, r3
 8002e10:	4b05      	ldr	r3, [pc, #20]	; (8002e28 <FT245RL_read_data+0x7c>)
 8002e12:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8002e16:	0112      	lsls	r2, r2, #4
 8002e18:	4308      	orrs	r0, r1
 8002e1a:	4013      	ands	r3, r2
 8002e1c:	4318      	orrs	r0, r3
 8002e1e:	b2c0      	uxtb	r0, r0
 8002e20:	bd10      	pop	{r4, pc}
 8002e22:	bf00      	nop
 8002e24:	40010000 	andmi	r0, r1, r0
 8002e28:	000fff80 	andeq	pc, pc, r0, lsl #31

08002e2c <FT245RL_data_available>:
 8002e2c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8002e30:	b508      	push	{r3, lr}
 8002e32:	4803      	ldr	r0, [pc, #12]	; (8002e40 <FT245RL_data_available+0x14>)
 8002e34:	f001 fb8a 	bl	800454c <gpio_input_bit_get>
 8002e38:	fab0 f080 	clz	r0, r0
 8002e3c:	0940      	lsrs	r0, r0, #5
 8002e3e:	bd08      	pop	{r3, pc}
 8002e40:	40010800 	andmi	r0, r1, r0, lsl #16

08002e44 <FT245RL_can_write>:
 8002e44:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002e48:	b508      	push	{r3, lr}
 8002e4a:	4803      	ldr	r0, [pc, #12]	; (8002e58 <FT245RL_can_write+0x14>)
 8002e4c:	f001 fb7e 	bl	800454c <gpio_input_bit_get>
 8002e50:	fab0 f080 	clz	r0, r0
 8002e54:	0940      	lsrs	r0, r0, #5
 8002e56:	bd08      	pop	{r3, pc}
 8002e58:	40010800 	andmi	r0, r1, r0, lsl #16

08002e5c <RDMDevice::RDMDevice()>:
 8002e5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002e5e:	4b35      	ldr	r3, [pc, #212]	; (8002f34 <RDMDevice::RDMDevice()+0xd8>)
 8002e60:	4a35      	ldr	r2, [pc, #212]	; (8002f38 <RDMDevice::RDMDevice()+0xdc>)
 8002e62:	7859      	ldrb	r1, [r3, #1]
 8002e64:	4604      	mov	r4, r0
 8002e66:	f880 1050 	strb.w	r1, [r0, #80]	; 0x50
 8002e6a:	7818      	ldrb	r0, [r3, #0]
 8002e6c:	2300      	movs	r3, #0
 8002e6e:	4615      	mov	r5, r2
 8002e70:	f884 0051 	strb.w	r0, [r4, #81]	; 0x51
 8002e74:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 8002e78:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 8002e7c:	f8a4 3074 	strh.w	r3, [r4, #116]	; 0x74
 8002e80:	67a3      	str	r3, [r4, #120]	; 0x78
 8002e82:	4613      	mov	r3, r2
 8002e84:	781e      	ldrb	r6, [r3, #0]
 8002e86:	3201      	adds	r2, #1
 8002e88:	2e00      	cmp	r6, #0
 8002e8a:	d1fa      	bne.n	8002e82 <RDMDevice::RDMDevice()+0x26>
 8002e8c:	1b5b      	subs	r3, r3, r5
 8002e8e:	2b20      	cmp	r3, #32
 8002e90:	bf28      	it	cs
 8002e92:	2320      	movcs	r3, #32
 8002e94:	f104 052b 	add.w	r5, r4, #43	; 0x2b
 8002e98:	462e      	mov	r6, r5
 8002e9a:	461a      	mov	r2, r3
 8002e9c:	4f26      	ldr	r7, [pc, #152]	; (8002f38 <RDMDevice::RDMDevice()+0xdc>)
 8002e9e:	3a01      	subs	r2, #1
 8002ea0:	d304      	bcc.n	8002eac <RDMDevice::RDMDevice()+0x50>
 8002ea2:	f817 cb01 	ldrb.w	ip, [r7], #1
 8002ea6:	f806 cb01 	strb.w	ip, [r6], #1
 8002eaa:	e7f8      	b.n	8002e9e <RDMDevice::RDMDevice()+0x42>
 8002eac:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 8002eb0:	4b22      	ldr	r3, [pc, #136]	; (8002f3c <RDMDevice::RDMDevice()+0xe0>)
 8002eb2:	7020      	strb	r0, [r4, #0]
 8002eb4:	7061      	strb	r1, [r4, #1]
 8002eb6:	6818      	ldr	r0, [r3, #0]
 8002eb8:	4669      	mov	r1, sp
 8002eba:	f000 fc5f 	bl	800377c <Network::MacAddressCopyTo(unsigned char*)>
 8002ebe:	f89d 3002 	ldrb.w	r3, [sp, #2]
 8002ec2:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8002ec6:	70a3      	strb	r3, [r4, #2]
 8002ec8:	7263      	strb	r3, [r4, #9]
 8002eca:	4b1d      	ldr	r3, [pc, #116]	; (8002f40 <RDMDevice::RDMDevice()+0xe4>)
 8002ecc:	70e2      	strb	r2, [r4, #3]
 8002ece:	7222      	strb	r2, [r4, #8]
 8002ed0:	461a      	mov	r2, r3
 8002ed2:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8002ed6:	f89d 0005 	ldrb.w	r0, [sp, #5]
 8002eda:	7121      	strb	r1, [r4, #4]
 8002edc:	7160      	strb	r0, [r4, #5]
 8002ede:	71a0      	strb	r0, [r4, #6]
 8002ee0:	71e1      	strb	r1, [r4, #7]
 8002ee2:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8002ee6:	2900      	cmp	r1, #0
 8002ee8:	d1fb      	bne.n	8002ee2 <RDMDevice::RDMDevice()+0x86>
 8002eea:	1a9b      	subs	r3, r3, r2
 8002eec:	2b20      	cmp	r3, #32
 8002eee:	bf28      	it	cs
 8002ef0:	2320      	movcs	r3, #32
 8002ef2:	461a      	mov	r2, r3
 8002ef4:	4912      	ldr	r1, [pc, #72]	; (8002f40 <RDMDevice::RDMDevice()+0xe4>)
 8002ef6:	3a01      	subs	r2, #1
 8002ef8:	d304      	bcc.n	8002f04 <RDMDevice::RDMDevice()+0xa8>
 8002efa:	f811 0b01 	ldrb.w	r0, [r1], #1
 8002efe:	f805 0b01 	strb.w	r0, [r5], #1
 8002f02:	e7f8      	b.n	8002ef6 <RDMDevice::RDMDevice()+0x9a>
 8002f04:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 8002f08:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 8002f0c:	64e3      	str	r3, [r4, #76]	; 0x4c
 8002f0e:	2314      	movs	r3, #20
 8002f10:	4a0c      	ldr	r2, [pc, #48]	; (8002f44 <RDMDevice::RDMDevice()+0xe8>)
 8002f12:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 8002f16:	f104 0067 	add.w	r0, r4, #103	; 0x67
 8002f1a:	f104 0353 	add.w	r3, r4, #83	; 0x53
 8002f1e:	4298      	cmp	r0, r3
 8002f20:	d004      	beq.n	8002f2c <RDMDevice::RDMDevice()+0xd0>
 8002f22:	f812 1b01 	ldrb.w	r1, [r2], #1
 8002f26:	f803 1b01 	strb.w	r1, [r3], #1
 8002f2a:	e7f8      	b.n	8002f1e <RDMDevice::RDMDevice()+0xc2>
 8002f2c:	4620      	mov	r0, r4
 8002f2e:	b003      	add	sp, #12
 8002f30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002f32:	bf00      	nop
 8002f34:	080056bf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r7, r9, sl, ip, lr}
 8002f38:	080056c1 	stmdaeq	r0, {r0, r6, r7, r9, sl, ip, lr}
 8002f3c:	2000176c 	andcs	r1, r0, ip, ror #14
 8002f40:	08005696 	stmdaeq	r0, {r1, r2, r4, r7, r9, sl, ip, lr}
 8002f44:	080056aa 	stmdaeq	r0, {r1, r3, r5, r7, r9, sl, ip, lr}

08002f48 <memcpy.isra.0>:
 8002f48:	f000 bfe8 	b.w	8003f1c <memcpy>

08002f4c <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 8002f4c:	b510      	push	{r4, lr}
 8002f4e:	6001      	str	r1, [r0, #0]
 8002f50:	2100      	movs	r1, #0
 8002f52:	4604      	mov	r4, r0
 8002f54:	6041      	str	r1, [r0, #4]
 8002f56:	2220      	movs	r2, #32
 8002f58:	3008      	adds	r0, #8
 8002f5a:	f000 ffea 	bl	8003f32 <memset>
 8002f5e:	4b03      	ldr	r3, [pc, #12]	; (8002f6c <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 8002f60:	4620      	mov	r0, r4
 8002f62:	62a3      	str	r3, [r4, #40]	; 0x28
 8002f64:	237f      	movs	r3, #127	; 0x7f
 8002f66:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8002f6a:	bd10      	pop	{r4, pc}
 8002f6c:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

08002f70 <RDMDeviceParams::Load()>:
 8002f70:	4601      	mov	r1, r0
 8002f72:	6800      	ldr	r0, [r0, #0]
 8002f74:	b130      	cbz	r0, 8002f84 <RDMDeviceParams::Load()+0x14>
 8002f76:	b508      	push	{r3, lr}
 8002f78:	6803      	ldr	r3, [r0, #0]
 8002f7a:	3104      	adds	r1, #4
 8002f7c:	68db      	ldr	r3, [r3, #12]
 8002f7e:	4798      	blx	r3
 8002f80:	2001      	movs	r0, #1
 8002f82:	bd08      	pop	{r3, pc}
 8002f84:	4770      	bx	lr

08002f86 <RDMDeviceParams::Set(RDMDevice*)>:
 8002f86:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f88:	6843      	ldr	r3, [r0, #4]
 8002f8a:	460c      	mov	r4, r1
 8002f8c:	07d9      	lsls	r1, r3, #31
 8002f8e:	4605      	mov	r5, r0
 8002f90:	d518      	bpl.n	8002fc4 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 8002f92:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 8002f96:	f894 3052 	ldrb.w	r3, [r4, #82]	; 0x52
 8002f9a:	2e20      	cmp	r6, #32
 8002f9c:	bf28      	it	cs
 8002f9e:	2620      	movcs	r6, #32
 8002fa0:	f100 0108 	add.w	r1, r0, #8
 8002fa4:	b1e3      	cbz	r3, 8002fe0 <RDMDeviceParams::Set(RDMDevice*)+0x5a>
 8002fa6:	f104 070a 	add.w	r7, r4, #10
 8002faa:	4638      	mov	r0, r7
 8002fac:	4632      	mov	r2, r6
 8002fae:	f7ff ffcb 	bl	8002f48 <memcpy.isra.0>
 8002fb2:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 8002fb4:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 8002fb8:	b120      	cbz	r0, 8002fc4 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 8002fba:	6803      	ldr	r3, [r0, #0]
 8002fbc:	4632      	mov	r2, r6
 8002fbe:	4639      	mov	r1, r7
 8002fc0:	689b      	ldr	r3, [r3, #8]
 8002fc2:	4798      	blx	r3
 8002fc4:	686b      	ldr	r3, [r5, #4]
 8002fc6:	079a      	lsls	r2, r3, #30
 8002fc8:	bf44      	itt	mi
 8002fca:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 8002fce:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 8002fd2:	075b      	lsls	r3, r3, #29
 8002fd4:	bf44      	itt	mi
 8002fd6:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 8002fda:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 8002fde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002fe0:	4632      	mov	r2, r6
 8002fe2:	f104 0053 	add.w	r0, r4, #83	; 0x53
 8002fe6:	f7ff ffaf 	bl	8002f48 <memcpy.isra.0>
 8002fea:	f884 6073 	strb.w	r6, [r4, #115]	; 0x73
 8002fee:	e7e9      	b.n	8002fc4 <RDMDeviceParams::Set(RDMDevice*)+0x3e>

08002ff0 <RDMDeviceParams::Dump()>:
 8002ff0:	4770      	bx	lr
	...

08002ff4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 8002ff4:	2300      	movs	r3, #0
 8002ff6:	2020      	movs	r0, #32
 8002ff8:	b510      	push	{r4, lr}
 8002ffa:	4a04      	ldr	r2, [pc, #16]	; (800300c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 8002ffc:	428b      	cmp	r3, r1
 8002ffe:	d004      	beq.n	800300a <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x16>
 8003000:	f852 4b04 	ldr.w	r4, [r2], #4
 8003004:	3301      	adds	r3, #1
 8003006:	4420      	add	r0, r4
 8003008:	e7f8      	b.n	8002ffc <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800300a:	bd10      	pop	{r4, pc}
 800300c:	080056e0 	stmdaeq	r0, {r5, r6, r7, r9, sl, ip, lr}

08003010 <SpiFlashStore::Init()>:
 8003010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003014:	f8df 8120 	ldr.w	r8, [pc, #288]	; 8003138 <SpiFlashStore::Init()+0x128>
 8003018:	4607      	mov	r7, r0
 800301a:	b085      	sub	sp, #20
 800301c:	f8d8 0000 	ldr.w	r0, [r8]
 8003020:	f000 fa44 	bl	80034ac <FlashRom::GetSectorSize() const>
 8003024:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 8003028:	4605      	mov	r5, r0
 800302a:	f040 8083 	bne.w	8003134 <SpiFlashStore::Init()+0x124>
 800302e:	f8d8 0000 	ldr.w	r0, [r8]
 8003032:	f000 fa33 	bl	800349c <FlashRom::GetSize() const>
 8003036:	4b41      	ldr	r3, [pc, #260]	; (800313c <SpiFlashStore::Init()+0x12c>)
 8003038:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800303c:	f3c1 060b 	ubfx	r6, r1, #0, #12
 8003040:	6019      	str	r1, [r3, #0]
 8003042:	2e00      	cmp	r6, #0
 8003044:	d176      	bne.n	8003134 <SpiFlashStore::Init()+0x124>
 8003046:	4c3e      	ldr	r4, [pc, #248]	; (8003140 <SpiFlashStore::Init()+0x130>)
 8003048:	ab03      	add	r3, sp, #12
 800304a:	9300      	str	r3, [sp, #0]
 800304c:	462a      	mov	r2, r5
 800304e:	4623      	mov	r3, r4
 8003050:	f8d8 0000 	ldr.w	r0, [r8]
 8003054:	f000 fa2d 	bl	80034b2 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 8003058:	7823      	ldrb	r3, [r4, #0]
 800305a:	2b41      	cmp	r3, #65	; 0x41
 800305c:	bf1c      	itt	ne
 800305e:	2341      	movne	r3, #65	; 0x41
 8003060:	7023      	strbne	r3, [r4, #0]
 8003062:	7863      	ldrb	r3, [r4, #1]
 8003064:	bf14      	ite	ne
 8003066:	4635      	movne	r5, r6
 8003068:	2501      	moveq	r5, #1
 800306a:	2b76      	cmp	r3, #118	; 0x76
 800306c:	bf1c      	itt	ne
 800306e:	2376      	movne	r3, #118	; 0x76
 8003070:	7063      	strbne	r3, [r4, #1]
 8003072:	78a3      	ldrb	r3, [r4, #2]
 8003074:	bf18      	it	ne
 8003076:	2500      	movne	r5, #0
 8003078:	2b56      	cmp	r3, #86	; 0x56
 800307a:	bf1c      	itt	ne
 800307c:	2356      	movne	r3, #86	; 0x56
 800307e:	70a3      	strbne	r3, [r4, #2]
 8003080:	78e3      	ldrb	r3, [r4, #3]
 8003082:	bf18      	it	ne
 8003084:	2500      	movne	r5, #0
 8003086:	2b10      	cmp	r3, #16
 8003088:	d01c      	beq.n	80030c4 <SpiFlashStore::Init()+0xb4>
 800308a:	2310      	movs	r3, #16
 800308c:	70e3      	strb	r3, [r4, #3]
 800308e:	2201      	movs	r2, #1
 8003090:	2500      	movs	r5, #0
 8003092:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8003096:	4b2b      	ldr	r3, [pc, #172]	; (8003144 <SpiFlashStore::Init()+0x134>)
 8003098:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 8003148 <SpiFlashStore::Init()+0x138>
 800309c:	701a      	strb	r2, [r3, #0]
 800309e:	4631      	mov	r1, r6
 80030a0:	4638      	mov	r0, r7
 80030a2:	f7ff ffa7 	bl	8002ff4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 80030a6:	1823      	adds	r3, r4, r0
 80030a8:	5425      	strb	r5, [r4, r0]
 80030aa:	705d      	strb	r5, [r3, #1]
 80030ac:	709d      	strb	r5, [r3, #2]
 80030ae:	70dd      	strb	r5, [r3, #3]
 80030b0:	f858 3b04 	ldr.w	r3, [r8], #4
 80030b4:	1d02      	adds	r2, r0, #4
 80030b6:	4403      	add	r3, r0
 80030b8:	4293      	cmp	r3, r2
 80030ba:	d931      	bls.n	8003120 <SpiFlashStore::Init()+0x110>
 80030bc:	f804 9002 	strb.w	r9, [r4, r2]
 80030c0:	3201      	adds	r2, #1
 80030c2:	e7f9      	b.n	80030b8 <SpiFlashStore::Init()+0xa8>
 80030c4:	2d00      	cmp	r5, #0
 80030c6:	d0e2      	beq.n	800308e <SpiFlashStore::Init()+0x7e>
 80030c8:	f04f 0900 	mov.w	r9, #0
 80030cc:	46c8      	mov	r8, r9
 80030ce:	f8df a07c 	ldr.w	sl, [pc, #124]	; 800314c <SpiFlashStore::Init()+0x13c>
 80030d2:	f8da b000 	ldr.w	fp, [sl]
 80030d6:	4631      	mov	r1, r6
 80030d8:	4638      	mov	r0, r7
 80030da:	f7ff ff8b 	bl	8002ff4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 80030de:	5c23      	ldrb	r3, [r4, r0]
 80030e0:	2bff      	cmp	r3, #255	; 0xff
 80030e2:	d114      	bne.n	800310e <SpiFlashStore::Init()+0xfe>
 80030e4:	1823      	adds	r3, r4, r0
 80030e6:	785a      	ldrb	r2, [r3, #1]
 80030e8:	2aff      	cmp	r2, #255	; 0xff
 80030ea:	d110      	bne.n	800310e <SpiFlashStore::Init()+0xfe>
 80030ec:	789a      	ldrb	r2, [r3, #2]
 80030ee:	2aff      	cmp	r2, #255	; 0xff
 80030f0:	d10d      	bne.n	800310e <SpiFlashStore::Init()+0xfe>
 80030f2:	78da      	ldrb	r2, [r3, #3]
 80030f4:	2aff      	cmp	r2, #255	; 0xff
 80030f6:	d10a      	bne.n	800310e <SpiFlashStore::Init()+0xfe>
 80030f8:	46a9      	mov	r9, r5
 80030fa:	f04f 0b01 	mov.w	fp, #1
 80030fe:	f804 8000 	strb.w	r8, [r4, r0]
 8003102:	f883 8001 	strb.w	r8, [r3, #1]
 8003106:	f883 8002 	strb.w	r8, [r3, #2]
 800310a:	f883 8003 	strb.w	r8, [r3, #3]
 800310e:	3601      	adds	r6, #1
 8003110:	2e1c      	cmp	r6, #28
 8003112:	d1e0      	bne.n	80030d6 <SpiFlashStore::Init()+0xc6>
 8003114:	f1b9 0f00 	cmp.w	r9, #0
 8003118:	d008      	beq.n	800312c <SpiFlashStore::Init()+0x11c>
 800311a:	f8ca b000 	str.w	fp, [sl]
 800311e:	e005      	b.n	800312c <SpiFlashStore::Init()+0x11c>
 8003120:	3601      	adds	r6, #1
 8003122:	2e1c      	cmp	r6, #28
 8003124:	d1bb      	bne.n	800309e <SpiFlashStore::Init()+0x8e>
 8003126:	2501      	movs	r5, #1
 8003128:	4b08      	ldr	r3, [pc, #32]	; (800314c <SpiFlashStore::Init()+0x13c>)
 800312a:	601d      	str	r5, [r3, #0]
 800312c:	4628      	mov	r0, r5
 800312e:	b005      	add	sp, #20
 8003130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003134:	2500      	movs	r5, #0
 8003136:	e7f9      	b.n	800312c <SpiFlashStore::Init()+0x11c>
 8003138:	20001750 	andcs	r1, r0, r0, asr r7
 800313c:	20001730 	andcs	r1, r0, r0, lsr r7
 8003140:	20000730 	andcs	r0, r0, r0, lsr r7
 8003144:	20001744 	andcs	r1, r0, r4, asr #14
 8003148:	080056e0 	stmdaeq	r0, {r5, r6, r7, r9, sl, ip, lr}
 800314c:	2000173c 	andcs	r1, r0, ip, lsr r7

08003150 <SpiFlashStore::SpiFlashStore()>:
 8003150:	b538      	push	{r3, r4, r5, lr}
 8003152:	4b0d      	ldr	r3, [pc, #52]	; (8003188 <SpiFlashStore::SpiFlashStore()+0x38>)
 8003154:	4604      	mov	r4, r0
 8003156:	6018      	str	r0, [r3, #0]
 8003158:	4b0c      	ldr	r3, [pc, #48]	; (800318c <SpiFlashStore::SpiFlashStore()+0x3c>)
 800315a:	4d0d      	ldr	r5, [pc, #52]	; (8003190 <SpiFlashStore::SpiFlashStore()+0x40>)
 800315c:	681b      	ldr	r3, [r3, #0]
 800315e:	781b      	ldrb	r3, [r3, #0]
 8003160:	b113      	cbz	r3, 8003168 <SpiFlashStore::SpiFlashStore()+0x18>
 8003162:	f7ff ff55 	bl	8003010 <SpiFlashStore::Init()>
 8003166:	7028      	strb	r0, [r5, #0]
 8003168:	782b      	ldrb	r3, [r5, #0]
 800316a:	b153      	cbz	r3, 8003182 <SpiFlashStore::SpiFlashStore()+0x32>
 800316c:	2320      	movs	r3, #32
 800316e:	2200      	movs	r2, #0
 8003170:	4908      	ldr	r1, [pc, #32]	; (8003194 <SpiFlashStore::SpiFlashStore()+0x44>)
 8003172:	f851 0b04 	ldr.w	r0, [r1], #4
 8003176:	3201      	adds	r2, #1
 8003178:	2a1c      	cmp	r2, #28
 800317a:	4403      	add	r3, r0
 800317c:	d1f9      	bne.n	8003172 <SpiFlashStore::SpiFlashStore()+0x22>
 800317e:	4a06      	ldr	r2, [pc, #24]	; (8003198 <SpiFlashStore::SpiFlashStore()+0x48>)
 8003180:	6013      	str	r3, [r2, #0]
 8003182:	4620      	mov	r0, r4
 8003184:	bd38      	pop	{r3, r4, r5, pc}
 8003186:	bf00      	nop
 8003188:	20001740 	andcs	r1, r0, r0, asr #14
 800318c:	20001750 	andcs	r1, r0, r0, asr r7
 8003190:	20001734 	andcs	r1, r0, r4, lsr r7
 8003194:	080056e0 	stmdaeq	r0, {r5, r6, r7, r9, sl, ip, lr}
 8003198:	20001738 	andcs	r1, r0, r8, lsr r7

0800319c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800319c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80031a0:	461c      	mov	r4, r3
 80031a2:	4b19      	ldr	r3, [pc, #100]	; (8003208 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 80031a4:	4615      	mov	r5, r2
 80031a6:	781f      	ldrb	r7, [r3, #0]
 80031a8:	9e07      	ldr	r6, [sp, #28]
 80031aa:	b35f      	cbz	r7, 8003204 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 80031ac:	f7ff ff22 	bl	8002ff4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 80031b0:	f04f 0c00 	mov.w	ip, #0
 80031b4:	4a15      	ldr	r2, [pc, #84]	; (800320c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 80031b6:	1941      	adds	r1, r0, r5
 80031b8:	1e63      	subs	r3, r4, #1
 80031ba:	9c06      	ldr	r4, [sp, #24]
 80031bc:	4411      	add	r1, r2
 80031be:	440c      	add	r4, r1
 80031c0:	42a1      	cmp	r1, r4
 80031c2:	d00a      	beq.n	80031da <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3e>
 80031c4:	f891 8000 	ldrb.w	r8, [r1]
 80031c8:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 80031cc:	3101      	adds	r1, #1
 80031ce:	45f0      	cmp	r8, lr
 80031d0:	bf1c      	itt	ne
 80031d2:	f801 ec01 	strbne.w	lr, [r1, #-1]
 80031d6:	46bc      	movne	ip, r7
 80031d8:	e7f2      	b.n	80031c0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 80031da:	f1bc 0f00 	cmp.w	ip, #0
 80031de:	d011      	beq.n	8003204 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 80031e0:	4b0b      	ldr	r3, [pc, #44]	; (8003210 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 80031e2:	6819      	ldr	r1, [r3, #0]
 80031e4:	b109      	cbz	r1, 80031ea <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x4e>
 80031e6:	2906      	cmp	r1, #6
 80031e8:	d101      	bne.n	80031ee <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 80031ea:	2101      	movs	r1, #1
 80031ec:	6019      	str	r1, [r3, #0]
 80031ee:	4b09      	ldr	r3, [pc, #36]	; (8003214 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 80031f0:	6819      	ldr	r1, [r3, #0]
 80031f2:	4b09      	ldr	r3, [pc, #36]	; (8003218 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 80031f4:	6019      	str	r1, [r3, #0]
 80031f6:	b12d      	cbz	r5, 8003204 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 80031f8:	b126      	cbz	r6, 8003204 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 80031fa:	9b08      	ldr	r3, [sp, #32]
 80031fc:	4418      	add	r0, r3
 80031fe:	5813      	ldr	r3, [r2, r0]
 8003200:	4333      	orrs	r3, r6
 8003202:	5013      	str	r3, [r2, r0]
 8003204:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003208:	20001734 	andcs	r1, r0, r4, lsr r7
 800320c:	20000730 	andcs	r0, r0, r0, lsr r7
 8003210:	2000173c 	andcs	r1, r0, ip, lsr r7
 8003214:	20001814 	andcs	r1, r0, r4, lsl r8
 8003218:	2000072c 	andcs	r0, r0, ip, lsr #14

0800321c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800321c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003220:	461d      	mov	r5, r3
 8003222:	4b15      	ldr	r3, [pc, #84]	; (8003278 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x5c>)
 8003224:	b085      	sub	sp, #20
 8003226:	781b      	ldrb	r3, [r3, #0]
 8003228:	4607      	mov	r7, r0
 800322a:	4688      	mov	r8, r1
 800322c:	4614      	mov	r4, r2
 800322e:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8003232:	b1eb      	cbz	r3, 8003270 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 8003234:	f7ff fede 	bl	8002ff4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8003238:	4910      	ldr	r1, [pc, #64]	; (800327c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x60>)
 800323a:	4a11      	ldr	r2, [pc, #68]	; (8003280 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x64>)
 800323c:	7809      	ldrb	r1, [r1, #0]
 800323e:	eb00 0309 	add.w	r3, r0, r9
 8003242:	189e      	adds	r6, r3, r2
 8003244:	b951      	cbnz	r1, 800325c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 8003246:	589b      	ldr	r3, [r3, r2]
 8003248:	b143      	cbz	r3, 800325c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800324a:	3c01      	subs	r4, #1
 800324c:	4435      	add	r5, r6
 800324e:	42b5      	cmp	r5, r6
 8003250:	d00e      	beq.n	8003270 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 8003252:	f816 3b01 	ldrb.w	r3, [r6], #1
 8003256:	f804 3f01 	strb.w	r3, [r4, #1]!
 800325a:	e7f8      	b.n	800324e <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x32>
 800325c:	2300      	movs	r3, #0
 800325e:	464a      	mov	r2, r9
 8003260:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8003264:	4641      	mov	r1, r8
 8003266:	4623      	mov	r3, r4
 8003268:	4638      	mov	r0, r7
 800326a:	9500      	str	r5, [sp, #0]
 800326c:	f7ff ff96 	bl	800319c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8003270:	b005      	add	sp, #20
 8003272:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003276:	bf00      	nop
 8003278:	20001734 	andcs	r1, r0, r4, lsr r7
 800327c:	20001744 	andcs	r1, r0, r4, asr #14
 8003280:	20000730 	andcs	r0, r0, r0, lsr r7

08003284 <SpiFlashStore::Flash()>:
 8003284:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003286:	4c25      	ldr	r4, [pc, #148]	; (800331c <SpiFlashStore::Flash()+0x98>)
 8003288:	6820      	ldr	r0, [r4, #0]
 800328a:	2800      	cmp	r0, #0
 800328c:	d043      	beq.n	8003316 <SpiFlashStore::Flash()+0x92>
 800328e:	3801      	subs	r0, #1
 8003290:	2805      	cmp	r0, #5
 8003292:	d831      	bhi.n	80032f8 <SpiFlashStore::Flash()+0x74>
 8003294:	e8df f000 	tbb	[pc, r0]
 8003298:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800329c:	4b203025 	blmi	880f338 <__exidx_end+0x809748>
 80032a0:	681a      	ldr	r2, [r3, #0]
 80032a2:	4b20      	ldr	r3, [pc, #128]	; (8003324 <SpiFlashStore::Flash()+0xa0>)
 80032a4:	601a      	str	r2, [r3, #0]
 80032a6:	2302      	movs	r3, #2
 80032a8:	6023      	str	r3, [r4, #0]
 80032aa:	2001      	movs	r0, #1
 80032ac:	e033      	b.n	8003316 <SpiFlashStore::Flash()+0x92>
 80032ae:	4b1c      	ldr	r3, [pc, #112]	; (8003320 <SpiFlashStore::Flash()+0x9c>)
 80032b0:	4a1c      	ldr	r2, [pc, #112]	; (8003324 <SpiFlashStore::Flash()+0xa0>)
 80032b2:	681b      	ldr	r3, [r3, #0]
 80032b4:	6812      	ldr	r2, [r2, #0]
 80032b6:	1a9b      	subs	r3, r3, r2
 80032b8:	2b63      	cmp	r3, #99	; 0x63
 80032ba:	d9f6      	bls.n	80032aa <SpiFlashStore::Flash()+0x26>
 80032bc:	2303      	movs	r3, #3
 80032be:	e7f3      	b.n	80032a8 <SpiFlashStore::Flash()+0x24>
 80032c0:	4919      	ldr	r1, [pc, #100]	; (8003328 <SpiFlashStore::Flash()+0xa4>)
 80032c2:	481a      	ldr	r0, [pc, #104]	; (800332c <SpiFlashStore::Flash()+0xa8>)
 80032c4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80032c8:	6809      	ldr	r1, [r1, #0]
 80032ca:	6800      	ldr	r0, [r0, #0]
 80032cc:	ab03      	add	r3, sp, #12
 80032ce:	f000 f8ff 	bl	80034d0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 80032d2:	2800      	cmp	r0, #0
 80032d4:	d0e9      	beq.n	80032aa <SpiFlashStore::Flash()+0x26>
 80032d6:	4b12      	ldr	r3, [pc, #72]	; (8003320 <SpiFlashStore::Flash()+0x9c>)
 80032d8:	681a      	ldr	r2, [r3, #0]
 80032da:	4b12      	ldr	r3, [pc, #72]	; (8003324 <SpiFlashStore::Flash()+0xa0>)
 80032dc:	601a      	str	r2, [r3, #0]
 80032de:	2305      	movs	r3, #5
 80032e0:	e7e2      	b.n	80032a8 <SpiFlashStore::Flash()+0x24>
 80032e2:	4b0f      	ldr	r3, [pc, #60]	; (8003320 <SpiFlashStore::Flash()+0x9c>)
 80032e4:	4a0f      	ldr	r2, [pc, #60]	; (8003324 <SpiFlashStore::Flash()+0xa0>)
 80032e6:	681b      	ldr	r3, [r3, #0]
 80032e8:	6812      	ldr	r2, [r2, #0]
 80032ea:	1a9b      	subs	r3, r3, r2
 80032ec:	2b63      	cmp	r3, #99	; 0x63
 80032ee:	d9dc      	bls.n	80032aa <SpiFlashStore::Flash()+0x26>
 80032f0:	2304      	movs	r3, #4
 80032f2:	e7d9      	b.n	80032a8 <SpiFlashStore::Flash()+0x24>
 80032f4:	2306      	movs	r3, #6
 80032f6:	e7d7      	b.n	80032a8 <SpiFlashStore::Flash()+0x24>
 80032f8:	ab03      	add	r3, sp, #12
 80032fa:	4a0d      	ldr	r2, [pc, #52]	; (8003330 <SpiFlashStore::Flash()+0xac>)
 80032fc:	490a      	ldr	r1, [pc, #40]	; (8003328 <SpiFlashStore::Flash()+0xa4>)
 80032fe:	480b      	ldr	r0, [pc, #44]	; (800332c <SpiFlashStore::Flash()+0xa8>)
 8003300:	9300      	str	r3, [sp, #0]
 8003302:	6812      	ldr	r2, [r2, #0]
 8003304:	4b0b      	ldr	r3, [pc, #44]	; (8003334 <SpiFlashStore::Flash()+0xb0>)
 8003306:	6809      	ldr	r1, [r1, #0]
 8003308:	6800      	ldr	r0, [r0, #0]
 800330a:	f000 f981 	bl	8003610 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800330e:	2800      	cmp	r0, #0
 8003310:	d0cb      	beq.n	80032aa <SpiFlashStore::Flash()+0x26>
 8003312:	2000      	movs	r0, #0
 8003314:	6020      	str	r0, [r4, #0]
 8003316:	b004      	add	sp, #16
 8003318:	bd10      	pop	{r4, pc}
 800331a:	bf00      	nop
 800331c:	2000173c 	andcs	r1, r0, ip, lsr r7
 8003320:	20001814 	andcs	r1, r0, r4, lsl r8
 8003324:	2000072c 	andcs	r0, r0, ip, lsr #14
 8003328:	20001730 	andcs	r1, r0, r0, lsr r7
 800332c:	20001750 	andcs	r1, r0, r0, asr r7
 8003330:	20001738 	andcs	r1, r0, r8, lsr r7
 8003334:	20000730 	andcs	r0, r0, r0, lsr r7

08003338 <StoreRDMDevice::~StoreRDMDevice()>:
 8003338:	4770      	bx	lr

0800333a <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800333a:	3804      	subs	r0, #4
 800333c:	4770      	bx	lr
	...

08003340 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 8003340:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003342:	2200      	movs	r2, #0
 8003344:	460b      	mov	r3, r1
 8003346:	2129      	movs	r1, #41	; 0x29
 8003348:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800334c:	4804      	ldr	r0, [pc, #16]	; (8003360 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 800334e:	9100      	str	r1, [sp, #0]
 8003350:	6800      	ldr	r0, [r0, #0]
 8003352:	210b      	movs	r1, #11
 8003354:	f7ff ff22 	bl	800319c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8003358:	b005      	add	sp, #20
 800335a:	f85d fb04 	ldr.w	pc, [sp], #4
 800335e:	bf00      	nop
 8003360:	20001740 	andcs	r1, r0, r0, asr #14

08003364 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8003364:	b570      	push	{r4, r5, r6, lr}
 8003366:	2401      	movs	r4, #1
 8003368:	2600      	movs	r6, #0
 800336a:	4d0c      	ldr	r5, [pc, #48]	; (800339c <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 800336c:	b086      	sub	sp, #24
 800336e:	460b      	mov	r3, r1
 8003370:	6828      	ldr	r0, [r5, #0]
 8003372:	f88d 2017 	strb.w	r2, [sp, #23]
 8003376:	9200      	str	r2, [sp, #0]
 8003378:	210b      	movs	r1, #11
 800337a:	2204      	movs	r2, #4
 800337c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8003380:	f7ff ff0c 	bl	800319c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8003384:	2224      	movs	r2, #36	; 0x24
 8003386:	210b      	movs	r1, #11
 8003388:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800338c:	6828      	ldr	r0, [r5, #0]
 800338e:	9400      	str	r4, [sp, #0]
 8003390:	f10d 0317 	add.w	r3, sp, #23
 8003394:	f7ff ff02 	bl	800319c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8003398:	b006      	add	sp, #24
 800339a:	bd70      	pop	{r4, r5, r6, pc}
 800339c:	20001740 	andcs	r1, r0, r0, asr #14

080033a0 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 80033a0:	f1a0 0004 	sub.w	r0, r0, #4
 80033a4:	e7de      	b.n	8003364 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 80033a6:	bf00      	nop

080033a8 <StoreRDMDevice::~StoreRDMDevice()>:
 80033a8:	b510      	push	{r4, lr}
 80033aa:	4604      	mov	r4, r0
 80033ac:	f000 fd42 	bl	8003e34 <operator delete(void*)>
 80033b0:	4620      	mov	r0, r4
 80033b2:	bd10      	pop	{r4, pc}

080033b4 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 80033b4:	f1a0 0004 	sub.w	r0, r0, #4
 80033b8:	e7f6      	b.n	80033a8 <StoreRDMDevice::~StoreRDMDevice()>
	...

080033bc <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 80033bc:	2300      	movs	r3, #0
 80033be:	b507      	push	{r0, r1, r2, lr}
 80033c0:	4805      	ldr	r0, [pc, #20]	; (80033d8 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x1c>)
 80033c2:	9300      	str	r3, [sp, #0]
 80033c4:	460a      	mov	r2, r1
 80033c6:	2329      	movs	r3, #41	; 0x29
 80033c8:	210b      	movs	r1, #11
 80033ca:	6800      	ldr	r0, [r0, #0]
 80033cc:	f7ff ff26 	bl	800321c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 80033d0:	b003      	add	sp, #12
 80033d2:	f85d fb04 	ldr.w	pc, [sp], #4
 80033d6:	bf00      	nop
 80033d8:	20001740 	andcs	r1, r0, r0, asr #14

080033dc <StoreRDMDevice::StoreRDMDevice()>:
 80033dc:	4a03      	ldr	r2, [pc, #12]	; (80033ec <StoreRDMDevice::StoreRDMDevice()+0x10>)
 80033de:	6002      	str	r2, [r0, #0]
 80033e0:	321c      	adds	r2, #28
 80033e2:	6042      	str	r2, [r0, #4]
 80033e4:	4a02      	ldr	r2, [pc, #8]	; (80033f0 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 80033e6:	6010      	str	r0, [r2, #0]
 80033e8:	4770      	bx	lr
 80033ea:	bf00      	nop
 80033ec:	08005758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl, ip, lr}
 80033f0:	20001748 	andcs	r1, r0, r8, asr #14

080033f4 <StoreWidget::~StoreWidget()>:
 80033f4:	4770      	bx	lr

080033f6 <non-virtual thunk to StoreWidget::~StoreWidget()>:
 80033f6:	3804      	subs	r0, #4
 80033f8:	4770      	bx	lr
	...

080033fc <StoreWidget::Update(TWidgetParams const*)>:
 80033fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80033fe:	2200      	movs	r2, #0
 8003400:	460b      	mov	r3, r1
 8003402:	210c      	movs	r1, #12
 8003404:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8003408:	4804      	ldr	r0, [pc, #16]	; (800341c <StoreWidget::Update(TWidgetParams const*)+0x20>)
 800340a:	9100      	str	r1, [sp, #0]
 800340c:	6800      	ldr	r0, [r0, #0]
 800340e:	210a      	movs	r1, #10
 8003410:	f7ff fec4 	bl	800319c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8003414:	b005      	add	sp, #20
 8003416:	f85d fb04 	ldr.w	pc, [sp], #4
 800341a:	bf00      	nop
 800341c:	20001740 	andcs	r1, r0, r0, asr #14

08003420 <StoreWidget::~StoreWidget()>:
 8003420:	b510      	push	{r4, lr}
 8003422:	4604      	mov	r4, r0
 8003424:	f000 fd06 	bl	8003e34 <operator delete(void*)>
 8003428:	4620      	mov	r0, r4
 800342a:	bd10      	pop	{r4, pc}

0800342c <non-virtual thunk to StoreWidget::~StoreWidget()>:
 800342c:	f1a0 0004 	sub.w	r0, r0, #4
 8003430:	e7f6      	b.n	8003420 <StoreWidget::~StoreWidget()>
	...

08003434 <StoreWidget::Copy(TWidgetParams*)>:
 8003434:	2300      	movs	r3, #0
 8003436:	b507      	push	{r0, r1, r2, lr}
 8003438:	4805      	ldr	r0, [pc, #20]	; (8003450 <StoreWidget::Copy(TWidgetParams*)+0x1c>)
 800343a:	9300      	str	r3, [sp, #0]
 800343c:	460a      	mov	r2, r1
 800343e:	230c      	movs	r3, #12
 8003440:	210a      	movs	r1, #10
 8003442:	6800      	ldr	r0, [r0, #0]
 8003444:	f7ff feea 	bl	800321c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 8003448:	b003      	add	sp, #12
 800344a:	f85d fb04 	ldr.w	pc, [sp], #4
 800344e:	bf00      	nop
 8003450:	20001740 	andcs	r1, r0, r0, asr #14

08003454 <StoreWidget::StoreWidget()>:
 8003454:	4a03      	ldr	r2, [pc, #12]	; (8003464 <StoreWidget::StoreWidget()+0x10>)
 8003456:	6002      	str	r2, [r0, #0]
 8003458:	3224      	adds	r2, #36	; 0x24
 800345a:	6042      	str	r2, [r0, #4]
 800345c:	4a02      	ldr	r2, [pc, #8]	; (8003468 <StoreWidget::StoreWidget()+0x14>)
 800345e:	6010      	str	r0, [r2, #0]
 8003460:	4770      	bx	lr
 8003462:	bf00      	nop
 8003464:	08005788 	stmdaeq	r0, {r3, r7, r8, r9, sl, ip, lr}
 8003468:	2000174c 	andcs	r1, r0, ip, asr #14

0800346c <FlashRom::FlashRom()>:
 800346c:	4b07      	ldr	r3, [pc, #28]	; (800348c <FlashRom::FlashRom()+0x20>)
 800346e:	b510      	push	{r4, lr}
 8003470:	6018      	str	r0, [r3, #0]
 8003472:	2301      	movs	r3, #1
 8003474:	4604      	mov	r4, r0
 8003476:	7003      	strb	r3, [r0, #0]
 8003478:	4b05      	ldr	r3, [pc, #20]	; (8003490 <FlashRom::FlashRom()+0x24>)
 800347a:	4906      	ldr	r1, [pc, #24]	; (8003494 <FlashRom::FlashRom()+0x28>)
 800347c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8003480:	4805      	ldr	r0, [pc, #20]	; (8003498 <FlashRom::FlashRom()+0x2c>)
 8003482:	029a      	lsls	r2, r3, #10
 8003484:	f7fe f8f2 	bl	800166c <printf>
 8003488:	4620      	mov	r0, r4
 800348a:	bd10      	pop	{r4, pc}
 800348c:	20001750 	andcs	r1, r0, r0, asr r7
 8003490:	1ffff700 	svcne	0x00fff700
 8003494:	0800533c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, ip, lr}
 8003498:	080057c0 	stmdaeq	r0, {r6, r7, r8, r9, sl, ip, lr}

0800349c <FlashRom::GetSize() const>:
 800349c:	4b02      	ldr	r3, [pc, #8]	; (80034a8 <FlashRom::GetSize() const+0xc>)
 800349e:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 80034a2:	0280      	lsls	r0, r0, #10
 80034a4:	4770      	bx	lr
 80034a6:	bf00      	nop
 80034a8:	1ffff700 	svcne	0x00fff700

080034ac <FlashRom::GetSectorSize() const>:
 80034ac:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 80034b0:	4770      	bx	lr

080034b2 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 80034b2:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 80034b6:	441a      	add	r2, r3
 80034b8:	4293      	cmp	r3, r2
 80034ba:	d004      	beq.n	80034c6 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 80034bc:	f851 0b04 	ldr.w	r0, [r1], #4
 80034c0:	f843 0b04 	str.w	r0, [r3], #4
 80034c4:	e7f8      	b.n	80034b8 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>
 80034c6:	2200      	movs	r2, #0
 80034c8:	9b00      	ldr	r3, [sp, #0]
 80034ca:	2001      	movs	r0, #1
 80034cc:	601a      	str	r2, [r3, #0]
 80034ce:	4770      	bx	lr

080034d0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 80034d0:	2000      	movs	r0, #0
 80034d2:	b538      	push	{r3, r4, r5, lr}
 80034d4:	4c47      	ldr	r4, [pc, #284]	; (80035f4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 80034d6:	6018      	str	r0, [r3, #0]
 80034d8:	6823      	ldr	r3, [r4, #0]
 80034da:	2b04      	cmp	r3, #4
 80034dc:	f200 8082 	bhi.w	80035e4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 80034e0:	e8df f003 	tbb	[pc, r3]
 80034e4:	78452003 	stmdavc	r5, {r0, r1, sp}^
 80034e8:	4b430080 	blmi	90c36f0 <__exidx_end+0x10bdb00>
 80034ec:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 80034f0:	6019      	str	r1, [r3, #0]
 80034f2:	4b42      	ldr	r3, [pc, #264]	; (80035fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 80034f4:	601a      	str	r2, [r3, #0]
 80034f6:	4b42      	ldr	r3, [pc, #264]	; (8003600 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 80034f8:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 80034fc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003500:	4b40      	ldr	r3, [pc, #256]	; (8003604 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 8003502:	d807      	bhi.n	8003514 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 8003504:	2201      	movs	r2, #1
 8003506:	701a      	strb	r2, [r3, #0]
 8003508:	f000 ff3e 	bl	8004388 <fmc_bank0_unlock>
 800350c:	2301      	movs	r3, #1
 800350e:	6023      	str	r3, [r4, #0]
 8003510:	2000      	movs	r0, #0
 8003512:	e026      	b.n	8003562 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 8003514:	4a3c      	ldr	r2, [pc, #240]	; (8003608 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 8003516:	4291      	cmp	r1, r2
 8003518:	d3f4      	bcc.n	8003504 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800351a:	2200      	movs	r2, #0
 800351c:	701a      	strb	r2, [r3, #0]
 800351e:	f000 ff41 	bl	80043a4 <fmc_bank1_unlock>
 8003522:	e7f3      	b.n	800350c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 8003524:	4d37      	ldr	r5, [pc, #220]	; (8003604 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 8003526:	782b      	ldrb	r3, [r5, #0]
 8003528:	b15b      	cbz	r3, 8003542 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800352a:	f000 ff59 	bl	80043e0 <fmc_bank0_state_get>
 800352e:	2801      	cmp	r0, #1
 8003530:	d0ee      	beq.n	8003510 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 8003532:	7829      	ldrb	r1, [r5, #0]
 8003534:	4b35      	ldr	r3, [pc, #212]	; (800360c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 8003536:	b939      	cbnz	r1, 8003548 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 8003538:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800353a:	f022 0202 	bic.w	r2, r2, #2
 800353e:	651a      	str	r2, [r3, #80]	; 0x50
 8003540:	e006      	b.n	8003550 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 8003542:	f000 ff61 	bl	8004408 <fmc_bank1_state_get>
 8003546:	e7f2      	b.n	800352e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 8003548:	691a      	ldr	r2, [r3, #16]
 800354a:	f022 0202 	bic.w	r2, r2, #2
 800354e:	611a      	str	r2, [r3, #16]
 8003550:	4b2a      	ldr	r3, [pc, #168]	; (80035fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 8003552:	681b      	ldr	r3, [r3, #0]
 8003554:	b94b      	cbnz	r3, 800356a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 8003556:	b129      	cbz	r1, 8003564 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 8003558:	f000 ff32 	bl	80043c0 <fmc_bank0_lock>
 800355c:	2300      	movs	r3, #0
 800355e:	2001      	movs	r0, #1
 8003560:	6023      	str	r3, [r4, #0]
 8003562:	bd38      	pop	{r3, r4, r5, pc}
 8003564:	f000 ff34 	bl	80043d0 <fmc_bank1_lock>
 8003568:	e7f8      	b.n	800355c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800356a:	2302      	movs	r3, #2
 800356c:	e7cf      	b.n	800350e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800356e:	4923      	ldr	r1, [pc, #140]	; (80035fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 8003570:	680b      	ldr	r3, [r1, #0]
 8003572:	2b00      	cmp	r3, #0
 8003574:	d0ca      	beq.n	800350c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 8003576:	4b23      	ldr	r3, [pc, #140]	; (8003604 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 8003578:	4a1f      	ldr	r2, [pc, #124]	; (80035f8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800357a:	7818      	ldrb	r0, [r3, #0]
 800357c:	4b23      	ldr	r3, [pc, #140]	; (800360c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800357e:	b190      	cbz	r0, 80035a6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 8003580:	6918      	ldr	r0, [r3, #16]
 8003582:	f040 0002 	orr.w	r0, r0, #2
 8003586:	6118      	str	r0, [r3, #16]
 8003588:	6810      	ldr	r0, [r2, #0]
 800358a:	6158      	str	r0, [r3, #20]
 800358c:	6918      	ldr	r0, [r3, #16]
 800358e:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 8003592:	6118      	str	r0, [r3, #16]
 8003594:	680b      	ldr	r3, [r1, #0]
 8003596:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800359a:	600b      	str	r3, [r1, #0]
 800359c:	6813      	ldr	r3, [r2, #0]
 800359e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80035a2:	6013      	str	r3, [r2, #0]
 80035a4:	e7b2      	b.n	800350c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 80035a6:	6d18      	ldr	r0, [r3, #80]	; 0x50
 80035a8:	f040 0002 	orr.w	r0, r0, #2
 80035ac:	6518      	str	r0, [r3, #80]	; 0x50
 80035ae:	6810      	ldr	r0, [r2, #0]
 80035b0:	6558      	str	r0, [r3, #84]	; 0x54
 80035b2:	69dd      	ldr	r5, [r3, #28]
 80035b4:	07ad      	lsls	r5, r5, #30
 80035b6:	bf48      	it	mi
 80035b8:	6158      	strmi	r0, [r3, #20]
 80035ba:	4814      	ldr	r0, [pc, #80]	; (800360c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 80035bc:	6d03      	ldr	r3, [r0, #80]	; 0x50
 80035be:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80035c2:	6503      	str	r3, [r0, #80]	; 0x50
 80035c4:	680b      	ldr	r3, [r1, #0]
 80035c6:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 80035ca:	600b      	str	r3, [r1, #0]
 80035cc:	6813      	ldr	r3, [r2, #0]
 80035ce:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80035d2:	e7e6      	b.n	80035a2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 80035d4:	4b0b      	ldr	r3, [pc, #44]	; (8003604 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 80035d6:	781a      	ldrb	r2, [r3, #0]
 80035d8:	4b0c      	ldr	r3, [pc, #48]	; (800360c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 80035da:	b132      	cbz	r2, 80035ea <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 80035dc:	691a      	ldr	r2, [r3, #16]
 80035de:	f022 0201 	bic.w	r2, r2, #1
 80035e2:	611a      	str	r2, [r3, #16]
 80035e4:	2000      	movs	r0, #0
 80035e6:	6020      	str	r0, [r4, #0]
 80035e8:	e7bb      	b.n	8003562 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 80035ea:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80035ec:	f022 0201 	bic.w	r2, r2, #1
 80035f0:	651a      	str	r2, [r3, #80]	; 0x50
 80035f2:	e7f7      	b.n	80035e4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 80035f4:	20001758 	andcs	r1, r0, r8, asr r7
 80035f8:	2000175c 	andcs	r1, r0, ip, asr r7
 80035fc:	20001768 	andcs	r1, r0, r8, ror #14
 8003600:	1ffff700 	svcne	0x00fff700
 8003604:	20001764 	andcs	r1, r0, r4, ror #14
 8003608:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800360c:	40022000 	andmi	r2, r2, r0

08003610 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 8003610:	b570      	push	{r4, r5, r6, lr}
 8003612:	2400      	movs	r4, #0
 8003614:	9804      	ldr	r0, [sp, #16]
 8003616:	6004      	str	r4, [r0, #0]
 8003618:	4c48      	ldr	r4, [pc, #288]	; (800373c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800361a:	6820      	ldr	r0, [r4, #0]
 800361c:	2804      	cmp	r0, #4
 800361e:	d848      	bhi.n	80036b2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 8003620:	e8df f000 	tbb	[pc, r0]
 8003624:	22847c03 	addcs	r7, r4, #768	; 0x300
 8003628:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800362c:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8003630:	6001      	str	r1, [r0, #0]
 8003632:	4844      	ldr	r0, [pc, #272]	; (8003744 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8003634:	6003      	str	r3, [r0, #0]
 8003636:	4b44      	ldr	r3, [pc, #272]	; (8003748 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 8003638:	601a      	str	r2, [r3, #0]
 800363a:	4b44      	ldr	r3, [pc, #272]	; (800374c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800363c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8003640:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003644:	4b42      	ldr	r3, [pc, #264]	; (8003750 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8003646:	d807      	bhi.n	8003658 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 8003648:	2201      	movs	r2, #1
 800364a:	701a      	strb	r2, [r3, #0]
 800364c:	f000 fe9c 	bl	8004388 <fmc_bank0_unlock>
 8003650:	2303      	movs	r3, #3
 8003652:	6023      	str	r3, [r4, #0]
 8003654:	2000      	movs	r0, #0
 8003656:	e026      	b.n	80036a6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 8003658:	4a3e      	ldr	r2, [pc, #248]	; (8003754 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800365a:	4291      	cmp	r1, r2
 800365c:	d3f4      	bcc.n	8003648 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800365e:	2200      	movs	r2, #0
 8003660:	701a      	strb	r2, [r3, #0]
 8003662:	f000 fe9f 	bl	80043a4 <fmc_bank1_unlock>
 8003666:	e7f3      	b.n	8003650 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8003668:	4d39      	ldr	r5, [pc, #228]	; (8003750 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800366a:	782b      	ldrb	r3, [r5, #0]
 800366c:	b15b      	cbz	r3, 8003686 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800366e:	f000 feb7 	bl	80043e0 <fmc_bank0_state_get>
 8003672:	2801      	cmp	r0, #1
 8003674:	d0ee      	beq.n	8003654 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 8003676:	7829      	ldrb	r1, [r5, #0]
 8003678:	4b37      	ldr	r3, [pc, #220]	; (8003758 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800367a:	b939      	cbnz	r1, 800368c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800367c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800367e:	f022 0201 	bic.w	r2, r2, #1
 8003682:	651a      	str	r2, [r3, #80]	; 0x50
 8003684:	e006      	b.n	8003694 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 8003686:	f000 febf 	bl	8004408 <fmc_bank1_state_get>
 800368a:	e7f2      	b.n	8003672 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800368c:	691a      	ldr	r2, [r3, #16]
 800368e:	f022 0201 	bic.w	r2, r2, #1
 8003692:	611a      	str	r2, [r3, #16]
 8003694:	4b2c      	ldr	r3, [pc, #176]	; (8003748 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 8003696:	681b      	ldr	r3, [r3, #0]
 8003698:	b94b      	cbnz	r3, 80036ae <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800369a:	b129      	cbz	r1, 80036a8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800369c:	f000 fe90 	bl	80043c0 <fmc_bank0_lock>
 80036a0:	2300      	movs	r3, #0
 80036a2:	2001      	movs	r0, #1
 80036a4:	6023      	str	r3, [r4, #0]
 80036a6:	bd70      	pop	{r4, r5, r6, pc}
 80036a8:	f000 fe92 	bl	80043d0 <fmc_bank1_lock>
 80036ac:	e7f8      	b.n	80036a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 80036ae:	2304      	movs	r3, #4
 80036b0:	e7cf      	b.n	8003652 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 80036b2:	4a25      	ldr	r2, [pc, #148]	; (8003748 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 80036b4:	6813      	ldr	r3, [r2, #0]
 80036b6:	2b03      	cmp	r3, #3
 80036b8:	d91a      	bls.n	80036f0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 80036ba:	4b25      	ldr	r3, [pc, #148]	; (8003750 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 80036bc:	7819      	ldrb	r1, [r3, #0]
 80036be:	4b26      	ldr	r3, [pc, #152]	; (8003758 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 80036c0:	b189      	cbz	r1, 80036e6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 80036c2:	6919      	ldr	r1, [r3, #16]
 80036c4:	f041 0101 	orr.w	r1, r1, #1
 80036c8:	6119      	str	r1, [r3, #16]
 80036ca:	4d1e      	ldr	r5, [pc, #120]	; (8003744 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 80036cc:	481c      	ldr	r0, [pc, #112]	; (8003740 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 80036ce:	6829      	ldr	r1, [r5, #0]
 80036d0:	6803      	ldr	r3, [r0, #0]
 80036d2:	f851 6b04 	ldr.w	r6, [r1], #4
 80036d6:	f843 6b04 	str.w	r6, [r3], #4
 80036da:	6003      	str	r3, [r0, #0]
 80036dc:	6813      	ldr	r3, [r2, #0]
 80036de:	6029      	str	r1, [r5, #0]
 80036e0:	3b04      	subs	r3, #4
 80036e2:	6013      	str	r3, [r2, #0]
 80036e4:	e7b4      	b.n	8003650 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 80036e6:	6d19      	ldr	r1, [r3, #80]	; 0x50
 80036e8:	f041 0101 	orr.w	r1, r1, #1
 80036ec:	6519      	str	r1, [r3, #80]	; 0x50
 80036ee:	e7ec      	b.n	80036ca <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 80036f0:	2b00      	cmp	r3, #0
 80036f2:	d0ad      	beq.n	8003650 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 80036f4:	4b16      	ldr	r3, [pc, #88]	; (8003750 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 80036f6:	781a      	ldrb	r2, [r3, #0]
 80036f8:	4b17      	ldr	r3, [pc, #92]	; (8003758 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 80036fa:	b152      	cbz	r2, 8003712 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 80036fc:	691a      	ldr	r2, [r3, #16]
 80036fe:	f042 0201 	orr.w	r2, r2, #1
 8003702:	611a      	str	r2, [r3, #16]
 8003704:	4a0f      	ldr	r2, [pc, #60]	; (8003744 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8003706:	4b0e      	ldr	r3, [pc, #56]	; (8003740 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 8003708:	6812      	ldr	r2, [r2, #0]
 800370a:	681b      	ldr	r3, [r3, #0]
 800370c:	6812      	ldr	r2, [r2, #0]
 800370e:	601a      	str	r2, [r3, #0]
 8003710:	e79e      	b.n	8003650 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8003712:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003714:	f042 0201 	orr.w	r2, r2, #1
 8003718:	651a      	str	r2, [r3, #80]	; 0x50
 800371a:	e7f3      	b.n	8003704 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800371c:	4b0c      	ldr	r3, [pc, #48]	; (8003750 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800371e:	781a      	ldrb	r2, [r3, #0]
 8003720:	4b0d      	ldr	r3, [pc, #52]	; (8003758 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 8003722:	b132      	cbz	r2, 8003732 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 8003724:	691a      	ldr	r2, [r3, #16]
 8003726:	f022 0202 	bic.w	r2, r2, #2
 800372a:	611a      	str	r2, [r3, #16]
 800372c:	2000      	movs	r0, #0
 800372e:	6020      	str	r0, [r4, #0]
 8003730:	e7b9      	b.n	80036a6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 8003732:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003734:	f022 0202 	bic.w	r2, r2, #2
 8003738:	651a      	str	r2, [r3, #80]	; 0x50
 800373a:	e7f7      	b.n	800372c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800373c:	20001758 	andcs	r1, r0, r8, asr r7
 8003740:	20001754 	andcs	r1, r0, r4, asr r7
 8003744:	20001760 	andcs	r1, r0, r0, ror #14
 8003748:	20001768 	andcs	r1, r0, r8, ror #14
 800374c:	1ffff700 	svcne	0x00fff700
 8003750:	20001764 	andcs	r1, r0, r4, ror #14
 8003754:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8003758:	40022000 	andmi	r2, r2, r0

0800375c <Network::Network()>:
 800375c:	4b05      	ldr	r3, [pc, #20]	; (8003774 <Network::Network()+0x18>)
 800375e:	4906      	ldr	r1, [pc, #24]	; (8003778 <Network::Network()+0x1c>)
 8003760:	6018      	str	r0, [r3, #0]
 8003762:	1e42      	subs	r2, r0, #1
 8003764:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003768:	f802 3f01 	strb.w	r3, [r2, #1]!
 800376c:	2b00      	cmp	r3, #0
 800376e:	d1f9      	bne.n	8003764 <Network::Network()+0x8>
 8003770:	4770      	bx	lr
 8003772:	bf00      	nop
 8003774:	2000176c 	andcs	r1, r0, ip, ror #14
 8003778:	080057e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, sl, ip, lr}

0800377c <Network::MacAddressCopyTo(unsigned char*)>:
 800377c:	4608      	mov	r0, r1
 800377e:	f000 bccf 	b.w	8004120 <mac_address_get>

08003782 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8003782:	e9c0 1200 	strd	r1, r2, [r0]
 8003786:	4770      	bx	lr

08003788 <ReadConfigFile::~ReadConfigFile()>:
 8003788:	4770      	bx	lr

0800378a <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 800378a:	b538      	push	{r3, r4, r5, lr}
 800378c:	4615      	mov	r5, r2
 800378e:	f000 f819 	bl	80037c4 <Sscan::checkName(char const*, char const*)>
 8003792:	b198      	cbz	r0, 80037bc <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8003794:	4604      	mov	r4, r0
 8003796:	2100      	movs	r1, #0
 8003798:	220a      	movs	r2, #10
 800379a:	7823      	ldrb	r3, [r4, #0]
 800379c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 80037a0:	2809      	cmp	r0, #9
 80037a2:	d80d      	bhi.n	80037c0 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 80037a4:	fb02 3101 	mla	r1, r2, r1, r3
 80037a8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80037ac:	3930      	subs	r1, #48	; 0x30
 80037ae:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 80037b2:	d1f2      	bne.n	800379a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 80037b4:	29ff      	cmp	r1, #255	; 0xff
 80037b6:	d803      	bhi.n	80037c0 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 80037b8:	7029      	strb	r1, [r5, #0]
 80037ba:	bd38      	pop	{r3, r4, r5, pc}
 80037bc:	2001      	movs	r0, #1
 80037be:	e7fc      	b.n	80037ba <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 80037c0:	2002      	movs	r0, #2
 80037c2:	e7fa      	b.n	80037ba <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

080037c4 <Sscan::checkName(char const*, char const*)>:
 80037c4:	4603      	mov	r3, r0
 80037c6:	b510      	push	{r4, lr}
 80037c8:	3901      	subs	r1, #1
 80037ca:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80037ce:	461c      	mov	r4, r3
 80037d0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80037d4:	b120      	cbz	r0, 80037e0 <Sscan::checkName(char const*, char const*)+0x1c>
 80037d6:	b10a      	cbz	r2, 80037dc <Sscan::checkName(char const*, char const*)+0x18>
 80037d8:	4290      	cmp	r0, r2
 80037da:	d0f6      	beq.n	80037ca <Sscan::checkName(char const*, char const*)+0x6>
 80037dc:	2000      	movs	r0, #0
 80037de:	e006      	b.n	80037ee <Sscan::checkName(char const*, char const*)+0x2a>
 80037e0:	2a3d      	cmp	r2, #61	; 0x3d
 80037e2:	d104      	bne.n	80037ee <Sscan::checkName(char const*, char const*)+0x2a>
 80037e4:	7860      	ldrb	r0, [r4, #1]
 80037e6:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 80037ea:	d000      	beq.n	80037ee <Sscan::checkName(char const*, char const*)+0x2a>
 80037ec:	1c60      	adds	r0, r4, #1
 80037ee:	bd10      	pop	{r4, pc}

080037f0 <Display::PrintInfo() [clone .isra.0]>:
 80037f0:	b910      	cbnz	r0, 80037f8 <Display::PrintInfo() [clone .isra.0]+0x8>
 80037f2:	4803      	ldr	r0, [pc, #12]	; (8003800 <Display::PrintInfo() [clone .isra.0]+0x10>)
 80037f4:	f000 bbc2 	b.w	8003f7c <puts>
 80037f8:	6803      	ldr	r3, [r0, #0]
 80037fa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80037fc:	4718      	bx	r3
 80037fe:	bf00      	nop
 8003800:	080057ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl, ip, lr}

08003804 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8003804:	b513      	push	{r0, r1, r4, lr}
 8003806:	4604      	mov	r4, r0
 8003808:	0a13      	lsrs	r3, r2, #8
 800380a:	7800      	ldrb	r0, [r0, #0]
 800380c:	f88d 1004 	strb.w	r1, [sp, #4]
 8003810:	f88d 3005 	strb.w	r3, [sp, #5]
 8003814:	f88d 2006 	strb.w	r2, [sp, #6]
 8003818:	f001 f9e6 	bl	8004be8 <gd32_i2c_set_address(unsigned char)>
 800381c:	6860      	ldr	r0, [r4, #4]
 800381e:	f001 f9db 	bl	8004bd8 <gd32_i2c_set_baudrate(unsigned int)>
 8003822:	2103      	movs	r1, #3
 8003824:	a801      	add	r0, sp, #4
 8003826:	f001 f9e5 	bl	8004bf4 <gd32_i2c_write(char const*, unsigned int)>
 800382a:	b002      	add	sp, #8
 800382c:	bd10      	pop	{r4, pc}

0800382e <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 800382e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003830:	460d      	mov	r5, r1
 8003832:	4604      	mov	r4, r0
 8003834:	f001 f9d8 	bl	8004be8 <gd32_i2c_set_address(unsigned char)>
 8003838:	4628      	mov	r0, r5
 800383a:	f001 f9cd 	bl	8004bd8 <gd32_i2c_set_baudrate(unsigned int)>
 800383e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8003842:	2b07      	cmp	r3, #7
 8003844:	d902      	bls.n	800384c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8003846:	3c50      	subs	r4, #80	; 0x50
 8003848:	2c0f      	cmp	r4, #15
 800384a:	d809      	bhi.n	8003860 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 800384c:	2101      	movs	r1, #1
 800384e:	f10d 0007 	add.w	r0, sp, #7
 8003852:	f001 fa35 	bl	8004cc0 <gd32_i2c_read(char*, unsigned int)>
 8003856:	fab0 f080 	clz	r0, r0
 800385a:	0940      	lsrs	r0, r0, #5
 800385c:	b003      	add	sp, #12
 800385e:	bd30      	pop	{r4, r5, pc}
 8003860:	2100      	movs	r1, #0
 8003862:	4608      	mov	r0, r1
 8003864:	f001 f9c6 	bl	8004bf4 <gd32_i2c_write(char const*, unsigned int)>
 8003868:	e7f5      	b.n	8003856 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0800386a <Display::Detect7Segment()>:
 800386a:	b538      	push	{r3, r4, r5, lr}
 800386c:	68c1      	ldr	r1, [r0, #12]
 800386e:	4604      	mov	r4, r0
 8003870:	7a00      	ldrb	r0, [r0, #8]
 8003872:	f7ff ffdc 	bl	800382e <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8003876:	7460      	strb	r0, [r4, #17]
 8003878:	b170      	cbz	r0, 8003898 <Display::Detect7Segment()+0x2e>
 800387a:	2200      	movs	r2, #0
 800387c:	f104 0508 	add.w	r5, r4, #8
 8003880:	4611      	mov	r1, r2
 8003882:	4628      	mov	r0, r5
 8003884:	f7ff ffbe 	bl	8003804 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8003888:	7c63      	ldrb	r3, [r4, #17]
 800388a:	b12b      	cbz	r3, 8003898 <Display::Detect7Segment()+0x2e>
 800388c:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8003890:	2112      	movs	r1, #18
 8003892:	4628      	mov	r0, r5
 8003894:	f7ff ffb6 	bl	8003804 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8003898:	bd38      	pop	{r3, r4, r5, pc}

0800389a <Display::Detect(display::Type)>:
 800389a:	2902      	cmp	r1, #2
 800389c:	b538      	push	{r3, r4, r5, lr}
 800389e:	4604      	mov	r4, r0
 80038a0:	d014      	beq.n	80038cc <Display::Detect(display::Type)+0x32>
 80038a2:	2904      	cmp	r1, #4
 80038a4:	d01b      	beq.n	80038de <Display::Detect(display::Type)+0x44>
 80038a6:	69a0      	ldr	r0, [r4, #24]
 80038a8:	b168      	cbz	r0, 80038c6 <Display::Detect(display::Type)+0x2c>
 80038aa:	6803      	ldr	r3, [r0, #0]
 80038ac:	689b      	ldr	r3, [r3, #8]
 80038ae:	4798      	blx	r3
 80038b0:	4603      	mov	r3, r0
 80038b2:	69a0      	ldr	r0, [r4, #24]
 80038b4:	b9ab      	cbnz	r3, 80038e2 <Display::Detect(display::Type)+0x48>
 80038b6:	b110      	cbz	r0, 80038be <Display::Detect(display::Type)+0x24>
 80038b8:	6803      	ldr	r3, [r0, #0]
 80038ba:	685b      	ldr	r3, [r3, #4]
 80038bc:	4798      	blx	r3
 80038be:	2300      	movs	r3, #0
 80038c0:	61a3      	str	r3, [r4, #24]
 80038c2:	2304      	movs	r3, #4
 80038c4:	6023      	str	r3, [r4, #0]
 80038c6:	2300      	movs	r3, #0
 80038c8:	6163      	str	r3, [r4, #20]
 80038ca:	e010      	b.n	80038ee <Display::Detect(display::Type)+0x54>
 80038cc:	2018      	movs	r0, #24
 80038ce:	f000 fab3 	bl	8003e38 <operator new(unsigned int)>
 80038d2:	4605      	mov	r5, r0
 80038d4:	2100      	movs	r1, #0
 80038d6:	f000 f8a1 	bl	8003a1c <Ssd1306::Ssd1306(TOledPanel)>
 80038da:	61a5      	str	r5, [r4, #24]
 80038dc:	e7e3      	b.n	80038a6 <Display::Detect(display::Type)+0xc>
 80038de:	6001      	str	r1, [r0, #0]
 80038e0:	e7e1      	b.n	80038a6 <Display::Detect(display::Type)+0xc>
 80038e2:	6803      	ldr	r3, [r0, #0]
 80038e4:	68db      	ldr	r3, [r3, #12]
 80038e6:	4798      	blx	r3
 80038e8:	69a3      	ldr	r3, [r4, #24]
 80038ea:	2b00      	cmp	r3, #0
 80038ec:	d0eb      	beq.n	80038c6 <Display::Detect(display::Type)+0x2c>
 80038ee:	bd38      	pop	{r3, r4, r5, pc}

080038f0 <Display::Display()>:
 80038f0:	2304      	movs	r3, #4
 80038f2:	b510      	push	{r4, lr}
 80038f4:	6003      	str	r3, [r0, #0]
 80038f6:	4b0f      	ldr	r3, [pc, #60]	; (8003934 <Display::Display()+0x44>)
 80038f8:	4604      	mov	r4, r0
 80038fa:	681b      	ldr	r3, [r3, #0]
 80038fc:	4a0e      	ldr	r2, [pc, #56]	; (8003938 <Display::Display()+0x48>)
 80038fe:	6043      	str	r3, [r0, #4]
 8003900:	2321      	movs	r3, #33	; 0x21
 8003902:	7203      	strb	r3, [r0, #8]
 8003904:	4b0d      	ldr	r3, [pc, #52]	; (800393c <Display::Display()+0x4c>)
 8003906:	2102      	movs	r1, #2
 8003908:	60c3      	str	r3, [r0, #12]
 800390a:	2300      	movs	r3, #0
 800390c:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8003910:	8203      	strh	r3, [r0, #16]
 8003912:	4b0b      	ldr	r3, [pc, #44]	; (8003940 <Display::Display()+0x50>)
 8003914:	6018      	str	r0, [r3, #0]
 8003916:	f7ff ffc0 	bl	800389a <Display::Detect(display::Type)>
 800391a:	4620      	mov	r0, r4
 800391c:	f7ff ffa5 	bl	800386a <Display::Detect7Segment()>
 8003920:	69a3      	ldr	r3, [r4, #24]
 8003922:	b10b      	cbz	r3, 8003928 <Display::Display()+0x38>
 8003924:	f000 f80e 	bl	8003944 <display::timeout::gpio_init()>
 8003928:	69a0      	ldr	r0, [r4, #24]
 800392a:	f7ff ff61 	bl	80037f0 <Display::PrintInfo() [clone .isra.0]>
 800392e:	4620      	mov	r0, r4
 8003930:	bd10      	pop	{r4, pc}
 8003932:	bf00      	nop
 8003934:	20001814 	andcs	r1, r0, r4, lsl r8
 8003938:	000493e0 	andeq	r9, r4, r0, ror #7
 800393c:	00061a80 	andeq	r1, r6, r0, lsl #21
 8003940:	20001770 	andcs	r1, r0, r0, ror r7

08003944 <display::timeout::gpio_init()>:
 8003944:	4770      	bx	lr

08003946 <Ssd1306::~Ssd1306()>:
 8003946:	4770      	bx	lr

08003948 <Ssd1306::SetCursor(unsigned int)>:
 8003948:	4770      	bx	lr
	...

0800394c <Ssd1306::PrintInfo()>:
 800394c:	b410      	push	{r4}
 800394e:	4906      	ldr	r1, [pc, #24]	; (8003968 <Ssd1306::PrintInfo()+0x1c>)
 8003950:	7c44      	ldrb	r4, [r0, #17]
 8003952:	7903      	ldrb	r3, [r0, #4]
 8003954:	7942      	ldrb	r2, [r0, #5]
 8003956:	4805      	ldr	r0, [pc, #20]	; (800396c <Ssd1306::PrintInfo()+0x20>)
 8003958:	2c00      	cmp	r4, #0
 800395a:	bf08      	it	eq
 800395c:	4601      	moveq	r1, r0
 800395e:	4804      	ldr	r0, [pc, #16]	; (8003970 <Ssd1306::PrintInfo()+0x24>)
 8003960:	bc10      	pop	{r4}
 8003962:	f7fd be83 	b.w	800166c <printf>
 8003966:	bf00      	nop
 8003968:	080057fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, lr}
 800396c:	08005804 	stmdaeq	r0, {r2, fp, ip, lr}
 8003970:	0800580c 	stmdaeq	r0, {r2, r3, fp, ip, lr}

08003974 <Ssd1306::~Ssd1306()>:
 8003974:	b510      	push	{r4, lr}
 8003976:	4604      	mov	r4, r0
 8003978:	f000 fa5c 	bl	8003e34 <operator delete(void*)>
 800397c:	4620      	mov	r0, r4
 800397e:	bd10      	pop	{r4, pc}

08003980 <HAL_I2C::Setup()>:
 8003980:	b510      	push	{r4, lr}
 8003982:	4604      	mov	r4, r0
 8003984:	7800      	ldrb	r0, [r0, #0]
 8003986:	f001 f92f 	bl	8004be8 <gd32_i2c_set_address(unsigned char)>
 800398a:	6860      	ldr	r0, [r4, #4]
 800398c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003990:	f001 b922 	b.w	8004bd8 <gd32_i2c_set_baudrate(unsigned int)>

08003994 <Ssd1306::PutChar(int)>:
 8003994:	b510      	push	{r4, lr}
 8003996:	f1a1 0420 	sub.w	r4, r1, #32
 800399a:	2c5f      	cmp	r4, #95	; 0x5f
 800399c:	bf88      	it	hi
 800399e:	2400      	movhi	r4, #0
 80039a0:	3008      	adds	r0, #8
 80039a2:	f7ff ffed 	bl	8003980 <HAL_I2C::Setup()>
 80039a6:	4804      	ldr	r0, [pc, #16]	; (80039b8 <Ssd1306::PutChar(int)+0x24>)
 80039a8:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 80039ac:	4420      	add	r0, r4
 80039ae:	2107      	movs	r1, #7
 80039b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80039b4:	f001 b91e 	b.w	8004bf4 <gd32_i2c_write(char const*, unsigned int)>
 80039b8:	08005820 	stmdaeq	r0, {r5, fp, ip, lr}

080039bc <Ssd1306::PutString(char const*)>:
 80039bc:	b538      	push	{r3, r4, r5, lr}
 80039be:	4605      	mov	r5, r0
 80039c0:	1e4c      	subs	r4, r1, #1
 80039c2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80039c6:	b119      	cbz	r1, 80039d0 <Ssd1306::PutString(char const*)+0x14>
 80039c8:	4628      	mov	r0, r5
 80039ca:	f7ff ffe3 	bl	8003994 <Ssd1306::PutChar(int)>
 80039ce:	e7f8      	b.n	80039c2 <Ssd1306::PutString(char const*)+0x6>
 80039d0:	bd38      	pop	{r3, r4, r5, pc}

080039d2 <Ssd1306::Text(char const*, unsigned int)>:
 80039d2:	b570      	push	{r4, r5, r6, lr}
 80039d4:	7903      	ldrb	r3, [r0, #4]
 80039d6:	4605      	mov	r5, r0
 80039d8:	460c      	mov	r4, r1
 80039da:	4293      	cmp	r3, r2
 80039dc:	bf94      	ite	ls
 80039de:	18ce      	addls	r6, r1, r3
 80039e0:	188e      	addhi	r6, r1, r2
 80039e2:	42b4      	cmp	r4, r6
 80039e4:	d005      	beq.n	80039f2 <Ssd1306::Text(char const*, unsigned int)+0x20>
 80039e6:	4628      	mov	r0, r5
 80039e8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80039ec:	f7ff ffd2 	bl	8003994 <Ssd1306::PutChar(int)>
 80039f0:	e7f7      	b.n	80039e2 <Ssd1306::Text(char const*, unsigned int)+0x10>
 80039f2:	bd70      	pop	{r4, r5, r6, pc}

080039f4 <Ssd1306::InitMembers()>:
 80039f4:	7c03      	ldrb	r3, [r0, #16]
 80039f6:	b12b      	cbz	r3, 8003a04 <Ssd1306::InitMembers()+0x10>
 80039f8:	3b01      	subs	r3, #1
 80039fa:	2b01      	cmp	r3, #1
 80039fc:	d908      	bls.n	8003a10 <Ssd1306::InitMembers()+0x1c>
 80039fe:	f640 0315 	movw	r3, #2069	; 0x815
 8003a02:	e007      	b.n	8003a14 <Ssd1306::InitMembers()+0x20>
 8003a04:	f640 0315 	movw	r3, #2069	; 0x815
 8003a08:	8083      	strh	r3, [r0, #4]
 8003a0a:	2308      	movs	r3, #8
 8003a0c:	6143      	str	r3, [r0, #20]
 8003a0e:	4770      	bx	lr
 8003a10:	f240 4315 	movw	r3, #1045	; 0x415
 8003a14:	8083      	strh	r3, [r0, #4]
 8003a16:	2304      	movs	r3, #4
 8003a18:	e7f8      	b.n	8003a0c <Ssd1306::InitMembers()+0x18>
	...

08003a1c <Ssd1306::Ssd1306(TOledPanel)>:
 8003a1c:	4a08      	ldr	r2, [pc, #32]	; (8003a40 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8003a1e:	b508      	push	{r3, lr}
 8003a20:	6002      	str	r2, [r0, #0]
 8003a22:	227f      	movs	r2, #127	; 0x7f
 8003a24:	80c2      	strh	r2, [r0, #6]
 8003a26:	223c      	movs	r2, #60	; 0x3c
 8003a28:	7202      	strb	r2, [r0, #8]
 8003a2a:	4a06      	ldr	r2, [pc, #24]	; (8003a44 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8003a2c:	7401      	strb	r1, [r0, #16]
 8003a2e:	60c2      	str	r2, [r0, #12]
 8003a30:	2200      	movs	r2, #0
 8003a32:	7442      	strb	r2, [r0, #17]
 8003a34:	4a04      	ldr	r2, [pc, #16]	; (8003a48 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8003a36:	6010      	str	r0, [r2, #0]
 8003a38:	f7ff ffdc 	bl	80039f4 <Ssd1306::InitMembers()>
 8003a3c:	bd08      	pop	{r3, pc}
 8003a3e:	bf00      	nop
 8003a40:	08005af8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, fp, ip, lr}
 8003a44:	00061a80 	andeq	r1, r6, r0, lsl #21
 8003a48:	200017fc 	strdcs	r1, [r0], -ip

08003a4c <Ssd1306::SendCommand(unsigned char)>:
 8003a4c:	2300      	movs	r3, #0
 8003a4e:	b507      	push	{r0, r1, r2, lr}
 8003a50:	3008      	adds	r0, #8
 8003a52:	f88d 3004 	strb.w	r3, [sp, #4]
 8003a56:	f88d 1005 	strb.w	r1, [sp, #5]
 8003a5a:	f7ff ff91 	bl	8003980 <HAL_I2C::Setup()>
 8003a5e:	2102      	movs	r1, #2
 8003a60:	a801      	add	r0, sp, #4
 8003a62:	f001 f8c7 	bl	8004bf4 <gd32_i2c_write(char const*, unsigned int)>
 8003a66:	b003      	add	sp, #12
 8003a68:	f85d fb04 	ldr.w	pc, [sp], #4

08003a6c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8003a6c:	2914      	cmp	r1, #20
 8003a6e:	b570      	push	{r4, r5, r6, lr}
 8003a70:	4605      	mov	r5, r0
 8003a72:	4616      	mov	r6, r2
 8003a74:	d81c      	bhi.n	8003ab0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8003a76:	7943      	ldrb	r3, [r0, #5]
 8003a78:	4293      	cmp	r3, r2
 8003a7a:	d919      	bls.n	8003ab0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8003a7c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8003a80:	7c43      	ldrb	r3, [r0, #17]
 8003a82:	004c      	lsls	r4, r1, #1
 8003a84:	b2e4      	uxtb	r4, r4
 8003a86:	b10b      	cbz	r3, 8003a8c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8003a88:	3404      	adds	r4, #4
 8003a8a:	b2e4      	uxtb	r4, r4
 8003a8c:	4628      	mov	r0, r5
 8003a8e:	f004 010e 	and.w	r1, r4, #14
 8003a92:	f7ff ffdb 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003a96:	0921      	lsrs	r1, r4, #4
 8003a98:	4628      	mov	r0, r5
 8003a9a:	f041 0110 	orr.w	r1, r1, #16
 8003a9e:	f7ff ffd5 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003aa2:	4628      	mov	r0, r5
 8003aa4:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8003aa8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003aac:	f7ff bfce 	b.w	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003ab0:	bd70      	pop	{r4, r5, r6, pc}

08003ab2 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8003ab2:	b570      	push	{r4, r5, r6, lr}
 8003ab4:	4604      	mov	r4, r0
 8003ab6:	4615      	mov	r5, r2
 8003ab8:	461e      	mov	r6, r3
 8003aba:	b171      	cbz	r1, 8003ada <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8003abc:	7943      	ldrb	r3, [r0, #5]
 8003abe:	428b      	cmp	r3, r1
 8003ac0:	d30b      	bcc.n	8003ada <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8003ac2:	3901      	subs	r1, #1
 8003ac4:	b2ca      	uxtb	r2, r1
 8003ac6:	2100      	movs	r1, #0
 8003ac8:	f7ff ffd0 	bl	8003a6c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003acc:	4632      	mov	r2, r6
 8003ace:	4629      	mov	r1, r5
 8003ad0:	4620      	mov	r0, r4
 8003ad2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003ad6:	f7ff bf7c 	b.w	80039d2 <Ssd1306::Text(char const*, unsigned int)>
 8003ada:	bd70      	pop	{r4, r5, r6, pc}

08003adc <Ssd1306::ClearLine(unsigned char)>:
 8003adc:	b538      	push	{r3, r4, r5, lr}
 8003ade:	4605      	mov	r5, r0
 8003ae0:	b1b9      	cbz	r1, 8003b12 <Ssd1306::ClearLine(unsigned char)+0x36>
 8003ae2:	7943      	ldrb	r3, [r0, #5]
 8003ae4:	428b      	cmp	r3, r1
 8003ae6:	d314      	bcc.n	8003b12 <Ssd1306::ClearLine(unsigned char)+0x36>
 8003ae8:	3901      	subs	r1, #1
 8003aea:	b2cc      	uxtb	r4, r1
 8003aec:	4622      	mov	r2, r4
 8003aee:	2100      	movs	r1, #0
 8003af0:	f7ff ffbc 	bl	8003a6c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003af4:	f105 0008 	add.w	r0, r5, #8
 8003af8:	f7ff ff42 	bl	8003980 <HAL_I2C::Setup()>
 8003afc:	2181      	movs	r1, #129	; 0x81
 8003afe:	4805      	ldr	r0, [pc, #20]	; (8003b14 <Ssd1306::ClearLine(unsigned char)+0x38>)
 8003b00:	f001 f878 	bl	8004bf4 <gd32_i2c_write(char const*, unsigned int)>
 8003b04:	4622      	mov	r2, r4
 8003b06:	4628      	mov	r0, r5
 8003b08:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003b0c:	2100      	movs	r1, #0
 8003b0e:	f7ff bfad 	b.w	8003a6c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003b12:	bd38      	pop	{r3, r4, r5, pc}
 8003b14:	20001774 	andcs	r1, r0, r4, ror r7

08003b18 <Ssd1306::SetSleep(bool)>:
 8003b18:	b111      	cbz	r1, 8003b20 <Ssd1306::SetSleep(bool)+0x8>
 8003b1a:	21ae      	movs	r1, #174	; 0xae
 8003b1c:	f7ff bf96 	b.w	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003b20:	21af      	movs	r1, #175	; 0xaf
 8003b22:	e7fb      	b.n	8003b1c <Ssd1306::SetSleep(bool)+0x4>

08003b24 <Ssd1306::SetContrast(unsigned char)>:
 8003b24:	b538      	push	{r3, r4, r5, lr}
 8003b26:	4604      	mov	r4, r0
 8003b28:	460d      	mov	r5, r1
 8003b2a:	7181      	strb	r1, [r0, #6]
 8003b2c:	2181      	movs	r1, #129	; 0x81
 8003b2e:	f7ff ff8d 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003b32:	4629      	mov	r1, r5
 8003b34:	4620      	mov	r0, r4
 8003b36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003b3a:	f7ff bf87 	b.w	8003a4c <Ssd1306::SendCommand(unsigned char)>

08003b3e <Ssd1306::SetFlipVertically(bool)>:
 8003b3e:	b510      	push	{r4, lr}
 8003b40:	4604      	mov	r4, r0
 8003b42:	71c1      	strb	r1, [r0, #7]
 8003b44:	b141      	cbz	r1, 8003b58 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8003b46:	21c0      	movs	r1, #192	; 0xc0
 8003b48:	f7ff ff80 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003b4c:	21a0      	movs	r1, #160	; 0xa0
 8003b4e:	4620      	mov	r0, r4
 8003b50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003b54:	f7ff bf7a 	b.w	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003b58:	21c8      	movs	r1, #200	; 0xc8
 8003b5a:	f7ff ff77 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003b5e:	21a1      	movs	r1, #161	; 0xa1
 8003b60:	e7f5      	b.n	8003b4e <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08003b64 <Ssd1306::CheckSH1106()>:
 8003b64:	b570      	push	{r4, r5, r6, lr}
 8003b66:	4604      	mov	r4, r0
 8003b68:	b086      	sub	sp, #24
 8003b6a:	2100      	movs	r1, #0
 8003b6c:	f7ff ff6e 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003b70:	2190      	movs	r1, #144	; 0x90
 8003b72:	4620      	mov	r0, r4
 8003b74:	f7ff ff6a 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003b78:	21b0      	movs	r1, #176	; 0xb0
 8003b7a:	4620      	mov	r0, r4
 8003b7c:	f7ff ff66 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003b80:	4b22      	ldr	r3, [pc, #136]	; (8003c0c <Ssd1306::CheckSH1106()+0xa8>)
 8003b82:	f104 0608 	add.w	r6, r4, #8
 8003b86:	6818      	ldr	r0, [r3, #0]
 8003b88:	791b      	ldrb	r3, [r3, #4]
 8003b8a:	ad02      	add	r5, sp, #8
 8003b8c:	9002      	str	r0, [sp, #8]
 8003b8e:	4630      	mov	r0, r6
 8003b90:	712b      	strb	r3, [r5, #4]
 8003b92:	f7ff fef5 	bl	8003980 <HAL_I2C::Setup()>
 8003b96:	2105      	movs	r1, #5
 8003b98:	4628      	mov	r0, r5
 8003b9a:	f001 f82b 	bl	8004bf4 <gd32_i2c_write(char const*, unsigned int)>
 8003b9e:	2100      	movs	r1, #0
 8003ba0:	4620      	mov	r0, r4
 8003ba2:	f7ff ff53 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003ba6:	2190      	movs	r1, #144	; 0x90
 8003ba8:	4620      	mov	r0, r4
 8003baa:	f7ff ff4f 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003bae:	21b0      	movs	r1, #176	; 0xb0
 8003bb0:	4620      	mov	r0, r4
 8003bb2:	f7ff ff4b 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003bb6:	2300      	movs	r3, #0
 8003bb8:	9304      	str	r3, [sp, #16]
 8003bba:	f88d 3014 	strb.w	r3, [sp, #20]
 8003bbe:	2340      	movs	r3, #64	; 0x40
 8003bc0:	4630      	mov	r0, r6
 8003bc2:	f88d 3007 	strb.w	r3, [sp, #7]
 8003bc6:	f7ff fedb 	bl	8003980 <HAL_I2C::Setup()>
 8003bca:	2101      	movs	r1, #1
 8003bcc:	f10d 0007 	add.w	r0, sp, #7
 8003bd0:	f001 f810 	bl	8004bf4 <gd32_i2c_write(char const*, unsigned int)>
 8003bd4:	4630      	mov	r0, r6
 8003bd6:	f7ff fed3 	bl	8003980 <HAL_I2C::Setup()>
 8003bda:	2105      	movs	r1, #5
 8003bdc:	a804      	add	r0, sp, #16
 8003bde:	f001 f86f 	bl	8004cc0 <gd32_i2c_read(char*, unsigned int)>
 8003be2:	2201      	movs	r2, #1
 8003be4:	5cab      	ldrb	r3, [r5, r2]
 8003be6:	a904      	add	r1, sp, #16
 8003be8:	3201      	adds	r2, #1
 8003bea:	4411      	add	r1, r2
 8003bec:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 8003bf0:	428b      	cmp	r3, r1
 8003bf2:	d006      	beq.n	8003c02 <Ssd1306::CheckSH1106()+0x9e>
 8003bf4:	1a5b      	subs	r3, r3, r1
 8003bf6:	fab3 f383 	clz	r3, r3
 8003bfa:	095b      	lsrs	r3, r3, #5
 8003bfc:	7463      	strb	r3, [r4, #17]
 8003bfe:	b006      	add	sp, #24
 8003c00:	bd70      	pop	{r4, r5, r6, pc}
 8003c02:	2a05      	cmp	r2, #5
 8003c04:	d1ee      	bne.n	8003be4 <Ssd1306::CheckSH1106()+0x80>
 8003c06:	2300      	movs	r3, #0
 8003c08:	e7f5      	b.n	8003bf6 <Ssd1306::CheckSH1106()+0x92>
 8003c0a:	bf00      	nop
 8003c0c:	08005818 	stmdaeq	r0, {r3, r4, fp, ip, lr}

08003c10 <Ssd1306::Cls()>:
 8003c10:	7c43      	ldrb	r3, [r0, #17]
 8003c12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003c16:	2b00      	cmp	r3, #0
 8003c18:	bf0c      	ite	eq
 8003c1a:	2500      	moveq	r5, #0
 8003c1c:	2504      	movne	r5, #4
 8003c1e:	4604      	mov	r4, r0
 8003c20:	2600      	movs	r6, #0
 8003c22:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8003c26:	f045 0810 	orr.w	r8, r5, #16
 8003c2a:	b2ff      	uxtb	r7, r7
 8003c2c:	6963      	ldr	r3, [r4, #20]
 8003c2e:	4629      	mov	r1, r5
 8003c30:	42b3      	cmp	r3, r6
 8003c32:	4620      	mov	r0, r4
 8003c34:	d91b      	bls.n	8003c6e <Ssd1306::Cls()+0x5e>
 8003c36:	f7ff ff09 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003c3a:	4641      	mov	r1, r8
 8003c3c:	4620      	mov	r0, r4
 8003c3e:	f7ff ff05 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003c42:	f066 014f 	orn	r1, r6, #79	; 0x4f
 8003c46:	4620      	mov	r0, r4
 8003c48:	b2c9      	uxtb	r1, r1
 8003c4a:	f7ff feff 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003c4e:	7c23      	ldrb	r3, [r4, #16]
 8003c50:	b123      	cbz	r3, 8003c5c <Ssd1306::Cls()+0x4c>
 8003c52:	3b01      	subs	r3, #1
 8003c54:	2b01      	cmp	r3, #1
 8003c56:	d901      	bls.n	8003c5c <Ssd1306::Cls()+0x4c>
 8003c58:	3601      	adds	r6, #1
 8003c5a:	e7e7      	b.n	8003c2c <Ssd1306::Cls()+0x1c>
 8003c5c:	f104 0008 	add.w	r0, r4, #8
 8003c60:	f7ff fe8e 	bl	8003980 <HAL_I2C::Setup()>
 8003c64:	4639      	mov	r1, r7
 8003c66:	4808      	ldr	r0, [pc, #32]	; (8003c88 <Ssd1306::Cls()+0x78>)
 8003c68:	f000 ffc4 	bl	8004bf4 <gd32_i2c_write(char const*, unsigned int)>
 8003c6c:	e7f4      	b.n	8003c58 <Ssd1306::Cls()+0x48>
 8003c6e:	f7ff feed 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003c72:	4641      	mov	r1, r8
 8003c74:	4620      	mov	r0, r4
 8003c76:	f7ff fee9 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003c7a:	4620      	mov	r0, r4
 8003c7c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003c80:	21b0      	movs	r1, #176	; 0xb0
 8003c82:	f7ff bee3 	b.w	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003c86:	bf00      	nop
 8003c88:	20001774 	andcs	r1, r0, r4, ror r7

08003c8c <Ssd1306::Start()>:
 8003c8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003c8e:	7a04      	ldrb	r4, [r0, #8]
 8003c90:	68c6      	ldr	r6, [r0, #12]
 8003c92:	4605      	mov	r5, r0
 8003c94:	4620      	mov	r0, r4
 8003c96:	f000 ffa7 	bl	8004be8 <gd32_i2c_set_address(unsigned char)>
 8003c9a:	4630      	mov	r0, r6
 8003c9c:	f000 ff9c 	bl	8004bd8 <gd32_i2c_set_baudrate(unsigned int)>
 8003ca0:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8003ca4:	2b07      	cmp	r3, #7
 8003ca6:	d902      	bls.n	8003cae <Ssd1306::Start()+0x22>
 8003ca8:	3c50      	subs	r4, #80	; 0x50
 8003caa:	2c0f      	cmp	r4, #15
 8003cac:	d80f      	bhi.n	8003cce <Ssd1306::Start()+0x42>
 8003cae:	2101      	movs	r1, #1
 8003cb0:	f10d 0007 	add.w	r0, sp, #7
 8003cb4:	f001 f804 	bl	8004cc0 <gd32_i2c_read(char*, unsigned int)>
 8003cb8:	fab0 f480 	clz	r4, r0
 8003cbc:	0964      	lsrs	r4, r4, #5
 8003cbe:	b35c      	cbz	r4, 8003d18 <Ssd1306::Start()+0x8c>
 8003cc0:	7c2e      	ldrb	r6, [r5, #16]
 8003cc2:	b14e      	cbz	r6, 8003cd8 <Ssd1306::Start()+0x4c>
 8003cc4:	3e01      	subs	r6, #1
 8003cc6:	2e01      	cmp	r6, #1
 8003cc8:	d929      	bls.n	8003d1e <Ssd1306::Start()+0x92>
 8003cca:	2400      	movs	r4, #0
 8003ccc:	e024      	b.n	8003d18 <Ssd1306::Start()+0x8c>
 8003cce:	2100      	movs	r1, #0
 8003cd0:	4608      	mov	r0, r1
 8003cd2:	f000 ff8f 	bl	8004bf4 <gd32_i2c_write(char const*, unsigned int)>
 8003cd6:	e7ef      	b.n	8003cb8 <Ssd1306::Start()+0x2c>
 8003cd8:	4f16      	ldr	r7, [pc, #88]	; (8003d34 <Ssd1306::Start()+0xa8>)
 8003cda:	4628      	mov	r0, r5
 8003cdc:	f817 1b01 	ldrb.w	r1, [r7], #1
 8003ce0:	3601      	adds	r6, #1
 8003ce2:	f7ff feb3 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003ce6:	2e18      	cmp	r6, #24
 8003ce8:	d1f7      	bne.n	8003cda <Ssd1306::Start()+0x4e>
 8003cea:	2300      	movs	r3, #0
 8003cec:	4a12      	ldr	r2, [pc, #72]	; (8003d38 <Ssd1306::Start()+0xac>)
 8003cee:	4618      	mov	r0, r3
 8003cf0:	4611      	mov	r1, r2
 8003cf2:	3301      	adds	r3, #1
 8003cf4:	2b86      	cmp	r3, #134	; 0x86
 8003cf6:	f802 0b01 	strb.w	r0, [r2], #1
 8003cfa:	d1fa      	bne.n	8003cf2 <Ssd1306::Start()+0x66>
 8003cfc:	2340      	movs	r3, #64	; 0x40
 8003cfe:	4628      	mov	r0, r5
 8003d00:	700b      	strb	r3, [r1, #0]
 8003d02:	f7ff ff2f 	bl	8003b64 <Ssd1306::CheckSH1106()>
 8003d06:	4628      	mov	r0, r5
 8003d08:	f7ff ff82 	bl	8003c10 <Ssd1306::Cls()>
 8003d0c:	21af      	movs	r1, #175	; 0xaf
 8003d0e:	4628      	mov	r0, r5
 8003d10:	f7ff fe9c 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003d14:	2301      	movs	r3, #1
 8003d16:	71eb      	strb	r3, [r5, #7]
 8003d18:	4620      	mov	r0, r4
 8003d1a:	b003      	add	sp, #12
 8003d1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003d1e:	2600      	movs	r6, #0
 8003d20:	4f06      	ldr	r7, [pc, #24]	; (8003d3c <Ssd1306::Start()+0xb0>)
 8003d22:	4628      	mov	r0, r5
 8003d24:	f817 1b01 	ldrb.w	r1, [r7], #1
 8003d28:	3601      	adds	r6, #1
 8003d2a:	f7ff fe8f 	bl	8003a4c <Ssd1306::SendCommand(unsigned char)>
 8003d2e:	2e18      	cmp	r6, #24
 8003d30:	d1f7      	bne.n	8003d22 <Ssd1306::Start()+0x96>
 8003d32:	e7da      	b.n	8003cea <Ssd1306::Start()+0x5e>
 8003d34:	08005ad8 	stmdaeq	r0, {r3, r4, r6, r7, r9, fp, ip, lr}
 8003d38:	20001774 	andcs	r1, r0, r4, ror r7
 8003d3c:	08005ac0 	stmdaeq	r0, {r6, r7, r9, fp, ip, lr}

08003d40 <console_putc>:
 8003d40:	f000 b9be 	b.w	80040c0 <uart0_putc>

08003d44 <console_puts>:
 8003d44:	f000 b9dc 	b.w	8004100 <uart0_puts>

08003d48 <LedBlink::LedBlink()>:
 8003d48:	b538      	push	{r3, r4, r5, lr}
 8003d4a:	2205      	movs	r2, #5
 8003d4c:	2300      	movs	r3, #0
 8003d4e:	e9c0 3200 	strd	r3, r2, [r0]
 8003d52:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8003d56:	6083      	str	r3, [r0, #8]
 8003d58:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8003d5c:	6143      	str	r3, [r0, #20]
 8003d5e:	4b09      	ldr	r3, [pc, #36]	; (8003d84 <LedBlink::LedBlink()+0x3c>)
 8003d60:	4d09      	ldr	r5, [pc, #36]	; (8003d88 <LedBlink::LedBlink()+0x40>)
 8003d62:	4604      	mov	r4, r0
 8003d64:	6018      	str	r0, [r3, #0]
 8003d66:	f240 6004 	movw	r0, #1540	; 0x604
 8003d6a:	f000 fc2d 	bl	80045c8 <rcu_periph_clock_enable>
 8003d6e:	4628      	mov	r0, r5
 8003d70:	2301      	movs	r3, #1
 8003d72:	2203      	movs	r2, #3
 8003d74:	2110      	movs	r1, #16
 8003d76:	f000 fb95 	bl	80044a4 <gpio_init>
 8003d7a:	2301      	movs	r3, #1
 8003d7c:	4620      	mov	r0, r4
 8003d7e:	616b      	str	r3, [r5, #20]
 8003d80:	bd38      	pop	{r3, r4, r5, pc}
 8003d82:	bf00      	nop
 8003d84:	20001800 	andcs	r1, r0, r0, lsl #16
 8003d88:	40011000 	andmi	r1, r1, r0

08003d8c <Hardware::Hardware()>:
 8003d8c:	b570      	push	{r4, r5, r6, lr}
 8003d8e:	2400      	movs	r4, #0
 8003d90:	4b26      	ldr	r3, [pc, #152]	; (8003e2c <Hardware::Hardware()+0xa0>)
 8003d92:	b090      	sub	sp, #64	; 0x40
 8003d94:	6004      	str	r4, [r0, #0]
 8003d96:	7104      	strb	r4, [r0, #4]
 8003d98:	4e25      	ldr	r6, [pc, #148]	; (8003e30 <Hardware::Hardware()+0xa4>)
 8003d9a:	6018      	str	r0, [r3, #0]
 8003d9c:	4605      	mov	r5, r0
 8003d9e:	f7fc f9c7 	bl	8000130 <console_init>
 8003da2:	f000 f9cf 	bl	8004144 <systick_config>
 8003da6:	f001 f8f9 	bl	8004f9c <udelay_init()>
 8003daa:	f001 f8f5 	bl	8004f98 <micros_init()>
 8003dae:	f240 7004 	movw	r0, #1796	; 0x704
 8003db2:	f000 fc09 	bl	80045c8 <rcu_periph_clock_enable>
 8003db6:	4630      	mov	r0, r6
 8003db8:	f000 fcbc 	bl	8004734 <timer_deinit>
 8003dbc:	236b      	movs	r3, #107	; 0x6b
 8003dbe:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003dc2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003dc6:	a903      	add	r1, sp, #12
 8003dc8:	4630      	mov	r0, r6
 8003dca:	9305      	str	r3, [sp, #20]
 8003dcc:	f000 fd14 	bl	80047f8 <timer_init>
 8003dd0:	4630      	mov	r0, r6
 8003dd2:	f000 fd69 	bl	80048a8 <timer_enable>
 8003dd6:	f000 fe77 	bl	8004ac8 <gd32_adc_init()>
 8003dda:	2219      	movs	r2, #25
 8003ddc:	2301      	movs	r3, #1
 8003dde:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8003de2:	237a      	movs	r3, #122	; 0x7a
 8003de4:	a807      	add	r0, sp, #28
 8003de6:	930c      	str	r3, [sp, #48]	; 0x30
 8003de8:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003dec:	9407      	str	r4, [sp, #28]
 8003dee:	940f      	str	r4, [sp, #60]	; 0x3c
 8003df0:	f000 f8f2 	bl	8003fd8 <mktime>
 8003df4:	4621      	mov	r1, r4
 8003df6:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8003dfa:	a801      	add	r0, sp, #4
 8003dfc:	f000 f938 	bl	8004070 <settimeofday>
 8003e00:	f240 701b 	movw	r0, #1819	; 0x71b
 8003e04:	f000 fbe0 	bl	80045c8 <rcu_periph_clock_enable>
 8003e08:	f240 701c 	movw	r0, #1820	; 0x71c
 8003e0c:	f000 fbdc 	bl	80045c8 <rcu_periph_clock_enable>
 8003e10:	f000 fbd2 	bl	80045b8 <pmu_backup_write_enable>
 8003e14:	f000 fa24 	bl	8004260 <bkp_deinit>
 8003e18:	4621      	mov	r1, r4
 8003e1a:	2002      	movs	r0, #2
 8003e1c:	f000 fa28 	bl	8004270 <bkp_data_write>
 8003e20:	f000 feac 	bl	8004b7c <gd32_i2c_begin()>
 8003e24:	4628      	mov	r0, r5
 8003e26:	b010      	add	sp, #64	; 0x40
 8003e28:	bd70      	pop	{r4, r5, r6, pc}
 8003e2a:	bf00      	nop
 8003e2c:	20001804 	andcs	r1, r0, r4, lsl #16
 8003e30:	40001000 	andmi	r1, r0, r0

08003e34 <operator delete(void*)>:
 8003e34:	f000 b84c 	b.w	8003ed0 <free>

08003e38 <operator new(unsigned int)>:
 8003e38:	f000 b800 	b.w	8003e3c <malloc>

08003e3c <malloc>:
 8003e3c:	b538      	push	{r3, r4, r5, lr}
 8003e3e:	4604      	mov	r4, r0
 8003e40:	4601      	mov	r1, r0
 8003e42:	481c      	ldr	r0, [pc, #112]	; (8003eb4 <malloc+0x78>)
 8003e44:	f7fd fc12 	bl	800166c <printf>
 8003e48:	b17c      	cbz	r4, 8003e6a <malloc+0x2e>
 8003e4a:	4b1b      	ldr	r3, [pc, #108]	; (8003eb8 <malloc+0x7c>)
 8003e4c:	6818      	ldr	r0, [r3, #0]
 8003e4e:	b978      	cbnz	r0, 8003e70 <malloc+0x34>
 8003e50:	4a1a      	ldr	r2, [pc, #104]	; (8003ebc <malloc+0x80>)
 8003e52:	f104 031b 	add.w	r3, r4, #27
 8003e56:	6811      	ldr	r1, [r2, #0]
 8003e58:	4819      	ldr	r0, [pc, #100]	; (8003ec0 <malloc+0x84>)
 8003e5a:	f023 030f 	bic.w	r3, r3, #15
 8003e5e:	440b      	add	r3, r1
 8003e60:	4283      	cmp	r3, r0
 8003e62:	d921      	bls.n	8003ea8 <malloc+0x6c>
 8003e64:	4817      	ldr	r0, [pc, #92]	; (8003ec4 <malloc+0x88>)
 8003e66:	f7fd fc01 	bl	800166c <printf>
 8003e6a:	2500      	movs	r5, #0
 8003e6c:	4628      	mov	r0, r5
 8003e6e:	bd38      	pop	{r3, r4, r5, pc}
 8003e70:	4284      	cmp	r4, r0
 8003e72:	d80a      	bhi.n	8003e8a <malloc+0x4e>
 8003e74:	685a      	ldr	r2, [r3, #4]
 8003e76:	6899      	ldr	r1, [r3, #8]
 8003e78:	3201      	adds	r2, #1
 8003e7a:	428a      	cmp	r2, r1
 8003e7c:	605a      	str	r2, [r3, #4]
 8003e7e:	d900      	bls.n	8003e82 <malloc+0x46>
 8003e80:	609a      	str	r2, [r3, #8]
 8003e82:	68d9      	ldr	r1, [r3, #12]
 8003e84:	b919      	cbnz	r1, 8003e8e <malloc+0x52>
 8003e86:	4604      	mov	r4, r0
 8003e88:	e7e2      	b.n	8003e50 <malloc+0x14>
 8003e8a:	3310      	adds	r3, #16
 8003e8c:	e7de      	b.n	8003e4c <malloc+0x10>
 8003e8e:	4604      	mov	r4, r0
 8003e90:	688a      	ldr	r2, [r1, #8]
 8003e92:	60da      	str	r2, [r3, #12]
 8003e94:	2300      	movs	r3, #0
 8003e96:	f101 050c 	add.w	r5, r1, #12
 8003e9a:	608b      	str	r3, [r1, #8]
 8003e9c:	4622      	mov	r2, r4
 8003e9e:	462b      	mov	r3, r5
 8003ea0:	4809      	ldr	r0, [pc, #36]	; (8003ec8 <malloc+0x8c>)
 8003ea2:	f7fd fbe3 	bl	800166c <printf>
 8003ea6:	e7e1      	b.n	8003e6c <malloc+0x30>
 8003ea8:	6013      	str	r3, [r2, #0]
 8003eaa:	4b08      	ldr	r3, [pc, #32]	; (8003ecc <malloc+0x90>)
 8003eac:	e9c1 3400 	strd	r3, r4, [r1]
 8003eb0:	e7f0      	b.n	8003e94 <malloc+0x58>
 8003eb2:	bf00      	nop
 8003eb4:	08005b3c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, fp, ip, lr}
 8003eb8:	20000018 	andcs	r0, r0, r8, lsl r0
 8003ebc:	20000014 	andcs	r0, r0, r4, lsl r0
 8003ec0:	2000b000 	andcs	fp, r0, r0
 8003ec4:	08005b48 	stmdaeq	r0, {r3, r6, r8, r9, fp, ip, lr}
 8003ec8:	08005b64 	stmdaeq	r0, {r2, r5, r6, r8, r9, fp, ip, lr}
 8003ecc:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08003ed0 <free>:
 8003ed0:	b538      	push	{r3, r4, r5, lr}
 8003ed2:	4604      	mov	r4, r0
 8003ed4:	b1c8      	cbz	r0, 8003f0a <free+0x3a>
 8003ed6:	f1a0 050c 	sub.w	r5, r0, #12
 8003eda:	4602      	mov	r2, r0
 8003edc:	4629      	mov	r1, r5
 8003ede:	480c      	ldr	r0, [pc, #48]	; (8003f10 <free+0x40>)
 8003ee0:	f7fd fbc4 	bl	800166c <printf>
 8003ee4:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8003ee8:	4b0a      	ldr	r3, [pc, #40]	; (8003f14 <free+0x44>)
 8003eea:	429a      	cmp	r2, r3
 8003eec:	d10d      	bne.n	8003f0a <free+0x3a>
 8003eee:	4b0a      	ldr	r3, [pc, #40]	; (8003f18 <free+0x48>)
 8003ef0:	681a      	ldr	r2, [r3, #0]
 8003ef2:	b152      	cbz	r2, 8003f0a <free+0x3a>
 8003ef4:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8003ef8:	4291      	cmp	r1, r2
 8003efa:	d107      	bne.n	8003f0c <free+0x3c>
 8003efc:	68da      	ldr	r2, [r3, #12]
 8003efe:	f844 2c04 	str.w	r2, [r4, #-4]
 8003f02:	685a      	ldr	r2, [r3, #4]
 8003f04:	60dd      	str	r5, [r3, #12]
 8003f06:	3a01      	subs	r2, #1
 8003f08:	605a      	str	r2, [r3, #4]
 8003f0a:	bd38      	pop	{r3, r4, r5, pc}
 8003f0c:	3310      	adds	r3, #16
 8003f0e:	e7ef      	b.n	8003ef0 <free+0x20>
 8003f10:	08005b8f 	stmdaeq	r0, {r0, r1, r2, r3, r7, r8, r9, fp, ip, lr}
 8003f14:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8003f18:	20000018 	andcs	r0, r0, r8, lsl r0

08003f1c <memcpy>:
 8003f1c:	b510      	push	{r4, lr}
 8003f1e:	1e43      	subs	r3, r0, #1
 8003f20:	440a      	add	r2, r1
 8003f22:	4291      	cmp	r1, r2
 8003f24:	d100      	bne.n	8003f28 <memcpy+0xc>
 8003f26:	bd10      	pop	{r4, pc}
 8003f28:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003f2c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003f30:	e7f7      	b.n	8003f22 <memcpy+0x6>

08003f32 <memset>:
 8003f32:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003f34:	b1e2      	cbz	r2, 8003f70 <memset+0x3e>
 8003f36:	4603      	mov	r3, r0
 8003f38:	b2c9      	uxtb	r1, r1
 8003f3a:	075c      	lsls	r4, r3, #29
 8003f3c:	d114      	bne.n	8003f68 <memset+0x36>
 8003f3e:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8003f42:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 8003f46:	463d      	mov	r5, r7
 8003f48:	f022 0407 	bic.w	r4, r2, #7
 8003f4c:	08d6      	lsrs	r6, r2, #3
 8003f4e:	441c      	add	r4, r3
 8003f50:	42a3      	cmp	r3, r4
 8003f52:	d10e      	bne.n	8003f72 <memset+0x40>
 8003f54:	f06f 0307 	mvn.w	r3, #7
 8003f58:	fb03 2206 	mla	r2, r3, r6, r2
 8003f5c:	4422      	add	r2, r4
 8003f5e:	4294      	cmp	r4, r2
 8003f60:	d006      	beq.n	8003f70 <memset+0x3e>
 8003f62:	f804 1b01 	strb.w	r1, [r4], #1
 8003f66:	e7fa      	b.n	8003f5e <memset+0x2c>
 8003f68:	3a01      	subs	r2, #1
 8003f6a:	f803 1b01 	strb.w	r1, [r3], #1
 8003f6e:	d1e4      	bne.n	8003f3a <memset+0x8>
 8003f70:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003f72:	f843 7b08 	str.w	r7, [r3], #8
 8003f76:	f843 5c04 	str.w	r5, [r3, #-4]
 8003f7a:	e7e9      	b.n	8003f50 <memset+0x1e>

08003f7c <puts>:
 8003f7c:	b508      	push	{r3, lr}
 8003f7e:	f7ff fee1 	bl	8003d44 <console_puts>
 8003f82:	200a      	movs	r0, #10
 8003f84:	f7ff fedc 	bl	8003d40 <console_putc>
 8003f88:	2001      	movs	r0, #1
 8003f8a:	bd08      	pop	{r3, pc}

08003f8c <isleapyear>:
 8003f8c:	2264      	movs	r2, #100	; 0x64
 8003f8e:	fb90 f3f2 	sdiv	r3, r0, r2
 8003f92:	fb02 0313 	mls	r3, r2, r3, r0
 8003f96:	b94b      	cbnz	r3, 8003fac <isleapyear+0x20>
 8003f98:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8003f9c:	fb90 f2f3 	sdiv	r2, r0, r3
 8003fa0:	fb03 0012 	mls	r0, r3, r2, r0
 8003fa4:	fab0 f080 	clz	r0, r0
 8003fa8:	0940      	lsrs	r0, r0, #5
 8003faa:	4770      	bx	lr
 8003fac:	f010 0f03 	tst.w	r0, #3
 8003fb0:	bf0c      	ite	eq
 8003fb2:	2001      	moveq	r0, #1
 8003fb4:	2000      	movne	r0, #0
 8003fb6:	4770      	bx	lr

08003fb8 <getdaysofmonth>:
 8003fb8:	b510      	push	{r4, lr}
 8003fba:	4604      	mov	r4, r0
 8003fbc:	2c01      	cmp	r4, #1
 8003fbe:	4608      	mov	r0, r1
 8003fc0:	d102      	bne.n	8003fc8 <getdaysofmonth+0x10>
 8003fc2:	f7ff ffe3 	bl	8003f8c <isleapyear>
 8003fc6:	b918      	cbnz	r0, 8003fd0 <getdaysofmonth+0x18>
 8003fc8:	4b02      	ldr	r3, [pc, #8]	; (8003fd4 <getdaysofmonth+0x1c>)
 8003fca:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8003fce:	bd10      	pop	{r4, pc}
 8003fd0:	201d      	movs	r0, #29
 8003fd2:	e7fc      	b.n	8003fce <getdaysofmonth+0x16>
 8003fd4:	08005bb8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, fp, ip, lr}

08003fd8 <mktime>:
 8003fd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003fdc:	4604      	mov	r4, r0
 8003fde:	2800      	cmp	r0, #0
 8003fe0:	d042      	beq.n	8004068 <mktime+0x90>
 8003fe2:	6941      	ldr	r1, [r0, #20]
 8003fe4:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8003fe8:	2b45      	cmp	r3, #69	; 0x45
 8003fea:	d83d      	bhi.n	8004068 <mktime+0x90>
 8003fec:	2600      	movs	r6, #0
 8003fee:	f240 75b2 	movw	r5, #1970	; 0x7b2
 8003ff2:	f240 186d 	movw	r8, #365	; 0x16d
 8003ff6:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 8003ffa:	42af      	cmp	r7, r5
 8003ffc:	da23      	bge.n	8004046 <mktime+0x6e>
 8003ffe:	6927      	ldr	r7, [r4, #16]
 8004000:	2f0b      	cmp	r7, #11
 8004002:	d831      	bhi.n	8004068 <mktime+0x90>
 8004004:	2500      	movs	r5, #0
 8004006:	42af      	cmp	r7, r5
 8004008:	d128      	bne.n	800405c <mktime+0x84>
 800400a:	68e5      	ldr	r5, [r4, #12]
 800400c:	2d00      	cmp	r5, #0
 800400e:	dd2b      	ble.n	8004068 <mktime+0x90>
 8004010:	4638      	mov	r0, r7
 8004012:	f7ff ffd1 	bl	8003fb8 <getdaysofmonth>
 8004016:	4285      	cmp	r5, r0
 8004018:	dc26      	bgt.n	8004068 <mktime+0x90>
 800401a:	2318      	movs	r3, #24
 800401c:	3d01      	subs	r5, #1
 800401e:	4435      	add	r5, r6
 8004020:	435d      	muls	r5, r3
 8004022:	68a3      	ldr	r3, [r4, #8]
 8004024:	2b17      	cmp	r3, #23
 8004026:	d81f      	bhi.n	8004068 <mktime+0x90>
 8004028:	203c      	movs	r0, #60	; 0x3c
 800402a:	442b      	add	r3, r5
 800402c:	fb00 f503 	mul.w	r5, r0, r3
 8004030:	6863      	ldr	r3, [r4, #4]
 8004032:	2b3b      	cmp	r3, #59	; 0x3b
 8004034:	d818      	bhi.n	8004068 <mktime+0x90>
 8004036:	442b      	add	r3, r5
 8004038:	4343      	muls	r3, r0
 800403a:	6820      	ldr	r0, [r4, #0]
 800403c:	283b      	cmp	r0, #59	; 0x3b
 800403e:	d813      	bhi.n	8004068 <mktime+0x90>
 8004040:	4418      	add	r0, r3
 8004042:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004046:	4628      	mov	r0, r5
 8004048:	f7ff ffa0 	bl	8003f8c <isleapyear>
 800404c:	2800      	cmp	r0, #0
 800404e:	bf14      	ite	ne
 8004050:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8004054:	4643      	moveq	r3, r8
 8004056:	3501      	adds	r5, #1
 8004058:	441e      	add	r6, r3
 800405a:	e7ce      	b.n	8003ffa <mktime+0x22>
 800405c:	4628      	mov	r0, r5
 800405e:	f7ff ffab 	bl	8003fb8 <getdaysofmonth>
 8004062:	3501      	adds	r5, #1
 8004064:	4406      	add	r6, r0
 8004066:	e7ce      	b.n	8004006 <mktime+0x2e>
 8004068:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800406c:	e7e9      	b.n	8004042 <mktime+0x6a>
	...

08004070 <settimeofday>:
 8004070:	4b07      	ldr	r3, [pc, #28]	; (8004090 <settimeofday+0x20>)
 8004072:	b510      	push	{r4, lr}
 8004074:	681a      	ldr	r2, [r3, #0]
 8004076:	4b07      	ldr	r3, [pc, #28]	; (8004094 <settimeofday+0x24>)
 8004078:	6804      	ldr	r4, [r0, #0]
 800407a:	601a      	str	r2, [r3, #0]
 800407c:	6843      	ldr	r3, [r0, #4]
 800407e:	4806      	ldr	r0, [pc, #24]	; (8004098 <settimeofday+0x28>)
 8004080:	17da      	asrs	r2, r3, #31
 8004082:	fbc4 3200 	smlal	r3, r2, r4, r0
 8004086:	4905      	ldr	r1, [pc, #20]	; (800409c <settimeofday+0x2c>)
 8004088:	2000      	movs	r0, #0
 800408a:	e9c1 3200 	strd	r3, r2, [r1]
 800408e:	bd10      	pop	{r4, pc}
 8004090:	20001814 	andcs	r1, r0, r4, lsl r8
 8004094:	20001810 	andcs	r1, r0, r0, lsl r8
 8004098:	000f4240 	andeq	r4, pc, r0, asr #4
 800409c:	20001808 	andcs	r1, r0, r8, lsl #16

080040a0 <uart0_init>:
 80040a0:	2301      	movs	r3, #1
 80040a2:	b507      	push	{r0, r1, r2, lr}
 80040a4:	2208      	movs	r2, #8
 80040a6:	9300      	str	r3, [sp, #0]
 80040a8:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80040ac:	2300      	movs	r3, #0
 80040ae:	4803      	ldr	r0, [pc, #12]	; (80040bc <uart0_init+0x1c>)
 80040b0:	f000 fea6 	bl	8004e00 <gd32_uart_begin>
 80040b4:	b003      	add	sp, #12
 80040b6:	f85d fb04 	ldr.w	pc, [sp], #4
 80040ba:	bf00      	nop
 80040bc:	40013800 	andmi	r3, r1, r0, lsl #16

080040c0 <uart0_putc>:
 80040c0:	280a      	cmp	r0, #10
 80040c2:	b538      	push	{r3, r4, r5, lr}
 80040c4:	4604      	mov	r4, r0
 80040c6:	d10a      	bne.n	80040de <uart0_putc+0x1e>
 80040c8:	4d0b      	ldr	r5, [pc, #44]	; (80040f8 <uart0_putc+0x38>)
 80040ca:	2107      	movs	r1, #7
 80040cc:	4628      	mov	r0, r5
 80040ce:	f000 fccd 	bl	8004a6c <usart_flag_get>
 80040d2:	2800      	cmp	r0, #0
 80040d4:	d0f9      	beq.n	80040ca <uart0_putc+0xa>
 80040d6:	220d      	movs	r2, #13
 80040d8:	4b08      	ldr	r3, [pc, #32]	; (80040fc <uart0_putc+0x3c>)
 80040da:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 80040de:	4d06      	ldr	r5, [pc, #24]	; (80040f8 <uart0_putc+0x38>)
 80040e0:	2107      	movs	r1, #7
 80040e2:	4628      	mov	r0, r5
 80040e4:	f000 fcc2 	bl	8004a6c <usart_flag_get>
 80040e8:	2800      	cmp	r0, #0
 80040ea:	d0f9      	beq.n	80040e0 <uart0_putc+0x20>
 80040ec:	4b03      	ldr	r3, [pc, #12]	; (80040fc <uart0_putc+0x3c>)
 80040ee:	b2e4      	uxtb	r4, r4
 80040f0:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 80040f4:	bd38      	pop	{r3, r4, r5, pc}
 80040f6:	bf00      	nop
 80040f8:	40013800 	andmi	r3, r1, r0, lsl #16
 80040fc:	40013000 	andmi	r3, r1, r0

08004100 <uart0_puts>:
 8004100:	b510      	push	{r4, lr}
 8004102:	1e44      	subs	r4, r0, #1
 8004104:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8004108:	b903      	cbnz	r3, 800410c <uart0_puts+0xc>
 800410a:	bd10      	pop	{r4, pc}
 800410c:	2b0a      	cmp	r3, #10
 800410e:	d102      	bne.n	8004116 <uart0_puts+0x16>
 8004110:	200d      	movs	r0, #13
 8004112:	f7ff ffd5 	bl	80040c0 <uart0_putc>
 8004116:	7820      	ldrb	r0, [r4, #0]
 8004118:	f7ff ffd2 	bl	80040c0 <uart0_putc>
 800411c:	e7f2      	b.n	8004104 <uart0_puts+0x4>
	...

08004120 <mac_address_get>:
 8004120:	2102      	movs	r1, #2
 8004122:	4a07      	ldr	r2, [pc, #28]	; (8004140 <mac_address_get+0x20>)
 8004124:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8004128:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 800412c:	7001      	strb	r1, [r0, #0]
 800412e:	7042      	strb	r2, [r0, #1]
 8004130:	0e1a      	lsrs	r2, r3, #24
 8004132:	7082      	strb	r2, [r0, #2]
 8004134:	0c1a      	lsrs	r2, r3, #16
 8004136:	70c2      	strb	r2, [r0, #3]
 8004138:	0a1a      	lsrs	r2, r3, #8
 800413a:	7102      	strb	r2, [r0, #4]
 800413c:	7143      	strb	r3, [r0, #5]
 800413e:	4770      	bx	lr
 8004140:	1ffff000 	svcne	0x00fff000

08004144 <systick_config>:
 8004144:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004148:	4b0b      	ldr	r3, [pc, #44]	; (8004178 <systick_config+0x34>)
 800414a:	681b      	ldr	r3, [r3, #0]
 800414c:	fbb3 f3f2 	udiv	r3, r3, r2
 8004150:	3b01      	subs	r3, #1
 8004152:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004156:	d20d      	bcs.n	8004174 <systick_config+0x30>
 8004158:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800415c:	21f0      	movs	r1, #240	; 0xf0
 800415e:	6153      	str	r3, [r2, #20]
 8004160:	4b06      	ldr	r3, [pc, #24]	; (800417c <systick_config+0x38>)
 8004162:	2007      	movs	r0, #7
 8004164:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8004168:	2100      	movs	r1, #0
 800416a:	6191      	str	r1, [r2, #24]
 800416c:	6110      	str	r0, [r2, #16]
 800416e:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8004172:	4770      	bx	lr
 8004174:	e7fe      	b.n	8004174 <systick_config+0x30>
 8004176:	bf00      	nop
 8004178:	200000e8 	andcs	r0, r0, r8, ror #1
 800417c:	e000ed00 	and	lr, r0, r0, lsl #26

08004180 <SysTick_Handler>:
 8004180:	4a02      	ldr	r2, [pc, #8]	; (800418c <SysTick_Handler+0xc>)
 8004182:	6813      	ldr	r3, [r2, #0]
 8004184:	3301      	adds	r3, #1
 8004186:	6013      	str	r3, [r2, #0]
 8004188:	4770      	bx	lr
 800418a:	bf00      	nop
 800418c:	20001814 	andcs	r1, r0, r4, lsl r8

08004190 <SystemInit>:
 8004190:	4b30      	ldr	r3, [pc, #192]	; (8004254 <SystemInit+0xc4>)
 8004192:	4931      	ldr	r1, [pc, #196]	; (8004258 <SystemInit+0xc8>)
 8004194:	681a      	ldr	r2, [r3, #0]
 8004196:	f042 0201 	orr.w	r2, r2, #1
 800419a:	601a      	str	r2, [r3, #0]
 800419c:	685a      	ldr	r2, [r3, #4]
 800419e:	f022 0203 	bic.w	r2, r2, #3
 80041a2:	605a      	str	r2, [r3, #4]
 80041a4:	681a      	ldr	r2, [r3, #0]
 80041a6:	400a      	ands	r2, r1
 80041a8:	601a      	str	r2, [r3, #0]
 80041aa:	6858      	ldr	r0, [r3, #4]
 80041ac:	4a2b      	ldr	r2, [pc, #172]	; (800425c <SystemInit+0xcc>)
 80041ae:	4002      	ands	r2, r0
 80041b0:	605a      	str	r2, [r3, #4]
 80041b2:	681a      	ldr	r2, [r3, #0]
 80041b4:	400a      	ands	r2, r1
 80041b6:	601a      	str	r2, [r3, #0]
 80041b8:	681a      	ldr	r2, [r3, #0]
 80041ba:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80041be:	601a      	str	r2, [r3, #0]
 80041c0:	685a      	ldr	r2, [r3, #4]
 80041c2:	f022 620f 	bic.w	r2, r2, #149946368	; 0x8f00000
 80041c6:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 80041ca:	605a      	str	r2, [r3, #4]
 80041cc:	681a      	ldr	r2, [r3, #0]
 80041ce:	400a      	ands	r2, r1
 80041d0:	601a      	str	r2, [r3, #0]
 80041d2:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 80041d6:	609a      	str	r2, [r3, #8]
 80041d8:	681a      	ldr	r2, [r3, #0]
 80041da:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80041de:	601a      	str	r2, [r3, #0]
 80041e0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80041e4:	6819      	ldr	r1, [r3, #0]
 80041e6:	0389      	lsls	r1, r1, #14
 80041e8:	d401      	bmi.n	80041ee <SystemInit+0x5e>
 80041ea:	3a01      	subs	r2, #1
 80041ec:	d1fa      	bne.n	80041e4 <SystemInit+0x54>
 80041ee:	681a      	ldr	r2, [r3, #0]
 80041f0:	0390      	lsls	r0, r2, #14
 80041f2:	d400      	bmi.n	80041f6 <SystemInit+0x66>
 80041f4:	e7fe      	b.n	80041f4 <SystemInit+0x64>
 80041f6:	685a      	ldr	r2, [r3, #4]
 80041f8:	605a      	str	r2, [r3, #4]
 80041fa:	685a      	ldr	r2, [r3, #4]
 80041fc:	605a      	str	r2, [r3, #4]
 80041fe:	685a      	ldr	r2, [r3, #4]
 8004200:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004204:	605a      	str	r2, [r3, #4]
 8004206:	685a      	ldr	r2, [r3, #4]
 8004208:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 800420c:	605a      	str	r2, [r3, #4]
 800420e:	685a      	ldr	r2, [r3, #4]
 8004210:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8004214:	605a      	str	r2, [r3, #4]
 8004216:	685a      	ldr	r2, [r3, #4]
 8004218:	f022 6203 	bic.w	r2, r2, #137363456	; 0x8300000
 800421c:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8004220:	605a      	str	r2, [r3, #4]
 8004222:	685a      	ldr	r2, [r3, #4]
 8004224:	f042 6202 	orr.w	r2, r2, #136314880	; 0x8200000
 8004228:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 800422c:	605a      	str	r2, [r3, #4]
 800422e:	681a      	ldr	r2, [r3, #0]
 8004230:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8004234:	601a      	str	r2, [r3, #0]
 8004236:	681a      	ldr	r2, [r3, #0]
 8004238:	0191      	lsls	r1, r2, #6
 800423a:	d5fc      	bpl.n	8004236 <SystemInit+0xa6>
 800423c:	685a      	ldr	r2, [r3, #4]
 800423e:	f022 0203 	bic.w	r2, r2, #3
 8004242:	605a      	str	r2, [r3, #4]
 8004244:	685a      	ldr	r2, [r3, #4]
 8004246:	f042 0202 	orr.w	r2, r2, #2
 800424a:	605a      	str	r2, [r3, #4]
 800424c:	685a      	ldr	r2, [r3, #4]
 800424e:	0712      	lsls	r2, r2, #28
 8004250:	d5fc      	bpl.n	800424c <SystemInit+0xbc>
 8004252:	4770      	bx	lr
 8004254:	40021000 	andmi	r1, r2, r0
 8004258:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 800425c:	e8ff000c 	ldm	pc!, {r2, r3}^	; <UNPREDICTABLE>

08004260 <bkp_deinit>:
 8004260:	b508      	push	{r3, lr}
 8004262:	f000 f9d3 	bl	800460c <rcu_bkp_reset_enable>
 8004266:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800426a:	f000 b9d7 	b.w	800461c <rcu_bkp_reset_disable>
	...

08004270 <bkp_data_write>:
 8004270:	f1a0 030b 	sub.w	r3, r0, #11
 8004274:	2b1f      	cmp	r3, #31
 8004276:	d804      	bhi.n	8004282 <bkp_data_write+0x12>
 8004278:	4b07      	ldr	r3, [pc, #28]	; (8004298 <bkp_data_write+0x28>)
 800427a:	4403      	add	r3, r0
 800427c:	009b      	lsls	r3, r3, #2
 800427e:	8019      	strh	r1, [r3, #0]
 8004280:	4770      	bx	lr
 8004282:	1e43      	subs	r3, r0, #1
 8004284:	2b09      	cmp	r3, #9
 8004286:	bf9f      	itttt	ls
 8004288:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 800428c:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8004290:	0080      	lslls	r0, r0, #2
 8004292:	8001      	strhls	r1, [r0, #0]
 8004294:	4770      	bx	lr
 8004296:	bf00      	nop
 8004298:	10001b05 	andne	r1, r0, r5, lsl #22

0800429c <dma_deinit>:
 800429c:	4b0c      	ldr	r3, [pc, #48]	; (80042d0 <dma_deinit+0x34>)
 800429e:	4298      	cmp	r0, r3
 80042a0:	d102      	bne.n	80042a8 <dma_deinit+0xc>
 80042a2:	2904      	cmp	r1, #4
 80042a4:	d900      	bls.n	80042a8 <dma_deinit+0xc>
 80042a6:	e7fe      	b.n	80042a6 <dma_deinit+0xa>
 80042a8:	2314      	movs	r3, #20
 80042aa:	fb03 0301 	mla	r3, r3, r1, r0
 80042ae:	689a      	ldr	r2, [r3, #8]
 80042b0:	0089      	lsls	r1, r1, #2
 80042b2:	f022 0201 	bic.w	r2, r2, #1
 80042b6:	609a      	str	r2, [r3, #8]
 80042b8:	2200      	movs	r2, #0
 80042ba:	609a      	str	r2, [r3, #8]
 80042bc:	60da      	str	r2, [r3, #12]
 80042be:	611a      	str	r2, [r3, #16]
 80042c0:	615a      	str	r2, [r3, #20]
 80042c2:	230f      	movs	r3, #15
 80042c4:	6842      	ldr	r2, [r0, #4]
 80042c6:	fa03 f101 	lsl.w	r1, r3, r1
 80042ca:	4311      	orrs	r1, r2
 80042cc:	6041      	str	r1, [r0, #4]
 80042ce:	4770      	bx	lr
 80042d0:	40020400 	andmi	r0, r2, r0, lsl #8

080042d4 <dma_init>:
 80042d4:	4b1b      	ldr	r3, [pc, #108]	; (8004344 <dma_init+0x70>)
 80042d6:	b510      	push	{r4, lr}
 80042d8:	4298      	cmp	r0, r3
 80042da:	d102      	bne.n	80042e2 <dma_init+0xe>
 80042dc:	2904      	cmp	r1, #4
 80042de:	d900      	bls.n	80042e2 <dma_init+0xe>
 80042e0:	e7fe      	b.n	80042e0 <dma_init+0xc>
 80042e2:	2314      	movs	r3, #20
 80042e4:	fb03 0101 	mla	r1, r3, r1, r0
 80042e8:	6813      	ldr	r3, [r2, #0]
 80042ea:	610b      	str	r3, [r1, #16]
 80042ec:	6893      	ldr	r3, [r2, #8]
 80042ee:	614b      	str	r3, [r1, #20]
 80042f0:	8a13      	ldrh	r3, [r2, #16]
 80042f2:	60cb      	str	r3, [r1, #12]
 80042f4:	68d4      	ldr	r4, [r2, #12]
 80042f6:	6853      	ldr	r3, [r2, #4]
 80042f8:	6888      	ldr	r0, [r1, #8]
 80042fa:	4323      	orrs	r3, r4
 80042fc:	6954      	ldr	r4, [r2, #20]
 80042fe:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8004302:	4323      	orrs	r3, r4
 8004304:	4303      	orrs	r3, r0
 8004306:	608b      	str	r3, [r1, #8]
 8004308:	7e13      	ldrb	r3, [r2, #24]
 800430a:	2b01      	cmp	r3, #1
 800430c:	688b      	ldr	r3, [r1, #8]
 800430e:	bf0c      	ite	eq
 8004310:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8004314:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8004318:	608b      	str	r3, [r1, #8]
 800431a:	7e53      	ldrb	r3, [r2, #25]
 800431c:	2b01      	cmp	r3, #1
 800431e:	688b      	ldr	r3, [r1, #8]
 8004320:	bf0c      	ite	eq
 8004322:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8004326:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 800432a:	608b      	str	r3, [r1, #8]
 800432c:	7e93      	ldrb	r3, [r2, #26]
 800432e:	b923      	cbnz	r3, 800433a <dma_init+0x66>
 8004330:	688b      	ldr	r3, [r1, #8]
 8004332:	f023 0310 	bic.w	r3, r3, #16
 8004336:	608b      	str	r3, [r1, #8]
 8004338:	bd10      	pop	{r4, pc}
 800433a:	688b      	ldr	r3, [r1, #8]
 800433c:	f043 0310 	orr.w	r3, r3, #16
 8004340:	e7f9      	b.n	8004336 <dma_init+0x62>
 8004342:	bf00      	nop
 8004344:	40020400 	andmi	r0, r2, r0, lsl #8

08004348 <dma_circulation_disable>:
 8004348:	4b06      	ldr	r3, [pc, #24]	; (8004364 <dma_circulation_disable+0x1c>)
 800434a:	4298      	cmp	r0, r3
 800434c:	d102      	bne.n	8004354 <dma_circulation_disable+0xc>
 800434e:	2904      	cmp	r1, #4
 8004350:	d900      	bls.n	8004354 <dma_circulation_disable+0xc>
 8004352:	e7fe      	b.n	8004352 <dma_circulation_disable+0xa>
 8004354:	2314      	movs	r3, #20
 8004356:	4359      	muls	r1, r3
 8004358:	3008      	adds	r0, #8
 800435a:	580b      	ldr	r3, [r1, r0]
 800435c:	f023 0320 	bic.w	r3, r3, #32
 8004360:	500b      	str	r3, [r1, r0]
 8004362:	4770      	bx	lr
 8004364:	40020400 	andmi	r0, r2, r0, lsl #8

08004368 <dma_memory_to_memory_disable>:
 8004368:	4b06      	ldr	r3, [pc, #24]	; (8004384 <dma_memory_to_memory_disable+0x1c>)
 800436a:	4298      	cmp	r0, r3
 800436c:	d102      	bne.n	8004374 <dma_memory_to_memory_disable+0xc>
 800436e:	2904      	cmp	r1, #4
 8004370:	d900      	bls.n	8004374 <dma_memory_to_memory_disable+0xc>
 8004372:	e7fe      	b.n	8004372 <dma_memory_to_memory_disable+0xa>
 8004374:	2314      	movs	r3, #20
 8004376:	4359      	muls	r1, r3
 8004378:	3008      	adds	r0, #8
 800437a:	580b      	ldr	r3, [r1, r0]
 800437c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8004380:	500b      	str	r3, [r1, r0]
 8004382:	4770      	bx	lr
 8004384:	40020400 	andmi	r0, r2, r0, lsl #8

08004388 <fmc_bank0_unlock>:
 8004388:	4b04      	ldr	r3, [pc, #16]	; (800439c <fmc_bank0_unlock+0x14>)
 800438a:	691a      	ldr	r2, [r3, #16]
 800438c:	0612      	lsls	r2, r2, #24
 800438e:	bf41      	itttt	mi
 8004390:	4a03      	ldrmi	r2, [pc, #12]	; (80043a0 <fmc_bank0_unlock+0x18>)
 8004392:	605a      	strmi	r2, [r3, #4]
 8004394:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8004398:	605a      	strmi	r2, [r3, #4]
 800439a:	4770      	bx	lr
 800439c:	40022000 	andmi	r2, r2, r0
 80043a0:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080043a4 <fmc_bank1_unlock>:
 80043a4:	4b04      	ldr	r3, [pc, #16]	; (80043b8 <fmc_bank1_unlock+0x14>)
 80043a6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80043a8:	0612      	lsls	r2, r2, #24
 80043aa:	bf41      	itttt	mi
 80043ac:	4a03      	ldrmi	r2, [pc, #12]	; (80043bc <fmc_bank1_unlock+0x18>)
 80043ae:	645a      	strmi	r2, [r3, #68]	; 0x44
 80043b0:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80043b4:	645a      	strmi	r2, [r3, #68]	; 0x44
 80043b6:	4770      	bx	lr
 80043b8:	40022000 	andmi	r2, r2, r0
 80043bc:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080043c0 <fmc_bank0_lock>:
 80043c0:	4a02      	ldr	r2, [pc, #8]	; (80043cc <fmc_bank0_lock+0xc>)
 80043c2:	6913      	ldr	r3, [r2, #16]
 80043c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80043c8:	6113      	str	r3, [r2, #16]
 80043ca:	4770      	bx	lr
 80043cc:	40022000 	andmi	r2, r2, r0

080043d0 <fmc_bank1_lock>:
 80043d0:	4a02      	ldr	r2, [pc, #8]	; (80043dc <fmc_bank1_lock+0xc>)
 80043d2:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80043d4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80043d8:	6513      	str	r3, [r2, #80]	; 0x50
 80043da:	4770      	bx	lr
 80043dc:	40022000 	andmi	r2, r2, r0

080043e0 <fmc_bank0_state_get>:
 80043e0:	4b08      	ldr	r3, [pc, #32]	; (8004404 <fmc_bank0_state_get+0x24>)
 80043e2:	68da      	ldr	r2, [r3, #12]
 80043e4:	07d1      	lsls	r1, r2, #31
 80043e6:	d409      	bmi.n	80043fc <fmc_bank0_state_get+0x1c>
 80043e8:	68da      	ldr	r2, [r3, #12]
 80043ea:	06d2      	lsls	r2, r2, #27
 80043ec:	d408      	bmi.n	8004400 <fmc_bank0_state_get+0x20>
 80043ee:	68db      	ldr	r3, [r3, #12]
 80043f0:	f013 0f04 	tst.w	r3, #4
 80043f4:	bf0c      	ite	eq
 80043f6:	2000      	moveq	r0, #0
 80043f8:	2002      	movne	r0, #2
 80043fa:	4770      	bx	lr
 80043fc:	2001      	movs	r0, #1
 80043fe:	4770      	bx	lr
 8004400:	2003      	movs	r0, #3
 8004402:	4770      	bx	lr
 8004404:	40022000 	andmi	r2, r2, r0

08004408 <fmc_bank1_state_get>:
 8004408:	4b08      	ldr	r3, [pc, #32]	; (800442c <fmc_bank1_state_get+0x24>)
 800440a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800440c:	07d1      	lsls	r1, r2, #31
 800440e:	d409      	bmi.n	8004424 <fmc_bank1_state_get+0x1c>
 8004410:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8004412:	06d2      	lsls	r2, r2, #27
 8004414:	d408      	bmi.n	8004428 <fmc_bank1_state_get+0x20>
 8004416:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004418:	f013 0f04 	tst.w	r3, #4
 800441c:	bf0c      	ite	eq
 800441e:	2000      	moveq	r0, #0
 8004420:	2002      	movne	r0, #2
 8004422:	4770      	bx	lr
 8004424:	2001      	movs	r0, #1
 8004426:	4770      	bx	lr
 8004428:	2003      	movs	r0, #3
 800442a:	4770      	bx	lr
 800442c:	40022000 	andmi	r2, r2, r0

08004430 <fwdgt_enable>:
 8004430:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8004434:	4b01      	ldr	r3, [pc, #4]	; (800443c <fwdgt_enable+0xc>)
 8004436:	601a      	str	r2, [r3, #0]
 8004438:	4770      	bx	lr
 800443a:	bf00      	nop
 800443c:	40003000 	andmi	r3, r0, r0

08004440 <fwdgt_counter_reload>:
 8004440:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8004444:	4b01      	ldr	r3, [pc, #4]	; (800444c <fwdgt_counter_reload+0xc>)
 8004446:	601a      	str	r2, [r3, #0]
 8004448:	4770      	bx	lr
 800444a:	bf00      	nop
 800444c:	40003000 	andmi	r3, r0, r0

08004450 <fwdgt_config>:
 8004450:	f245 5355 	movw	r3, #21845	; 0x5555
 8004454:	4a11      	ldr	r2, [pc, #68]	; (800449c <fwdgt_config+0x4c>)
 8004456:	b510      	push	{r4, lr}
 8004458:	4c11      	ldr	r4, [pc, #68]	; (80044a0 <fwdgt_config+0x50>)
 800445a:	6013      	str	r3, [r2, #0]
 800445c:	68d3      	ldr	r3, [r2, #12]
 800445e:	3c01      	subs	r4, #1
 8004460:	f003 0301 	and.w	r3, r3, #1
 8004464:	d013      	beq.n	800448e <fwdgt_config+0x3e>
 8004466:	2b00      	cmp	r3, #0
 8004468:	d1f8      	bne.n	800445c <fwdgt_config+0xc>
 800446a:	6051      	str	r1, [r2, #4]
 800446c:	490c      	ldr	r1, [pc, #48]	; (80044a0 <fwdgt_config+0x50>)
 800446e:	4a0b      	ldr	r2, [pc, #44]	; (800449c <fwdgt_config+0x4c>)
 8004470:	68d3      	ldr	r3, [r2, #12]
 8004472:	3901      	subs	r1, #1
 8004474:	f003 0302 	and.w	r3, r3, #2
 8004478:	d00d      	beq.n	8004496 <fwdgt_config+0x46>
 800447a:	2b00      	cmp	r3, #0
 800447c:	d1f8      	bne.n	8004470 <fwdgt_config+0x20>
 800447e:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8004482:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8004486:	6090      	str	r0, [r2, #8]
 8004488:	2001      	movs	r0, #1
 800448a:	6013      	str	r3, [r2, #0]
 800448c:	e002      	b.n	8004494 <fwdgt_config+0x44>
 800448e:	2b00      	cmp	r3, #0
 8004490:	d0eb      	beq.n	800446a <fwdgt_config+0x1a>
 8004492:	2000      	movs	r0, #0
 8004494:	bd10      	pop	{r4, pc}
 8004496:	2b00      	cmp	r3, #0
 8004498:	d1fb      	bne.n	8004492 <fwdgt_config+0x42>
 800449a:	e7f0      	b.n	800447e <fwdgt_config+0x2e>
 800449c:	40003000 	andmi	r3, r0, r0
 80044a0:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080044a4 <gpio_init>:
 80044a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80044a8:	f04f 0c0f 	mov.w	ip, #15
 80044ac:	06cf      	lsls	r7, r1, #27
 80044ae:	f04f 0400 	mov.w	r4, #0
 80044b2:	f04f 0701 	mov.w	r7, #1
 80044b6:	f001 050f 	and.w	r5, r1, #15
 80044ba:	bf48      	it	mi
 80044bc:	4315      	orrmi	r5, r2
 80044be:	fa23 f204 	lsr.w	r2, r3, r4
 80044c2:	07d6      	lsls	r6, r2, #31
 80044c4:	d510      	bpl.n	80044e8 <gpio_init+0x44>
 80044c6:	00a2      	lsls	r2, r4, #2
 80044c8:	6806      	ldr	r6, [r0, #0]
 80044ca:	fa0c fe02 	lsl.w	lr, ip, r2
 80044ce:	ea26 060e 	bic.w	r6, r6, lr
 80044d2:	fa05 f202 	lsl.w	r2, r5, r2
 80044d6:	2928      	cmp	r1, #40	; 0x28
 80044d8:	ea42 0206 	orr.w	r2, r2, r6
 80044dc:	d128      	bne.n	8004530 <gpio_init+0x8c>
 80044de:	fa07 f604 	lsl.w	r6, r7, r4
 80044e2:	401e      	ands	r6, r3
 80044e4:	6146      	str	r6, [r0, #20]
 80044e6:	6002      	str	r2, [r0, #0]
 80044e8:	3401      	adds	r4, #1
 80044ea:	2c08      	cmp	r4, #8
 80044ec:	d1e7      	bne.n	80044be <gpio_init+0x1a>
 80044ee:	2600      	movs	r6, #0
 80044f0:	f04f 0c0f 	mov.w	ip, #15
 80044f4:	2701      	movs	r7, #1
 80044f6:	f106 0208 	add.w	r2, r6, #8
 80044fa:	fa23 f402 	lsr.w	r4, r3, r2
 80044fe:	07e4      	lsls	r4, r4, #31
 8004500:	d511      	bpl.n	8004526 <gpio_init+0x82>
 8004502:	00b4      	lsls	r4, r6, #2
 8004504:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8004508:	fa0c f804 	lsl.w	r8, ip, r4
 800450c:	ea2e 0e08 	bic.w	lr, lr, r8
 8004510:	fa05 f404 	lsl.w	r4, r5, r4
 8004514:	2928      	cmp	r1, #40	; 0x28
 8004516:	ea44 040e 	orr.w	r4, r4, lr
 800451a:	d110      	bne.n	800453e <gpio_init+0x9a>
 800451c:	fa07 f202 	lsl.w	r2, r7, r2
 8004520:	401a      	ands	r2, r3
 8004522:	6142      	str	r2, [r0, #20]
 8004524:	6044      	str	r4, [r0, #4]
 8004526:	3601      	adds	r6, #1
 8004528:	2e08      	cmp	r6, #8
 800452a:	d1e4      	bne.n	80044f6 <gpio_init+0x52>
 800452c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004530:	2948      	cmp	r1, #72	; 0x48
 8004532:	bf02      	ittt	eq
 8004534:	fa07 f604 	lsleq.w	r6, r7, r4
 8004538:	401e      	andeq	r6, r3
 800453a:	6106      	streq	r6, [r0, #16]
 800453c:	e7d3      	b.n	80044e6 <gpio_init+0x42>
 800453e:	2948      	cmp	r1, #72	; 0x48
 8004540:	bf02      	ittt	eq
 8004542:	fa07 f202 	lsleq.w	r2, r7, r2
 8004546:	401a      	andeq	r2, r3
 8004548:	6102      	streq	r2, [r0, #16]
 800454a:	e7eb      	b.n	8004524 <gpio_init+0x80>

0800454c <gpio_input_bit_get>:
 800454c:	6883      	ldr	r3, [r0, #8]
 800454e:	420b      	tst	r3, r1
 8004550:	bf14      	ite	ne
 8004552:	2001      	movne	r0, #1
 8004554:	2000      	moveq	r0, #0
 8004556:	4770      	bx	lr

08004558 <gpio_pin_remap_config>:
 8004558:	2800      	cmp	r0, #0
 800455a:	4a16      	ldr	r2, [pc, #88]	; (80045b4 <gpio_pin_remap_config+0x5c>)
 800455c:	b530      	push	{r4, r5, lr}
 800455e:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8004562:	bfb4      	ite	lt
 8004564:	69d3      	ldrlt	r3, [r2, #28]
 8004566:	6853      	ldrge	r3, [r2, #4]
 8004568:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 800456c:	b284      	uxth	r4, r0
 800456e:	d110      	bne.n	8004592 <gpio_pin_remap_config+0x3a>
 8004570:	6855      	ldr	r5, [r2, #4]
 8004572:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8004576:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 800457a:	6055      	str	r5, [r2, #4]
 800457c:	b119      	cbz	r1, 8004586 <gpio_pin_remap_config+0x2e>
 800457e:	0d42      	lsrs	r2, r0, #21
 8004580:	0112      	lsls	r2, r2, #4
 8004582:	4094      	lsls	r4, r2
 8004584:	4323      	orrs	r3, r4
 8004586:	4a0b      	ldr	r2, [pc, #44]	; (80045b4 <gpio_pin_remap_config+0x5c>)
 8004588:	2800      	cmp	r0, #0
 800458a:	bfb4      	ite	lt
 800458c:	61d3      	strlt	r3, [r2, #28]
 800458e:	6053      	strge	r3, [r2, #4]
 8004590:	bd30      	pop	{r4, r5, pc}
 8004592:	02c2      	lsls	r2, r0, #11
 8004594:	bf4d      	iteet	mi
 8004596:	2203      	movmi	r2, #3
 8004598:	0d42      	lsrpl	r2, r0, #21
 800459a:	0112      	lslpl	r2, r2, #4
 800459c:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 80045a0:	bf4c      	ite	mi
 80045a2:	40aa      	lslmi	r2, r5
 80045a4:	fa04 f202 	lslpl.w	r2, r4, r2
 80045a8:	ea23 0302 	bic.w	r3, r3, r2
 80045ac:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 80045b0:	e7e4      	b.n	800457c <gpio_pin_remap_config+0x24>
 80045b2:	bf00      	nop
 80045b4:	40010000 	andmi	r0, r1, r0

080045b8 <pmu_backup_write_enable>:
 80045b8:	4a02      	ldr	r2, [pc, #8]	; (80045c4 <pmu_backup_write_enable+0xc>)
 80045ba:	6813      	ldr	r3, [r2, #0]
 80045bc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80045c0:	6013      	str	r3, [r2, #0]
 80045c2:	4770      	bx	lr
 80045c4:	40007000 	andmi	r7, r0, r0

080045c8 <rcu_periph_clock_enable>:
 80045c8:	2201      	movs	r2, #1
 80045ca:	0983      	lsrs	r3, r0, #6
 80045cc:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80045d0:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80045d4:	6819      	ldr	r1, [r3, #0]
 80045d6:	f000 001f 	and.w	r0, r0, #31
 80045da:	fa02 f000 	lsl.w	r0, r2, r0
 80045de:	4308      	orrs	r0, r1
 80045e0:	6018      	str	r0, [r3, #0]
 80045e2:	4770      	bx	lr

080045e4 <rcu_periph_clock_disable>:
 80045e4:	2101      	movs	r1, #1
 80045e6:	0983      	lsrs	r3, r0, #6
 80045e8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80045ec:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80045f0:	681a      	ldr	r2, [r3, #0]
 80045f2:	f000 001f 	and.w	r0, r0, #31
 80045f6:	fa01 f000 	lsl.w	r0, r1, r0
 80045fa:	ea22 0000 	bic.w	r0, r2, r0
 80045fe:	6018      	str	r0, [r3, #0]
 8004600:	4770      	bx	lr

08004602 <rcu_periph_reset_enable>:
 8004602:	f7ff bfe1 	b.w	80045c8 <rcu_periph_clock_enable>

08004606 <rcu_periph_reset_disable>:
 8004606:	f7ff bfed 	b.w	80045e4 <rcu_periph_clock_disable>
	...

0800460c <rcu_bkp_reset_enable>:
 800460c:	4a02      	ldr	r2, [pc, #8]	; (8004618 <rcu_bkp_reset_enable+0xc>)
 800460e:	6a13      	ldr	r3, [r2, #32]
 8004610:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004614:	6213      	str	r3, [r2, #32]
 8004616:	4770      	bx	lr
 8004618:	40021000 	andmi	r1, r2, r0

0800461c <rcu_bkp_reset_disable>:
 800461c:	4a02      	ldr	r2, [pc, #8]	; (8004628 <rcu_bkp_reset_disable+0xc>)
 800461e:	6a13      	ldr	r3, [r2, #32]
 8004620:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004624:	6213      	str	r3, [r2, #32]
 8004626:	4770      	bx	lr
 8004628:	40021000 	andmi	r1, r2, r0

0800462c <rcu_adc_clock_config>:
 800462c:	490c      	ldr	r1, [pc, #48]	; (8004660 <rcu_adc_clock_config+0x34>)
 800462e:	2805      	cmp	r0, #5
 8004630:	684b      	ldr	r3, [r1, #4]
 8004632:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004636:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800463a:	d006      	beq.n	800464a <rcu_adc_clock_config+0x1e>
 800463c:	d803      	bhi.n	8004646 <rcu_adc_clock_config+0x1a>
 800463e:	2804      	cmp	r0, #4
 8004640:	d10a      	bne.n	8004658 <rcu_adc_clock_config+0x2c>
 8004642:	604b      	str	r3, [r1, #4]
 8004644:	4770      	bx	lr
 8004646:	2807      	cmp	r0, #7
 8004648:	d1fb      	bne.n	8004642 <rcu_adc_clock_config+0x16>
 800464a:	4a06      	ldr	r2, [pc, #24]	; (8004664 <rcu_adc_clock_config+0x38>)
 800464c:	ea02 3080 	and.w	r0, r2, r0, lsl #14
 8004650:	4303      	orrs	r3, r0
 8004652:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004656:	e7f4      	b.n	8004642 <rcu_adc_clock_config+0x16>
 8004658:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 800465c:	e7f1      	b.n	8004642 <rcu_adc_clock_config+0x16>
 800465e:	bf00      	nop
 8004660:	40021000 	andmi	r1, r2, r0
 8004664:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08004668 <rcu_clock_freq_get>:
 8004668:	4b2e      	ldr	r3, [pc, #184]	; (8004724 <rcu_clock_freq_get+0xbc>)
 800466a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800466c:	4604      	mov	r4, r0
 800466e:	461f      	mov	r7, r3
 8004670:	b089      	sub	sp, #36	; 0x24
 8004672:	ad04      	add	r5, sp, #16
 8004674:	f103 0610 	add.w	r6, r3, #16
 8004678:	462a      	mov	r2, r5
 800467a:	6818      	ldr	r0, [r3, #0]
 800467c:	6859      	ldr	r1, [r3, #4]
 800467e:	3308      	adds	r3, #8
 8004680:	c203      	stmia	r2!, {r0, r1}
 8004682:	42b3      	cmp	r3, r6
 8004684:	4615      	mov	r5, r2
 8004686:	d1f7      	bne.n	8004678 <rcu_clock_freq_get+0x10>
 8004688:	466b      	mov	r3, sp
 800468a:	6871      	ldr	r1, [r6, #4]
 800468c:	6938      	ldr	r0, [r7, #16]
 800468e:	c303      	stmia	r3!, {r0, r1}
 8004690:	c303      	stmia	r3!, {r0, r1}
 8004692:	4925      	ldr	r1, [pc, #148]	; (8004728 <rcu_clock_freq_get+0xc0>)
 8004694:	684b      	ldr	r3, [r1, #4]
 8004696:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800469a:	2b02      	cmp	r3, #2
 800469c:	d136      	bne.n	800470c <rcu_clock_freq_get+0xa4>
 800469e:	684b      	ldr	r3, [r1, #4]
 80046a0:	03dd      	lsls	r5, r3, #15
 80046a2:	d510      	bpl.n	80046c6 <rcu_clock_freq_get+0x5e>
 80046a4:	684b      	ldr	r3, [r1, #4]
 80046a6:	4a21      	ldr	r2, [pc, #132]	; (800472c <rcu_clock_freq_get+0xc4>)
 80046a8:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80046ac:	4b20      	ldr	r3, [pc, #128]	; (8004730 <rcu_clock_freq_get+0xc8>)
 80046ae:	bf18      	it	ne
 80046b0:	461a      	movne	r2, r3
 80046b2:	684b      	ldr	r3, [r1, #4]
 80046b4:	6848      	ldr	r0, [r1, #4]
 80046b6:	f3c3 4383 	ubfx	r3, r3, #18, #4
 80046ba:	0100      	lsls	r0, r0, #4
 80046bc:	d505      	bpl.n	80046ca <rcu_clock_freq_get+0x62>
 80046be:	f043 0310 	orr.w	r3, r3, #16
 80046c2:	3301      	adds	r3, #1
 80046c4:	e004      	b.n	80046d0 <rcu_clock_freq_get+0x68>
 80046c6:	4a1a      	ldr	r2, [pc, #104]	; (8004730 <rcu_clock_freq_get+0xc8>)
 80046c8:	e7f3      	b.n	80046b2 <rcu_clock_freq_get+0x4a>
 80046ca:	2b0f      	cmp	r3, #15
 80046cc:	d0f9      	beq.n	80046c2 <rcu_clock_freq_get+0x5a>
 80046ce:	3302      	adds	r3, #2
 80046d0:	4353      	muls	r3, r2
 80046d2:	684a      	ldr	r2, [r1, #4]
 80046d4:	f3c2 1203 	ubfx	r2, r2, #4, #4
 80046d8:	3220      	adds	r2, #32
 80046da:	446a      	add	r2, sp
 80046dc:	f812 2c10 	ldrb.w	r2, [r2, #-16]
 80046e0:	fa23 f002 	lsr.w	r0, r3, r2
 80046e4:	684a      	ldr	r2, [r1, #4]
 80046e6:	f3c2 2202 	ubfx	r2, r2, #8, #3
 80046ea:	3220      	adds	r2, #32
 80046ec:	446a      	add	r2, sp
 80046ee:	f812 5c20 	ldrb.w	r5, [r2, #-32]
 80046f2:	684a      	ldr	r2, [r1, #4]
 80046f4:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 80046f8:	3220      	adds	r2, #32
 80046fa:	446a      	add	r2, sp
 80046fc:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8004700:	2c03      	cmp	r4, #3
 8004702:	d80c      	bhi.n	800471e <rcu_clock_freq_get+0xb6>
 8004704:	e8df f004 	tbb	[pc, r4]
 8004708:	09070504 	stmdbeq	r7, {r2, r8, sl}
 800470c:	4b07      	ldr	r3, [pc, #28]	; (800472c <rcu_clock_freq_get+0xc4>)
 800470e:	e7e0      	b.n	80046d2 <rcu_clock_freq_get+0x6a>
 8004710:	4618      	mov	r0, r3
 8004712:	b009      	add	sp, #36	; 0x24
 8004714:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004716:	40e8      	lsrs	r0, r5
 8004718:	e7fb      	b.n	8004712 <rcu_clock_freq_get+0xaa>
 800471a:	40d0      	lsrs	r0, r2
 800471c:	e7f9      	b.n	8004712 <rcu_clock_freq_get+0xaa>
 800471e:	2000      	movs	r0, #0
 8004720:	e7f7      	b.n	8004712 <rcu_clock_freq_get+0xaa>
 8004722:	bf00      	nop
 8004724:	08005318 	stmdaeq	r0, {r3, r4, r8, r9, ip, lr}
 8004728:	40021000 	andmi	r1, r2, r0
 800472c:	007a1200 	rsbseq	r1, sl, r0, lsl #4
 8004730:	003d0900 	eorseq	r0, sp, r0, lsl #18

08004734 <timer_deinit>:
 8004734:	b508      	push	{r3, lr}
 8004736:	4b2d      	ldr	r3, [pc, #180]	; (80047ec <timer_deinit+0xb8>)
 8004738:	4298      	cmp	r0, r3
 800473a:	d048      	beq.n	80047ce <timer_deinit+0x9a>
 800473c:	d816      	bhi.n	800476c <timer_deinit+0x38>
 800473e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004742:	4298      	cmp	r0, r3
 8004744:	d03c      	beq.n	80047c0 <timer_deinit+0x8c>
 8004746:	d807      	bhi.n	8004758 <timer_deinit+0x24>
 8004748:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800474c:	d02a      	beq.n	80047a4 <timer_deinit+0x70>
 800474e:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8004752:	4298      	cmp	r0, r3
 8004754:	d02d      	beq.n	80047b2 <timer_deinit+0x7e>
 8004756:	bd08      	pop	{r3, pc}
 8004758:	4b25      	ldr	r3, [pc, #148]	; (80047f0 <timer_deinit+0xbc>)
 800475a:	4298      	cmp	r0, r3
 800475c:	d1fb      	bne.n	8004756 <timer_deinit+0x22>
 800475e:	f240 4003 	movw	r0, #1027	; 0x403
 8004762:	f7ff ff4e 	bl	8004602 <rcu_periph_reset_enable>
 8004766:	f240 4003 	movw	r0, #1027	; 0x403
 800476a:	e017      	b.n	800479c <timer_deinit+0x68>
 800476c:	4b21      	ldr	r3, [pc, #132]	; (80047f4 <timer_deinit+0xc0>)
 800476e:	4298      	cmp	r0, r3
 8004770:	d00e      	beq.n	8004790 <timer_deinit+0x5c>
 8004772:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8004776:	4298      	cmp	r0, r3
 8004778:	d030      	beq.n	80047dc <timer_deinit+0xa8>
 800477a:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 800477e:	4298      	cmp	r0, r3
 8004780:	d1e9      	bne.n	8004756 <timer_deinit+0x22>
 8004782:	f240 4005 	movw	r0, #1029	; 0x405
 8004786:	f7ff ff3c 	bl	8004602 <rcu_periph_reset_enable>
 800478a:	f240 4005 	movw	r0, #1029	; 0x405
 800478e:	e005      	b.n	800479c <timer_deinit+0x68>
 8004790:	f240 300b 	movw	r0, #779	; 0x30b
 8004794:	f7ff ff35 	bl	8004602 <rcu_periph_reset_enable>
 8004798:	f240 300b 	movw	r0, #779	; 0x30b
 800479c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80047a0:	f7ff bf31 	b.w	8004606 <rcu_periph_reset_disable>
 80047a4:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80047a8:	f7ff ff2b 	bl	8004602 <rcu_periph_reset_enable>
 80047ac:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80047b0:	e7f4      	b.n	800479c <timer_deinit+0x68>
 80047b2:	f240 4001 	movw	r0, #1025	; 0x401
 80047b6:	f7ff ff24 	bl	8004602 <rcu_periph_reset_enable>
 80047ba:	f240 4001 	movw	r0, #1025	; 0x401
 80047be:	e7ed      	b.n	800479c <timer_deinit+0x68>
 80047c0:	f240 4002 	movw	r0, #1026	; 0x402
 80047c4:	f7ff ff1d 	bl	8004602 <rcu_periph_reset_enable>
 80047c8:	f240 4002 	movw	r0, #1026	; 0x402
 80047cc:	e7e6      	b.n	800479c <timer_deinit+0x68>
 80047ce:	f240 4004 	movw	r0, #1028	; 0x404
 80047d2:	f7ff ff16 	bl	8004602 <rcu_periph_reset_enable>
 80047d6:	f240 4004 	movw	r0, #1028	; 0x404
 80047da:	e7df      	b.n	800479c <timer_deinit+0x68>
 80047dc:	f240 300d 	movw	r0, #781	; 0x30d
 80047e0:	f7ff ff0f 	bl	8004602 <rcu_periph_reset_enable>
 80047e4:	f240 300d 	movw	r0, #781	; 0x30d
 80047e8:	e7d8      	b.n	800479c <timer_deinit+0x68>
 80047ea:	bf00      	nop
 80047ec:	40001000 	andmi	r1, r0, r0
 80047f0:	40000c00 	andmi	r0, r0, r0, lsl #24
 80047f4:	40012c00 	andmi	r2, r1, r0, lsl #24

080047f8 <timer_init>:
 80047f8:	880b      	ldrh	r3, [r1, #0]
 80047fa:	6283      	str	r3, [r0, #40]	; 0x28
 80047fc:	4b26      	ldr	r3, [pc, #152]	; (8004898 <timer_init+0xa0>)
 80047fe:	4298      	cmp	r0, r3
 8004800:	d018      	beq.n	8004834 <timer_init+0x3c>
 8004802:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8004806:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800480a:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 800480e:	d011      	beq.n	8004834 <timer_init+0x3c>
 8004810:	4a22      	ldr	r2, [pc, #136]	; (800489c <timer_init+0xa4>)
 8004812:	4290      	cmp	r0, r2
 8004814:	d00e      	beq.n	8004834 <timer_init+0x3c>
 8004816:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 800481a:	4290      	cmp	r0, r2
 800481c:	d00a      	beq.n	8004834 <timer_init+0x3c>
 800481e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004822:	4293      	cmp	r3, r2
 8004824:	d006      	beq.n	8004834 <timer_init+0x3c>
 8004826:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 800482a:	4293      	cmp	r3, r2
 800482c:	d002      	beq.n	8004834 <timer_init+0x3c>
 800482e:	4b1c      	ldr	r3, [pc, #112]	; (80048a0 <timer_init+0xa8>)
 8004830:	4298      	cmp	r0, r3
 8004832:	d10f      	bne.n	8004854 <timer_init+0x5c>
 8004834:	6803      	ldr	r3, [r0, #0]
 8004836:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800483a:	6003      	str	r3, [r0, #0]
 800483c:	884b      	ldrh	r3, [r1, #2]
 800483e:	6802      	ldr	r2, [r0, #0]
 8004840:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8004844:	4313      	orrs	r3, r2
 8004846:	6003      	str	r3, [r0, #0]
 8004848:	888b      	ldrh	r3, [r1, #4]
 800484a:	6802      	ldr	r2, [r0, #0]
 800484c:	f003 0310 	and.w	r3, r3, #16
 8004850:	4313      	orrs	r3, r2
 8004852:	6003      	str	r3, [r0, #0]
 8004854:	688b      	ldr	r3, [r1, #8]
 8004856:	62c3      	str	r3, [r0, #44]	; 0x2c
 8004858:	4b12      	ldr	r3, [pc, #72]	; (80048a4 <timer_init+0xac>)
 800485a:	4298      	cmp	r0, r3
 800485c:	d003      	beq.n	8004866 <timer_init+0x6e>
 800485e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004862:	4298      	cmp	r0, r3
 8004864:	d104      	bne.n	8004870 <timer_init+0x78>
 8004866:	6943      	ldr	r3, [r0, #20]
 8004868:	f043 0301 	orr.w	r3, r3, #1
 800486c:	6143      	str	r3, [r0, #20]
 800486e:	4770      	bx	lr
 8004870:	6803      	ldr	r3, [r0, #0]
 8004872:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004876:	6003      	str	r3, [r0, #0]
 8004878:	898b      	ldrh	r3, [r1, #12]
 800487a:	6802      	ldr	r2, [r0, #0]
 800487c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004880:	4313      	orrs	r3, r2
 8004882:	6003      	str	r3, [r0, #0]
 8004884:	4b04      	ldr	r3, [pc, #16]	; (8004898 <timer_init+0xa0>)
 8004886:	4298      	cmp	r0, r3
 8004888:	d002      	beq.n	8004890 <timer_init+0x98>
 800488a:	4b04      	ldr	r3, [pc, #16]	; (800489c <timer_init+0xa4>)
 800488c:	4298      	cmp	r0, r3
 800488e:	d1ea      	bne.n	8004866 <timer_init+0x6e>
 8004890:	7b8b      	ldrb	r3, [r1, #14]
 8004892:	6303      	str	r3, [r0, #48]	; 0x30
 8004894:	e7e7      	b.n	8004866 <timer_init+0x6e>
 8004896:	bf00      	nop
 8004898:	40012c00 	andmi	r2, r1, r0, lsl #24
 800489c:	40013400 	andmi	r3, r1, r0, lsl #8
 80048a0:	40002000 	andmi	r2, r0, r0
 80048a4:	40001000 	andmi	r1, r0, r0

080048a8 <timer_enable>:
 80048a8:	6803      	ldr	r3, [r0, #0]
 80048aa:	f043 0301 	orr.w	r3, r3, #1
 80048ae:	6003      	str	r3, [r0, #0]
 80048b0:	4770      	bx	lr

080048b2 <timer_channel_output_mode_config>:
 80048b2:	2903      	cmp	r1, #3
 80048b4:	d81a      	bhi.n	80048ec <timer_channel_output_mode_config+0x3a>
 80048b6:	e8df f001 	tbb	[pc, r1]
 80048ba:	1a120a02 	bne	84870ca <__exidx_end+0x4814da>
 80048be:	6983      	ldr	r3, [r0, #24]
 80048c0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80048c4:	6183      	str	r3, [r0, #24]
 80048c6:	6983      	ldr	r3, [r0, #24]
 80048c8:	431a      	orrs	r2, r3
 80048ca:	6182      	str	r2, [r0, #24]
 80048cc:	4770      	bx	lr
 80048ce:	6983      	ldr	r3, [r0, #24]
 80048d0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80048d4:	6183      	str	r3, [r0, #24]
 80048d6:	6983      	ldr	r3, [r0, #24]
 80048d8:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 80048dc:	e7f5      	b.n	80048ca <timer_channel_output_mode_config+0x18>
 80048de:	69c3      	ldr	r3, [r0, #28]
 80048e0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80048e4:	61c3      	str	r3, [r0, #28]
 80048e6:	69c3      	ldr	r3, [r0, #28]
 80048e8:	431a      	orrs	r2, r3
 80048ea:	61c2      	str	r2, [r0, #28]
 80048ec:	4770      	bx	lr
 80048ee:	69c3      	ldr	r3, [r0, #28]
 80048f0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80048f4:	61c3      	str	r3, [r0, #28]
 80048f6:	69c3      	ldr	r3, [r0, #28]
 80048f8:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 80048fc:	e7f5      	b.n	80048ea <timer_channel_output_mode_config+0x38>

080048fe <timer_channel_output_pulse_value_config>:
 80048fe:	2903      	cmp	r1, #3
 8004900:	d80a      	bhi.n	8004918 <timer_channel_output_pulse_value_config+0x1a>
 8004902:	e8df f001 	tbb	[pc, r1]
 8004906:	08060402 	stmdaeq	r6, {r1, sl}
 800490a:	6342      	str	r2, [r0, #52]	; 0x34
 800490c:	4770      	bx	lr
 800490e:	6382      	str	r2, [r0, #56]	; 0x38
 8004910:	4770      	bx	lr
 8004912:	63c2      	str	r2, [r0, #60]	; 0x3c
 8004914:	4770      	bx	lr
 8004916:	6402      	str	r2, [r0, #64]	; 0x40
 8004918:	4770      	bx	lr

0800491a <timer_interrupt_enable>:
 800491a:	68c3      	ldr	r3, [r0, #12]
 800491c:	430b      	orrs	r3, r1
 800491e:	60c3      	str	r3, [r0, #12]
 8004920:	4770      	bx	lr

08004922 <timer_interrupt_flag_clear>:
 8004922:	43c9      	mvns	r1, r1
 8004924:	6101      	str	r1, [r0, #16]
 8004926:	4770      	bx	lr

08004928 <timer_flag_clear>:
 8004928:	43c9      	mvns	r1, r1
 800492a:	6101      	str	r1, [r0, #16]
 800492c:	4770      	bx	lr
	...

08004930 <usart_deinit>:
 8004930:	b508      	push	{r3, lr}
 8004932:	4b1d      	ldr	r3, [pc, #116]	; (80049a8 <usart_deinit+0x78>)
 8004934:	4298      	cmp	r0, r3
 8004936:	d028      	beq.n	800498a <usart_deinit+0x5a>
 8004938:	d808      	bhi.n	800494c <usart_deinit+0x1c>
 800493a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800493e:	4298      	cmp	r0, r3
 8004940:	d015      	beq.n	800496e <usart_deinit+0x3e>
 8004942:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004946:	4298      	cmp	r0, r3
 8004948:	d018      	beq.n	800497c <usart_deinit+0x4c>
 800494a:	bd08      	pop	{r3, pc}
 800494c:	4b17      	ldr	r3, [pc, #92]	; (80049ac <usart_deinit+0x7c>)
 800494e:	4298      	cmp	r0, r3
 8004950:	d022      	beq.n	8004998 <usart_deinit+0x68>
 8004952:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8004956:	4298      	cmp	r0, r3
 8004958:	d1f7      	bne.n	800494a <usart_deinit+0x1a>
 800495a:	f240 300e 	movw	r0, #782	; 0x30e
 800495e:	f7ff fe50 	bl	8004602 <rcu_periph_reset_enable>
 8004962:	f240 300e 	movw	r0, #782	; 0x30e
 8004966:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800496a:	f7ff be4c 	b.w	8004606 <rcu_periph_reset_disable>
 800496e:	f240 4011 	movw	r0, #1041	; 0x411
 8004972:	f7ff fe46 	bl	8004602 <rcu_periph_reset_enable>
 8004976:	f240 4011 	movw	r0, #1041	; 0x411
 800497a:	e7f4      	b.n	8004966 <usart_deinit+0x36>
 800497c:	f240 4012 	movw	r0, #1042	; 0x412
 8004980:	f7ff fe3f 	bl	8004602 <rcu_periph_reset_enable>
 8004984:	f240 4012 	movw	r0, #1042	; 0x412
 8004988:	e7ed      	b.n	8004966 <usart_deinit+0x36>
 800498a:	f240 4013 	movw	r0, #1043	; 0x413
 800498e:	f7ff fe38 	bl	8004602 <rcu_periph_reset_enable>
 8004992:	f240 4013 	movw	r0, #1043	; 0x413
 8004996:	e7e6      	b.n	8004966 <usart_deinit+0x36>
 8004998:	f240 4014 	movw	r0, #1044	; 0x414
 800499c:	f7ff fe31 	bl	8004602 <rcu_periph_reset_enable>
 80049a0:	f240 4014 	movw	r0, #1044	; 0x414
 80049a4:	e7df      	b.n	8004966 <usart_deinit+0x36>
 80049a6:	bf00      	nop
 80049a8:	40004c00 	andmi	r4, r0, r0, lsl #24
 80049ac:	40005000 	andmi	r5, r0, r0

080049b0 <usart_baudrate_set>:
 80049b0:	b538      	push	{r3, r4, r5, lr}
 80049b2:	4b11      	ldr	r3, [pc, #68]	; (80049f8 <usart_baudrate_set+0x48>)
 80049b4:	4604      	mov	r4, r0
 80049b6:	4298      	cmp	r0, r3
 80049b8:	460d      	mov	r5, r1
 80049ba:	d01b      	beq.n	80049f4 <usart_baudrate_set+0x44>
 80049bc:	d809      	bhi.n	80049d2 <usart_baudrate_set+0x22>
 80049be:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80049c2:	4298      	cmp	r0, r3
 80049c4:	d016      	beq.n	80049f4 <usart_baudrate_set+0x44>
 80049c6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80049ca:	4298      	cmp	r0, r3
 80049cc:	d012      	beq.n	80049f4 <usart_baudrate_set+0x44>
 80049ce:	2000      	movs	r0, #0
 80049d0:	e009      	b.n	80049e6 <usart_baudrate_set+0x36>
 80049d2:	4b0a      	ldr	r3, [pc, #40]	; (80049fc <usart_baudrate_set+0x4c>)
 80049d4:	4298      	cmp	r0, r3
 80049d6:	d00d      	beq.n	80049f4 <usart_baudrate_set+0x44>
 80049d8:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 80049dc:	4298      	cmp	r0, r3
 80049de:	d1f6      	bne.n	80049ce <usart_baudrate_set+0x1e>
 80049e0:	2003      	movs	r0, #3
 80049e2:	f7ff fe41 	bl	8004668 <rcu_clock_freq_get>
 80049e6:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 80049ea:	fbb3 f1f5 	udiv	r1, r3, r5
 80049ee:	b289      	uxth	r1, r1
 80049f0:	60a1      	str	r1, [r4, #8]
 80049f2:	bd38      	pop	{r3, r4, r5, pc}
 80049f4:	2002      	movs	r0, #2
 80049f6:	e7f4      	b.n	80049e2 <usart_baudrate_set+0x32>
 80049f8:	40004c00 	andmi	r4, r0, r0, lsl #24
 80049fc:	40005000 	andmi	r5, r0, r0

08004a00 <usart_parity_config>:
 8004a00:	68c2      	ldr	r2, [r0, #12]
 8004a02:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 8004a06:	60c2      	str	r2, [r0, #12]
 8004a08:	68c3      	ldr	r3, [r0, #12]
 8004a0a:	430b      	orrs	r3, r1
 8004a0c:	60c3      	str	r3, [r0, #12]
 8004a0e:	4770      	bx	lr

08004a10 <usart_word_length_set>:
 8004a10:	68c2      	ldr	r2, [r0, #12]
 8004a12:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004a16:	60c2      	str	r2, [r0, #12]
 8004a18:	68c3      	ldr	r3, [r0, #12]
 8004a1a:	430b      	orrs	r3, r1
 8004a1c:	60c3      	str	r3, [r0, #12]
 8004a1e:	4770      	bx	lr

08004a20 <usart_stop_bit_set>:
 8004a20:	6902      	ldr	r2, [r0, #16]
 8004a22:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8004a26:	6102      	str	r2, [r0, #16]
 8004a28:	6903      	ldr	r3, [r0, #16]
 8004a2a:	430b      	orrs	r3, r1
 8004a2c:	6103      	str	r3, [r0, #16]
 8004a2e:	4770      	bx	lr

08004a30 <usart_transmit_config>:
 8004a30:	68c3      	ldr	r3, [r0, #12]
 8004a32:	f023 0308 	bic.w	r3, r3, #8
 8004a36:	430b      	orrs	r3, r1
 8004a38:	60c3      	str	r3, [r0, #12]
 8004a3a:	4770      	bx	lr

08004a3c <usart_receive_config>:
 8004a3c:	68c3      	ldr	r3, [r0, #12]
 8004a3e:	f023 0304 	bic.w	r3, r3, #4
 8004a42:	430b      	orrs	r3, r1
 8004a44:	60c3      	str	r3, [r0, #12]
 8004a46:	4770      	bx	lr

08004a48 <usart_hardware_flow_rts_config>:
 8004a48:	6943      	ldr	r3, [r0, #20]
 8004a4a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004a4e:	430b      	orrs	r3, r1
 8004a50:	6143      	str	r3, [r0, #20]
 8004a52:	4770      	bx	lr

08004a54 <usart_hardware_flow_cts_config>:
 8004a54:	6943      	ldr	r3, [r0, #20]
 8004a56:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8004a5a:	430b      	orrs	r3, r1
 8004a5c:	6143      	str	r3, [r0, #20]
 8004a5e:	4770      	bx	lr

08004a60 <usart_dma_transmit_config>:
 8004a60:	6943      	ldr	r3, [r0, #20]
 8004a62:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004a66:	430b      	orrs	r3, r1
 8004a68:	6143      	str	r3, [r0, #20]
 8004a6a:	4770      	bx	lr

08004a6c <usart_flag_get>:
 8004a6c:	098b      	lsrs	r3, r1, #6
 8004a6e:	5818      	ldr	r0, [r3, r0]
 8004a70:	f001 011f 	and.w	r1, r1, #31
 8004a74:	40c8      	lsrs	r0, r1
 8004a76:	f000 0001 	and.w	r0, r0, #1
 8004a7a:	4770      	bx	lr

08004a7c <usart_interrupt_enable>:
 8004a7c:	2301      	movs	r3, #1
 8004a7e:	b510      	push	{r4, lr}
 8004a80:	f3c1 1289 	ubfx	r2, r1, #6, #10
 8004a84:	5814      	ldr	r4, [r2, r0]
 8004a86:	f001 011f 	and.w	r1, r1, #31
 8004a8a:	fa03 f101 	lsl.w	r1, r3, r1
 8004a8e:	4321      	orrs	r1, r4
 8004a90:	5011      	str	r1, [r2, r0]
 8004a92:	bd10      	pop	{r4, pc}

08004a94 <usart_interrupt_disable>:
 8004a94:	2201      	movs	r2, #1
 8004a96:	b510      	push	{r4, lr}
 8004a98:	f3c1 1489 	ubfx	r4, r1, #6, #10
 8004a9c:	5823      	ldr	r3, [r4, r0]
 8004a9e:	f001 011f 	and.w	r1, r1, #31
 8004aa2:	fa02 f101 	lsl.w	r1, r2, r1
 8004aa6:	ea23 0101 	bic.w	r1, r3, r1
 8004aaa:	5021      	str	r1, [r4, r0]
 8004aac:	bd10      	pop	{r4, pc}

08004aae <usart_interrupt_flag_clear>:
 8004aae:	2201      	movs	r2, #1
 8004ab0:	b510      	push	{r4, lr}
 8004ab2:	0d8c      	lsrs	r4, r1, #22
 8004ab4:	5823      	ldr	r3, [r4, r0]
 8004ab6:	f3c1 4104 	ubfx	r1, r1, #16, #5
 8004aba:	fa02 f101 	lsl.w	r1, r2, r1
 8004abe:	ea23 0101 	bic.w	r1, r3, r1
 8004ac2:	5021      	str	r1, [r4, r0]
 8004ac4:	bd10      	pop	{r4, pc}
	...

08004ac8 <gd32_adc_init()>:
 8004ac8:	b510      	push	{r4, lr}
 8004aca:	f240 6009 	movw	r0, #1545	; 0x609
 8004ace:	4c21      	ldr	r4, [pc, #132]	; (8004b54 <gd32_adc_init()+0x8c>)
 8004ad0:	f7ff fd7a 	bl	80045c8 <rcu_periph_clock_enable>
 8004ad4:	2005      	movs	r0, #5
 8004ad6:	f7ff fda9 	bl	800462c <rcu_adc_clock_config>
 8004ada:	4620      	mov	r0, r4
 8004adc:	2201      	movs	r2, #1
 8004ade:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004ae2:	f000 fa97 	bl	8005014 <adc_special_function_config>
 8004ae6:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8004aea:	4620      	mov	r0, r4
 8004aec:	2102      	movs	r1, #2
 8004aee:	f000 fb31 	bl	8005154 <adc_external_trigger_source_config>
 8004af2:	2100      	movs	r1, #0
 8004af4:	4620      	mov	r0, r4
 8004af6:	f000 fab5 	bl	8005064 <adc_data_alignment_config>
 8004afa:	2000      	movs	r0, #0
 8004afc:	f000 fa7a 	bl	8004ff4 <adc_mode_config>
 8004b00:	2202      	movs	r2, #2
 8004b02:	4620      	mov	r0, r4
 8004b04:	4611      	mov	r1, r2
 8004b06:	f000 fad9 	bl	80050bc <adc_channel_length_config>
 8004b0a:	4620      	mov	r0, r4
 8004b0c:	2307      	movs	r3, #7
 8004b0e:	2210      	movs	r2, #16
 8004b10:	2100      	movs	r1, #0
 8004b12:	f000 faf0 	bl	80050f6 <adc_inserted_channel_config>
 8004b16:	2307      	movs	r3, #7
 8004b18:	4620      	mov	r0, r4
 8004b1a:	2211      	movs	r2, #17
 8004b1c:	2101      	movs	r1, #1
 8004b1e:	f000 faea 	bl	80050f6 <adc_inserted_channel_config>
 8004b22:	2201      	movs	r2, #1
 8004b24:	2102      	movs	r1, #2
 8004b26:	4620      	mov	r0, r4
 8004b28:	f000 fb25 	bl	8005176 <adc_external_trigger_config>
 8004b2c:	f000 fabc 	bl	80050a8 <adc_tempsensor_vrefint_enable>
 8004b30:	4620      	mov	r0, r4
 8004b32:	f000 faa0 	bl	8005076 <adc_enable>
 8004b36:	2100      	movs	r1, #0
 8004b38:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004b3c:	f000 fa42 	bl	8004fc4 <udelay(unsigned int, unsigned int)>
 8004b40:	4620      	mov	r0, r4
 8004b42:	f000 faa0 	bl	8005086 <adc_calibration_enable>
 8004b46:	4620      	mov	r0, r4
 8004b48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004b4c:	2102      	movs	r1, #2
 8004b4e:	f000 bb2d 	b.w	80051ac <adc_software_trigger_enable>
 8004b52:	bf00      	nop
 8004b54:	40012400 	andmi	r2, r1, r0, lsl #8

08004b58 <_stop() [clone .isra.0]>:
 8004b58:	b508      	push	{r3, lr}
 8004b5a:	4806      	ldr	r0, [pc, #24]	; (8004b74 <_stop() [clone .isra.0]+0x1c>)
 8004b5c:	f000 fbb6 	bl	80052cc <i2c_stop_on_bus>
 8004b60:	f640 73ff 	movw	r3, #4095	; 0xfff
 8004b64:	4a04      	ldr	r2, [pc, #16]	; (8004b78 <_stop() [clone .isra.0]+0x20>)
 8004b66:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8004b6a:	0589      	lsls	r1, r1, #22
 8004b6c:	d501      	bpl.n	8004b72 <_stop() [clone .isra.0]+0x1a>
 8004b6e:	3b01      	subs	r3, #1
 8004b70:	d1f9      	bne.n	8004b66 <_stop() [clone .isra.0]+0xe>
 8004b72:	bd08      	pop	{r3, pc}
 8004b74:	40005400 	andmi	r5, r0, r0, lsl #8
 8004b78:	40005000 	andmi	r5, r0, r0

08004b7c <gd32_i2c_begin()>:
 8004b7c:	b510      	push	{r4, lr}
 8004b7e:	f240 7015 	movw	r0, #1813	; 0x715
 8004b82:	f7ff fd21 	bl	80045c8 <rcu_periph_clock_enable>
 8004b86:	4c12      	ldr	r4, [pc, #72]	; (8004bd0 <gd32_i2c_begin()+0x54>)
 8004b88:	f240 6003 	movw	r0, #1539	; 0x603
 8004b8c:	f7ff fd1c 	bl	80045c8 <rcu_periph_clock_enable>
 8004b90:	f240 6003 	movw	r0, #1539	; 0x603
 8004b94:	f7ff fd18 	bl	80045c8 <rcu_periph_clock_enable>
 8004b98:	4620      	mov	r0, r4
 8004b9a:	2340      	movs	r3, #64	; 0x40
 8004b9c:	2203      	movs	r2, #3
 8004b9e:	211c      	movs	r1, #28
 8004ba0:	f7ff fc80 	bl	80044a4 <gpio_init>
 8004ba4:	2380      	movs	r3, #128	; 0x80
 8004ba6:	4620      	mov	r0, r4
 8004ba8:	2203      	movs	r2, #3
 8004baa:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8004bae:	211c      	movs	r1, #28
 8004bb0:	f7ff fc78 	bl	80044a4 <gpio_init>
 8004bb4:	4620      	mov	r0, r4
 8004bb6:	4907      	ldr	r1, [pc, #28]	; (8004bd4 <gd32_i2c_begin()+0x58>)
 8004bb8:	2200      	movs	r2, #0
 8004bba:	f000 fb05 	bl	80051c8 <i2c_clock_config>
 8004bbe:	4620      	mov	r0, r4
 8004bc0:	f000 fb7a 	bl	80052b8 <i2c_enable>
 8004bc4:	4620      	mov	r0, r4
 8004bc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004bca:	2101      	movs	r1, #1
 8004bcc:	f000 bb5a 	b.w	8005284 <i2c_ack_config>
 8004bd0:	40010c00 	andmi	r0, r1, r0, lsl #24
 8004bd4:	00061a80 	andeq	r1, r6, r0, lsl #21

08004bd8 <gd32_i2c_set_baudrate(unsigned int)>:
 8004bd8:	4601      	mov	r1, r0
 8004bda:	2200      	movs	r2, #0
 8004bdc:	4801      	ldr	r0, [pc, #4]	; (8004be4 <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 8004bde:	f000 baf3 	b.w	80051c8 <i2c_clock_config>
 8004be2:	bf00      	nop
 8004be4:	40005400 	andmi	r5, r0, r0, lsl #8

08004be8 <gd32_i2c_set_address(unsigned char)>:
 8004be8:	4b01      	ldr	r3, [pc, #4]	; (8004bf0 <gd32_i2c_set_address(unsigned char)+0x8>)
 8004bea:	0040      	lsls	r0, r0, #1
 8004bec:	7018      	strb	r0, [r3, #0]
 8004bee:	4770      	bx	lr
 8004bf0:	20001818 	andcs	r1, r0, r8, lsl r8

08004bf4 <gd32_i2c_write(char const*, unsigned int)>:
 8004bf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004bf6:	4604      	mov	r4, r0
 8004bf8:	460f      	mov	r7, r1
 8004bfa:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004bfe:	4e2e      	ldr	r6, [pc, #184]	; (8004cb8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004c00:	f240 6101 	movw	r1, #1537	; 0x601
 8004c04:	4630      	mov	r0, r6
 8004c06:	f000 fb6b 	bl	80052e0 <i2c_flag_get>
 8004c0a:	b138      	cbz	r0, 8004c1c <gd32_i2c_write(char const*, unsigned int)+0x28>
 8004c0c:	3d01      	subs	r5, #1
 8004c0e:	d1f7      	bne.n	8004c00 <gd32_i2c_write(char const*, unsigned int)+0xc>
 8004c10:	f7ff ffa2 	bl	8004b58 <_stop() [clone .isra.0]>
 8004c14:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004c18:	4240      	negs	r0, r0
 8004c1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004c1c:	4826      	ldr	r0, [pc, #152]	; (8004cb8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004c1e:	f000 fb50 	bl	80052c2 <i2c_start_on_bus>
 8004c22:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004c26:	4e24      	ldr	r6, [pc, #144]	; (8004cb8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004c28:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8004c2c:	4630      	mov	r0, r6
 8004c2e:	f000 fb57 	bl	80052e0 <i2c_flag_get>
 8004c32:	bb68      	cbnz	r0, 8004c90 <gd32_i2c_write(char const*, unsigned int)+0x9c>
 8004c34:	3d01      	subs	r5, #1
 8004c36:	d1f7      	bne.n	8004c28 <gd32_i2c_write(char const*, unsigned int)+0x34>
 8004c38:	e7ea      	b.n	8004c10 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8004c3a:	f240 5101 	movw	r1, #1281	; 0x501
 8004c3e:	481e      	ldr	r0, [pc, #120]	; (8004cb8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004c40:	f000 fb56 	bl	80052f0 <i2c_flag_clear>
 8004c44:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004c48:	4e1b      	ldr	r6, [pc, #108]	; (8004cb8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004c4a:	f240 5107 	movw	r1, #1287	; 0x507
 8004c4e:	4630      	mov	r0, r6
 8004c50:	f000 fb46 	bl	80052e0 <i2c_flag_get>
 8004c54:	2801      	cmp	r0, #1
 8004c56:	d114      	bne.n	8004c82 <gd32_i2c_write(char const*, unsigned int)+0x8e>
 8004c58:	4e17      	ldr	r6, [pc, #92]	; (8004cb8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004c5a:	4427      	add	r7, r4
 8004c5c:	42a7      	cmp	r7, r4
 8004c5e:	d013      	beq.n	8004c88 <gd32_i2c_write(char const*, unsigned int)+0x94>
 8004c60:	4630      	mov	r0, r6
 8004c62:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004c66:	f000 fb36 	bl	80052d6 <i2c_data_transmit>
 8004c6a:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004c6e:	f240 5102 	movw	r1, #1282	; 0x502
 8004c72:	4630      	mov	r0, r6
 8004c74:	f000 fb34 	bl	80052e0 <i2c_flag_get>
 8004c78:	2800      	cmp	r0, #0
 8004c7a:	d1ef      	bne.n	8004c5c <gd32_i2c_write(char const*, unsigned int)+0x68>
 8004c7c:	3d01      	subs	r5, #1
 8004c7e:	d1f6      	bne.n	8004c6e <gd32_i2c_write(char const*, unsigned int)+0x7a>
 8004c80:	e7c6      	b.n	8004c10 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8004c82:	3d01      	subs	r5, #1
 8004c84:	d1e1      	bne.n	8004c4a <gd32_i2c_write(char const*, unsigned int)+0x56>
 8004c86:	e7c3      	b.n	8004c10 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8004c88:	f7ff ff66 	bl	8004b58 <_stop() [clone .isra.0]>
 8004c8c:	2000      	movs	r0, #0
 8004c8e:	e7c3      	b.n	8004c18 <gd32_i2c_write(char const*, unsigned int)+0x24>
 8004c90:	4b0a      	ldr	r3, [pc, #40]	; (8004cbc <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 8004c92:	f06f 0201 	mvn.w	r2, #1
 8004c96:	7819      	ldrb	r1, [r3, #0]
 8004c98:	4807      	ldr	r0, [pc, #28]	; (8004cb8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004c9a:	f000 fb05 	bl	80052a8 <i2c_master_addressing>
 8004c9e:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004ca2:	4e05      	ldr	r6, [pc, #20]	; (8004cb8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8004ca4:	f240 5101 	movw	r1, #1281	; 0x501
 8004ca8:	4630      	mov	r0, r6
 8004caa:	f000 fb19 	bl	80052e0 <i2c_flag_get>
 8004cae:	2800      	cmp	r0, #0
 8004cb0:	d1c3      	bne.n	8004c3a <gd32_i2c_write(char const*, unsigned int)+0x46>
 8004cb2:	3d01      	subs	r5, #1
 8004cb4:	d1f6      	bne.n	8004ca4 <gd32_i2c_write(char const*, unsigned int)+0xb0>
 8004cb6:	e7ab      	b.n	8004c10 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8004cb8:	40005400 	andmi	r5, r0, r0, lsl #8
 8004cbc:	20001818 	andcs	r1, r0, r8, lsl r8

08004cc0 <gd32_i2c_read(char*, unsigned int)>:
 8004cc0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004cc4:	4680      	mov	r8, r0
 8004cc6:	460c      	mov	r4, r1
 8004cc8:	f640 76ff 	movw	r6, #4095	; 0xfff
 8004ccc:	4f49      	ldr	r7, [pc, #292]	; (8004df4 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8004cce:	f240 6101 	movw	r1, #1537	; 0x601
 8004cd2:	4638      	mov	r0, r7
 8004cd4:	f000 fb04 	bl	80052e0 <i2c_flag_get>
 8004cd8:	4605      	mov	r5, r0
 8004cda:	b128      	cbz	r0, 8004ce8 <gd32_i2c_read(char*, unsigned int)+0x28>
 8004cdc:	3e01      	subs	r6, #1
 8004cde:	d1f6      	bne.n	8004cce <gd32_i2c_read(char*, unsigned int)+0xe>
 8004ce0:	f7ff ff3a 	bl	8004b58 <_stop() [clone .isra.0]>
 8004ce4:	2504      	movs	r5, #4
 8004ce6:	e082      	b.n	8004dee <gd32_i2c_read(char*, unsigned int)+0x12e>
 8004ce8:	2c02      	cmp	r4, #2
 8004cea:	d103      	bne.n	8004cf4 <gd32_i2c_read(char*, unsigned int)+0x34>
 8004cec:	4601      	mov	r1, r0
 8004cee:	4841      	ldr	r0, [pc, #260]	; (8004df4 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8004cf0:	f000 fad1 	bl	8005296 <i2c_ackpos_config>
 8004cf4:	483f      	ldr	r0, [pc, #252]	; (8004df4 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8004cf6:	f000 fae4 	bl	80052c2 <i2c_start_on_bus>
 8004cfa:	f640 76ff 	movw	r6, #4095	; 0xfff
 8004cfe:	4f3d      	ldr	r7, [pc, #244]	; (8004df4 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8004d00:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8004d04:	4638      	mov	r0, r7
 8004d06:	f000 faeb 	bl	80052e0 <i2c_flag_get>
 8004d0a:	b910      	cbnz	r0, 8004d12 <gd32_i2c_read(char*, unsigned int)+0x52>
 8004d0c:	3e01      	subs	r6, #1
 8004d0e:	d1f7      	bne.n	8004d00 <gd32_i2c_read(char*, unsigned int)+0x40>
 8004d10:	e7e6      	b.n	8004ce0 <gd32_i2c_read(char*, unsigned int)+0x20>
 8004d12:	4b39      	ldr	r3, [pc, #228]	; (8004df8 <gd32_i2c_read(char*, unsigned int)+0x138>)
 8004d14:	2201      	movs	r2, #1
 8004d16:	7819      	ldrb	r1, [r3, #0]
 8004d18:	4836      	ldr	r0, [pc, #216]	; (8004df4 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8004d1a:	f000 fac5 	bl	80052a8 <i2c_master_addressing>
 8004d1e:	2c02      	cmp	r4, #2
 8004d20:	d803      	bhi.n	8004d2a <gd32_i2c_read(char*, unsigned int)+0x6a>
 8004d22:	2100      	movs	r1, #0
 8004d24:	4833      	ldr	r0, [pc, #204]	; (8004df4 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8004d26:	f000 faad 	bl	8005284 <i2c_ack_config>
 8004d2a:	f640 76ff 	movw	r6, #4095	; 0xfff
 8004d2e:	4f31      	ldr	r7, [pc, #196]	; (8004df4 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8004d30:	f240 5101 	movw	r1, #1281	; 0x501
 8004d34:	4638      	mov	r0, r7
 8004d36:	f000 fad3 	bl	80052e0 <i2c_flag_get>
 8004d3a:	b910      	cbnz	r0, 8004d42 <gd32_i2c_read(char*, unsigned int)+0x82>
 8004d3c:	3e01      	subs	r6, #1
 8004d3e:	d1f7      	bne.n	8004d30 <gd32_i2c_read(char*, unsigned int)+0x70>
 8004d40:	e7ce      	b.n	8004ce0 <gd32_i2c_read(char*, unsigned int)+0x20>
 8004d42:	f240 5101 	movw	r1, #1281	; 0x501
 8004d46:	482b      	ldr	r0, [pc, #172]	; (8004df4 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8004d48:	f000 fad2 	bl	80052f0 <i2c_flag_clear>
 8004d4c:	2c01      	cmp	r4, #1
 8004d4e:	d102      	bne.n	8004d56 <gd32_i2c_read(char*, unsigned int)+0x96>
 8004d50:	4828      	ldr	r0, [pc, #160]	; (8004df4 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8004d52:	f000 fabb 	bl	80052cc <i2c_stop_on_bus>
 8004d56:	f640 77ff 	movw	r7, #4095	; 0xfff
 8004d5a:	4e26      	ldr	r6, [pc, #152]	; (8004df4 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8004d5c:	b3ac      	cbz	r4, 8004dca <gd32_i2c_read(char*, unsigned int)+0x10a>
 8004d5e:	2c03      	cmp	r4, #3
 8004d60:	d121      	bne.n	8004da6 <gd32_i2c_read(char*, unsigned int)+0xe6>
 8004d62:	f640 79ff 	movw	r9, #4095	; 0xfff
 8004d66:	f240 5102 	movw	r1, #1282	; 0x502
 8004d6a:	4630      	mov	r0, r6
 8004d6c:	f000 fab8 	bl	80052e0 <i2c_flag_get>
 8004d70:	b918      	cbnz	r0, 8004d7a <gd32_i2c_read(char*, unsigned int)+0xba>
 8004d72:	f1b9 0901 	subs.w	r9, r9, #1
 8004d76:	d1f6      	bne.n	8004d66 <gd32_i2c_read(char*, unsigned int)+0xa6>
 8004d78:	e7b2      	b.n	8004ce0 <gd32_i2c_read(char*, unsigned int)+0x20>
 8004d7a:	2100      	movs	r1, #0
 8004d7c:	4630      	mov	r0, r6
 8004d7e:	f000 fa81 	bl	8005284 <i2c_ack_config>
 8004d82:	f240 5106 	movw	r1, #1286	; 0x506
 8004d86:	4630      	mov	r0, r6
 8004d88:	f000 faaa 	bl	80052e0 <i2c_flag_get>
 8004d8c:	b138      	cbz	r0, 8004d9e <gd32_i2c_read(char*, unsigned int)+0xde>
 8004d8e:	4630      	mov	r0, r6
 8004d90:	f000 faa3 	bl	80052da <i2c_data_receive>
 8004d94:	f640 77ff 	movw	r7, #4095	; 0xfff
 8004d98:	f808 0b01 	strb.w	r0, [r8], #1
 8004d9c:	3c01      	subs	r4, #1
 8004d9e:	3f01      	subs	r7, #1
 8004da0:	2f00      	cmp	r7, #0
 8004da2:	dcdb      	bgt.n	8004d5c <gd32_i2c_read(char*, unsigned int)+0x9c>
 8004da4:	e79c      	b.n	8004ce0 <gd32_i2c_read(char*, unsigned int)+0x20>
 8004da6:	2c02      	cmp	r4, #2
 8004da8:	d1eb      	bne.n	8004d82 <gd32_i2c_read(char*, unsigned int)+0xc2>
 8004daa:	f640 79ff 	movw	r9, #4095	; 0xfff
 8004dae:	f240 5102 	movw	r1, #1282	; 0x502
 8004db2:	4630      	mov	r0, r6
 8004db4:	f000 fa94 	bl	80052e0 <i2c_flag_get>
 8004db8:	b918      	cbnz	r0, 8004dc2 <gd32_i2c_read(char*, unsigned int)+0x102>
 8004dba:	f1b9 0901 	subs.w	r9, r9, #1
 8004dbe:	d1f6      	bne.n	8004dae <gd32_i2c_read(char*, unsigned int)+0xee>
 8004dc0:	e78e      	b.n	8004ce0 <gd32_i2c_read(char*, unsigned int)+0x20>
 8004dc2:	4630      	mov	r0, r6
 8004dc4:	f000 fa82 	bl	80052cc <i2c_stop_on_bus>
 8004dc8:	e7db      	b.n	8004d82 <gd32_i2c_read(char*, unsigned int)+0xc2>
 8004dca:	f640 73ff 	movw	r3, #4095	; 0xfff
 8004dce:	4a0b      	ldr	r2, [pc, #44]	; (8004dfc <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8004dd0:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8004dd4:	0589      	lsls	r1, r1, #22
 8004dd6:	d502      	bpl.n	8004dde <gd32_i2c_read(char*, unsigned int)+0x11e>
 8004dd8:	3b01      	subs	r3, #1
 8004dda:	d1f9      	bne.n	8004dd0 <gd32_i2c_read(char*, unsigned int)+0x110>
 8004ddc:	e782      	b.n	8004ce4 <gd32_i2c_read(char*, unsigned int)+0x24>
 8004dde:	2101      	movs	r1, #1
 8004de0:	4804      	ldr	r0, [pc, #16]	; (8004df4 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8004de2:	f000 fa4f 	bl	8005284 <i2c_ack_config>
 8004de6:	2101      	movs	r1, #1
 8004de8:	4802      	ldr	r0, [pc, #8]	; (8004df4 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8004dea:	f000 fa54 	bl	8005296 <i2c_ackpos_config>
 8004dee:	4628      	mov	r0, r5
 8004df0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004df4:	40005400 	andmi	r5, r0, r0, lsl #8
 8004df8:	20001818 	andcs	r1, r0, r8, lsl r8
 8004dfc:	40005000 	andmi	r5, r0, r0

08004e00 <gd32_uart_begin>:
 8004e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e02:	461d      	mov	r5, r3
 8004e04:	4b5e      	ldr	r3, [pc, #376]	; (8004f80 <gd32_uart_begin+0x180>)
 8004e06:	4604      	mov	r4, r0
 8004e08:	4298      	cmp	r0, r3
 8004e0a:	460f      	mov	r7, r1
 8004e0c:	4616      	mov	r6, r2
 8004e0e:	d071      	beq.n	8004ef4 <gd32_uart_begin+0xf4>
 8004e10:	d80a      	bhi.n	8004e28 <gd32_uart_begin+0x28>
 8004e12:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004e16:	4298      	cmp	r0, r3
 8004e18:	d069      	beq.n	8004eee <gd32_uart_begin+0xee>
 8004e1a:	f240 7012 	movw	r0, #1810	; 0x712
 8004e1e:	f7ff fbd3 	bl	80045c8 <rcu_periph_clock_enable>
 8004e22:	f240 6004 	movw	r0, #1540	; 0x604
 8004e26:	e008      	b.n	8004e3a <gd32_uart_begin+0x3a>
 8004e28:	4b56      	ldr	r3, [pc, #344]	; (8004f84 <gd32_uart_begin+0x184>)
 8004e2a:	4298      	cmp	r0, r3
 8004e2c:	d065      	beq.n	8004efa <gd32_uart_begin+0xfa>
 8004e2e:	f240 600e 	movw	r0, #1550	; 0x60e
 8004e32:	f7ff fbc9 	bl	80045c8 <rcu_periph_clock_enable>
 8004e36:	f240 6002 	movw	r0, #1538	; 0x602
 8004e3a:	f7ff fbc5 	bl	80045c8 <rcu_periph_clock_enable>
 8004e3e:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8004e42:	f7ff fbc1 	bl	80045c8 <rcu_periph_clock_enable>
 8004e46:	4b4e      	ldr	r3, [pc, #312]	; (8004f80 <gd32_uart_begin+0x180>)
 8004e48:	429c      	cmp	r4, r3
 8004e4a:	d07b      	beq.n	8004f44 <gd32_uart_begin+0x144>
 8004e4c:	d860      	bhi.n	8004f10 <gd32_uart_begin+0x110>
 8004e4e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004e52:	429c      	cmp	r4, r3
 8004e54:	d06e      	beq.n	8004f34 <gd32_uart_begin+0x134>
 8004e56:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004e5a:	2203      	movs	r2, #3
 8004e5c:	2118      	movs	r1, #24
 8004e5e:	484a      	ldr	r0, [pc, #296]	; (8004f88 <gd32_uart_begin+0x188>)
 8004e60:	f7ff fb20 	bl	80044a4 <gpio_init>
 8004e64:	2104      	movs	r1, #4
 8004e66:	4848      	ldr	r0, [pc, #288]	; (8004f88 <gd32_uart_begin+0x188>)
 8004e68:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8004e6c:	2203      	movs	r2, #3
 8004e6e:	f7ff fb19 	bl	80044a4 <gpio_init>
 8004e72:	2101      	movs	r1, #1
 8004e74:	4845      	ldr	r0, [pc, #276]	; (8004f8c <gd32_uart_begin+0x18c>)
 8004e76:	f7ff fb6f 	bl	8004558 <gpio_pin_remap_config>
 8004e7a:	4620      	mov	r0, r4
 8004e7c:	f7ff fd58 	bl	8004930 <usart_deinit>
 8004e80:	68e3      	ldr	r3, [r4, #12]
 8004e82:	4639      	mov	r1, r7
 8004e84:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004e88:	60e3      	str	r3, [r4, #12]
 8004e8a:	4620      	mov	r0, r4
 8004e8c:	f7ff fd90 	bl	80049b0 <usart_baudrate_set>
 8004e90:	2e09      	cmp	r6, #9
 8004e92:	bf0c      	ite	eq
 8004e94:	f44f 5180 	moveq.w	r1, #4096	; 0x1000
 8004e98:	2100      	movne	r1, #0
 8004e9a:	4620      	mov	r0, r4
 8004e9c:	f7ff fdb8 	bl	8004a10 <usart_word_length_set>
 8004ea0:	9b06      	ldr	r3, [sp, #24]
 8004ea2:	4620      	mov	r0, r4
 8004ea4:	2b02      	cmp	r3, #2
 8004ea6:	bf0c      	ite	eq
 8004ea8:	f44f 5100 	moveq.w	r1, #8192	; 0x2000
 8004eac:	2100      	movne	r1, #0
 8004eae:	f7ff fdb7 	bl	8004a20 <usart_stop_bit_set>
 8004eb2:	2d01      	cmp	r5, #1
 8004eb4:	d05f      	beq.n	8004f76 <gd32_uart_begin+0x176>
 8004eb6:	2d02      	cmp	r5, #2
 8004eb8:	d160      	bne.n	8004f7c <gd32_uart_begin+0x17c>
 8004eba:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8004ebe:	4620      	mov	r0, r4
 8004ec0:	f7ff fd9e 	bl	8004a00 <usart_parity_config>
 8004ec4:	2100      	movs	r1, #0
 8004ec6:	4620      	mov	r0, r4
 8004ec8:	f7ff fdbe 	bl	8004a48 <usart_hardware_flow_rts_config>
 8004ecc:	2100      	movs	r1, #0
 8004ece:	4620      	mov	r0, r4
 8004ed0:	f7ff fdc0 	bl	8004a54 <usart_hardware_flow_cts_config>
 8004ed4:	2104      	movs	r1, #4
 8004ed6:	4620      	mov	r0, r4
 8004ed8:	f7ff fdb0 	bl	8004a3c <usart_receive_config>
 8004edc:	2108      	movs	r1, #8
 8004ede:	4620      	mov	r0, r4
 8004ee0:	f7ff fda6 	bl	8004a30 <usart_transmit_config>
 8004ee4:	68e3      	ldr	r3, [r4, #12]
 8004ee6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8004eea:	60e3      	str	r3, [r4, #12]
 8004eec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004eee:	f240 7011 	movw	r0, #1809	; 0x711
 8004ef2:	e79e      	b.n	8004e32 <gd32_uart_begin+0x32>
 8004ef4:	f240 7013 	movw	r0, #1811	; 0x713
 8004ef8:	e791      	b.n	8004e1e <gd32_uart_begin+0x1e>
 8004efa:	f240 7014 	movw	r0, #1812	; 0x714
 8004efe:	f7ff fb63 	bl	80045c8 <rcu_periph_clock_enable>
 8004f02:	f240 6004 	movw	r0, #1540	; 0x604
 8004f06:	f7ff fb5f 	bl	80045c8 <rcu_periph_clock_enable>
 8004f0a:	f240 6005 	movw	r0, #1541	; 0x605
 8004f0e:	e794      	b.n	8004e3a <gd32_uart_begin+0x3a>
 8004f10:	4b1c      	ldr	r3, [pc, #112]	; (8004f84 <gd32_uart_begin+0x184>)
 8004f12:	429c      	cmp	r4, r3
 8004f14:	d023      	beq.n	8004f5e <gd32_uart_begin+0x15e>
 8004f16:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004f1a:	2203      	movs	r2, #3
 8004f1c:	2118      	movs	r1, #24
 8004f1e:	481c      	ldr	r0, [pc, #112]	; (8004f90 <gd32_uart_begin+0x190>)
 8004f20:	f7ff fac0 	bl	80044a4 <gpio_init>
 8004f24:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004f28:	2203      	movs	r2, #3
 8004f2a:	2104      	movs	r1, #4
 8004f2c:	4818      	ldr	r0, [pc, #96]	; (8004f90 <gd32_uart_begin+0x190>)
 8004f2e:	f7ff fab9 	bl	80044a4 <gpio_init>
 8004f32:	e7a2      	b.n	8004e7a <gd32_uart_begin+0x7a>
 8004f34:	2304      	movs	r3, #4
 8004f36:	2203      	movs	r2, #3
 8004f38:	2118      	movs	r1, #24
 8004f3a:	4815      	ldr	r0, [pc, #84]	; (8004f90 <gd32_uart_begin+0x190>)
 8004f3c:	f7ff fab2 	bl	80044a4 <gpio_init>
 8004f40:	2308      	movs	r3, #8
 8004f42:	e7f1      	b.n	8004f28 <gd32_uart_begin+0x128>
 8004f44:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004f48:	2203      	movs	r2, #3
 8004f4a:	2118      	movs	r1, #24
 8004f4c:	480e      	ldr	r0, [pc, #56]	; (8004f88 <gd32_uart_begin+0x188>)
 8004f4e:	f7ff faa9 	bl	80044a4 <gpio_init>
 8004f52:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8004f56:	2203      	movs	r2, #3
 8004f58:	2104      	movs	r1, #4
 8004f5a:	480b      	ldr	r0, [pc, #44]	; (8004f88 <gd32_uart_begin+0x188>)
 8004f5c:	e7e7      	b.n	8004f2e <gd32_uart_begin+0x12e>
 8004f5e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004f62:	2203      	movs	r2, #3
 8004f64:	2118      	movs	r1, #24
 8004f66:	4808      	ldr	r0, [pc, #32]	; (8004f88 <gd32_uart_begin+0x188>)
 8004f68:	f7ff fa9c 	bl	80044a4 <gpio_init>
 8004f6c:	2304      	movs	r3, #4
 8004f6e:	2203      	movs	r2, #3
 8004f70:	4619      	mov	r1, r3
 8004f72:	4808      	ldr	r0, [pc, #32]	; (8004f94 <gd32_uart_begin+0x194>)
 8004f74:	e7db      	b.n	8004f2e <gd32_uart_begin+0x12e>
 8004f76:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8004f7a:	e7a0      	b.n	8004ebe <gd32_uart_begin+0xbe>
 8004f7c:	2100      	movs	r1, #0
 8004f7e:	e79e      	b.n	8004ebe <gd32_uart_begin+0xbe>
 8004f80:	40004c00 	andmi	r4, r0, r0, lsl #24
 8004f84:	40005000 	andmi	r5, r0, r0
 8004f88:	40011000 	andmi	r1, r1, r0
 8004f8c:	00140010 	andseq	r0, r4, r0, lsl r0
 8004f90:	40010800 	andmi	r0, r1, r0, lsl #16
 8004f94:	40011400 	andmi	r1, r1, r0, lsl #8

08004f98 <micros_init()>:
 8004f98:	4770      	bx	lr
	...

08004f9c <udelay_init()>:
 8004f9c:	4a07      	ldr	r2, [pc, #28]	; (8004fbc <udelay_init()+0x20>)
 8004f9e:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8004fa2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004fa6:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8004faa:	2200      	movs	r2, #0
 8004fac:	4b04      	ldr	r3, [pc, #16]	; (8004fc0 <udelay_init()+0x24>)
 8004fae:	605a      	str	r2, [r3, #4]
 8004fb0:	681a      	ldr	r2, [r3, #0]
 8004fb2:	f042 0201 	orr.w	r2, r2, #1
 8004fb6:	601a      	str	r2, [r3, #0]
 8004fb8:	4770      	bx	lr
 8004fba:	bf00      	nop
 8004fbc:	e000ed00 	and	lr, r0, r0, lsl #26
 8004fc0:	e0001000 	and	r1, r0, r0

08004fc4 <udelay(unsigned int, unsigned int)>:
 8004fc4:	236c      	movs	r3, #108	; 0x6c
 8004fc6:	b510      	push	{r4, lr}
 8004fc8:	4358      	muls	r0, r3
 8004fca:	b909      	cbnz	r1, 8004fd0 <udelay(unsigned int, unsigned int)+0xc>
 8004fcc:	4b08      	ldr	r3, [pc, #32]	; (8004ff0 <udelay(unsigned int, unsigned int)+0x2c>)
 8004fce:	6859      	ldr	r1, [r3, #4]
 8004fd0:	2300      	movs	r3, #0
 8004fd2:	4c07      	ldr	r4, [pc, #28]	; (8004ff0 <udelay(unsigned int, unsigned int)+0x2c>)
 8004fd4:	6862      	ldr	r2, [r4, #4]
 8004fd6:	4291      	cmp	r1, r2
 8004fd8:	d0fc      	beq.n	8004fd4 <udelay(unsigned int, unsigned int)+0x10>
 8004fda:	bf28      	it	cs
 8004fdc:	f103 33ff 	addcs.w	r3, r3, #4294967295	; 0xffffffff
 8004fe0:	1a5b      	subs	r3, r3, r1
 8004fe2:	4413      	add	r3, r2
 8004fe4:	4283      	cmp	r3, r0
 8004fe6:	d300      	bcc.n	8004fea <udelay(unsigned int, unsigned int)+0x26>
 8004fe8:	bd10      	pop	{r4, pc}
 8004fea:	4611      	mov	r1, r2
 8004fec:	e7f2      	b.n	8004fd4 <udelay(unsigned int, unsigned int)+0x10>
 8004fee:	bf00      	nop
 8004ff0:	e0001000 	and	r1, r0, r0

08004ff4 <adc_mode_config>:
 8004ff4:	4b06      	ldr	r3, [pc, #24]	; (8005010 <adc_mode_config+0x1c>)
 8004ff6:	f8d3 1404 	ldr.w	r1, [r3, #1028]	; 0x404
 8004ffa:	f421 2170 	bic.w	r1, r1, #983040	; 0xf0000
 8004ffe:	f8c3 1404 	str.w	r1, [r3, #1028]	; 0x404
 8005002:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8005006:	4302      	orrs	r2, r0
 8005008:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 800500c:	4770      	bx	lr
 800500e:	bf00      	nop
 8005010:	40012000 	andmi	r2, r1, r0

08005014 <adc_special_function_config>:
 8005014:	b510      	push	{r4, lr}
 8005016:	f401 7380 	and.w	r3, r1, #256	; 0x100
 800501a:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 800501e:	f001 0102 	and.w	r1, r1, #2
 8005022:	b17a      	cbz	r2, 8005044 <adc_special_function_config+0x30>
 8005024:	b11b      	cbz	r3, 800502e <adc_special_function_config+0x1a>
 8005026:	6843      	ldr	r3, [r0, #4]
 8005028:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800502c:	6043      	str	r3, [r0, #4]
 800502e:	b11c      	cbz	r4, 8005038 <adc_special_function_config+0x24>
 8005030:	6843      	ldr	r3, [r0, #4]
 8005032:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8005036:	6043      	str	r3, [r0, #4]
 8005038:	b119      	cbz	r1, 8005042 <adc_special_function_config+0x2e>
 800503a:	6883      	ldr	r3, [r0, #8]
 800503c:	f043 0302 	orr.w	r3, r3, #2
 8005040:	6083      	str	r3, [r0, #8]
 8005042:	bd10      	pop	{r4, pc}
 8005044:	b11b      	cbz	r3, 800504e <adc_special_function_config+0x3a>
 8005046:	6843      	ldr	r3, [r0, #4]
 8005048:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800504c:	6043      	str	r3, [r0, #4]
 800504e:	b11c      	cbz	r4, 8005058 <adc_special_function_config+0x44>
 8005050:	6843      	ldr	r3, [r0, #4]
 8005052:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8005056:	6043      	str	r3, [r0, #4]
 8005058:	2900      	cmp	r1, #0
 800505a:	d0f2      	beq.n	8005042 <adc_special_function_config+0x2e>
 800505c:	6883      	ldr	r3, [r0, #8]
 800505e:	f023 0302 	bic.w	r3, r3, #2
 8005062:	e7ed      	b.n	8005040 <adc_special_function_config+0x2c>

08005064 <adc_data_alignment_config>:
 8005064:	6883      	ldr	r3, [r0, #8]
 8005066:	b119      	cbz	r1, 8005070 <adc_data_alignment_config+0xc>
 8005068:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800506c:	6083      	str	r3, [r0, #8]
 800506e:	4770      	bx	lr
 8005070:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005074:	e7fa      	b.n	800506c <adc_data_alignment_config+0x8>

08005076 <adc_enable>:
 8005076:	6883      	ldr	r3, [r0, #8]
 8005078:	07db      	lsls	r3, r3, #31
 800507a:	bf5e      	ittt	pl
 800507c:	6883      	ldrpl	r3, [r0, #8]
 800507e:	f043 0301 	orrpl.w	r3, r3, #1
 8005082:	6083      	strpl	r3, [r0, #8]
 8005084:	4770      	bx	lr

08005086 <adc_calibration_enable>:
 8005086:	6883      	ldr	r3, [r0, #8]
 8005088:	f100 0208 	add.w	r2, r0, #8
 800508c:	f043 0308 	orr.w	r3, r3, #8
 8005090:	6083      	str	r3, [r0, #8]
 8005092:	6813      	ldr	r3, [r2, #0]
 8005094:	0719      	lsls	r1, r3, #28
 8005096:	d4fc      	bmi.n	8005092 <adc_calibration_enable+0xc>
 8005098:	6883      	ldr	r3, [r0, #8]
 800509a:	f043 0304 	orr.w	r3, r3, #4
 800509e:	6083      	str	r3, [r0, #8]
 80050a0:	6813      	ldr	r3, [r2, #0]
 80050a2:	075b      	lsls	r3, r3, #29
 80050a4:	d4fc      	bmi.n	80050a0 <adc_calibration_enable+0x1a>
 80050a6:	4770      	bx	lr

080050a8 <adc_tempsensor_vrefint_enable>:
 80050a8:	4a03      	ldr	r2, [pc, #12]	; (80050b8 <adc_tempsensor_vrefint_enable+0x10>)
 80050aa:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 80050ae:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80050b2:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 80050b6:	4770      	bx	lr
 80050b8:	40012000 	andmi	r2, r1, r0

080050bc <adc_channel_length_config>:
 80050bc:	2901      	cmp	r1, #1
 80050be:	d002      	beq.n	80050c6 <adc_channel_length_config+0xa>
 80050c0:	2902      	cmp	r1, #2
 80050c2:	d00c      	beq.n	80050de <adc_channel_length_config+0x22>
 80050c4:	4770      	bx	lr
 80050c6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80050c8:	3a01      	subs	r2, #1
 80050ca:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80050ce:	62c3      	str	r3, [r0, #44]	; 0x2c
 80050d0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80050d2:	0512      	lsls	r2, r2, #20
 80050d4:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 80050d8:	431a      	orrs	r2, r3
 80050da:	62c2      	str	r2, [r0, #44]	; 0x2c
 80050dc:	4770      	bx	lr
 80050de:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80050e0:	3a01      	subs	r2, #1
 80050e2:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80050e6:	6383      	str	r3, [r0, #56]	; 0x38
 80050e8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80050ea:	0512      	lsls	r2, r2, #20
 80050ec:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 80050f0:	431a      	orrs	r2, r3
 80050f2:	6382      	str	r2, [r0, #56]	; 0x38
 80050f4:	4770      	bx	lr

080050f6 <adc_inserted_channel_config>:
 80050f6:	b530      	push	{r4, r5, lr}
 80050f8:	6b84      	ldr	r4, [r0, #56]	; 0x38
 80050fa:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80050fc:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8005100:	1a61      	subs	r1, r4, r1
 8005102:	f06f 0404 	mvn.w	r4, #4
 8005106:	4361      	muls	r1, r4
 8005108:	241f      	movs	r4, #31
 800510a:	310f      	adds	r1, #15
 800510c:	408c      	lsls	r4, r1
 800510e:	ea25 0504 	bic.w	r5, r5, r4
 8005112:	fa02 f101 	lsl.w	r1, r2, r1
 8005116:	4329      	orrs	r1, r5
 8005118:	2a09      	cmp	r2, #9
 800511a:	6381      	str	r1, [r0, #56]	; 0x38
 800511c:	d80b      	bhi.n	8005136 <adc_inserted_channel_config+0x40>
 800511e:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 8005122:	2207      	movs	r2, #7
 8005124:	6904      	ldr	r4, [r0, #16]
 8005126:	408a      	lsls	r2, r1
 8005128:	ea24 0402 	bic.w	r4, r4, r2
 800512c:	fa03 f201 	lsl.w	r2, r3, r1
 8005130:	4322      	orrs	r2, r4
 8005132:	6102      	str	r2, [r0, #16]
 8005134:	bd30      	pop	{r4, r5, pc}
 8005136:	2a11      	cmp	r2, #17
 8005138:	d8fc      	bhi.n	8005134 <adc_inserted_channel_config+0x3e>
 800513a:	2407      	movs	r4, #7
 800513c:	3a0a      	subs	r2, #10
 800513e:	68c1      	ldr	r1, [r0, #12]
 8005140:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8005144:	4094      	lsls	r4, r2
 8005146:	ea21 0104 	bic.w	r1, r1, r4
 800514a:	fa03 f202 	lsl.w	r2, r3, r2
 800514e:	430a      	orrs	r2, r1
 8005150:	60c2      	str	r2, [r0, #12]
 8005152:	e7ef      	b.n	8005134 <adc_inserted_channel_config+0x3e>

08005154 <adc_external_trigger_source_config>:
 8005154:	2901      	cmp	r1, #1
 8005156:	d002      	beq.n	800515e <adc_external_trigger_source_config+0xa>
 8005158:	2902      	cmp	r1, #2
 800515a:	d008      	beq.n	800516e <adc_external_trigger_source_config+0x1a>
 800515c:	4770      	bx	lr
 800515e:	6883      	ldr	r3, [r0, #8]
 8005160:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8005164:	6083      	str	r3, [r0, #8]
 8005166:	6883      	ldr	r3, [r0, #8]
 8005168:	431a      	orrs	r2, r3
 800516a:	6082      	str	r2, [r0, #8]
 800516c:	4770      	bx	lr
 800516e:	6883      	ldr	r3, [r0, #8]
 8005170:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005174:	e7f6      	b.n	8005164 <adc_external_trigger_source_config+0x10>

08005176 <adc_external_trigger_config>:
 8005176:	f001 0301 	and.w	r3, r1, #1
 800517a:	f001 0102 	and.w	r1, r1, #2
 800517e:	b152      	cbz	r2, 8005196 <adc_external_trigger_config+0x20>
 8005180:	b11b      	cbz	r3, 800518a <adc_external_trigger_config+0x14>
 8005182:	6883      	ldr	r3, [r0, #8]
 8005184:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8005188:	6083      	str	r3, [r0, #8]
 800518a:	b119      	cbz	r1, 8005194 <adc_external_trigger_config+0x1e>
 800518c:	6883      	ldr	r3, [r0, #8]
 800518e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005192:	6083      	str	r3, [r0, #8]
 8005194:	4770      	bx	lr
 8005196:	b11b      	cbz	r3, 80051a0 <adc_external_trigger_config+0x2a>
 8005198:	6883      	ldr	r3, [r0, #8]
 800519a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800519e:	6083      	str	r3, [r0, #8]
 80051a0:	2900      	cmp	r1, #0
 80051a2:	d0f7      	beq.n	8005194 <adc_external_trigger_config+0x1e>
 80051a4:	6883      	ldr	r3, [r0, #8]
 80051a6:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80051aa:	e7f2      	b.n	8005192 <adc_external_trigger_config+0x1c>

080051ac <adc_software_trigger_enable>:
 80051ac:	07ca      	lsls	r2, r1, #31
 80051ae:	bf42      	ittt	mi
 80051b0:	6883      	ldrmi	r3, [r0, #8]
 80051b2:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 80051b6:	6083      	strmi	r3, [r0, #8]
 80051b8:	078b      	lsls	r3, r1, #30
 80051ba:	bf42      	ittt	mi
 80051bc:	6883      	ldrmi	r3, [r0, #8]
 80051be:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 80051c2:	6083      	strmi	r3, [r0, #8]
 80051c4:	4770      	bx	lr
	...

080051c8 <i2c_clock_config>:
 80051c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80051ca:	4605      	mov	r5, r0
 80051cc:	2002      	movs	r0, #2
 80051ce:	460c      	mov	r4, r1
 80051d0:	4617      	mov	r7, r2
 80051d2:	f7ff fa49 	bl	8004668 <rcu_clock_freq_get>
 80051d6:	4927      	ldr	r1, [pc, #156]	; (8005274 <i2c_clock_config+0xac>)
 80051d8:	4a27      	ldr	r2, [pc, #156]	; (8005278 <i2c_clock_config+0xb0>)
 80051da:	fbb0 f1f1 	udiv	r1, r0, r1
 80051de:	4290      	cmp	r0, r2
 80051e0:	bf34      	ite	cc
 80051e2:	460b      	movcc	r3, r1
 80051e4:	2336      	movcs	r3, #54	; 0x36
 80051e6:	686e      	ldr	r6, [r5, #4]
 80051e8:	4a24      	ldr	r2, [pc, #144]	; (800527c <i2c_clock_config+0xb4>)
 80051ea:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 80051ee:	431e      	orrs	r6, r3
 80051f0:	4294      	cmp	r4, r2
 80051f2:	606e      	str	r6, [r5, #4]
 80051f4:	d816      	bhi.n	8005224 <i2c_clock_config+0x5c>
 80051f6:	3101      	adds	r1, #1
 80051f8:	2935      	cmp	r1, #53	; 0x35
 80051fa:	d90d      	bls.n	8005218 <i2c_clock_config+0x50>
 80051fc:	2336      	movs	r3, #54	; 0x36
 80051fe:	622b      	str	r3, [r5, #32]
 8005200:	0064      	lsls	r4, r4, #1
 8005202:	fbb0 f4f4 	udiv	r4, r0, r4
 8005206:	2c04      	cmp	r4, #4
 8005208:	bf38      	it	cc
 800520a:	2404      	movcc	r4, #4
 800520c:	69e8      	ldr	r0, [r5, #28]
 800520e:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8005212:	4304      	orrs	r4, r0
 8005214:	61ec      	str	r4, [r5, #28]
 8005216:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005218:	2902      	cmp	r1, #2
 800521a:	d801      	bhi.n	8005220 <i2c_clock_config+0x58>
 800521c:	2302      	movs	r3, #2
 800521e:	e7ee      	b.n	80051fe <i2c_clock_config+0x36>
 8005220:	6229      	str	r1, [r5, #32]
 8005222:	e7ed      	b.n	8005200 <i2c_clock_config+0x38>
 8005224:	4a16      	ldr	r2, [pc, #88]	; (8005280 <i2c_clock_config+0xb8>)
 8005226:	4294      	cmp	r4, r2
 8005228:	d8f5      	bhi.n	8005216 <i2c_clock_config+0x4e>
 800522a:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800522e:	4353      	muls	r3, r2
 8005230:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005234:	fbb3 f3f2 	udiv	r3, r3, r2
 8005238:	3301      	adds	r3, #1
 800523a:	622b      	str	r3, [r5, #32]
 800523c:	b997      	cbnz	r7, 8005264 <i2c_clock_config+0x9c>
 800523e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8005242:	fbb0 f4f4 	udiv	r4, r0, r4
 8005246:	69eb      	ldr	r3, [r5, #28]
 8005248:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800524c:	61eb      	str	r3, [r5, #28]
 800524e:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8005252:	b90b      	cbnz	r3, 8005258 <i2c_clock_config+0x90>
 8005254:	f044 0401 	orr.w	r4, r4, #1
 8005258:	69eb      	ldr	r3, [r5, #28]
 800525a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800525e:	61eb      	str	r3, [r5, #28]
 8005260:	69e8      	ldr	r0, [r5, #28]
 8005262:	e7d6      	b.n	8005212 <i2c_clock_config+0x4a>
 8005264:	2119      	movs	r1, #25
 8005266:	434c      	muls	r4, r1
 8005268:	69eb      	ldr	r3, [r5, #28]
 800526a:	fbb0 f4f4 	udiv	r4, r0, r4
 800526e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005272:	e7eb      	b.n	800524c <i2c_clock_config+0x84>
 8005274:	000f4240 	andeq	r4, pc, r0, asr #4
 8005278:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 800527c:	000186a0 	andeq	r8, r1, r0, lsr #13
 8005280:	00061a80 	andeq	r1, r6, r0, lsl #21

08005284 <i2c_ack_config>:
 8005284:	6803      	ldr	r3, [r0, #0]
 8005286:	2901      	cmp	r1, #1
 8005288:	bf0c      	ite	eq
 800528a:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 800528e:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8005292:	6003      	str	r3, [r0, #0]
 8005294:	4770      	bx	lr

08005296 <i2c_ackpos_config>:
 8005296:	6803      	ldr	r3, [r0, #0]
 8005298:	b919      	cbnz	r1, 80052a2 <i2c_ackpos_config+0xc>
 800529a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800529e:	6003      	str	r3, [r0, #0]
 80052a0:	4770      	bx	lr
 80052a2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80052a6:	e7fa      	b.n	800529e <i2c_ackpos_config+0x8>

080052a8 <i2c_master_addressing>:
 80052a8:	3202      	adds	r2, #2
 80052aa:	bf0c      	ite	eq
 80052ac:	f021 0101 	biceq.w	r1, r1, #1
 80052b0:	f041 0101 	orrne.w	r1, r1, #1
 80052b4:	6101      	str	r1, [r0, #16]
 80052b6:	4770      	bx	lr

080052b8 <i2c_enable>:
 80052b8:	6803      	ldr	r3, [r0, #0]
 80052ba:	f043 0301 	orr.w	r3, r3, #1
 80052be:	6003      	str	r3, [r0, #0]
 80052c0:	4770      	bx	lr

080052c2 <i2c_start_on_bus>:
 80052c2:	6803      	ldr	r3, [r0, #0]
 80052c4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80052c8:	6003      	str	r3, [r0, #0]
 80052ca:	4770      	bx	lr

080052cc <i2c_stop_on_bus>:
 80052cc:	6803      	ldr	r3, [r0, #0]
 80052ce:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80052d2:	6003      	str	r3, [r0, #0]
 80052d4:	4770      	bx	lr

080052d6 <i2c_data_transmit>:
 80052d6:	6101      	str	r1, [r0, #16]
 80052d8:	4770      	bx	lr

080052da <i2c_data_receive>:
 80052da:	6900      	ldr	r0, [r0, #16]
 80052dc:	b2c0      	uxtb	r0, r0
 80052de:	4770      	bx	lr

080052e0 <i2c_flag_get>:
 80052e0:	098b      	lsrs	r3, r1, #6
 80052e2:	5818      	ldr	r0, [r3, r0]
 80052e4:	f001 011f 	and.w	r1, r1, #31
 80052e8:	40c8      	lsrs	r0, r1
 80052ea:	f000 0001 	and.w	r0, r0, #1
 80052ee:	4770      	bx	lr

080052f0 <i2c_flag_clear>:
 80052f0:	f240 5301 	movw	r3, #1281	; 0x501
 80052f4:	4299      	cmp	r1, r3
 80052f6:	b510      	push	{r4, lr}
 80052f8:	d102      	bne.n	8005300 <i2c_flag_clear+0x10>
 80052fa:	6943      	ldr	r3, [r0, #20]
 80052fc:	6983      	ldr	r3, [r0, #24]
 80052fe:	bd10      	pop	{r4, pc}
 8005300:	2201      	movs	r2, #1
 8005302:	098c      	lsrs	r4, r1, #6
 8005304:	5823      	ldr	r3, [r4, r0]
 8005306:	f001 011f 	and.w	r1, r1, #31
 800530a:	fa02 f101 	lsl.w	r1, r2, r1
 800530e:	ea23 0101 	bic.w	r1, r3, r1
 8005312:	5021      	str	r1, [r4, r0]
 8005314:	e7f3      	b.n	80052fe <i2c_flag_clear+0xe>
	...

Disassembly of section .rodata:

08005318 <deviceLabel-0x100>:
	...
 8005320:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8005324:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8005328:	00000000 	andeq	r0, r0, r0
 800532c:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8005330:	20626546 	rsbcs	r6, r2, r6, asr #10
 8005334:	32203532 	eorcc	r3, r0, #209715200	; 0xc800000
 8005338:	00323230 	eorseq	r3, r2, r0, lsr r2
 800533c:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8005340:	33303146 	teqcc	r0, #-2147483631	; 0x80000011
 8005344:	565b0052 			; <UNDEFINED> instruction: 0x565b0052
 8005348:	205d7325 	subscs	r7, sp, r5, lsr #6
 800534c:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8005350:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8005354:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8005358:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 800535c:	74612073 	strbtvc	r2, [r1], #-115	; 0xffffff8d
 8005360:	0a732520 	beq	9cce7e8 <__exidx_end+0x1cc8bf8>
 8005364:	3a353100 	bcc	8d5176c <__exidx_end+0xd4bb7c>
 8005368:	303a3632 	eorscc	r3, sl, r2, lsr r6
 800536c:	44520036 	ldrbmi	r0, [r2], #-54	; 0xffffffca
 8005370:	6f43204d 	svcvs	0x0043204d
 8005374:	6f72746e 	svcvs	0x0072746e
 8005378:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
 800537c:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8005380:	53552068 	cmppl	r5, #104	; 0x68
 8005384:	435b2042 	cmpmi	fp, #66	; 0x42
 8005388:	61706d6f 	cmnvs	r0, pc, ror #26
 800538c:	6c626974 			; <UNDEFINED> instruction: 0x6c626974
 8005390:	69772065 	ldmdbvs	r7!, {r0, r2, r5, r6, sp}^
 8005394:	45206874 	strmi	r6, [r0, #-2164]!	; 0xfffff78c
 8005398:	6574746e 	ldrbvs	r7, [r4, #-1134]!	; 0xfffffb92
 800539c:	53552063 	cmppl	r5, #99	; 0x63
 80053a0:	72502042 	subsvc	r2, r0, #66	; 0x42
 80053a4:	7270206f 	rsbsvc	r2, r0, #111	; 0x6f
 80053a8:	636f746f 	cmnvs	pc, #1862270976	; 0x6f000000
 80053ac:	2c5d6c6f 	mrrccs	12, 6, r6, sp, cr15
 80053b0:	64695720 	strbtvs	r5, [r9], #-1824	; 0xfffff8e0
 80053b4:	20746567 	rsbscs	r6, r4, r7, ror #10
 80053b8:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 80053bc:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80053c0:	25282064 	strcs	r2, [r8, #-100]!	; 0xffffff9c
 80053c4:	000a2973 	andeq	r2, sl, r3, ror r9
 80053c8:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 80053cc:	55206563 	strpl	r6, [r0, #-1379]!	; 0xfffffa9d
 80053d0:	20444955 	subcs	r4, r4, r5, asr r9
 80053d4:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 80053d8:	2e257832 	mcrcs	8, 1, r7, cr5, cr2, {1}
 80053dc:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 80053e0:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 80053e4:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 80053e8:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 80053ec:	2c78322e 	lfmcs	f3, 2, [r8], #-184	; 0xffffff48
 80053f0:	614c0020 	cmpvs	ip, r0, lsr #32
 80053f4:	206c6562 	rsbcs	r6, ip, r2, ror #10
 80053f8:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 80053fc:	000a732a 	andeq	r7, sl, sl, lsr #6
 8005400:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8005404:	33303146 	teqcc	r0, #-2147483631	; 0x80000011
 8005408:	44204352 	strtmi	r4, [r0], #-850	; 0xfffffcae
 800540c:	5520584d 	strpl	r5, [r0, #-2125]!	; 0xfffff7b3
 8005410:	50204253 	eorpl	r4, r0, r3, asr r2
 8005414:	00006f72 	andeq	r6, r0, r2, ror pc

08005418 <deviceLabel>:
 8005418:	08005400 	stmdaeq	r0, {sl, ip, lr}
 800541c:	00000016 	andeq	r0, r0, r6, lsl r0

08005420 <SOFTWARE_VERSION>:
 8005420:	00322e31 	eorseq	r2, r2, r1, lsr lr

08005424 <widget_mode_names>:
 8005424:	5f584d44 	svcpl	0x00584d44
 8005428:	004d4452 	subeq	r4, sp, r2, asr r4
 800542c:	00000000 	andeq	r0, r0, r0
 8005430:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 800543c:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8005448:	5f4d4452 	svcpl	0x004d4452
 800544c:	46494e53 			; <UNDEFINED> instruction: 0x46494e53
 8005450:	00524546 	subseq	r4, r2, r6, asr #10
 8005454:	5f544547 	svcpl	0x00544547
 8005458:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 800545c:	505f5445 	subspl	r5, pc, r5, asr #8
 8005460:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 8005464:	45525f53 	ldrbmi	r5, [r2, #-3923]	; 0xfffff0ad
 8005468:	00594c50 	subseq	r4, r9, r0, asr ip
 800546c:	5f544553 	svcpl	0x00544553
 8005470:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 8005474:	505f5445 	subspl	r5, pc, r5, asr #8
 8005478:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 800547c:	45520053 	ldrbmi	r0, [r2, #-83]	; 0xffffffad
 8005480:	56494543 	strbpl	r4, [r9], -r3, asr #10
 8005484:	445f4445 	ldrbmi	r4, [pc], #-1093	; 800548c <widget_mode_names+0x68>
 8005488:	505f584d 	subspl	r5, pc, sp, asr #16
 800548c:	454b4341 	strbmi	r4, [fp, #-833]	; 0xfffffcbf
 8005490:	65530054 	ldrbvs	r0, [r3, #-84]	; 0xffffffac
 8005494:	4420646e 	strtmi	r6, [r0], #-1134	; 0xfffffb92
 8005498:	6420584d 	strtvs	r5, [r0], #-2125	; 0xfffff7b3
 800549c:	20617461 	rsbcs	r7, r1, r1, ror #8
 80054a0:	48206f74 	stmdami	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}
 80054a4:	2c54534f 	mrrccs	3, 4, r5, r4, cr15
 80054a8:	00642520 	rsbeq	r2, r4, r0, lsr #10
 80054ac:	5054554f 	subspl	r5, r4, pc, asr #10
 80054b0:	4f5f5455 	svcmi	0x005f5455
 80054b4:	5f594c4e 	svcpl	0x00594c4e
 80054b8:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 80054bc:	584d445f 	stmdapl	sp, {r0, r1, r2, r3, r4, r6, sl, lr}^
 80054c0:	4341505f 	movtmi	r5, #4191	; 0x105f
 80054c4:	5f54454b 	svcpl	0x0054454b
 80054c8:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 80054cc:	00545345 	subseq	r5, r4, r5, asr #6
 80054d0:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 80054d4:	4d44525f 	sfmmi	f5, 2, [r4, #-380]	; 0xfffffe84
 80054d8:	4341505f 	movtmi	r5, #4191	; 0x105f
 80054dc:	5f54454b 	svcpl	0x0054454b
 80054e0:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 80054e4:	00545345 	subseq	r5, r4, r5, asr #6
 80054e8:	45434552 	strbmi	r4, [r3, #-1362]	; 0xfffffaae
 80054ec:	5f455649 	svcpl	0x00455649
 80054f0:	5f584d44 	svcpl	0x00584d44
 80054f4:	435f4e4f 	cmpmi	pc, #1264	; 0x4f0
 80054f8:	474e4148 	strbmi	r4, [lr, -r8, asr #2]
 80054fc:	45520045 	ldrbmi	r0, [r2, #-69]	; 0xffffffbb
 8005500:	56494543 	strbpl	r4, [r9], -r3, asr #10
 8005504:	445f4445 	ldrbmi	r4, [pc], #-1093	; 800550c <widget_mode_names+0xe8>
 8005508:	435f584d 	cmpmi	pc, #5046272	; 0x4d0000
 800550c:	545f534f 	ldrbpl	r5, [pc], #-847	; 8005514 <widget_mode_names+0xf0>
 8005510:	00455059 	subeq	r5, r5, r9, asr r0
 8005514:	746e6553 	strbtvc	r6, [lr], #-1363	; 0xfffffaad
 8005518:	61686320 	cmnvs	r8, r0, lsr #6
 800551c:	6465676e 	strbtvs	r6, [r5], #-1902	; 0xfffff892
 8005520:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8005524:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 8005528:	6f742061 	svcvs	0x00742061
 800552c:	534f4820 	movtpl	r4, #63520	; 0xf820
 8005530:	45530054 	ldrbmi	r0, [r3, #-84]	; 0xffffffac
 8005534:	525f444e 	subspl	r4, pc, #1308622848	; 0x4e000000
 8005538:	445f4d44 	ldrbmi	r4, [pc], #-3396	; 8005540 <widget_mode_names+0x11c>
 800553c:	4f435349 	svcmi	0x00435349
 8005540:	59524556 	ldmdbpl	r2, {r1, r2, r4, r6, r8, sl, lr}^
 8005544:	5145525f 	cmppl	r5, pc, asr r2
 8005548:	54534555 	ldrbpl	r4, [r3], #-1365	; 0xfffffaab
 800554c:	6e655300 	cdpvs	3, 6, cr5, cr5, cr0, {0}
 8005550:	44522064 	ldrbmi	r2, [r2], #-100	; 0xffffff9c
 8005554:	6164204d 	cmnvs	r4, sp, asr #32
 8005558:	74206174 	strtvc	r6, [r0], #-372	; 0xfffffe8c
 800555c:	4f48206f 	svcmi	0x0048206f
 8005560:	202c5453 	eorcs	r5, ip, r3, asr r4
 8005564:	64253a6c 	strtvs	r3, [r5], #-2668	; 0xfffff594
 8005568:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 800556c:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
 8005570:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
 8005574:	43455200 	movtmi	r5, #20992	; 0x5200
 8005578:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 800557c:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 8005580:	41505f4d 	cmpmi	r0, sp, asr #30
 8005584:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 8005588:	3a435320 	bcc	90da210 <__exidx_end+0x10d4620>
 800558c:	43437830 	movtmi	r7, #14384	; 0x3830
 8005590:	43455200 	movtmi	r5, #20992	; 0x5200
 8005594:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 8005598:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 800559c:	41505f4d 	cmpmi	r0, sp, asr #30
 80055a0:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 80055a4:	3a435320 	bcc	90da22c <__exidx_end+0x10d463c>
 80055a8:	45467830 	strbmi	r7, [r6, #-2096]	; 0xfffff7d0
 80055ac:	4e414d00 	cdpmi	13, 4, cr4, cr1, cr0, {0}
 80055b0:	43414655 	movtmi	r4, #5717	; 0x1655
 80055b4:	45525554 	ldrbmi	r5, [r2, #-1364]	; 0xfffffaac
 80055b8:	414c5f52 	cmpmi	ip, r2, asr pc
 80055bc:	004c4542 	subeq	r4, ip, r2, asr #10
 80055c0:	5f544547 	svcpl	0x00544547
 80055c4:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 80055c8:	4e5f5445 	cdpmi	4, 5, cr5, cr15, cr5, {2}
 80055cc:	5f454d41 	svcpl	0x00454d41
 80055d0:	4542414c 	strbmi	r4, [r2, #-332]	; 0xfffffeb4
 80055d4:	3a4c004c 	bcc	930570c <__exidx_end+0x12ffb1c>
 80055d8:	253a6425 	ldrcs	r6, [sl, #-1061]!	; 0xfffffbdb
 80055dc:	64252864 	strtvs	r2, [r5], #-2148	; 0xfffff79c
 80055e0:	 	ldmdbvs	r7!, {r0, r3, r5}^

080055e2 <WidgetParamsConst::WIDGET_MODE>:
 80055e2:	67646977 			; <UNDEFINED> instruction: 0x67646977
 80055e6:	6d5f7465 	cfldrdvs	mvd7, [pc, #-404]	; 8005458 <widget_mode_names+0x34>
 80055ea:	0065646f 	rsbeq	r6, r5, pc, ror #8

080055ee <WidgetParamsConst::DMXUSBPRO_MAB_TIME>:
 80055ee:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 80055f2:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 80055f6:	616d5f6f 	cmnvs	sp, pc, ror #30
 80055fa:	69745f62 	ldmdbvs	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 80055fe:	 	strvs	r6, [r0], #-1389	; 0xfffffa93

08005601 <WidgetParamsConst::DMXUSBPRO_BREAK_TIME>:
 8005601:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 8005605:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8005609:	72625f6f 	rsbvc	r5, r2, #444	; 0x1bc
 800560d:	5f6b6165 	svcpl	0x006b6165
 8005611:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

08005616 <WidgetParamsConst::DMXUSBPRO_REFRESH_RATE>:
 8005616:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 800561a:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 800561e:	65725f6f 	ldrbvs	r5, [r2, #-3951]!	; 0xfffff091
 8005622:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 8005626:	61725f68 	cmnvs	r2, r8, ror #30
 800562a:	 	strvs	r6, [r0], #-1396	; 0xfffffa8c

0800562d <WidgetParamsConst::DMX_SEND_TO_HOST_THROTTLE>:
 800562d:	5f786d64 	svcpl	0x00786d64
 8005631:	646e6573 	strbtvs	r6, [lr], #-1395	; 0xfffffa8d
 8005635:	5f6f745f 	svcpl	0x006f745f
 8005639:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 800563d:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
 8005641:	6c74746f 	cfldrdvs	mvd7, [r4], #-444	; 0xfffffe44
 8005645:	46210065 	strtmi	r0, [r1], -r5, rrx
 8005649:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 800564d:	43202164 			; <UNDEFINED> instruction: 0x43202164
 8005651:	6f6e6e61 	svcvs	0x006e6e61
 8005655:	65732074 	ldrbvs	r2, [r3, #-116]!	; 0xffffff8c
 8005659:	7420646e 	strtvc	r6, [r0], #-1134	; 0xfffffb92
 800565d:	6f68206f 	svcvs	0x0068206f
 8005661:	53007473 	movwpl	r7, #1139	; 0x473
 8005665:	20646e65 	rsbcs	r6, r4, r5, ror #28
 8005669:	20584d44 	subscs	r4, r8, r4, asr #26
 800566d:	61746164 	cmnvs	r4, r4, ror #2
 8005671:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 8005675:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
 8005679:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 800567d:	53006425 	movwpl	r6, #1061	; 0x425
 8005681:	20646e65 	rsbcs	r6, r4, r5, ror #28
 8005685:	204d4452 	subcs	r4, sp, r2, asr r4
 8005689:	61746164 	cmnvs	r4, r4, ror #2
 800568d:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 8005691:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
 8005695:	74746800 	ldrbtvc	r6, [r4], #-2048	; 0xfffff800
 8005699:	2f2f3a70 	svccs	0x002f3a70
 800569d:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 80056a1:	786d642d 	stmdavc	sp!, {r0, r2, r3, r5, sl, sp, lr}^
 80056a5:	67726f2e 	ldrbvs	r6, [r2, -lr, lsr #30]!
	...

080056aa <DEVICE_LABEL>:
 80056aa:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 80056ae:	33303146 	teqcc	r0, #-2147483631	; 0x80000011
 80056b2:	44522052 	ldrbmi	r2, [r2], #-82	; 0xffffffae
 80056b6:	6544204d 	strbvs	r2, [r4, #-77]	; 0xffffffb3
 80056ba:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
	...

080056bf <RDMConst::MANUFACTURER_ID>:
 80056bf:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

080056c1 <RDMConst::MANUFACTURER_NAME>:
 80056c1:	70747468 	rsbsvc	r7, r4, r8, ror #8
 80056c5:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 80056c9:	6f2e7777 	svcvs	0x002e7777
 80056cd:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 80056d1:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 80056d5:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 80056d9:	0067726f 	rsbeq	r7, r7, pc, ror #4
 80056dd:	 	andvs	r0, r0, r0

080056e0 <s_aStorSize>:
 80056e0:	00000060 	andeq	r0, r0, r0, rrx
 80056e4:	00000090 	muleq	r0, r0, r0
 80056e8:	00000020 	andeq	r0, r0, r0, lsr #32
 80056ec:	00000040 	andeq	r0, r0, r0, asr #32
 80056f0:	00000060 	andeq	r0, r0, r0, rrx
 80056f4:	00000040 	andeq	r0, r0, r0, asr #32
 80056f8:	00000020 	andeq	r0, r0, r0, lsr #32
 80056fc:	00000020 	andeq	r0, r0, r0, lsr #32
 8005700:	000001e0 	andeq	r0, r0, r0, ror #3
 8005704:	00000040 	andeq	r0, r0, r0, asr #32
 8005708:	00000020 	andeq	r0, r0, r0, lsr #32
 800570c:	00000060 	andeq	r0, r0, r0, rrx
 8005710:	00000030 	andeq	r0, r0, r0, lsr r0
 8005714:	00000020 	andeq	r0, r0, r0, lsr #32
 8005718:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 800571c:	00000030 	andeq	r0, r0, r0, lsr r0
 8005720:	00000040 	andeq	r0, r0, r0, asr #32
 8005724:	00000020 	andeq	r0, r0, r0, lsr #32
 8005728:	00000060 	andeq	r0, r0, r0, rrx
 800572c:	00000020 	andeq	r0, r0, r0, lsr #32
 8005730:	00000400 	andeq	r0, r0, r0, lsl #8
 8005734:	00000020 	andeq	r0, r0, r0, lsr #32
 8005738:	00000020 	andeq	r0, r0, r0, lsr #32
 800573c:	00000040 	andeq	r0, r0, r0, asr #32
 8005740:	00000060 	andeq	r0, r0, r0, rrx
 8005744:	00000020 	andeq	r0, r0, r0, lsr #32
 8005748:	00000020 	andeq	r0, r0, r0, lsr #32
 800574c:	00000020 	andeq	r0, r0, r0, lsr #32

08005750 <vtable for StoreRDMDevice>:
	...
 8005758:	08003339 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, ip, sp}
 800575c:	080033a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, ip, sp}
 8005760:	08003341 	stmdaeq	r0, {r0, r6, r8, r9, ip, sp}
 8005764:	080033bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, ip, sp}
 8005768:	08003365 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, ip, sp}
 800576c:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8005770:	00000000 	andeq	r0, r0, r0
 8005774:	0800333b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r8, r9, ip, sp}
 8005778:	080033b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, ip, sp}
 800577c:	080033a1 	stmdaeq	r0, {r0, r5, r7, r8, r9, ip, sp}

08005780 <vtable for StoreWidget>:
	...
 8005788:	080033f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, ip, sp}
 800578c:	08003421 	stmdaeq	r0, {r0, r5, sl, ip, sp}
 8005790:	080033fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, ip, sp}
 8005794:	08003435 	stmdaeq	r0, {r0, r2, r4, r5, sl, ip, sp}
 8005798:	08002195 	stmdaeq	r0, {r0, r2, r4, r7, r8, sp}
 800579c:	080021c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sp}
 80057a0:	080021fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, sp}
 80057a4:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80057a8:	00000000 	andeq	r0, r0, r0
 80057ac:	080033f7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r7, r8, r9, ip, sp}
 80057b0:	0800342d 	stmdaeq	r0, {r0, r2, r3, r5, sl, ip, sp}
 80057b4:	080021c1 	stmdaeq	r0, {r0, r6, r7, r8, sp}
 80057b8:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
 80057bc:	08002229 	stmdaeq	r0, {r0, r3, r5, r9, sp}
 80057c0:	65746544 	ldrbvs	r6, [r4, #-1348]!	; 0xfffffabc
 80057c4:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
 80057c8:	20732520 	rsbscs	r2, r3, r0, lsr #10
 80057cc:	68746977 	ldmdavs	r4!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}^
 80057d0:	746f7420 	strbtvc	r7, [pc], #-1056	; 80057d8 <vtable for StoreWidget+0x58>
 80057d4:	25206c61 	strcs	r6, [r0, #-3169]!	; 0xfffff39f
 80057d8:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
 80057dc:	20736574 	rsbscs	r6, r3, r4, ror r5
 80057e0:	2064255b 	rsbcs	r2, r4, fp, asr r5
 80057e4:	0a5d426b 	beq	9756198 <__exidx_end+0x17505a8>
 80057e8:	006f6c00 	rsbeq	r6, pc, r0, lsl #24
 80057ec:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 80057f0:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 80057f4:	66207961 	strtvs	r7, [r0], -r1, ror #18
 80057f8:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 80057fc:	31485300 	mrscc	r5, (UNDEF: 120)
 8005800:	00363031 	eorseq	r3, r6, r1, lsr r0
 8005804:	31445353 	cmpcc	r4, r3, asr r3
 8005808:	00363033 	eorseq	r3, r6, r3, lsr r0
 800580c:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8005810:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8005814:	000a2964 	andeq	r2, sl, r4, ror #18
 8005818:	aaeeaa40 	bge	7bb0120 <__heap_size+0x7baf120>
 800581c:	000000ee 	andeq	r0, r0, lr, ror #1

08005820 <_OledFont8x6>:
 8005820:	00000040 	andeq	r0, r0, r0, asr #32
 8005824:	40000000 	andmi	r0, r0, r0
 8005828:	005f0000 	subseq	r0, pc, r0
 800582c:	00400000 	subeq	r0, r0, r0
 8005830:	00070007 	andeq	r0, r7, r7
 8005834:	7f144000 	svcvc	0x00144000
 8005838:	00147f14 	andseq	r7, r4, r4, lsl pc
 800583c:	7f2a2440 	svcvc	0x002a2440
 8005840:	4000122a 	andmi	r1, r0, sl, lsr #4
 8005844:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8005848:	36400062 	strbcc	r0, [r0], -r2, rrx
 800584c:	50205649 	eorpl	r5, r0, r9, asr #12
 8005850:	08004000 	stmdaeq	r0, {lr}
 8005854:	00000307 	andeq	r0, r0, r7, lsl #6
 8005858:	221c0040 	andscs	r0, ip, #64	; 0x40
 800585c:	40000041 	andmi	r0, r0, r1, asr #32
 8005860:	1c224100 	stfnes	f4, [r2], #-0
 8005864:	2a400000 	bcs	900586c <__exidx_end+0xfffc7c>
 8005868:	2a1c7f1c 	bcs	87254e0 <__exidx_end+0x71f8f0>
 800586c:	08084000 	stmdaeq	r8, {lr}
 8005870:	0008083e 	andeq	r0, r8, lr, lsr r8
 8005874:	70800040 	addvc	r0, r0, r0, asr #32
 8005878:	40000030 	andmi	r0, r0, r0, lsr r0
 800587c:	08080808 	stmdaeq	r8, {r3, fp}
 8005880:	00400008 	subeq	r0, r0, r8
 8005884:	00606000 	rsbeq	r6, r0, r0
 8005888:	10204000 	eorne	r4, r0, r0
 800588c:	00020408 	andeq	r0, r2, r8, lsl #8
 8005890:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8005894:	40003e45 	andmi	r3, r0, r5, asr #28
 8005898:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 800589c:	72400000 	subvc	r0, r0, #0
 80058a0:	46494949 	strbmi	r4, [r9], -r9, asr #18
 80058a4:	41214000 			; <UNDEFINED> instruction: 0x41214000
 80058a8:	00334d49 	eorseq	r4, r3, r9, asr #26
 80058ac:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 80058b0:	4000107f 	andmi	r1, r0, pc, ror r0
 80058b4:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 80058b8:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 80058bc:	3149494a 	cmpcc	r9, sl, asr #18
 80058c0:	21414000 	mrscs	r4, (UNDEF: 65)
 80058c4:	00070911 	andeq	r0, r7, r1, lsl r9
 80058c8:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 80058cc:	40003649 	andmi	r3, r0, r9, asr #12
 80058d0:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 80058d4:	0040001e 	subeq	r0, r0, lr, lsl r0
 80058d8:	00001400 	andeq	r1, r0, r0, lsl #8
 80058dc:	40004000 	andmi	r4, r0, r0
 80058e0:	00000034 	andeq	r0, r0, r4, lsr r0
 80058e4:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 80058e8:	40004122 	andmi	r4, r0, r2, lsr #2
 80058ec:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 80058f0:	00400014 	subeq	r0, r0, r4, lsl r0
 80058f4:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 80058f8:	01024000 	mrseq	r4, (UNDEF: 2)
 80058fc:	00060959 	andeq	r0, r6, r9, asr r9
 8005900:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8005904:	40004e59 	andmi	r4, r0, r9, asr lr
 8005908:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 800590c:	7f40007c 	svcvc	0x0040007c
 8005910:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8005914:	413e4000 	teqmi	lr, r0
 8005918:	00224141 	eoreq	r4, r2, r1, asr #2
 800591c:	41417f40 	cmpmi	r1, r0, asr #30
 8005920:	40003e41 	andmi	r3, r0, r1, asr #28
 8005924:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8005928:	7f400041 	svcvc	0x00400041
 800592c:	01090909 	tsteq	r9, r9, lsl #18
 8005930:	413e4000 	teqmi	lr, r0
 8005934:	00735141 	rsbseq	r5, r3, r1, asr #2
 8005938:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 800593c:	40007f08 	andmi	r7, r0, r8, lsl #30
 8005940:	417f4100 	cmnmi	pc, r0, lsl #2
 8005944:	20400000 	subcs	r0, r0, r0
 8005948:	013f4140 	teqeq	pc, r0, asr #2
 800594c:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8005950:	00412214 	subeq	r2, r1, r4, lsl r2
 8005954:	40407f40 	submi	r7, r0, r0, asr #30
 8005958:	40004040 	andmi	r4, r0, r0, asr #32
 800595c:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8005960:	7f40007f 	svcvc	0x0040007f
 8005964:	7f100804 	svcvc	0x00100804
 8005968:	413e4000 	teqmi	lr, r0
 800596c:	003e4141 	eorseq	r4, lr, r1, asr #2
 8005970:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8005974:	40000609 	andmi	r0, r0, r9, lsl #12
 8005978:	2151413e 	cmpcs	r1, lr, lsr r1
 800597c:	7f40005e 	svcvc	0x0040005e
 8005980:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8005984:	49264000 	stmdbmi	r6!, {lr}
 8005988:	00324949 	eorseq	r4, r2, r9, asr #18
 800598c:	7f010340 	svcvc	0x00010340
 8005990:	40000301 	andmi	r0, r0, r1, lsl #6
 8005994:	4040403f 	submi	r4, r0, pc, lsr r0
 8005998:	1f40003f 	svcne	0x0040003f
 800599c:	1f204020 	svcne	0x00204020
 80059a0:	403f4000 	eorsmi	r4, pc, r0
 80059a4:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 80059a8:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 80059ac:	40006314 	andmi	r6, r0, r4, lsl r3
 80059b0:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 80059b4:	61400003 	cmpvs	r0, r3
 80059b8:	434d4959 	movtmi	r4, #55641	; 0xd959
 80059bc:	7f004000 	svcvc	0x00004000
 80059c0:	00414141 	subeq	r4, r1, r1, asr #2
 80059c4:	08040240 	stmdaeq	r4, {r6, r9}
 80059c8:	40002010 	andmi	r2, r0, r0, lsl r0
 80059cc:	41414100 	mrsmi	r4, (UNDEF: 81)
 80059d0:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 80059d4:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 80059d8:	40404000 	submi	r4, r0, r0
 80059dc:	00404040 	subeq	r4, r0, r0, asr #32
 80059e0:	07030040 	streq	r0, [r3, -r0, asr #32]
 80059e4:	40000008 	andmi	r0, r0, r8
 80059e8:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 80059ec:	7f400040 	svcvc	0x00400040
 80059f0:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 80059f4:	44384000 	ldrtmi	r4, [r8], #-0
 80059f8:	00284444 	eoreq	r4, r8, r4, asr #8
 80059fc:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8005a00:	40007f28 	andmi	r7, r0, r8, lsr #30
 8005a04:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8005a08:	00400018 	subeq	r0, r0, r8, lsl r0
 8005a0c:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8005a10:	a4184000 	ldrge	r4, [r8], #-0
 8005a14:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8005a18:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8005a1c:	40007804 	andmi	r7, r0, r4, lsl #16
 8005a20:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8005a24:	20400000 	subcs	r0, r0, r0
 8005a28:	003d4040 	eorseq	r4, sp, r0, asr #32
 8005a2c:	107f4000 	rsbsne	r4, pc, r0
 8005a30:	00004428 	andeq	r4, r0, r8, lsr #8
 8005a34:	7f410040 	svcvc	0x00410040
 8005a38:	40000040 	andmi	r0, r0, r0, asr #32
 8005a3c:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8005a40:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8005a44:	78040408 	stmdavc	r4, {r3, sl}
 8005a48:	44384000 	ldrtmi	r4, [r8], #-0
 8005a4c:	00384444 	eorseq	r4, r8, r4, asr #8
 8005a50:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8005a54:	40001824 	andmi	r1, r0, r4, lsr #16
 8005a58:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8005a5c:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8005a60:	08040408 	stmdaeq	r4, {r3, sl}
 8005a64:	54484000 	strbpl	r4, [r8], #-0
 8005a68:	00245454 	eoreq	r5, r4, r4, asr r4
 8005a6c:	3f040440 	svccc	0x00040440
 8005a70:	40002444 	andmi	r2, r0, r4, asr #8
 8005a74:	2040403c 	subcs	r4, r0, ip, lsr r0
 8005a78:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8005a7c:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8005a80:	403c4000 	eorsmi	r4, ip, r0
 8005a84:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8005a88:	10284440 	eorne	r4, r8, r0, asr #8
 8005a8c:	40004428 	andmi	r4, r0, r8, lsr #8
 8005a90:	9090904c 	addsls	r9, r0, ip, asr #32
 8005a94:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8005a98:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8005a9c:	08004000 	stmdaeq	r0, {lr}
 8005aa0:	00004136 	andeq	r4, r0, r6, lsr r1
 8005aa4:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8005aa8:	40000000 	andmi	r0, r0, r0
 8005aac:	08364100 	ldmdaeq	r6!, {r8, lr}
 8005ab0:	02400000 	subeq	r0, r0, #0
 8005ab4:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8005ab8:	263c4000 	ldrtcs	r4, [ip], -r0
 8005abc:	003c2623 	eorseq	r2, ip, r3, lsr #12

08005ac0 <oled_128x32_init>:
 8005ac0:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8005ac4:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8005ac8:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8005acc:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8005ad0:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8005ad4:	a6a440db 	ssatge	r4, #5, fp, asr #1

08005ad8 <oled_128x64_init>:
 8005ad8:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8005adc:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8005ae0:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8005ae4:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8005ae8:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8005aec:	a6a440db 	ssatge	r4, #5, fp, asr #1

08005af0 <vtable for Ssd1306>:
	...
 8005af8:	08003947 	stmdaeq	r0, {r0, r1, r2, r6, r8, fp, ip, sp}
 8005afc:	08003975 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, fp, ip, sp}
 8005b00:	08003c8d 	stmdaeq	r0, {r0, r2, r3, r7, sl, fp, ip, sp}
 8005b04:	08003c11 	stmdaeq	r0, {r0, r4, sl, fp, ip, sp}
 8005b08:	08003add 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, fp, ip, sp}
 8005b0c:	08003995 	stmdaeq	r0, {r0, r2, r4, r7, r8, fp, ip, sp}
 8005b10:	080039bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, fp, ip, sp}
 8005b14:	08003ab3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r9, fp, ip, sp}
 8005b18:	08003a6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, fp, ip, sp}
 8005b1c:	08003949 	stmdaeq	r0, {r0, r3, r6, r8, fp, ip, sp}
 8005b20:	08003b19 	stmdaeq	r0, {r0, r3, r4, r8, r9, fp, ip, sp}
 8005b24:	08003b25 	stmdaeq	r0, {r0, r2, r5, r8, r9, fp, ip, sp}
 8005b28:	08003b3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, fp, ip, sp}
 8005b2c:	0800394d 	stmdaeq	r0, {r0, r2, r3, r6, r8, fp, ip, sp}
 8005b30:	37335b1b 			; <UNDEFINED> instruction: 0x37335b1b
 8005b34:	5b1b006d 	blpl	86c5cf0 <__exidx_end+0x6c0100>
 8005b38:	006d3034 	rsbeq	r3, sp, r4, lsr r0
 8005b3c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005b40:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005b44:	000a7525 	andeq	r7, sl, r5, lsr #10
 8005b48:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005b4c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005b50:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8005b54:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8005b58:	6b636f6c 	blvs	98e1910 <__exidx_end+0x18dbd20>
 8005b5c:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8005b60:	000a7469 	andeq	r7, sl, r9, ror #8
 8005b64:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005b68:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005b6c:	6f6c4270 	svcvs	0x006c4270
 8005b70:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8005b74:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8005b78:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8005b7c:	7a697320 	bvc	9a62804 <__exidx_end+0x1a5cc14>
 8005b80:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8005b84:	6164202c 	cmnvs	r4, ip, lsr #32
 8005b88:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8005b8c:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8005b90:	3a656572 	bcc	995f160 <__exidx_end+0x1959570>
 8005b94:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8005b98:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8005b9c:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8005ba0:	203d2072 	eorscs	r2, sp, r2, ror r0
 8005ba4:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8005ba8:	6f6c4270 	svcvs	0x006c4270
 8005bac:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8005bb0:	0a702520 	beq	9c0f038 <__exidx_end+0x1c09448>
 8005bb4:	00000000 	andeq	r0, r0, r0

08005bb8 <days_of_month>:
 8005bb8:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005bbc:	0000001c 	andeq	r0, r0, ip, lsl r0
 8005bc0:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005bc4:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005bc8:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005bcc:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005bd0:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005bd4:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005bd8:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005bdc:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005be0:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005be4:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08005be8 <__exidx_start>:
 8005be8:	7fffa598 	svcvc	0x00ffa598
 8005bec:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08005bf0 <.ARM.attributes>:
 8005bf0:	00002e41 	andeq	r2, r0, r1, asr #28
 8005bf4:	61656100 	cmnvs	r5, r0, lsl #2
 8005bf8:	01006962 	tsteq	r0, r2, ror #18
 8005bfc:	00000024 	andeq	r0, r0, r4, lsr #32
 8005c00:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8005c04:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8005c08:	0600334d 	streq	r3, [r0], -sp, asr #6
 8005c0c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8005c10:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8005c14:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8005c18:	1a011803 	bne	804bc2c <__exidx_end+0x4603c>
 8005c1c:	Address 0x0000000008005c1c is out of bounds.


Disassembly of section .data:

20000000 <WidgetConfiguration::s_nMabTime>:
20000000:	 	andeq	r0, r4, #16384	; 0x4000

20000001 <WidgetConfiguration::s_nBreakTime>:
20000001:	 	stmdacs	r2, {r0, r3, sl}

20000002 <WidgetConfiguration::s_nFirmwareLsb>:
20000002:	 			; <UNDEFINED> instruction: 0x01280204

20000003 <WidgetConfiguration::s_nFirmwareMsb>:
20000003:	 	andeq	r2, r1, r2, lsl #16

20000004 <WidgetConfiguration::s_nRefreshRate>:
20000004:	 	andeq	r0, r0, r8, lsr #2

20000005 <WidgetConfiguration::s_aDeviceTypeId>:
20000005:	 	stmdage	r0, {r0}

20000008 <s_nDmxTransmitPeriod>:
20000008:	000061a8 	andeq	r6, r0, r8, lsr #3

2000000c <s_nDmxTransmitMabTime>:
2000000c:	0000000c 	andeq	r0, r0, ip

20000010 <s_nDmxTransmitBreakTime>:
20000010:	0000005c 	andeq	r0, r0, ip, asr r0

20000014 <next_block>:
20000014:	2000a000 	andcs	sl, r0, r0

20000018 <s_block_bucket>:
20000018:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000028:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000038:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000048:	00000060 	andeq	r0, r0, r0, rrx
	...
20000058:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000068:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000078:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000088:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000098:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a8:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b8:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c8:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e8 <SystemCoreClock>:
200000e8:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000f0 <outptr>:
200000f0:	00000000 	andeq	r0, r0, r0

200000f4 <Widget::s_pThis>:
200000f4:	00000000 	andeq	r0, r0, r0

200000f8 <s_RxBuffer>:
	...

20000308 <s_TxBuffer>:
	...

2000050c <sv_PortState>:
2000050c:	00000000 	andeq	r0, r0, r0

20000510 <s_RxDmxPrevious>:
	...

20000712 <s_nUartsSending>:
	...

20000714 <sv_nRxDmxPackets>:
	...

20000724 <Dmx::s_pThis>:
20000724:	00000000 	andeq	r0, r0, r0

20000728 <gv_RdmDataReceiveEnd>:
20000728:	00000000 	andeq	r0, r0, r0

2000072c <SpiFlashStore::s_nWaitMillis>:
2000072c:	00000000 	andeq	r0, r0, r0

20000730 <SpiFlashStore::s_SpiFlashData>:
	...

20001730 <SpiFlashStore::s_nStartAddress>:
20001730:	00000000 	andeq	r0, r0, r0

20001734 <SpiFlashStore::s_bHaveFlashChip>:
20001734:	00000000 	andeq	r0, r0, r0

20001738 <SpiFlashStore::s_nSpiFlashStoreSize>:
20001738:	00000000 	andeq	r0, r0, r0

2000173c <SpiFlashStore::s_State>:
2000173c:	00000000 	andeq	r0, r0, r0

20001740 <SpiFlashStore::s_pThis>:
20001740:	00000000 	andeq	r0, r0, r0

20001744 <SpiFlashStore::s_bIsNew>:
20001744:	00000000 	andeq	r0, r0, r0

20001748 <StoreRDMDevice::s_pThis>:
20001748:	00000000 	andeq	r0, r0, r0

2000174c <StoreWidget::s_pThis>:
2000174c:	00000000 	andeq	r0, r0, r0

20001750 <FlashRom::s_pThis>:
20001750:	00000000 	andeq	r0, r0, r0

20001754 <flashrom::s_nAddress>:
20001754:	00000000 	andeq	r0, r0, r0

20001758 <flashrom::s_State>:
20001758:	00000000 	andeq	r0, r0, r0

2000175c <flashrom::s_nPage>:
2000175c:	00000000 	andeq	r0, r0, r0

20001760 <flashrom::s_pData>:
20001760:	00000000 	andeq	r0, r0, r0

20001764 <flashrom::s_isBank0>:
20001764:	00000000 	andeq	r0, r0, r0

20001768 <flashrom::s_nLength>:
20001768:	00000000 	andeq	r0, r0, r0

2000176c <Network::s_pThis>:
2000176c:	00000000 	andeq	r0, r0, r0

20001770 <Display::s_pThis>:
20001770:	00000000 	andeq	r0, r0, r0

20001774 <_ClearBuffer>:
	...

200017fc <Ssd1306::s_pThis>:
200017fc:	00000000 	andeq	r0, r0, r0

20001800 <LedBlink::s_pThis>:
20001800:	00000000 	andeq	r0, r0, r0

20001804 <Hardware::s_pThis>:
20001804:	00000000 	andeq	r0, r0, r0

20001808 <s_micros>:
	...

20001810 <set_timer>:
20001810:	00000000 	andeq	r0, r0, r0

20001814 <s_nSysTickMillis>:
20001814:	00000000 	andeq	r0, r0, r0

20001818 <s_nAddress>:
20001818:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

2000a000 <heap_low>:
	...

Disassembly of section .stack:

2000b000 <_sp-0x1000>:
	...
